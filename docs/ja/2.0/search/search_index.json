{"config":{"lang":["ja"],"separator":"[\\s\\-\u3000\u3001\u3002\uff0c\uff0e]+","pipeline":["stemmer"]},"docs":[{"location":"","title":"Appium\u306e\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8","text":""},{"location":"#appium","title":"Appium\u306e\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8","text":"<p>Appium\u306e\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u306b\u3088\u3046\u3053\u305d\u3002Appium\u306f\u30aa\u30fc\u30d7\u30f3\u30bd\u30fc\u30b9\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u3067\u3042\u308a\u3001\u305d\u306e\u30a8\u30b3\u30b7\u30b9\u30c6\u30e0\u306f\u591a\u69d8\u306a\u30d7\u30e9\u30c3\u30c8\u30d5\u30a9\u30fc\u30e0\u3001\u4f8b\u3048\u3070\u30e2\u30d0\u30a4\u30eb\uff08iOS\u30fbAndroid\u30fbTizen\uff09\u3084\u30d6\u30e9\u30a6\u30b6\uff08Chrome\u30fbFirefox\u30fbSafari\uff09\u3001\u30c7\u30b9\u30af\u30c8\u30c3\u30d7\uff08macOS\u30fbWindows\uff09\u3001TV\uff08Roku\u30fbtvOS\u30fbAndroid TV\u30fbSamsung\uff09\u306b\u5bfe\u3059\u308bUI\u81ea\u52d5\u5316\u3092\u652f\u63f4\u3059\u308b\u305f\u3081\u306b\u8a2d\u8a08\u3055\u308c\u3066\u3044\u307e\u3059\u3002</p> <p>\u3082\u3057\u3042\u306a\u305f\u304cAppium\u3092\u521d\u3081\u3066\u5b66\u3076\u306e\u3067\u3042\u308c\u3070\u3001\u306f\u3058\u3081\u306b\u304b\u3089\u3068\u308a\u304b\u304b\u308a\u3001\u30af\u30a4\u30c3\u30af\u30b9\u30bf\u30fc\u30c8\u3078\u3068\u9032\u3080\u3068\u3088\u3044\u3067\u3057\u3087\u3046\u3002GitHub\u4e0a\u306eappium/appium\u306b\u304a\u3044\u3066\u30b3\u30fc\u30c9\u3092\u78ba\u8a8d\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002</p>"},{"location":"#appium_1","title":"Appium\u306f\u4f55\u306e\u305f\u3081\u306b\u3042\u308b\u304b\uff1f","text":"<p>Appium\u306f\u4e3b\u306b\u30bd\u30d5\u30c8\u30a6\u30a7\u30a2\u306e\u81ea\u52d5\u30c6\u30b9\u30c8\u9818\u57df\u306b\u304a\u3044\u3066\u3001\u30c6\u30b9\u30c8\u5bfe\u8c61\u3068\u306a\u308b\u30a2\u30d7\u30ea\u304c\u6a5f\u80fd\u7684\u306b\u671f\u5f85\u901a\u308a\u306b\u52d5\u4f5c\u3059\u308b\u304b\u3092\u78ba\u8a8d\u3059\u308b\u305f\u3081\u306b\u4f7f\u7528\u3055\u308c\u307e\u3059\u3002\u4ed6\u306e\u30bd\u30d5\u30c8\u30a6\u30a7\u30a2\u30c6\u30b9\u30c8\u3068\u306f\u5bfe\u7167\u7684\u306b\u3001UI\u81ea\u52d5\u5316\u3067\u306f\u3001\u30c6\u30b9\u30c8\u30a8\u30f3\u30b8\u30cb\u30a2\u304c\u5b9f\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306eUI\u4e0a\u304b\u3089\u73fe\u5b9f\u4e16\u754c\u3067\u5b9f\u969b\u306b\u8d77\u3053\u308b\u3053\u3068\u306b\u306a\u308b\u3079\u304f\u8fd1\u304f\u306a\u308b\u3088\u3046\u306a\u30e6\u30fc\u30b6\u30b7\u30ca\u30ea\u30aa\u3092\u69cb\u7bc9\u3057\u306a\u304c\u3089\u3082\u3001\u5b9f\u884c\u901f\u5ea6\u3001\u62e1\u5f35\u6027\u3001\u4e00\u8cab\u6027\u3068\u3044\u3063\u305f\u81ea\u52d5\u5316\u306e\u5229\u70b9\u3092\u5b9f\u73fe\u3057\u307e\u3059\u3002</p> <p>Appium\u306f\u3044\u304f\u3064\u3082\u306e\u30d7\u30e9\u30c3\u30c8\u30d5\u30a9\u30fc\u30e0\u3092\u8de8\u3044\u3067\u6a19\u6e96\u5316\u3055\u308c\u305f\u65b9\u6cd5\u3067\u81ea\u52d5\u5316\u3092\u5b9f\u73fe\u3059\u308b\u305f\u3081\u306e\u30c4\u30fc\u30eb\u7fa4\u3092\u63d0\u4f9b\u3057\u307e\u3059\u3002\u305f\u3044\u3066\u3044\u306e\u30d7\u30e9\u30c3\u30c8\u30d5\u30a9\u30fc\u30e0\u306fUI\u81ea\u52d5\u5316\u3092\u5927\u306a\u308a\u5c0f\u306a\u308a\u5b9f\u73fe\u53ef\u80fd\u3067\u3059\u304c\u3001\u901a\u5e38\u306f\u305d\u308c\u3089\u306f\u30d7\u30e9\u30c3\u30c8\u30d5\u30a9\u30fc\u30e0\u56fa\u6709\u3067\u3042\u308a\u3001\u5c02\u7528\u306e\u77e5\u8b58\u3084\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u8a00\u8a9e\u7d4c\u9a13\u3001\u30c4\u30fc\u30eb\u7fa4\u304c\u8981\u6c42\u3055\u308c\u307e\u3059\u3002Appium\u306f\u305d\u308c\u3089\u306e\u81ea\u52d5\u5316\u6280\u8853\u30921\u3064\u306e\u6a19\u6e96\u5316\u3055\u308c\u305f\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9\u306e\u3082\u3068\u3067\u3001\u5e83\u304f\u4f7f\u308f\u308c\u308b\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u8a00\u8a9e\uff08Java\u3001Python\u3001Ruby\u3001JavaScript\u306a\u3069\uff09\u3092\u901a\u3057\u3066\u5229\u7528\u3067\u304d\u308b\u3088\u3046\u306b\u8a66\u307f\u3066\u3044\u307e\u3059\u3002Appium\u304c\u3069\u306e\u3088\u3046\u306b\u3053\u306e\u76ee\u6a19\u3092\u9054\u6210\u3057\u3066\u3044\u308b\u304b\u3001\u3069\u306e\u3088\u3046\u306a\u8981\u7d20\u304c\u95a2\u4fc2\u3057\u3066\u3044\u308b\u304b\u3092\u5b66\u3076\u305f\u3081\u306b\u306f\u5c0e\u5165\u306b\u9032\u3093\u3067\u304f\u3060\u3055\u3044\u3002</p>"},{"location":"#appium_2","title":"Appium\u3092\u5b66\u3076","text":"<p>Appium\u3092\u3088\u308a\u77e5\u308b\u305f\u3081\u306b\uff1a</p> <ul> <li>\u307e\u305a\u306fAppium\u306e\u8003\u3048\u65b9\u3001\u69cb\u6210\u3092\u7406\u89e3\u3059\u308b\u305f\u3081\u306b\u5c0e\u5165\u3092\u78ba\u8a8d\u3057\u307e\u3059</li> <li>\u30af\u30a4\u30c3\u30af\u30b9\u30bf\u30fc\u30c8\u3067Appium\u306e\u6e96\u5099\u3068\u57fa\u672c\u7684\u306aAndroid\u306e\u30c6\u30b9\u30c8\u5b9f\u884c\u3092\u4f53\u9a13\u3057\u307e\u3059</li> <li>\u3044\u304f\u3064\u3082\u306e\u624b\u5f15\u304d\u3001\u30ea\u30d5\u30a1\u30ec\u30f3\u30b9\u3092\u78ba\u8a8d\u3057\u307e\u3059</li> <li>\u5b9f\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u3067Appium\u3092\u4f7f\u3046\u3068\u3044\u3046\u3053\u3068\u306f\u7279\u5b9a\u306e\u30d7\u30e9\u30c3\u30c8\u30d5\u30a9\u30fc\u30e0\u306b\u5411\u3051\u305fAppium\u30c9\u30e9\u30a4\u30d0\u30fc(Appium driver)\u3092\u4f7f\u3046\u3053\u3068\u3092\u610f\u5473\u3057\u307e\u3059\u3002\u5fc5\u8981\u3068\u306a\u308b\u30c9\u30e9\u30a4\u30d0\u30fc\uff08drivers\uff09\u3084\u30d7\u30e9\u30b0\u30a4\u30f3\uff08plugins\uff09\u3078\u306e\u5404\u7a2e\u30ea\u30f3\u30af\u3092\u6301\u3064\u30a8\u30b3\u30b7\u30b9\u30c6\u30e0\u30da\u30fc\u30b8\u3092\u78ba\u8a8d\u3057\u307e\u3059\u3002\u305d\u3053\u3067\u306f\u5bfe\u8c61\u3068\u3059\u308b\u30d7\u30e9\u30c3\u30c8\u30d5\u30a9\u30fc\u30e0\u56fa\u6709\u306e\u60c5\u5831\u3092\u78ba\u8a8d\u3067\u304d\u307e\u3059\u3002</li> </ul> <p>\u305d\u306e\u4ed6\u306b\u306fWeb\u4e0a\u306b\u3042\u308b\u30b5\u30fc\u30c9\u30d1\u30fc\u30c6\u30a3\u88fd\u306e\u30ea\u30b9\u30c8\u3082\u3042\u308a\u307e\u3059\u3002\u3053\u308c\u3089\u3082Appium\u3092\u4f7f\u3046\u4e0a\u3067\u5f79\u7acb\u3064\u3067\u3057\u3087\u3046\u3002</p>"},{"location":"#appium_3","title":"Appium\u306b\u8ca2\u732e\u3059\u308b","text":"<p>Appium\u306fApache 2.0 \u30e9\u30a4\u30bb\u30f3\u30b9\u306e\u3082\u3068\u5229\u7528\u53ef\u80fd\u306a\u30aa\u30fc\u30d7\u30f3\u30bd\u30fc\u30b9\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u3067\u3059\u3002Appium\u306e\u30b3\u30d4\u30fc\u30e9\u30a4\u30c8\uff08copyright\uff09\u306fOpenJS Foundation\u306b\u3042\u308a\u3001\u7af6\u5408\u72b6\u614b\u306b\u95a2\u308f\u3089\u305a\u3001\u69d8\u3005\u306a\u30bd\u30d5\u30c8\u30a6\u30a7\u30a2\u696d\u754c\u3092\u8de8\u3044\u3067\u591a\u304f\u306e\u4f01\u696d\u304b\u3089\u52a9\u3051\u3092\u5f97\u307e\u3059\u3002\uff08\u30b5\u30fc\u30c9\u30d1\u30fc\u30c6\u30a3\u88fd\u306e\u30c9\u30e9\u30a4\u30d0\u30fc\uff08drivers\uff09\u3084\u30d7\u30e9\u30b0\u30a4\u30f3\uff08plugins\uff09\u306f\u5404\u3005\u306e\u30e9\u30a4\u30bb\u30f3\u30b9\u3092\u6301\u3061\u307e\u3059\u3002\uff09</p> <p>\u305d\u306e\u305f\u3081\u3001\u79c1\u305f\u3061\u306f\u7686\u69d8\u304b\u3089\u306e\u8ca2\u732e\u3092\u6b53\u8fce\u3057\u3066\u3044\u307e\u3059\uff01\u4f01\u696d\u3084\u30dc\u30e9\u30f3\u30c6\u30a3\u30a2\u306b\u3088\u308b\u30b3\u30fc\u30c9\u3001\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u3001\u30e1\u30f3\u30c6\u30ca\u30f3\u30b9\u3001\u30b5\u30dd\u30fc\u30c8\u3068\u3044\u3063\u305f\u8ca2\u732e\u306b\u3088\u308a\u3001Appium\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306f\u767a\u5c55\u3057\u3066\u3044\u304d\u307e\u3059\u3002\u8ca2\u732e\u65b9\u6cd5\u306b\u95a2\u3057\u3066\u3088\u308a\u77e5\u308b\u305f\u3081\u306b\u306f\u3001Appium\u306eGitHub\u30ea\u30dd\u30b8\u30c8\u30ea\uff08appium/appium\uff09\u3068\u8ca2\u732e\u3059\u308b\u3092\u78ba\u8a8d\u3057\u3066\u304f\u3060\u3055\u3044\u3002</p>"},{"location":"#_1","title":"\u65e5\u672c\u8a9e\u8a33\u306b\u3088\u305b\u3066","text":"<ul> <li>\u4f53\u88c1\u306f\u300c\u3067\u3059\u30fb\u307e\u3059\u300d\u3001\u30b3\u30de\u30f3\u30c9\u540d\u3068\u3044\u3063\u305f\u56fa\u6709\u306e\u6587\u5b57\u306f\u30ab\u30bf\u30ab\u30ca\u8868\u8a18\u3001\u82f1\u8a9e\u4f75\u8a18\u3001\u3082\u3057\u304f\u306f\u82f1\u8a9e\u3092\u305d\u306e\u307e\u307e\u6b8b\u3057\u3066\u3044\u304f\u4e88\u5b9a\u3067\u3059\u3002</li> </ul> <ul> <li>Written by \u677e\u5c3e\u548c\u662d (Kazuaki Matsuo, @KazuCocoa)</li> </ul>"},{"location":"guides/migrating-1-to-2/","title":"Appium 1.x\u304b\u3089Appium 2.x\u3078\u79fb\u884c\u3059\u308b","text":"<p>\u3053\u306e\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u306f\u65e2\u306bAppium 1.x\u3092\u5229\u7528\u3057\u3066\u3044\u308b\u4eba\u304cAppium 2.x\u306b\u79fb\u884c\u3059\u308b\u305f\u3081\u306e\u624b\u5f15\u304d\u3067\u3059\u3002 \u7834\u58ca\u7684\u5909\u66f4\uff08breaking changes\uff09\u306e\u4e00\u89a7\u3084\u3001\u5b9f\u884c\u74b0\u5883\u30fb\u30c6\u30b9\u30c8\u30b3\u30fc\u30c9\u3092Appium 2.0\u4e92\u63db\u306b\u3059\u308b\u305f\u3081\u306e\u65b9\u6cd5\u304c\u542b\u307e\u308c\u307e\u3059\u3002</p>"},{"location":"guides/migrating-1-to-2/#appium-20","title":"Appium 2.0\u306e\u6982\u8981","text":"<p>Appium 2.0\u306f\u904e\u53bb5\u5e74\u9593\u306b\u304a\u3051\u308bAppium\u306e\u30ea\u30ea\u30fc\u30b9\u91ce\u4e2d\u3067\u6700\u3082\u5927\u304d\u306a\u30ea\u30ea\u30fc\u30b9\u3067\u3059\u3002Appium 2.0\u306e\u4e3b\u8981\u306a\u5909\u66f4\u306f\u7279\u5b9a\u306e\u30d7\u30e9\u30c3\u30c8\u30d5\u30a9\u30fc\u30e0\u306b\u5bfe\u3059\u308b\u81ea\u52d5\u5316\u3055\u308c\u305f\u52d5\u4f5c\u306b\u95a2\u3059\u308b\u3082\u306e\u3067\u306f\u3042\u308a\u307e\u305b\u3093\u3002Appium 2.0\u306fAppium\u3092\u30c9\u30e9\u30a4\u30d0\u30fc\uff08drivers\uff09\uff08\u3042\u308b\u30d7\u30e9\u30c3\u30c8\u30d5\u30a9\u30fc\u30e0\u306b\u5bfe\u3059\u308b\u81ea\u52d5\u5316\u3092\u652f\u63f4\u3059\u308b\u305f\u3081\u306e\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\uff09\u3068\u30d7\u30e9\u30b0\u30a4\u30f3\uff08plugins\uff09\uff08Appium\u306e\u52d5\u4f5c\u3092\u4e0a\u66f8\u304d\u3001\u4ee3\u66ff\u3001\u62e1\u5f35\u3001\u3082\u3057\u304f\u306f\u8ffd\u52a0\u3059\u308b\u305f\u3081\u306e\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\uff09\u3068\u3044\u3046\u5bb9\u6613\u306b\u5b9f\u88c5\u3001\u5171\u6709\u3067\u304d\u308b\u4ed5\u7d44\u307f\u3092\u63d0\u4f9b\u3059\u308b\u30d7\u30e9\u30c3\u30c8\u30d5\u30a9\u30fc\u30e0\u3068\u3057\u3066\u518d\u8003\u3057\u3066\u3044\u307e\u3059\u3002</p> <p>\u540c\u6642\u306b\u3001Appium\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306f\u591a\u304f\u306e\u53e4\u304f\u306a\u3063\u305f\u308a\u975e\u63a8\u5968\u3068\u306a\u3063\u3066\u3044\u308b\u6a5f\u80fd\u3084\u4f9d\u5b58\u3092\u53d6\u308a\u9664\u3053\u3046\u3068\u3057\u3066\u3044\u307e\u3059\u3002</p> <p>\u3053\u308c\u3089\u306b\u5408\u308f\u305b\u3066\u3001Appium\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u65b9\u6cd5\u3001\u30c9\u30e9\u30a4\u30d0\u30fc\u3084\u30d5\u30a3\u30fc\u30c1\u30e3\u30fc\u306e\u7ba1\u7406\u3001\u30d7\u30ed\u30c8\u30b3\u30eb\u30b5\u30dd\u30fc\u30c8\u306b\u95a2\u3057\u3066\u3044\u304f\u3064\u304b\u306e\u7834\u58ca\u7684\u5909\u66f4\u3092\u304c\u5c0e\u5165\u3055\u308c\u307e\u3059\u3002\u8a73\u7d30\u306f\u4ee5\u4e0b\u306b\u306a\u308a\u307e\u3059\u3002</p>"},{"location":"guides/migrating-1-to-2/#_1","title":"\u7834\u58ca\u7684\u5909\u66f4","text":"<p>\u30ea\u30ea\u30fc\u30b9\u6bce\u306e\u5909\u66f4\u4e00\u89a7\u306b\u95a2\u3057\u3066\u306fAppium 2.0\u30ea\u30ea\u30fc\u30b9\u30ce\u30fc\u30c8\u3092\u78ba\u8a8d\u3057\u3066\u304f\u3060\u3055\u3044\u3002\u3053\u3053\u3067\u306f\u7834\u58ca\u7684\u5909\u66f4\u3068\u4f55\u3092\u3059\u308b\u5fc5\u8981\u304c\u3042\u308b\u306e\u304b\u3092\u793a\u3057\u307e\u3059\u3002</p>"},{"location":"guides/migrating-1-to-2/#_2","title":"\u30c9\u30e9\u30a4\u30d0\u30fc\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb","text":"<p>Appium 1.x\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u305f\u3068\u304d\u3001\u5168\u3066\u306e\u5165\u624b\u53ef\u80fd\u306a\u30c9\u30e9\u30a4\u30d0\u30fc\u306f\u4e3b\u3068\u306a\u308bAppium\u30b5\u30fc\u30d0\u30fc\u3068\u5408\u308f\u305b\u3066\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3055\u308c\u3066\u3044\u307e\u3057\u305f\u3002Appium 2.0\u3067\u306f\u305d\u3046\u3067\u306f\u3042\u308a\u307e\u305b\u3093\u3002Appium 2.0\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\uff08\u4f8b\u3048\u3070 <code>npm install -g appium@next</code>\uff09\u306f\u5358\u306bAppium\u30b5\u30fc\u30d0\u30fc\u306e\u307f\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u3001\u30c9\u30e9\u30a4\u30d0\u30fc\u306f\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u307e\u305b\u3093\u3002\u30c9\u30e9\u30a4\u30d0\u30fc\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3059\u308b\u305f\u3081\u306b\u306f\u65b0\u3057\u3044Appium\u62e1\u5f35\u30b3\u30de\u30f3\u30c9\u30e9\u30a4\u30f3\u30a4\u30f3\u30bf\u30d5\u30a7\u30fc\u30b9\uff08Appium extension CLI\uff09\u3092\u4f7f\u308f\u306a\u3051\u308c\u3070\u3044\u3051\u307e\u305b\u3093\u3002\u4f8b\u3048\u3070\u3001\u6700\u65b0\u306eXCUITest\u3068UiAutomator2\u30c9\u30e9\u30a4\u30d0\u30fc\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3059\u308b\u5834\u5408\u3001Appium\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u305f\u306e\u3061\u306b\u6b21\u306e\u30b3\u30de\u30f3\u30c9\u3092\u5b9f\u884c\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002</p> <pre><code>appium driver install uiautomator2     # installs the latest driver version\nappium driver install xcuitest@4.12.2  # installs a specific driver version\n</code></pre> <p>\u3053\u308c\u306b\u3088\u308a\u3001\u30c9\u30e9\u30a4\u30d0\u30fc\u306f\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3055\u308c\u3001\u5229\u7528\u53ef\u80fd\u306b\u306a\u308a\u307e\u3059\u3002\u3053\u306eCLI\u306f\u3044\u308d\u3044\u308d\u306a\u6a5f\u80fd\u3092\u63d0\u4f9b\u3057\u3066\u3044\u308b\u306e\u3067\u3001CLI\u306e\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u3092\u78ba\u8a8d\u3057\u3066\u307f\u3066\u304f\u3060\u3055\u3044\u3002\u3082\u3057CI\u4e0a\u3067\u3042\u3063\u305f\u308a\u3001\u3044\u304f\u3064\u304b\u306e\u30c9\u30e9\u30a4\u30d0\u30fc\u3092Appium\u3068\u4e00\u7dd2\u306b\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u305f\u3044\u5834\u5408\u3001\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u30d5\u30e9\u30b0\u3092\u5229\u7528\u3059\u308b\u3053\u3068\u3067\u5b9f\u73fe\u53ef\u80fd\u3067\u3059\u3002</p> <pre><code>npm install --global appium --drivers=xcuitest,uiautomator2\n</code></pre> <p>\u3053\u308c\u306fAppium\u30682\u3064\u306e\u30c9\u30e9\u30a4\u30d0\u30fc\u3092\u4e00\u3064\u306e\u30b3\u30de\u30f3\u30c9\u3067\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u307e\u3059\u3002</p>"},{"location":"guides/migrating-1-to-2/#drivers-installation-path","title":"Drivers installation path","text":"<p>When you installed Appium 1.x, all available drivers would be installed at the same time as the main Appium server. The path was <code>/path/to/appium/node_modules</code>. For example, <code>appium-webdriveragent</code> to build WebDriverAgent manually was <code>/path/to/appium/node_modules/appium-xcuitest-driver/node_modules/appium-webdriveragent</code>.</p> <p>Appium 2.0 installs such dependencies in <code>APPIUM_HOME</code> environment variable. The default path is <code>~/.appium</code>. So, the path to  <code>appium-webdriveragent</code> could be <code>$APPIUM_HOME/node_modules/appium-xcuitest-driver/node_modules/appium-webdriveragent</code> after installing the XCUITest driver package.</p>"},{"location":"guides/migrating-1-to-2/#chromedriver-installation-flags","title":"Chromedriver installation flags","text":"<p>In Appium 1.x it was possible to customize the way Chromedriver was installed (as part of the UiAutomator2 driver for example), using the following command line flags:</p> <ul> <li><code>--chromedriver-skip-install</code></li> <li><code>--chromedriver-version</code></li> <li><code>--chromedriver-cdnurl</code></li> </ul> <p>Because Appium 2.0 now installs drivers for you, and because these flags were implemented as NPM config flags, they will no longer work. Instead, use the following environment variables during driver installation:</p> <ul> <li><code>APPIUM_SKIP_CHROMEDRIVER_INSTALL</code></li> <li><code>CHROMEDRIVER_VERSION</code></li> <li><code>CHROMEDRIVER_CDNURL</code></li> </ul> <p>For example:</p> <pre><code>APPIUM_SKIP_CHROMEDRIVER_INSTALL=1 appium driver install uiautomator2\n</code></pre>"},{"location":"guides/migrating-1-to-2/#driver-specific-command-line-options","title":"Driver-specific command line options","text":"<p>With Appium 1.x, command-line options specific to particular drivers were all hosted on the main Appium server. So, for example, <code>--chromedriver-executable</code> was a CLI parameter you could use with Appium to set the location of a specific Chromedriver version for use with, say, the UiAutomator2 driver.</p> <p>With Appium 2.x, all driver- and platform-specific CLI params have been moved to the drivers themselves. To access them, you'll now need to prepend the argument with the extension type (either <code>driver</code> or <code>plugin</code>) and the name of the extension. For example, <code>--chromedriver-executable</code> becomes <code>--driver-uiautomator2-chromedriver-executable</code>.</p>"},{"location":"guides/migrating-1-to-2/#driver-specific-automation-commands","title":"Driver-specific automation commands","text":"<p>The definition of certain commands that pertain only to specific drivers has been moved to those drivers' implementations. For example, <code>pressKeyCode</code> is specific to the UiAutomator2 driver and is now understood only by that driver. In practice, the only breaking change here is the kind of error you would encounter if the appropriate driver is not installed. Previously, you would get a <code>501 Not Yet Implemented</code> error if using a driver that didn't implement the command. Now, you will get a <code>404 Not Found</code> error because if a driver that doesn't know about the command is not active, the main Appium server will not define the route corresponding to the command.</p>"},{"location":"guides/migrating-1-to-2/#driver-updates","title":"Driver updates","text":"<p>In the past, to get updates to your iOS or Android drivers, you'd simply wait for those updates to be rolled into a new release of Appium, and then update your Appium version. With Appium 2.x, the Appium server and the Appium drivers are versioned and released separately. This means that drivers can be on their own release cadence and that you can get driver updates as they happen, rather than waiting for a new Appium server release. The way to check for driver updates is with the CLI:</p> <pre><code>appium driver list --updates\n</code></pre> <p>If any updates are available, you can then run the <code>update</code> command for any given driver:</p> <pre><code>appium driver update xcuitest\n</code></pre> <p>(For a complete description of the update command, check out the Extension CLI doc)</p> <p>To update the Appium server itself, you do the same thing as in the past: <code>npm install -g appium</code>. Now, installing new versions of the Appium server will leave your drivers intact, so the whole process will be much more quick.</p> <p>If you would like to update to a specific version, not the latest, please uninstall the driver and install the desired version using the <code>install</code> subcommand instead of <code>update</code>.</p> <pre><code>appium driver uninstall xcuitest\nappium driver install xcuitest@4.11.1\n</code></pre>"},{"location":"guides/migrating-1-to-2/#protocol-changes","title":"Protocol changes","text":"<p>Appium's API is based on the W3C WebDriver Protocol, and it has supported this protocol for years. Before the W3C WebDriver Protocol was designed as a web standard, several other protocols were used for both Selenium and Appium. These protocols were the \"JSONWP\" (JSON Wire Protocol) and \"MJSONWP\" (Mobile JSON Wire Protocol). The W3C Protocol differs from the (M)JSONWP protocols in a few small ways.</p> <p>Up until Appium 2.0, Appium supported both protocols, so that older Selenium/Appium clients could still communicate with newer Appium servers. Moving forward, support for older protocols will be removed.</p>"},{"location":"guides/migrating-1-to-2/#capabilities","title":"Capabilities","text":"<p>One significant difference between old and new protocols is in the format of capabilities. Previously called \"desired capabilities\", and now called simply \"capabilities\", there is now a requirement for a so-called \"vendor prefix\" on any non-standard capabilities. The list of standard capabilities is given in the WebDriver Protocol spec, and includes a few commonly used capabilities such as <code>browserName</code> and <code>platformName</code>.</p> <p>These standard capabilities continue to be used as-is. All other capabilities must include a \"vendor prefix\" in their name. A vendor prefix is a string followed by a colon, such as <code>appium:</code>. Most of Appium's capabilities go beyond the standard W3C capabilities and must therefore include vendor prefixes (we recommend that you use <code>appium:</code> unless directed otherwise by documentation). For example:</p> <ul> <li><code>appium:app</code></li> <li><code>appium:noReset</code></li> <li><code>appium:deviceName</code></li> </ul> <p>This requirement may or may not be a breaking change for your test suites when targeting Appium 2.0. If you're using an updated Appium client (at least one maintained by the Appium team), the client will add the <code>appium:</code> prefix for you on all necessary capabilities automatically. New versions of Appium Inspector will also do this. Cloud-based Appium providers may also do this. So simply be aware that if you get any messages to the effect that your capabilities lack a vendor prefix, this is how you solve that problem.</p> <p>On a related note, it will no longer be possible to start Appium sessions using WebDriver clients that don't support the W3C protocol (see below for a comment to this effect for the WD library).</p> <p>To make everyone's lives a bit easier, we've also introduced the option of wrapping up all Appium-related capabilities into one object capability, <code>appium:options</code>. You can bundle together anything that you would normally put an <code>appium:</code> prefix on into this one capability. Here's an example (in raw JSON) of how you might start an iOS session on the Safari browser using <code>appium:options</code>:</p> <pre><code>{\n\"platformName\": \"iOS\",\n\"browserName\": \"Safari\",\n\"appium:options\": {\n\"platformVersion\": \"14.4\",\n\"deviceName\": \"iPhone 11\",\n\"automationName\": \"XCUITest\"\n}\n}\n</code></pre> <p>(Of course, each client will have a different way of creating structured capabilities like <code>appium:options</code> or other ones that you might have seen such as <code>goog:chromeOptions</code>). NB: capabilities that show up in <code>appium:options</code> will overwrite capabilities of the same name that show up at the top level of the object. (The new <code>appium:options</code> syntax support by cloud providers may vary.)</p> <p>For more information on capabilities, have a look at the Capabilities Guide.</p>"},{"location":"guides/migrating-1-to-2/#removed-commands","title":"Removed Commands","text":"<p>In addition to commands which have been moved to driver implementations, commands which were a part of the old JSON Wire Protocol and not a part of the W3C Protocol are no longer available:</p> <ul> <li>TODO (these commands are being identified and removed and will be updated here when complete)</li> </ul> <p>If you use a modern Appium or Selenium client, you should no longer have access to these anyway, so any breaking changes should appear on the client side first and foremost.</p>"},{"location":"guides/migrating-1-to-2/#image-analysis-features-moved-to-plugin","title":"Image analysis features moved to plugin","text":"<p>One of the design goals for Appium 2.0 is to migrate non-core features into special extensions called plugins. This allows people to opt into features which require extra time to download or extra system setup. The various image-related features of Appium (image comparison, finding elements by image, etc...) have been moved into an officially supported plugin called images.</p> <p>If you use these image-related methods, to continue accessing them you will need to do two things.</p> <ol> <li>Install the plugin: <code>appium plugin install images</code></li> <li>Ensure you start the Appium server with access to run the plugin by including it in the list of plugins designated on the command line, e.g., <code>appium --use-plugins=images</code></li> </ol> <p>Image-related commands will also be removed on the client side of things, which means you will need to follow the instructions on the plugin README for installing client-side plugins to access these features.</p>"},{"location":"guides/migrating-1-to-2/#execute-driver-script-command-moved-to-plugin","title":"Execute Driver Script command moved to plugin","text":"<p>If you use the advanced Execute Driver Script feature (which allows you to send in a WebdriverIO script to have it executed completely on the server instead of command-by-command from the client), this functionality has been moved to a plugin. Here's what to do to keep using it:</p> <ol> <li>Install the plugin: <code>appium plugin install execute-driver</code></li> <li>Ensure you start the Appium server with access to run the plugin by including it in the list of plugins designated on the command line, e.g., <code>appium --use-plugins=execute-driver</code></li> </ol>"},{"location":"guides/migrating-1-to-2/#external-files-no-longer-supported-for-nodeconfig-default-capabilities-allow-insecure-and-deny-insecure","title":"External Files No Longer Supported for <code>--nodeconfig</code>, <code>--default-capabilities</code>, <code>--allow-insecure</code> and <code>--deny-insecure</code>","text":"<p>These options can be provided as strings on the command line (a JSON string for <code>--nodeconfig</code> and a comma-separated list of strings for <code>--allow-insecure</code> and <code>--deny-insecure</code>). Arguments provided on the command line will likely need to be quoted or escaped.</p> <p>The recommended method to provide these options is now via a configuration file.</p> <p>In summary, if you are using a JSON Appium config file, you can simply cut-and-paste the contents of your \"nodeconfig\" JSON file into the value of the <code>server.nodeconfig</code> property.  Any CSV-like files you had previously provided for <code>--allow-insecure</code> and <code>--deny-insecure</code> become the values of the <code>server.allow-insecure</code> and <code>server.deny-insecure</code> properties in the Appium config files (respectively); both are arrays of strings.</p>"},{"location":"guides/migrating-1-to-2/#old-drivers-removed","title":"Old drivers removed","text":"<p>The old iOS and Android (UiAutomator 1) drivers and related tools (e.g., <code>authorize-ios</code>) have been removed. They haven't been relevant for many years anyway.</p>"},{"location":"guides/migrating-1-to-2/#internal-packages-renamed","title":"Internal packages renamed","text":"<p>Some Appium-internal NPM packages have been renamed (for example, <code>appium-base-driver</code> is now <code>@appium/base-driver</code>). This is not a breaking change for Appium users, only for people who have built software that directly incorporates Appium's code.</p>"},{"location":"guides/migrating-1-to-2/#wd-javascript-client-library-no-longer-supported","title":"\"WD\" JavaScript client library no longer supported","text":"<p>For many years, some of Appium's authors maintained the WD client library. This library has been deprecated and has not been updated for use with the W3C WebDriver protocol. As such, if you're using this library you'll need to move to a more modern one. We recommend WebdriverIO.</p>"},{"location":"guides/migrating-1-to-2/#appium-inspector-split-out-from-appium-desktop","title":"Appium Inspector split out from Appium Desktop","text":"<p>The inspecting portion of Appium Desktop has been moved to its own app, Appium Inspector: github.com/appium/appium-inspector. It's fully compatible with Appium 2.0 servers. Simply download it and run it on its own. You no longer need the GUI Appium Desktop server to inspect apps. The Appium Desktop server will continue to be supported at its original site: github.com/appium/appium-desktop. It will simply no longer bundle the Inspector with it. Note that Appium Desktop 1.21 and lower versions depend on the deprecated WD client, and are not compatible with Appium 2.0. There is currently no Appium 2.0 support for Appium Desktop planned, now that the Inspector is a standalone app.</p> <p>You can also now use the Appium Inspector without downloading anything, by visiting the web version of Appium Inspector. Note that to test against local servers, you'll need to start the server with <code>--allow-cors</code> so that the browser-based version of Appium Inspector can access your Appium server to start sessions.</p>"},{"location":"guides/migrating-1-to-2/#major-new-features","title":"Major New Features","text":"<p>Apart from the breaking changes mentioned above, in this section is a list of some of the major new features you may wish to take advantage of with Appium 2.0.</p>"},{"location":"guides/migrating-1-to-2/#plugins","title":"Plugins","text":""},{"location":"guides/migrating-1-to-2/#server-plugins","title":"Server Plugins","text":"<p>Appium extension authors can now develop their own server plugins, which can intercept and modify any Appium command, or even adjust the way the underlying Appium HTTP server itself works. To learn more about plugins, read the new Appium Introduction. Interested in building a plugin? Check out the Building Plugins guide.</p>"},{"location":"guides/migrating-1-to-2/#client-plugins","title":"Client Plugins","text":"<p>TODO</p>"},{"location":"guides/migrating-1-to-2/#install-drivers-and-plugins-from-anywhere","title":"Install drivers and plugins from anywhere","text":"<p>You're no longer limited to the drivers that come with Appium, or that the Appium team even knows about! Appium extension authors can now develop custom drivers, which can be downloaded or installed via Appium's Extension CLI from NPM, Git, GitHub, or even the local filesystem. Interested in building a driver? Check out the Building Drivers guide.</p>"},{"location":"guides/migrating-1-to-2/#configuration-files","title":"Configuration Files","text":"<p>Appium now supports configuration files in addition to command-line arguments. In a nutshell, nearly all arguments which Appium 1.x required to be provided on the CLI are now able to be expressed via a configuration file. Configuration files may be in JSON, JS, or YAML format. See the Config Guide for a full explanation.</p>"},{"location":"guides/migrating-1-to-2/#special-notes-for-cloud-providers","title":"Special Notes for Cloud Providers","text":"<p>The rest of this document has applied to Appium generally, but some of the architectural changes in Appium 2.0 will constitute breaking changes for Appium-related service providers, whether a cloud-based Appium host or an internal service. At the end of the day, the maintainer of the Appium server is responsible for installing and making available the various Appium drivers and plugins that end users may wish to use.</p> <p>We encourage cloud providers to thoroughly read and understand our recommendation for cloud provider capabilities in order to support user needs in an industry-compatible way!</p>"},{"location":"intro/","title":"Appium\u306b\u3064\u3044\u3066","text":"<p>\u300c\u306f\u3058\u3081\u306b\u300d\u3067\u3082\u8a00\u53ca\u3057\u305f\u3068\u304a\u308a\u3001Appium\u306f\u30aa\u30fc\u30d7\u30f3\u30bd\u30fc\u30b9\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u3067\u3042\u308a\u3001\u591a\u304f\u306e\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u30d7\u30e9\u30c3\u30c8\u30d5\u30a9\u30fc\u30e0\u306eUI\u81ea\u52d5\u5316\u3092\u52a9\u3051\u308b\u305f\u3081\u306b\u8a2d\u8a08\u3055\u308c\u305f\u95a2\u4fc2\u3059\u308b\u30bd\u30d5\u30c8\u30a6\u30a7\u30a2\u306e\u30a8\u30b3\u30b7\u30b9\u30c6\u30e0\u3067\u3059\u3002Appium 2.0\u306e\u30ea\u30ea\u30fc\u30b9\u306b\u3088\u308a\u3001Appium\u306f\u4ee5\u4e0b\u306e\u4e3b\u8981\u306a\u76ee\u6a19\u3092\u9054\u6210\u3057\u307e\u3059\uff1a1</p> <ul> <li>\u6a19\u6e96\u5316\u3055\u308c\u305fAPI\u306b\u3088\u308a\u3001\u30af\u30ed\u30b9\u30d7\u30e9\u30c3\u30c8\u30d5\u30a9\u30fc\u30e0\u306a\u304c\u3089\u3082\u30d7\u30e9\u30c3\u30c8\u30d5\u30a9\u30fc\u30e0\u56fa\u6709\u306e\u81ea\u52d5\u5316\u3092\u53ef\u80fd\u3068\u3059\u308b</li> <li>\u69d8\u3005\u306a\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u8a00\u8a9e\u304b\u3089\u3053\u306eAPI\u3092\u547c\u3073\u51fa\u3059\u3053\u3068\u304c\u3067\u304d\u308b</li> <li>\u30b3\u30df\u30e5\u30cb\u30c6\u30a3\u9593\u3067\u958b\u767a\u3055\u308c\u305f\u4fbf\u5229\u306aAppium\u62e1\u5f35\uff08Appium extensions\uff09\u3092\u5229\u7528\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308b</li> </ul> <p>\u3057\u305f\u304c\u3063\u3066\u3001iOS\u3084Android\u3068\u3044\u3063\u305f\u3044\u304b\u306a\u308b\u30a2\u30d7\u30ea\u30d7\u30e9\u30c3\u30c8\u30d5\u30a9\u30fc\u30e0\u306b\u5bfe\u3057\u3066\u3082\u3001Appium\u306f\u958b\u767a\u8005\u3084\u30c6\u30b9\u30bf\u30fc\u306b\u305d\u306e\u30d7\u30e9\u30c3\u30c8\u30d5\u30a9\u30fc\u30e0\u306b\u304a\u3051\u308bUI\u81ea\u52d5\u5316\u30b3\u30fc\u30c9\u3092\u4e00\u3064\u306e\u7d71\u4e00\u3055\u308c\u305fAPI\u3067\u8a18\u8ff0\u3067\u304d\u308b\u3088\u3046\u306b\u3057\u307e\u3059\u3002</p> <p>Appium\u306e\u76ee\u6a19\u3092\u5b9f\u73fe\u3059\u308b\u305f\u3081\u306b\u79c1\u305f\u3061\u306f\u591a\u304f\u306e\u7591\u554f\u306b\u7b54\u3048\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002</p> <ul> <li>\"\u4e00\u3064\u306e\u7d71\u4e00\u3055\u308c\u305f\" API\u3068\u306f\u4f55\u304b\uff1f</li> <li>\u3069\u306e\u3088\u3046\u306b\u79c1\u305f\u3061\u306f\u305d\u306eAPI\u3092\u7279\u5b9a\u306e\u30d7\u30e9\u30c3\u30c8\u30d5\u30a9\u30fc\u30e0\u306b\u304a\u3051\u308b\u81ea\u52d5\u5316\u3068\u3057\u3066\u306e\u632f\u308b\u821e\u3044\u306b\u5bfe\u5fdc\u3055\u305b\u3066\u3044\u308b\u304b\uff1f</li> <li>\u3069\u306e\u3088\u3046\u306b\u79c1\u305f\u3061\u306f\u8907\u6570\u306e\u3088\u304f\u77e5\u3089\u308c\u308b\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u8a00\u8a9e\u304b\u3089\u5229\u7528\u53ef\u80fd\u306b\u3057\u3066\u3044\u308b\u304b\uff1f</li> </ul> <p>iOS\u3068Android\u3060\u3051\u3067\u306a\u304f\u3088\u308a\u591a\u304f\u306e\u30a2\u30d7\u30ea\u30d7\u30e9\u30c3\u30c8\u30d5\u30a9\u30fc\u30e0\u304c\u5b58\u5728\u3057\u3066\u3044\u308b\u3053\u3068\u3092\u8003\u3048\u308b\u3068\u3001\u305d\u306e\u80cc\u666f\u306b\u306f\u5225\u306e\u3001\u3088\u308a\u5927\u304d\u306a\u7591\u554f\u304c\u6f5c\u3093\u3067\u3044\u307e\u3059\u3002</p> <ul> <li>\u3069\u306e\u3088\u3046\u306b\u3057\u3066\u5168\u3066\u306e\u30d7\u30e9\u30c3\u30c8\u30d5\u30a9\u30fc\u30e0\u306b\u5bfe\u3057\u3066\u81ea\u52d5\u5316\u3092\u5b9f\u73fe\u3059\u308b\u304b\uff1f</li> </ul> <p>\u3053\u308c\u3089\u306e\u7591\u554f\u3078\u306eAppium\u306e\u7b54\u3048\u3092\u77e5\u308b\u3053\u3068\u306f\u3001Appium\u304c\u4f55\u304b\u3092\u5b66\u3076\u6700\u77ed\u306e\u65b9\u6cd5\u3067\u306f\u306a\u3044\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u304c\u3001\u78ba\u304b\u306a\u9053\u306b\u306a\u308a\u307e\u3059\u3002\u3067\u306f\u3001\u898b\u3066\u3044\u304d\u307e\u3057\u3087\u3046\u3002</p>"},{"location":"intro/#appiums-choice-of-api","title":"Appium's choice of API","text":"<p>Appium is very fortunate to have been preceded by a technology which has been a long-standing pioneer in the field of UI automation, namely Selenium. The goal of the Selenium project has been to support UI automation of web browsers, and in this way we can think of it as occupying a subset of Appium's goals. Along the way, Selenium (and, after they merged, another project called WebDriver) developed a relatively stable API for browser automation.</p> <p>Over the years, Selenium worked with various web browser vendors and the W3C standards group to turn its API into an official web browser standard, called the WebDriver specification. All the main browsers now implement automation capabilities inline with the WebDriver spec, without the Selenium team having to maintain any software that performs actual automation; standards for the win!</p> <p>Appium's initial goals were to develop an automation standard for mobile apps (iOS and Android). We could have made up something new, but in the spirit of joining forces and keeping standards, well, standard, we decided to adopt the WebDriver spec as Appium's API.2 While user interaction on websites and in mobile native apps are not entirely identical (with even greater differences once we start to consider, for example, TV platforms controlled by simple remotes), the fact is that most software UIs are pretty much the same. This means that the WebDriver spec provides automation API primitives (finding elements, interacting with elements, loading pages or screens, etc...) that more or less map to any platform.</p> <p>Of course, Appium wants to support the cases where user interaction does differ from web to mobile or web to TV, and so Appium also makes use of the built-in extensibility of the WebDriver spec. The result is that, no matter what platform you want to automate, when you use Appium, you will do so using the standard WebDriver spec, with two caveats:</p> <ul> <li>We might not have any way to support a particular WebDriver API command on a given platform, and   so some commands might be unsupported (for example, getting or setting cookies is not possible in   the world of native mobile app automation).</li> <li>We might support automation behaviours that go beyond what's available in the WebDriver API   command list, though any such commands will be valid and spec-compliant extensions to the   WebDriver API.</li> </ul> <p>How do you actually use the WebDriver API, particularly in the context of Appium? We'll cover that in the section below on how Appium provides universal programming language access. All you need to know for now is that the way Appium introduces a universal UI automation interface is by implementing the WebDriver protocol.</p>"},{"location":"intro/#platform-automation-behaviour","title":"Platform automation behaviour","text":"<p>The next question is, how does Appium map this protocol to automation behaviour on a wide range of platforms? The trick is that, strictly speaking, Appium doesn't! It leaves this responsibility up to a kind of software module called an Appium driver. There's a whole Driver Introduction which you can read next, so we won't go into huge detail on how they work for now.</p> <p>What's important to understand at the moment is that a driver is kind of like a pluggable module for Appium that gives Appium the power to automate a particular platform (or set of platforms, depending on the goal of the driver). At the end of the day, a driver's responsibility is to simply implement an Appium-internal interface representing the WebDriver protocol. How it implements this interface is totally up to the driver, based on its strategy for making automation happen on a specific platform. Typically, and with a lot more complexity and difficulty in the details, a driver does this by relying on platform-specific automation technologies. For example, Apple maintains an iOS automation technology called XCUITest. The Appium driver that supports iOS app automation is called the XCUITest Driver because ultimately what it does is convert the WebDriver protocol to XCUITest library calls.</p> <p>One of the reasons that drivers are independent, pluggable modules is that they work completely differently from one another. The tools and requirements for building and using drivers for different platforms are completely different. And so Appium lets you use just the drivers that you need for your automation tasks. Choosing drivers and installing them so that you can use them with your Appium instance is so important that Appium has its very own CLI for managing drivers.</p> <p>So, to answer our original question, the way that Appium provides access to automation capabilities for a given platform is that the Appium team (or anyone else3) writes a driver for that platform, implementing as much or little of the WebDriver protocol as desired. The driver can then be installed by anyone using Appium.</p>"},{"location":"intro/#universal-programming-language-access","title":"Universal programming language access","text":"<p>But what does it mean, or look like, to use Appium, anyway? Since Appium is ultimately a Node.js program, it could have looked like importing Appium and its drivers as libraries into your own Node.js programs. But that wouldn't meet Appium's goal of providing automation capabilities to people using any popular programming language.</p> <p>Luckily, the fact that Appium rode in on Selenium's coattails meant that we had a solution to this problem from day one. You see, the WebDriver specification is actually an HTTP-based protocol, meaning it is designed to be used over a network rather than within the memory of a single program.</p> <p>One of the main benefits of this \"client-server\" architecture is that it allows the automation implementer (the thing doing the automation, in this case the 'server') to be completely distinct from the automation runner (the thing defining what automation should be done, in what steps, etc..., in this case the 'client'). Basically, all the \"hard stuff\" (actually figuring out how to make automation happen on a given platform) can be handled in one place by the server, and \"thin\" client libraries can be written in any programming language which simply encode HTTP requests to the server in language-appropriate way. It's possible, in other words, to bring basic Appium / WebDriver capabilities to a new programming language relatively easily, assuming high-level HTTP libraries exist, simply by coding up a basic HTTP client in that language.</p> <p>There are a couple important takeaways here for you, the Appium user:</p> <ul> <li>Appium is an HTTP server. It must run as a process on some computer for as long as you want to   be able to use it for automation. It must be accessible on the network to whichever computer you   want to use to run the automation from (whether that is the same machine or one across the   world).</li> <li>Unless you want to write raw HTTP calls or use cURL, using Appium for automation involves the use   of an Appium Client in the language of your choice. The goal of each of these   clients is to encapsulate the WebDriver protocol so that rather than worrying about the protocol   itself, you can work with objects and methods that feel idiomatic for your language.</li> <li>The Appium server and the Appium client do not need to be running on the same computer. You   simply need to be able to send HTTP requests from the client to the server over some network.   This greatly facilitates the use of cloud providers for Appium, since they can host the Appium   server and any related drivers and devices, and all you need to do is point your client script to   their secure endpoints.</li> </ul> <p>And of course, none of this is about \"testing\" per se, purely about the use of Appium and its client libraries for automation purposes. If you want to do automation for the purpose of \"testing\", you'll likely want to enlist the help of test runners, test frameworks, and the like, none of which need be related to Appium; one of the benefits of Appium's \"universal accessibility\" is that it plays well with whatever set of tools you find most beneficial for your situation.</p>"},{"location":"intro/#appiums-huge-scope","title":"Appium's huge scope","text":"<p>Appium's vision (automation of everything under a single API) is huge! Certainly, much bigger than the team of core maintainers for the open source project. So how does Appium hope to achieve this goal? Basically, by empowering the community to develop functionality on top of Appium as a platform. This is what we call the Appium \"ecosystem\".</p> <p>The Appium team does officially maintain a few drivers itself (for example, the XCUITest driver that we spoke about earlier). But it cannot hope to have the platform-specific expertise or the capacity to maintain drivers for many different platforms. But what we have done, particularly beginning with Appium 2.0, is to provide tools to empower the community to join in our vision:</p> <ul> <li>Anyone can create a driver simply by creating a Node.js module that conforms to the appropriate   conventions and implements any (sub|super)set of the WebDriver protocol. Creating a driver often   involves a minimal amount of code because the WebDriver protocol details are abstracted away, and   many helper libraries are available---the same libraries that power the Appium team's own   drivers.</li> <li>Sharing drivers with others is easy using the Appium driver CLI. There is no central authority.   Anyone can share drivers publicly or privately, for free or for sale. Drivers can be open or   closed source (though obviously we appreciate open source!).</li> </ul> <p>Appium's vision of being a platform for development extends beyond the support of automation for all app platforms. As a popular automation tool, there are many opportunities for integrating Appium with all kinds of other tools and services. In addition, there are many feature ideas for Appium, either as a core server or in its incarnation across various drivers, which the core team will never have time to build. And so, with Appium 2.0, Appium has released a plugin system that enables anyone to build and share modules that change how Appium works!</p> <p>In the same way that drivers are easily shareable and consumable via the Appium driver CLI, plugins can be published and consumed via a parallel Plugin CLI. Plugins can do all sorts of things, for example adding the ability for Appium to find and interact with screen regions based on a template image (as in the <code>images</code> plugin). There are very few limitations on what you can do with plugins, so you might also be interested in learning how to Build Plugins in Node.js that can be used with Appium.</p> <p>So that's Appium: an extensible, universal interface for the UI automation of potentially everything! Read on into some of the specific intro docs for more details, or check out the various guides to dive into some more general concepts and features of Appium.</p> <ol> <li> <p>\u3053\u308c\u3089\u306e\u4e3b\u8981\u306a\u76ee\u7684\u9054\u6210\u306e\u305f\u3081\u3001\u79c1\u305f\u3061\u306f\u4e8c\u6b21\u7684\u306a\u76ee\u6a19\u3084\u539f\u5247\u306b\u6cbf\u3063\u3066\u3044\u307e\u3059\u3002Appium\u62e1\u5f35\uff08Appium extension\uff09\u306e\u958b\u767a\u8005\u306b\u3082\u540c\u69d8\u306b\u63a8\u5968\u3059\u308b\u3082\u306e\u3067\u3059\u3002</p> <ul> <li>\u53ef\u80fd\u306a\u9650\u308a\u3001\u30aa\u30fc\u30d7\u30f3\u30bd\u30fc\u30b9\u3092\u6d3b\u7528\u3057\u3001\u30aa\u30fc\u30d7\u30f3\u30bd\u30fc\u30b9\u306b\u8ca2\u732e\u3082\u3059\u308b</li> <li>\u53ef\u80fd\u306a\u9650\u308a\u3001\u958b\u767a\u5143\u304b\u3089\u63d0\u4f9b\u3055\u308c\u308b\u30d7\u30e9\u30c3\u30c8\u30d5\u30a9\u30fc\u30e0\u56fa\u6709\u306e\u30c4\u30fc\u30eb\u3092\u4f7f\u7528\u3059\u308b</li> <li>\u53ef\u80fd\u306a\u9650\u308a\u3001\u30c6\u30b9\u30c8\u5bfe\u8c61\u306b\u5909\u66f4\u3092\u5fc5\u8981\u3068\u3057\u306a\u3044\u81ea\u52d5\u5316\u30c4\u30fc\u30eb\u3092\u4f7f\u7528\u3059\u308b\uff08\u5c02\u7528\u30d3\u30eb\u30c9\u3092\u5fc5\u8981\u3068\u3059\u308b\u3088\u3046\u306a\u8ffd\u52a0\u306eSDK\u3084\u30c6\u30b9\u30c8\u5bfe\u8c61\u7248\u3068\u88fd\u54c1\u7248\u3068\u3067\u5dee\u7570\u304c\u3042\u308b\u3053\u3068\u306f\u597d\u307e\u3057\u304f\u306a\u3044\uff09</li> <li>\u53ef\u80fd\u306a\u9650\u308a\u3001\u65b0\u3057\u3044\u72ec\u81ea\u306e\u3082\u306e\u3092\u4f5c\u308b\u3088\u308a\u65e2\u306b\u3042\u308b\u6a19\u6e96\u306e\u3082\u306e\u3092\u4f7f\u3046</li> </ul> <p>\u21a9</p> </li> <li> <p>Technically, when Appium was first written, we were dealing with something older than the   WebDriver spec, called the JSON Wire Protocol. Since then, Appium continued to evolve along with   the W3C spec and is fully W3C-compliant.\u00a0\u21a9</p> </li> <li> <p>You can build and share your own drivers! Check out Building   Drivers to learn more about how to develop drivers in Node.js   that can be used with Appium.\u00a0\u21a9</p> </li> </ol>"},{"location":"intro/appium-clients/","title":"Appium clients","text":""},{"location":"intro/appium-clients/#appium","title":"Appium \u30b5\u30fc\u30d0\u30fc\u3092\u30b5\u30dd\u30fc\u30c8\u3057\u3066\u3044\u308b\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u30e9\u30a4\u30d6\u30e9\u30ea\u306e\u4e00\u89a7","text":"<p>\u3053\u308c\u3089\u306e\u30e9\u30a4\u30d6\u30e9\u30ea\u306f\u3001\u6a19\u6e96\u306e Selenium \u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u30e9\u30a4\u30d6\u30e9\u30ea\u3092\u30e9\u30c3\u30d7\u3057\u3066\u3001JSON Wire \u30d7\u30ed\u30c8\u30b3\u30eb \u306b\u3088\u3063\u3066\u6307\u5b9a\u3055\u308c\u305f\u3059\u3079\u3066\u306e\u901a\u5e38\u306e Selenium \u30b3\u30de\u30f3\u30c9\u3092\u63d0\u4f9b\u3057\u3001\u30de\u30eb\u30c1\u30bf\u30c3\u30c1\u30b8\u30a7\u30b9\u30c1\u30e3\u30fc \u3084 \u753b\u9762\u306e\u5411\u304d \u306a\u3069\u306e\u30e2\u30d0\u30a4\u30eb\u30c7\u30d0\u30a4\u30b9\u306e\u5236\u5fa1\u306b\u95a2\u9023\u3057\u305f\u8ffd\u52a0\u30b3\u30de\u30f3\u30c9\u3092\u8ffd\u52a0\u3057\u307e\u3059\u3002</p> <p>Appium \u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u30e9\u30a4\u30d6\u30e9\u30ea\u306f\u3001Mobile JSON Wire \u30d7\u30ed\u30c8\u30b3\u30eb (\u6a19\u6e96\u30d7\u30ed\u30c8\u30b3\u30eb\u306e\u516c\u5f0f\u30c9\u30e9\u30d5\u30c8\u62e1\u5f35) \u3068\u3001W3C Webdriver \u4ed5\u69d8 (\u30c8\u30e9\u30f3\u30b9\u30dd\u30fc\u30c8\u306b\u4f9d\u5b58\u3057\u306a\u3044\u81ea\u52d5\u5316\u4ed5\u69d8\u3002\u3053\u3053\u3067\u306f MultiAction API \u304c\u5b9a\u7fa9\u3055\u308c\u3066\u3044\u307e\u3059) \u306e\u8981\u7d20\u3092\u5b9f\u88c5\u3057\u3066\u3044\u307e\u3059\u3002</p> <p>Appium \u30b5\u30fc\u30d0\u30fc\u81ea\u4f53\u304c\u516c\u5f0f\u30d7\u30ed\u30c8\u30b3\u30eb\u3078\u306e\u30ab\u30b9\u30bf\u30e0\u62e1\u5f35\u3092\u5b9a\u7fa9\u3057\u3066\u304a\u308a\u3001Appium \u30e6\u30fc\u30b6\u30fc\u306b\u69d8\u3005\u306a\u30c7\u30d0\u30a4\u30b9\u306e\u52d5\u4f5c (\u30c6\u30b9\u30c8\u30bb\u30c3\u30b7\u30e7\u30f3\u306e\u9014\u4e2d\u3067\u30a2\u30d7\u30ea\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb/\u30a2\u30f3\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3059\u308b\u306a\u3069) \u3092\u5b9f\u73fe\u3059\u308b\u4fbf\u5229\u306a\u5165\u308a\u53e3\u3092\u63d0\u4f9b\u3057\u307e\u3059\u3002\u3053\u308c\u304c\u3001\u300c\u7d20\u300d\u306a Selenium \u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u3060\u3051\u3067\u306a\u304f\u3001Appium \u56fa\u6709\u306e\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u304c\u5fc5\u8981\u306a\u7406\u7531\u3067\u3059\u3002\u3082\u3061\u308d\u3093\u3001Appium \u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u30e9\u30a4\u30d6\u30e9\u30ea\u306f\u6a5f\u80fd\u3092\u8ffd\u52a0\u3059\u308b\u3060\u3051\u306a\u306e\u3067 (\u5b9f\u969b\u306b\u306f\u3001\u6a19\u6e96\u306e Selenium \u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u3092\u62e1\u5f35\u3059\u308b\u3060\u3051\u3067\u3059)\u3001\u901a\u5e38\u306e Selenium \u30bb\u30c3\u30b7\u30e7\u30f3\u306b\u4f7f\u7528\u3067\u304d\u307e\u3059\u3002</p> \u8a00\u8a9e/\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af Github \u306e\u30ea\u30dd\u30b8\u30c8\u30ea\u3068\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u624b\u9806 Ruby https://github.com/appium/ruby_lib_core(\u63a8\u5968), https://github.com/appium/ruby_lib Python https://github.com/appium/python-client Java https://github.com/appium/java-client C# (.NET) https://github.com/appium/dotnet-client"},{"location":"intro/appium-clients/#community-based","title":"Community based","text":"\u8a00\u8a9e/\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af Github \u306e\u30ea\u30dd\u30b8\u30c8\u30ea\u3068\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u624b\u9806 JavaScript (Node.js) https://github.com/admc/wd JavaScript (Node.js) https://github.com/webdriverio/webdriverio JavaScript (Browser) https://github.com/projectxyzio/web2driver RobotFramework https://github.com/serhatbolsu/robotframework-appiumlibrary"},{"location":"intro/getting-started/","title":"Getting started","text":""},{"location":"intro/getting-started/#_1","title":"\u306f\u3058\u3081\u306b","text":"<p>\u3053\u306e\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u3067\u306f\u3001\u7c21\u5358\u306a Appium \u30c6\u30b9\u30c8\u3092\u5b9f\u65bd\u3057\u3066\u3001 Appium \u306e\u57fa\u672c\u7684\u306a\u8003\u3048\u65b9\u3092\u3054\u7d39\u4ecb\u3057\u307e\u3059\u3002 Appium \u306e\u6982\u5ff5\u3092\u3088\u308a\u5305\u62ec\u7684\u306b\u7d39\u4ecb\u3059\u308b\u305f\u3081\u306b\u306f\u3001\u6982\u5ff5\u7684\u306a\u7d39\u4ecb\u3092\u3054\u89a7\u304f\u3060\u3055\u3044\u3002</p>"},{"location":"intro/getting-started/#appium","title":"Appium \u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb","text":"<p>Appium \u306f\u3001NPM \u7d4c\u7531\u3067\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3059\u308b\u304b\u3001 Appium \u30b5\u30fc\u30d0\u30fc\u3092\u8d77\u52d5\u3059\u308b\u305f\u3081\u306e\u30b0\u30e9\u30d5\u30a3\u30ab\u30eb\u306a\u30c7\u30b9\u30af\u30c8\u30c3\u30d7\u30d9\u30fc\u30b9\u306e\u65b9\u6cd5\u3067\u3042\u308b Appium Desktop \u3092\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3059\u308b 2\u3064\u306e\u65b9\u6cd5\u306e\u3044\u305a\u308c\u304b\u3067\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002</p>"},{"location":"intro/getting-started/#npm","title":"NPM \u7d4c\u7531\u3067\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb","text":"<p><code>npm install</code> \u3067 Appium \u3092\u5b9f\u884c\u3057\u305f\u308a\u3001Appium \u3067\u30cf\u30c3\u30af\u3057\u305f\u308a\u3001Appium \u306b\u8ca2\u732e\u3057\u305f\u308a\u3059\u308b\u306b\u306f\u3001 Node.js \u3068 NPM \u304c\u5fc5\u8981\u3067\u3059 (Node.js \u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3059\u308b\u306b\u306f\u3001 nvm\u3001n\u3001<code>brew install node</code> \u3092\u4f7f\u7528\u3057\u3066\u304f\u3060\u3055\u3044\u3002 <code>sudo</code> \u3067 Node \u3084 Appium \u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u3066\u3044\u306a\u3044\u3053\u3068\u3092\u78ba\u8a8d\u3057\u3066\u304f\u3060\u3055\u3044)\u3002 Appium \u306f Node 10+ \u3092\u30b5\u30dd\u30fc\u30c8\u3057\u3066\u3044\u307e\u3059\u304c\u3001 \u6700\u65b0\u306e\u5b89\u5b9a\u7248\u3092\u63a8\u5968\u3057\u307e\u3059\u3002</p> <p>\u5b9f\u969b\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u306f\u3053\u3093\u306a\u611f\u3058\u3067\u7c21\u5358\u3067\u3059\u3002</p> <pre><code>npm install -g appium\n</code></pre>"},{"location":"intro/getting-started/#_2","title":"\u30c7\u30b9\u30af\u30c8\u30c3\u30d7\u30a2\u30d7\u30ea\u306e\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u304b\u3089\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb","text":"<p>\u30ea\u30ea\u30fc\u30b9\u30da\u30fc\u30b8\u304b\u3089 Appium Desktop \u306e\u6700\u65b0\u7248\u3092\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3059\u308b\u3060\u3051\u3067\u3059\u3002</p>"},{"location":"intro/getting-started/#_3","title":"\u30c9\u30e9\u30a4\u30d0\u30fc\u56fa\u6709\u306e\u8a2d\u5b9a","text":"<p>iOS \u3084 Android \u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306e\u3088\u3046\u306b\u3001 \u7279\u5b9a\u306e\u3082\u306e\u3092\u81ea\u52d5\u5316\u3059\u308b\u305f\u3081\u306b Appium \u3092\u4f7f\u7528\u3057\u305f\u3044\u3068\u601d\u3046\u3067\u3057\u3087\u3046\u3002 \u7279\u5b9a\u306e\u30d7\u30e9\u30c3\u30c8\u30d5\u30a9\u30fc\u30e0\u306e\u81ea\u52d5\u5316\u306e\u30b5\u30dd\u30fc\u30c8\u306f\u3001Appium \u306e\u300c\u30c9\u30e9\u30a4\u30d0\u300d\u306b\u3088\u3063\u3066\u63d0\u4f9b\u3055\u308c\u307e\u3059\u3002 \u3055\u307e\u3056\u307e\u306a\u7a2e\u985e\u306e\u81ea\u52d5\u5316\u6280\u8853\u3078\u306e\u30a2\u30af\u30bb\u30b9\u3092\u63d0\u4f9b\u3059\u308b\u3053\u306e\u3088\u3046\u306a\u30c9\u30e9\u30a4\u30d0\u306f\u591a\u6570\u3042\u308a\u3001 \u305d\u308c\u305e\u308c\u304c\u5404\u3005\u306e\u30bb\u30c3\u30c8\u30a2\u30c3\u30d7\u8981\u4ef6\u3092\u6301\u3063\u3066\u3044\u307e\u3059\u3002 \u3053\u308c\u3089\u306e\u8981\u4ef6\u306e\u307b\u3068\u3093\u3069\u306f\u3001\u7279\u5b9a\u306e\u30d7\u30e9\u30c3\u30c8\u30d5\u30a9\u30fc\u30e0\u3067\u306e\u30a2\u30d7\u30ea\u958b\u767a\u3068\u540c\u3058\u8981\u4ef6\u3067\u3059\u3002 \u4f8b\u3048\u3070\u3001Android \u30c9\u30e9\u30a4\u30d0\u3092\u4f7f\u7528\u3057\u3066 Android \u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3092\u81ea\u52d5\u5316\u3059\u308b\u306b\u306f\u3001 \u304a\u4f7f\u3044\u306e\u30b7\u30b9\u30c6\u30e0\u4e0a\u3067\u8a2d\u5b9a\u3055\u308c\u305f Android SDK \u304c\u5fc5\u8981\u3067\u3059\u3002</p> <p>\u3042\u308b\u6642\u70b9\u3067\u3001\u81ea\u52d5\u5316\u3057\u305f\u3044\u30d7\u30e9\u30c3\u30c8\u30d5\u30a9\u30fc\u30e0\u306e\u30c9\u30e9\u30a4\u30d0\u306e\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u3092\u78ba\u8a8d\u3057\u3066\u3001 \u30b7\u30b9\u30c6\u30e0\u304c\u6b63\u3057\u304f\u30bb\u30c3\u30c8\u30a2\u30c3\u30d7\u3055\u308c\u3066\u3044\u308b\u3053\u3068\u3092\u78ba\u8a8d\u3057\u3066\u304f\u3060\u3055\u3044\u3002</p> <ul> <li>XCUITest Driver (iOS \u3068 tvOS \u30a2\u30d7\u30ea\u7528)</li> <li>Espresso \u30c9\u30e9\u30a4\u30d0\u30fc (Android \u30a2\u30d7\u30ea\u7528)</li> <li>UiAutomator2 \u30c9\u30e9\u30a4\u30d0\u30fc (Android \u30a2\u30d7\u30ea\u7528)</li> <li>Windows \u30c9\u30e9\u30a4\u30d0\u30fc (Windows \u30c7\u30b9\u30af\u30c8\u30c3\u30d7\u30a2\u30d7\u30ea\u7528)</li> <li>Mac \u30c9\u30e9\u30a4\u30d0\u30fc (Mac \u30c7\u30b9\u30af\u30c8\u30c3\u30d7\u30a2\u30d7\u30ea\u7528)</li> </ul>"},{"location":"intro/getting-started/#_4","title":"\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u306e\u78ba\u8a8d","text":"<p>Appium \u306e\u4f9d\u5b58\u95a2\u4fc2\u304c\u3059\u3079\u3066\u6e80\u305f\u3055\u308c\u3066\u3044\u308b\u3053\u3068\u3092\u78ba\u8a8d\u3059\u308b\u306b\u306f\u3001<code>appium-doctor</code> \u3092\u4f7f\u3046\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002 <code>npm install -g appium-doctor</code> \u3067\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u3001 <code>appium-doctor</code> \u30b3\u30de\u30f3\u30c9\u3092\u5b9f\u884c\u3057\u3066 <code>--ios</code> \u307e\u305f\u306f <code>--android</code> \u30d5\u30e9\u30b0\u3092\u6307\u5b9a\u3057\u3066\u3001 \u3059\u3079\u3066\u306e\u4f9d\u5b58\u95a2\u4fc2\u304c\u6b63\u3057\u304f\u8a2d\u5b9a\u3055\u308c\u3066\u3044\u308b\u3053\u3068\u3092\u78ba\u8a8d\u3057\u307e\u3059\u3002</p>"},{"location":"intro/getting-started/#appium_1","title":"Appium \u30af\u30e9\u30a4\u30a2\u30f3\u30c8","text":"<p>\u3059\u3079\u3066\u304c\u547c\u3070\u308c\u305f\u6642\u3001Appium \u306f\u305f\u3060\u306e HTTP \u30b5\u30fc\u30d0\u30fc\u3067\u3059\u3002 \u305d\u308c\u306f\u305d\u306e\u72b6\u614b\u3067\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u304b\u3089\u306e\u63a5\u7d9a\u3092\u5f85\u3061\u3001 \u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u306f\u3069\u306e\u3088\u3046\u306a\u7a2e\u985e\u306e\u30bb\u30c3\u30b7\u30e7\u30f3\u3092\u958b\u59cb\u3059\u308b\u304b\u3001\u30bb\u30c3\u30b7\u30e7\u30f3\u304c\u958b\u59cb\u3055\u308c\u308b\u3068\u3069\u306e\u3088\u3046\u306a\u81ea\u52d5\u5316\u52d5\u4f5c\u3092\u5b9f\u884c\u3059\u308b\u304b\u3092 Appium \u306b\u6307\u793a\u3057\u307e\u3059\u3002 \u3053\u308c\u306f\u3001Appium \u3092\u5358\u72ec\u3067\u306f\u6c7a\u3057\u3066\u4f7f\u7528\u3057\u306a\u3044\u3053\u3068\u3092\u610f\u5473\u3057\u307e\u3059\u3002 \u5e38\u306b\u4f55\u3089\u304b\u306e\u7a2e\u985e\u306e\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u30e9\u30a4\u30d6\u30e9\u30ea (\u307e\u305f\u306f\u3001\u5192\u967a\u7684\u306a\u5834\u5408\u306f cURL!) \u3068\u4e00\u7dd2\u306b\u4f7f\u7528\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002</p> <p>\u5e78\u3044\u306a\u3053\u3068\u306b\u3001Appium \u306f WebDriver \u30d7\u30ed\u30c8\u30b3\u30eb\u3068\u547c\u3070\u308c\u308b Selenium \u3068\u540c\u3058\u30d7\u30ed\u30c8\u30b3\u30eb\u3092\u8a71\u3057\u307e\u3059\u3002 \u6a19\u6e96\u306e Selenium \u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u306e 1 \u3064\u3092\u4f7f\u7528\u3059\u308b\u3060\u3051\u3067\u3001 Appium \u3067\u591a\u304f\u306e\u3053\u3068\u3092\u884c\u3046\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002 \u3042\u306a\u305f\u306e\u30b7\u30b9\u30c6\u30e0\u306b\u306f\u3059\u3067\u306b\u3053\u308c\u3089\u306e\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u304c\u3042\u308b\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u3002 \u7279\u306b\u30e2\u30d0\u30a4\u30eb\u30d7\u30e9\u30c3\u30c8\u30d5\u30a9\u30fc\u30e0\u4e0a\u306e Web \u30d6\u30e9\u30a6\u30b6\u3092\u30c6\u30b9\u30c8\u3059\u308b\u76ee\u7684\u3067 Appium \u3092\u4f7f\u7528\u3057\u3066\u3044\u308b\u5834\u5408\u306f\u3001 \u305d\u308c\u3060\u3051\u3067\u5341\u5206\u3067\u3059\u3002</p> <p>\u3057\u304b\u3057\u3001\u30e2\u30d0\u30a4\u30eb\u30c7\u30d0\u30a4\u30b9\u304c Web \u30d6\u30e9\u30a6\u30b6\u3067\u306f\u3067\u304d\u306a\u3044\u3053\u3068\u3092\u884c\u3048\u308b\u3088\u3046\u306b\u3001 Appium \u306f Selenium \u3067\u306f\u3067\u304d\u306a\u3044\u3053\u3068\u3092\u884c\u3048\u307e\u3059\u3002 \u305d\u306e\u305f\u3081\u3001\u79c1\u305f\u3061\u306f\u69d8\u3005\u306a\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u8a00\u8a9e\u306e Appium \u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u3092\u7528\u610f\u3057\u3066\u3044\u307e\u3059\u3002 \u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u306e\u30ea\u30b9\u30c8\u3068\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u624b\u9806\u3078\u306e\u30ea\u30f3\u30af\u306f Appium \u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u306e\u30ea\u30b9\u30c8\u3067\u898b\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002</p> <p>\u5148\u306b\u9032\u3080\u524d\u306b\u3001\u304a\u597d\u304d\u306a\u8a00\u8a9e\u3067\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u3092\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3057\u3001 \u6e96\u5099\u304c\u3067\u304d\u3066\u3044\u308b\u3053\u3068\u3092\u78ba\u8a8d\u3057\u3066\u304f\u3060\u3055\u3044\u3002</p>"},{"location":"intro/getting-started/#appium_2","title":"Appium \u306e\u958b\u59cb","text":"<p>(NPM\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u304c\u6210\u529f\u3057\u305f\u3068\u4eee\u5b9a\u3057\u3066)  \u3053\u308c\u3067\u3001\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u30b3\u30de\u30f3\u30c9\u30e9\u30a4\u30f3\u304b\u3089\u5b9f\u884c\u3059\u308b\u3053\u3068\u3067\u3001Appium \u30b5\u30fc\u30d0\u30fc\u3092\u30ad\u30c3\u30af\u30a2\u30c3\u30d7\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002</p> <pre><code>appium\n</code></pre> <p>\u307e\u305f\u306f\u3001Appium Desktop \u5185\u306e\u5de8\u5927\u306a Start Server \u30dc\u30bf\u30f3\u3092\u30af\u30ea\u30c3\u30af\u3057\u3066\u304f\u3060\u3055\u3044\u3002</p> <p>Appium \u306f\u3001\u5b9f\u884c\u3057\u3066\u3044\u308b Appium \u306e\u30d0\u30fc\u30b8\u30e7\u30f3\u3068\u3069\u306e\u30dd\u30fc\u30c8\u3092\u5f85\u3061\u53d7\u3051\u3066\u3044\u308b\u304b\u3092\u793a\u3059\u5c0f\u3055\u306a\u30a6\u30a7\u30eb\u30ab\u30e0\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u8868\u793a\u3057\u307e\u3059 (\u30c7\u30d5\u30a9\u30eb\u30c8\u306f <code>4723</code> \u3067\u3059)\u3002 \u3053\u306e\u30dd\u30fc\u30c8\u3067 Appium \u306b\u63a5\u7d9a\u3059\u308b\u3088\u3046\u306b\u30c6\u30b9\u30c8\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u3092\u8a2d\u5b9a\u3059\u308b\u5fc5\u8981\u304c\u3042\u308b\u306e\u3067\u3001 \u3053\u306e\u30dd\u30fc\u30c8\u60c5\u5831\u306f\u91cd\u8981\u3067\u3059\u3002 \u30dd\u30fc\u30c8\u3092\u5909\u66f4\u3057\u305f\u3044\u5834\u5408\u306f\u3001 Appium \u3092\u8d77\u52d5\u3059\u308b\u969b\u306b <code>-p</code> \u30d5\u30e9\u30b0\u3092\u4f7f\u7528\u3057\u3066\u5909\u66f4\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059 (\u30b5\u30fc\u30d0\u30fc\u30d1\u30e9\u30e1\u30fc\u30bf\u306e\u5168\u30ea\u30b9\u30c8\u3092\u78ba\u8a8d\u3057\u3066\u304f\u3060\u3055\u3044)\u3002</p>"},{"location":"intro/getting-started/#_5","title":"\u6700\u521d\u306e\u30c6\u30b9\u30c8\u306e\u5b9f\u884c","text":"<p>\u3053\u306e\u30bb\u30af\u30b7\u30e7\u30f3\u3067\u306f\u3001\u57fa\u672c\u7684\u306a \"Hello World\" \u306e Android \u30c6\u30b9\u30c8\u3092\u5b9f\u884c\u3057\u307e\u3059\u3002 Android \u3092\u9078\u629e\u3057\u305f\u306e\u306f\u3001\u3059\u3079\u3066\u306e\u30d7\u30e9\u30c3\u30c8\u30d5\u30a9\u30fc\u30e0\u3067\u5229\u7528\u53ef\u80fd\u3060\u304b\u3089\u3067\u3059\u3002 UiAutomator2 Driver\u3092\u4f7f\u7528\u3057\u307e\u3059\u306e\u3067\u3001 \u305d\u306e\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u3092\u8aad\u307f\u3001\u30b7\u30b9\u30c6\u30e0\u3092\u9069\u5207\u306b\u8a2d\u5b9a\u3057\u3066\u304f\u3060\u3055\u3044\u3002 \u307e\u305f\u3001\u8a00\u8a9e\u3068\u3057\u3066 JavaScript \u3092\u4f7f\u7528\u3057\u307e\u3059\u306e\u3067\u3001 \u8ffd\u52a0\u306e\u4f9d\u5b58\u95a2\u4fc2\u306b\u5bfe\u51e6\u3059\u308b\u5fc5\u8981\u306f\u3042\u308a\u307e\u305b\u3093\u3002</p> <p>(Android \u4ee5\u5916\u306e\u3082\u306e\u3092 JavaScript \u4ee5\u5916\u306e\u3082\u306e\u3092\u4f7f\u3063\u3066\u81ea\u52d5\u5316\u3057\u305f\u3044\u3068\u601d\u3046\u3053\u3068\u3082\u3042\u308b\u3067\u3057\u3087\u3046\u3002 \u305d\u306e\u5834\u5408\u306f\u3001\u591a\u304f\u306e\u8a00\u8a9e\u3084\u30d7\u30e9\u30c3\u30c8\u30d5\u30a9\u30fc\u30e0\u306b\u5bfe\u5fdc\u3057\u305f \u30b3\u30fc\u30c9\u30b5\u30f3\u30d7\u30eb\u3092\u7528\u610f\u3057\u3066\u3044\u307e\u3059\u3002)</p>"},{"location":"intro/getting-started/#_6","title":"\u524d\u63d0\u6761\u4ef6","text":"<ul> <li>\u3042\u306a\u305f\u304c Android 8.0 \u30a8\u30df\u30e5\u30ec\u30fc\u30bf\u3092\u8a2d\u5b9a\u3057\u3066\u5b9f\u884c\u3057\u3066\u3044\u308b\u3068\u4eee\u5b9a\u3057\u307e\u3059   (\u4f8b\u306f\u3001\u30d0\u30fc\u30b8\u30e7\u30f3\u756a\u53f7\u3092\u8abf\u6574\u3059\u308b\u3053\u3068\u3067   \u3088\u308a\u4f4e\u30d0\u30fc\u30b8\u30e7\u30f3\u3067\u52d5\u4f5c\u3057\u307e\u3059\u3002)</li> <li>\u3042\u306a\u305f\u304c\u3053\u306e\u30c6\u30b9\u30c8 APK \u3092\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3057\u3066\u3001   \u30ed\u30fc\u30ab\u30eb\u30d5\u30a1\u30a4\u30eb\u30b7\u30b9\u30c6\u30e0\u4e0a\u3067   \u5229\u7528\u53ef\u80fd\u3067\u3042\u308b\u3068\u4eee\u5b9a\u3057\u307e\u3059</li> </ul>"},{"location":"intro/getting-started/#appium_3","title":"Appium \u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u306e\u8a2d\u5b9a","text":"<p>\u3053\u306e\u4f8b\u3067\u306f\u3001Appium \u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u3068\u3057\u3066 Webdriver.io \u3092\u4f7f\u7528\u3057\u307e\u3059\u3002 \u3053\u306e\u4f8b\u306e\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u3092\u4f5c\u6210\u3057\u3001\u5b9f\u884c\u3057\u307e\u3059\u3002</p> <p><pre><code>npm init -y\n</code></pre> \u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u3092\u521d\u671f\u5316\u3057\u305f\u3089\u3001<code>webdriverio</code> \u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u307e\u3059: <pre><code>npm install webdriverio\n</code></pre></p>"},{"location":"intro/getting-started/#_7","title":"\u30bb\u30c3\u30b7\u30e7\u30f3\u306e\u521d\u671f\u5316","text":"<p>\u3053\u3053\u3067 <code>index.js</code> \u3068\u3044\u3046\u540d\u524d\u306e\u30c6\u30b9\u30c8\u30d5\u30a1\u30a4\u30eb\u3092\u4f5c\u6210\u3057\u3001 \u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u521d\u671f\u5316\u3057\u307e\u3059:</p> <pre><code>// javascript\nconst wdio = require(\"webdriverio\");\n</code></pre> <p>\u6b21\u306b\u3084\u308b\u3079\u304d\u3053\u3068\u306f\u3001Appium \u30bb\u30c3\u30b7\u30e7\u30f3\u3092\u958b\u59cb\u3059\u308b\u3053\u3068\u3067\u3059\u3002 \u3053\u308c\u3092\u884c\u3046\u306b\u306f\u3001\u30b5\u30fc\u30d0\u30fc\u30aa\u30d7\u30b7\u30e7\u30f3\u3068 Desired Capabilities \u306e\u30bb\u30c3\u30c8\u3092\u5b9a\u7fa9\u3057\u3001 \u305d\u308c\u3089\u3092\u4f7f\u3063\u3066 <code>wdio.remote()</code> \u3092\u547c\u3073\u51fa\u3057\u307e\u3059\u3002 Desired Capabilities \u306f\u3001\u30bb\u30c3\u30b7\u30e7\u30f3\u306e\u521d\u671f\u5316\u4e2d\u306b Appium \u30b5\u30fc\u30d0\u30fc\u306b\u9001\u4fe1\u3055\u308c\u308b\u30ad\u30fc\u3068\u5024\u306e\u96c6\u5408\u3067\u3001 \u3069\u306e\u3088\u3046\u306a\u3053\u3068\u3092\u81ea\u52d5\u5316\u3057\u305f\u3044\u304b\u3092 Appium \u306b\u4f1d\u3048\u307e\u3059\u3002 \u3069\u306e\u3088\u3046\u306a Appium \u30c9\u30e9\u30a4\u30d0\u3067\u3082\u3001\u4ee5\u4e0b\u306e\u9805\u76ee\u304c\u5fc5\u8981\u306a capabilities \u306e\u6700\u5c0f\u30bb\u30c3\u30c8\u306b\u306a\u308a\u307e\u3059\u3002</p> <ul> <li><code>platformName</code>: \u81ea\u52d5\u5316\u3059\u308b\u30d7\u30e9\u30c3\u30c8\u30d5\u30a9\u30fc\u30e0\u306e\u540d\u524d</li> <li><code>platformVersion</code>: \u81ea\u52d5\u5316\u3059\u308b\u30d7\u30e9\u30c3\u30c8\u30d5\u30a9\u30fc\u30e0\u306e\u30d0\u30fc\u30b8\u30e7\u30f3</li> <li><code>deviceName</code>: \u81ea\u52d5\u5316\u3059\u308b\u30c7\u30d0\u30a4\u30b9\u306e\u7a2e\u985e</li> <li><code>app</code>: \u81ea\u52d5\u5316\u3057\u305f\u3044\u30a2\u30d7\u30ea\u3078\u306e\u30d1\u30b9 (\u305f\u3060\u3057\u3001Web \u30d6\u30e9\u30a6\u30b6\u3092\u81ea\u52d5\u5316\u3059\u308b\u5834\u5408\u306f\u4ee3\u308f\u308a\u306b   <code>browserName</code> capability \u3092\u4f7f\u7528\u3057\u307e\u3059)</li> <li><code>automationName</code>: \u4f7f\u7528\u3059\u308b\u30c9\u30e9\u30a4\u30d0\u30fc\u306e\u540d\u524d</li> </ul> <p>Desired Capabilities \u306e\u8a73\u7d30\u3068\u3001 Appium \u3067\u4f7f\u7528\u3067\u304d\u308b\u3059\u3079\u3066\u306e\u6a5f\u80fd\u306e\u30ea\u30b9\u30c8\u306b\u3064\u3044\u3066\u306f\u3001 Capabilities doc\u3092\u53c2\u7167\u3057\u3066\u304f\u3060\u3055\u3044\u3002</p> <p>\u3053\u3053\u3067\u306f\u3001\u4ee5\u4e0b\u306e\u30c6\u30b9\u30c8\u30d5\u30a1\u30a4\u30eb\u3067\u30bb\u30c3\u30b7\u30e7\u30f3\u3092\u69cb\u7bc9\u3059\u308b\u65b9\u6cd5\u3092\u8aac\u660e\u3057\u307e\u3059:</p> <pre><code>// javascript\nconst opts = {\npath: '/wd/hub',\nport: 4723,\ncapabilities: {\nplatformName: \"Android\",\nplatformVersion: \"8\",\ndeviceName: \"Android Emulator\",\napp: \"/path/to/the/downloaded/ApiDemos-debug.apk\",\nappPackage: \"io.appium.android.apis\",\nappActivity: \".view.TextFields\",\nautomationName: \"UiAutomator2\"\n}\n};\nasync function main () {\nconst client = await wdio.remote(opts);\nawait client.deleteSession();\n}\nmain();\n</code></pre>"},{"location":"intro/getting-started/#_8","title":"\u30c6\u30b9\u30c8\u30b3\u30de\u30f3\u30c9\u306e\u5b9f\u884c","text":"<p>Appium \u30dd\u30fc\u30c8\u3092\u6307\u5b9a\u3057\u3001\u8981\u4ef6\u306b\u4e00\u81f4\u3059\u308b\u3088\u3046\u306b Desired Capabilities \u3092\u69cb\u7bc9\u3057\u305f\u3053\u3068\u304c\u308f\u304b\u308a\u307e\u3059 (\u305f\u3060\u3057\u3001\u30d1\u30b9\u3092\u3042\u306a\u305f\u306e\u30b7\u30b9\u30c6\u30e0\u306e\u5b9f\u969b\u306e\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u30d1\u30b9\u306b\u7f6e\u304d\u63db\u3048\u308b\u3053\u3068\u3092\u5fd8\u308c\u306a\u3044\u3067\u304f\u3060\u3055\u3044)\u3002 \u3053\u306e\u4e8b\u5b9f\u3092 <code>webdriverio</code> \u306b\u767b\u9332\u3057\u3066\u3001 Appium \u30b5\u30fc\u30d0\u30fc\u3078\u306e\u63a5\u7d9a\u3092\u8868\u3059\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u304c\u3067\u304d\u307e\u3057\u305f\u3002 \u3053\u3053\u304b\u3089\u5148\u306b\u9032\u307f\u3001\u30bb\u30c3\u30b7\u30e7\u30f3\u3092\u958b\u59cb\u3057\u3001\u3044\u304f\u3064\u304b\u306e\u30c6\u30b9\u30c8\u30b3\u30de\u30f3\u30c9\u3092\u5b9f\u884c\u3057\u3001\u30bb\u30c3\u30b7\u30e7\u30f3\u3092\u7d42\u4e86\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002 \u3053\u3053\u3067\u306f\u3001\u30c6\u30ad\u30b9\u30c8\u30d5\u30a3\u30fc\u30eb\u30c9\u306b\u5165\u529b\u3057\u3066\u3001 \u6b63\u3057\u3044\u30c6\u30ad\u30b9\u30c8\u304c\u5165\u529b\u3055\u308c\u305f\u304b\u3069\u3046\u304b\u3092\u78ba\u8a8d\u3057\u307e\u3059:</p> <pre><code>// javascript\nconst field = await client.$(\"android.widget.EditText\");\nawait field.setValue(\"Hello World!\");\nconst value = await field.getText();\nassert.strictEqual(value, \"Hello World!\");\n</code></pre> <p>\u3053\u3053\u3067\u4f55\u304c\u8d77\u3053\u3063\u3066\u3044\u308b\u306e\u304b\u3068\u3044\u3046\u3068\u3001\u30bb\u30c3\u30b7\u30e7\u30f3\u3092\u4f5c\u6210\u3057\u3066\u30a2\u30d7\u30ea\u3092\u8d77\u52d5\u3057\u305f\u5f8c\u3001 \u30a2\u30d7\u30ea\u968e\u5c64\u3067\u8981\u7d20\u3092\u898b\u3064\u3051\u3066\u5165\u529b\u3059\u308b\u3088\u3046\u306b Appium \u306b\u6307\u793a\u3057\u3066\u3044\u307e\u3059\u3002 \u6b21\u306b\u3001\u540c\u3058\u30d5\u30a3\u30fc\u30eb\u30c9\u306b\u30c6\u30ad\u30b9\u30c8\u3092\u554f\u3044\u5408\u308f\u305b\u3001 \u671f\u5f85\u901a\u308a\u306e\u30c6\u30ad\u30b9\u30c8\u3067\u3042\u308b\u3053\u3068\u3092\u4e3b\u5f35\u3057\u307e\u3059\u3002</p> <p>\u3059\u3079\u3066\u3092\u307e\u3068\u3081\u308b\u3068\u3001\u30d5\u30a1\u30a4\u30eb\u306f\u6b21\u306e\u3088\u3046\u306b\u306a\u308a\u307e\u3059:</p> <pre><code>// javascript\nconst wdio = require(\"webdriverio\");\nconst assert = require(\"assert\");\nconst opts = {\npath: '/wd/hub',\nport: 4723,\ncapabilities: {\nplatformName: \"Android\",\nplatformVersion: \"8\",\ndeviceName: \"Android Emulator\",\napp: \"/path/to/the/downloaded/ApiDemos-debug.apk\",\nappPackage: \"io.appium.android.apis\",\nappActivity: \".view.TextFields\",\nautomationName: \"UiAutomator2\"\n}\n};\nasync function main () {\nconst client = await wdio.remote(opts);\nconst field = await client.$(\"android.widget.EditText\");\nawait field.setValue(\"Hello World!\");\nconst value = await field.getText();\nassert.strictEqual(value,\"Hello World!\");\nawait client.deleteSession();\n}\nmain();\n</code></pre> <p>\u3053\u306e\u30c6\u30b9\u30c8\u3092\u81ea\u5206\u3067\u5b9f\u884c\u3057\u3066\u307f\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002 \u4fdd\u5b58\u3057\u3066 <code>node</code> \u3092\u4f7f\u3063\u3066\u5b9f\u884c\u3059\u308b\u3060\u3051\u3067\u3059: <pre><code>node index.js\n</code></pre> \u3059\u3079\u3066\u304c\u6b63\u3057\u304f\u8a2d\u5b9a\u3055\u308c\u3066\u3044\u308b\u5834\u5408\u3001 Appium \u304c\u305f\u304f\u3055\u3093\u306e\u30ed\u30b0\u3092\u5410\u304d\u51fa\u3057\u59cb\u3081\u3001 \u6700\u7d42\u7684\u306b\u306f\u30a2\u30d7\u30ea\u304c\u753b\u9762\u4e0a\u306b\u30dd\u30c3\u30d7\u30a2\u30c3\u30d7\u3057\u3001\u898b\u3048\u306a\u3044\u30e6\u30fc\u30b6\u30fc\u304c\u30bf\u30c3\u30d7\u3057\u3066\u3044\u308b\u304b\u306e\u3088\u3046\u306b\u52d5\u4f5c\u3092\u958b\u59cb\u3059\u308b\u306e\u304c\u308f\u304b\u308a\u307e\u3059\u3002</p>"},{"location":"intro/getting-started/#_9","title":"\u6b21\u306f\u4f55\u3092\u3059\u308b\u304b","text":"<p>Appium \u3067\u3067\u304d\u308b\u3053\u3068\u306b\u3064\u3044\u3066\u306f\u3001\u307e\u3060\u8868\u9762\u4e0a\u306e\u3053\u3068\u306b\u904e\u304e\u307e\u305b\u3093\u3002 \u3053\u308c\u3089\u306e\u30ea\u30bd\u30fc\u30b9\u3092\u30c1\u30a7\u30c3\u30af\u3057\u3066\u3001\u3042\u306a\u305f\u306e\u65c5\u306b\u5f79\u7acb\u305f\u305b\u3066\u304f\u3060\u3055\u3044:</p> <ul> <li>Appium \u30b3\u30de\u30f3\u30c9\u30ea\u30d5\u30a1\u30ec\u30f3\u30b9 - \u3069\u306e\u3088\u3046\u306a\u30b3\u30de\u30f3\u30c9\u304c\u5229\u7528\u53ef\u80fd\u304b\u3001\u7279\u5b9a\u306e\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u30e9\u30a4\u30d6\u30e9\u30ea\u3067\u306e\u4f7f\u7528\u65b9\u6cd5\u306a\u3069\u306b\u3064\u3044\u3066\u5b66\u3073\u307e\u3059</li> <li> <p>\u30b5\u30f3\u30d7\u30eb\u30b3\u30fc\u30c9 \u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u306b\u306f\u3001\u4ed6\u306b\u3082\u305f\u304f\u3055\u3093\u306e\u30b3\u30fc\u30c9\u30b5\u30f3\u30d7\u30eb\u304c\u3042\u308a\u307e\u3059</p> </li> <li> <p>discuss.appium.io - \u3053\u308c\u306f Appium \u30b3\u30df\u30e5\u30cb\u30c6\u30a3\u306e\u30d5\u30a9\u30fc\u30e9\u30e0\u3067\u3059\u3002\u30d0\u30b0\u306b\u906d\u9047\u3057\u305f\u304b\u3082\u3057\u308c\u306a\u3044\u3068\u601d\u3063\u305f\u5834\u5408\u3001\u307e\u305f\u306f\u59cb\u3081\u308b\u305f\u3081\u306e\u52a9\u3051\u3092\u5f97\u308b\u305f\u3081\u306b\u6700\u521d\u306b\u884c\u304f\u306e\u306b\u6700\u9069\u306a\u5834\u6240\u3067\u3059</p> </li> <li>Appium \u4e0d\u5177\u5408\u30c8\u30e9\u30c3\u30ab\u30fc - \u30d0\u30b0\u3092\u898b\u3064\u3051\u305f\u3068\u601d\u3063\u305f\u3089\u3001Appium \u30e1\u30f3\u30c6\u30ca\u306b\u77e5\u3089\u305b\u3066\u304f\u3060\u3055\u3044</li> </ul>"},{"location":"intro/platform-support/","title":"Platform support","text":""},{"location":"intro/platform-support/#appium","title":"Appium \u30d7\u30e9\u30c3\u30c8\u30d5\u30a9\u30fc\u30e0\u306e\u30b5\u30dd\u30fc\u30c8","text":"<p>Appium \u306f\u3001\u3055\u307e\u3056\u307e\u306a\u30d7\u30e9\u30c3\u30c8\u30d5\u30a9\u30fc\u30e0\u3068\u30c6\u30b9\u30c8\u306e\u69d8\u5f0f (\u30cd\u30a4\u30c6\u30a3\u30d6\u3001\u30cf\u30a4\u30d6\u30ea\u30c3\u30c9\u3001Web\u3001\u30ea\u30a2\u30eb\u30c7\u30d0\u30a4\u30b9\u3001\u30b7\u30df\u30e5\u30ec\u30fc\u30bf\u306a\u3069) \u3092\u30b5\u30dd\u30fc\u30c8\u3057\u3066\u3044\u307e\u3059\u3002 \u3053\u306e\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u306f\u3001\u3053\u308c\u3089\u306e\u305d\u308c\u305e\u308c\u306e\u30b5\u30dd\u30fc\u30c8\u30ec\u30d9\u30eb\u3068\u8981\u4ef6\u3092\u660e\u793a\u3059\u308b\u3088\u3046\u306b\u8a2d\u8a08\u3055\u308c\u3066\u3044\u307e\u3059\u3002 \u3082\u3057\u304f\u306f\u3001\u305d\u308c\u305e\u308c\u306e\u9069\u5207\u306a\u30da\u30fc\u30b8\u3078\u6848\u5185\u3057\u307e\u3059\u3002</p>"},{"location":"intro/platform-support/#appium-team-support","title":"Appium team support","text":"<p>\u4ee5\u4e0b\u306fAppium\u306e\u958b\u767a\u30c1\u30fc\u30e0\u306b\u3088\u308a\u30b5\u30dd\u30fc\u30c8\u3055\u308c\u308b\u30c9\u30e9\u30a4\u30d0\u30fc\u3067\u3059\u3002</p>"},{"location":"intro/platform-support/#ios","title":"iOS \u306e\u30b5\u30dd\u30fc\u30c8","text":"<p>iOS \u306e\u81ea\u52d5\u5316\u306f2\u3064\u306e\u30c9\u30e9\u30a4\u30d0\u30fc\u3067\u30b5\u30dd\u30fc\u30c8\u3055\u308c\u3066\u3044\u307e\u3059:</p> <ul> <li>XCUITest Driver</li> <li>(\u975e\u63a8\u5968) UIAutomation Driver</li> <li>safaridriver \u306f Apple \u306e safaridriver</li> </ul> <p>\u8a2d\u5b9a\u65b9\u6cd5\u306b\u3064\u3044\u3066\u306f\u3001\u3053\u308c\u3089\u306e\u30c9\u30e9\u30a4\u30d0\u30fc\u306e\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u3092\u53c2\u7167\u3057\u3066\u304f\u3060\u3055\u3044\u3002</p> <ul> <li>\u30d0\u30fc\u30b8\u30e7\u30f3: 12.2 \u4ee5\u4e0a (\u539f\u5247\u3068\u3057\u3066\u3001Appium \u306f iOS \u306e\u6700\u65b0\u30d0\u30fc\u30b8\u30e7\u30f32\u3064\u3092\u30b5\u30dd\u30fc\u30c8\u3057\u3066\u3044\u307e\u3059)</li> <li>\u30c7\u30d0\u30a4\u30b9: iPhone\u3001iPad\u3001tvOS \u7528\u306e\u30b7\u30df\u30e5\u30ec\u30fc\u30bf\u3068\u5b9f\u6a5f</li> <li>\u30cd\u30a4\u30c6\u30a3\u30d6\u30a2\u30d7\u30ea\u306e\u30b5\u30dd\u30fc\u30c8: \u306f\u3044\u3001\u30c7\u30d0\u30c3\u30b0\u30d0\u30fc\u30b8\u30e7\u30f3\u306e .app (\u30b7\u30df\u30e5\u30ec\u30fc\u30bf)   \u307e\u305f\u306f\u6b63\u3057\u304f\u7f72\u540d\u3055\u308c\u305f .ipa (\u5b9f\u6a5f) \u3092\u4f7f\u7528\u3057\u3066\u3044\u307e\u3059\u3002   \u57fa\u672c\u7684\u306a\u30b5\u30dd\u30fc\u30c8\u306f\u3001Apple \u306e XCUITest (\u53e4\u3044\u30d0\u30fc\u30b8\u30e7\u30f3\u3067\u306f UIAutomation) \u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u306b\u3088\u3063\u3066   \u63d0\u4f9b\u3055\u308c\u3066\u3044\u307e\u3059</li> <li>\u30e2\u30d0\u30a4\u30eb Web \u306e\u30b5\u30dd\u30fc\u30c8: \u306f\u3044\u3001\u30e2\u30d0\u30a4\u30eb Safari \u306e\u81ea\u52d5\u5316\u6a5f\u69cb\u3092\u7d4c\u7531\u3067\u304d\u307e\u3059\u3002   \u624b\u9806\u306b\u3064\u3044\u3066\u306f\u3001\u30e2\u30d0\u30a4\u30eb Web \u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u3092\u53c2\u7167\u3057\u3066\u304f\u3060\u3055\u3044</li> <li>\u30cf\u30a4\u30d6\u30ea\u30c3\u30c9\u30b5\u30dd\u30fc\u30c8: \u306f\u3044\u3002   \u624b\u9806\u306b\u3064\u3044\u3066\u306f\u3001\u30cf\u30a4\u30d6\u30ea\u30c3\u30c9\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u3092\u53c2\u7167\u3057\u3066\u304f\u3060\u3055\u3044</li> <li>1\u3064\u306e\u30bb\u30c3\u30b7\u30e7\u30f3\u3067\u8907\u6570\u306e\u30a2\u30d7\u30ea\u306e\u81ea\u52d5\u5316\u3092\u30b5\u30dd\u30fc\u30c8: \u3044\u3044\u3048</li> <li>\u8907\u6570\u306e\u30c7\u30d0\u30a4\u30b9\u306e\u540c\u6642\u81ea\u52d5\u5316\u306e\u30b5\u30dd\u30fc\u30c8: \u306f\u3044</li> <li>\u30d9\u30f3\u30c0\u30fc\u63d0\u4f9b\u307e\u305f\u306f\u30b5\u30fc\u30c9\u30d1\u30fc\u30c6\u30a3\u88fd\u30a2\u30d7\u30ea\u306e\u81ea\u52d5\u5316\u3092\u30b5\u30dd\u30fc\u30c8: \u306f\u3044\u3002\u4e88\u3081\u7aef\u672b\u306b\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3055\u308c\u3066\u3044\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002</li> <li>\u30ab\u30b9\u30bf\u30e0\u306e\u975e\u6a19\u6e96 UI \u30b3\u30f3\u30c8\u30ed\u30fc\u30eb\u306e\u81ea\u52d5\u5316\u306e\u30b5\u30dd\u30fc\u30c8: \u6700\u5c0f\u9650\u306e\u8a2d\u5b9a\u3067\u3059\u3002   \u57fa\u672c\u7684\u306a\u81ea\u52d5\u5316\u3092\u53ef\u80fd\u306b\u3059\u308b\u30b3\u30f3\u30c8\u30ed\u30fc\u30eb\u306b   \u30a2\u30af\u30bb\u30b7\u30d3\u30ea\u30c6\u30a3\u60c5\u5831\u3092\u8a2d\u5b9a\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059</li> </ul>"},{"location":"intro/platform-support/#android","title":"Android \u306e\u30b5\u30dd\u30fc\u30c8","text":"<p>Android \u306e\u81ea\u52d5\u5316\u306f2\u3064\u306e\u30c9\u30e9\u30a4\u30d0\u30fc\u3067\u30b5\u30dd\u30fc\u30c8\u3055\u308c\u3066\u3044\u307e\u3059:</p> <ul> <li>UiAutomator2 Driver</li> <li>Espresso Driver</li> <li>(\u975e\u63a8\u5968) UiAutomator Driver</li> <li>Firefox \u3084 GeckoView \u5411\u3051\u306e geckodriver</li> </ul> <p>\u8a2d\u5b9a\u65b9\u6cd5\u306b\u3064\u3044\u3066\u306f\u3001\u3053\u308c\u3089\u306e\u30c9\u30e9\u30a4\u30d0\u30fc\u306e\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u3092\u53c2\u7167\u3057\u3066\u304f\u3060\u3055\u3044\u3002</p> <ul> <li>\u30d0\u30fc\u30b8\u30e7\u30f3: 4.3 \u4ee5\u4e0a</li> <li>\u30d0\u30fc\u30b8\u30e7\u30f3 4.3 \u4ee5\u964d\u306f\u3001Appium \u306e UiAutomator \u3068 UiAutomator2 \u30e9\u30a4\u30d6\u30e9\u30ea\u3092\u4ecb\u3057\u3066\u30b5\u30dd\u30fc\u30c8\u3055\u308c\u3066\u3044\u307e\u3059\u3002     UiAutomator \u306f\u30c7\u30d5\u30a9\u30eb\u30c8\u306e\u30c9\u30e9\u30a4\u30d0\u30fc\u3067\u3059</li> <li>\u30c7\u30d0\u30a4\u30b9: Android \u30a8\u30df\u30e5\u30ec\u30fc\u30bf\u3068\u5b9f\u6a5f\u306e Android \u7aef\u672b</li> <li>\u30cd\u30a4\u30c6\u30a3\u30d6\u30a2\u30d7\u30ea\u306e\u30b5\u30dd\u30fc\u30c8: \u306f\u3044</li> <li>\u30e2\u30d0\u30a4\u30eb Web \u306e\u30b5\u30dd\u30fc\u30c8: \u306f\u3044\u3002\u81ea\u52d5\u5316\u306f\u3001\u30d0\u30f3\u30c9\u30eb\u3055\u308c\u3066\u3044\u308b Chromedriver \u30b5\u30fc\u30d0\u30fc\u3092   \u30d7\u30ed\u30ad\u30b7\u3068\u3057\u3066\u4f7f\u7528\u3057\u3066\u884c\u308f\u308c\u307e\u3059\u3002   4.3 \u3067\u306f\u3001\u516c\u5f0f\u306e Chrome \u30d6\u30e9\u30a6\u30b6\u307e\u305f\u306f Chromium \u4e0a\u3067\u306e\u307f\u81ea\u52d5\u5316\u304c\u52d5\u4f5c\u3057\u307e\u3059\u3002   4.4 \u4ee5\u4e0a\u3067\u306f\u3001\u81ea\u52d5\u5316\u306f\u6a19\u6e96\u306e\u300c\u30d6\u30e9\u30a6\u30b6\u300d\u30a2\u30d7\u30ea\u3067\u3082\u52d5\u4f5c\u3057\u307e\u3059\u3002   Chrome / Chromium / Browser \u304c\u30c6\u30b9\u30c8\u5bfe\u8c61\u306e\u30c7\u30d0\u30a4\u30b9\u306b\u65e2\u306b\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3055\u308c\u3066\u3044\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002   \u624b\u9806\u306b\u3064\u3044\u3066\u306f\u3001\u30e2\u30d0\u30a4\u30eb Web \u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u3092\u53c2\u7167\u3057\u3066\u304f\u3060\u3055\u3044</li> <li>\u30cf\u30a4\u30d6\u30ea\u30c3\u30c9\u30b5\u30dd\u30fc\u30c8: \u306f\u3044\u3002\u30cf\u30a4\u30d6\u30ea\u30c3\u30c9\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u3092\u53c2\u7167\u3057\u3066\u304f\u3060\u3055\u3044</li> <li>\u30c7\u30d5\u30a9\u30eb\u30c8\u306e Appium \u30aa\u30fc\u30c8\u30e1\u30fc\u30b7\u30e7\u30f3\u30d0\u30c3\u30af\u30a8\u30f3\u30c9\u3092\u4f7f\u7528\u3057\u305f\u5834\u5408: \u30d0\u30fc\u30b8\u30e7\u30f3 4.4 \u4ee5\u964d</li> <li>1\u3064\u306e\u30bb\u30c3\u30b7\u30e7\u30f3\u3067\u8907\u6570\u306e\u30a2\u30d7\u30ea\u306e\u81ea\u52d5\u5316\u3092\u30b5\u30dd\u30fc\u30c8: \u306f\u3044</li> <li>\u8907\u6570\u306e\u30c7\u30d0\u30a4\u30b9\u306e\u540c\u6642\u81ea\u52d5\u5316\u306e\u30b5\u30dd\u30fc\u30c8: \u306f\u3044\u3002   \u305f\u3060\u3057\u3001Appium \u306f\u30b5\u30fc\u30d0\u30fc\u30d1\u30e9\u30e1\u30fc\u30bf <code>--port</code>\u3001<code>--bootstrap-port</code> \u3084 <code>--chromedriver-port</code> \u306b\u5bfe\u3057\u3066   \u7570\u306a\u308b\u30dd\u30fc\u30c8\u3092\u4f7f\u7528\u3057\u3066\u8d77\u52d5\u3057\u306a\u3051\u308c\u3070\u306a\u308a\u307e\u305b\u3093\u3002   \u3053\u308c\u3089\u306e\u30d1\u30e9\u30e1\u30fc\u30bf\u306e\u8a73\u7d30\u306b\u3064\u3044\u3066\u306f   \u30b5\u30fc\u30d0\u30fc\u5f15\u6570\u306e\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8 \u3092\u53c2\u7167\u3057\u3066\u304f\u3060\u3055\u3044</li> <li>\u30d9\u30f3\u30c0\u30fc\u63d0\u4f9b\u307e\u305f\u306f\u30b5\u30fc\u30c9\u30d1\u30fc\u30c6\u30a3\u88fd\u30a2\u30d7\u30ea\u306e\u81ea\u52d5\u5316\u3092\u30b5\u30dd\u30fc\u30c8: \u306f\u3044</li> <li>\u30ab\u30b9\u30bf\u30e0\u306e\u975e\u6a19\u6e96 UI \u30b3\u30f3\u30c8\u30ed\u30fc\u30eb\u306e\u81ea\u52d5\u5316\u306e\u30b5\u30dd\u30fc\u30c8: \u3044\u3044\u3048</li> </ul>"},{"location":"intro/platform-support/#macos","title":"macOS \u30b5\u30dd\u30fc\u30c8","text":"<p>macOS \u306e\u81ea\u52d5\u5316\u306f\u4ee5\u4e0b\u306e\u30c9\u30e9\u30a4\u30d0\u30fc\u306b\u3088\u3063\u3066\u30b5\u30dd\u30fc\u30c8\u3055\u308c\u307e\u3059\u3002</p> <ul> <li>macOS 10.15 \u4ee5\u4e0a Mac2Driver</li> <li>macOS 10.15 \u672a\u6e80 (\u975e\u63a8\u5968) MacDriver</li> </ul>"},{"location":"intro/platform-support/#windows","title":"Windows \u30c7\u30b9\u30af\u30c8\u30c3\u30d7\u306e\u30b5\u30dd\u30fc\u30c8","text":"<p>Windows \u306e\u81ea\u52d5\u5316\u306f\u4ee5\u4e0b\u306e\u30c9\u30e9\u30a4\u30d0\u30fc\u306b\u3088\u3063\u3066\u30b5\u30dd\u30fc\u30c8\u3055\u308c\u307e\u3059\u3002</p> <ul> <li>WinAppDriver</li> <li>Firefox \u3068 GeckoView \u306f geckodriver</li> </ul>"},{"location":"intro/platform-support/#_1","title":"\u30d9\u30f3\u30c0\u30fc/\u30b3\u30df\u30e5\u30cb\u30c6\u30a3\u30fc","text":"<p>\u4ee5\u4e0b\u306f\u30d9\u30f3\u30c0\u30fc\u3084\u30b3\u30df\u30e5\u30cb\u30c6\u30a3\u30fc\u306b\u3088\u3063\u3066\u30b5\u30dd\u30fc\u30c8\u3055\u308c\u308b\u30c9\u30e9\u30a4\u30d0\u30fc\u3067\u3059\u3002</p>"},{"location":"intro/platform-support/#youi-engine-support","title":"You.i Engine Support","text":"<ul> <li>You.i Engine</li> </ul>"},{"location":"intro/platform-support/#flutter-support","title":"Flutter Support","text":"<ul> <li>Flutter Driver</li> </ul>"},{"location":"reference/modules/","title":"Appium","text":""},{"location":"reference/modules/#table-of-contents","title":"Table of contents","text":""},{"location":"reference/modules/#drivers","title":"Drivers","text":"<ul> <li>@appium/base-driver</li> <li>@appium/execute-driver-plugin</li> <li>@appium/fake-driver</li> </ul>"},{"location":"reference/modules/#plugins","title":"Plugins","text":"<ul> <li>@appium/images-plugin</li> <li>@appium/relaxed-caps-plugin</li> <li>@appium/universal-xml-plugin</li> </ul>"},{"location":"reference/modules/#modules","title":"Modules","text":"<ul> <li>@appium/base-driver</li> <li>@appium/base-plugin</li> <li>@appium/execute-driver-plugin</li> <li>@appium/fake-driver</li> <li>@appium/images-plugin</li> <li>@appium/relaxed-caps-plugin</li> <li>@appium/support</li> <li>@appium/typedoc-plugin-appium</li> <li>@appium/types</li> <li>@appium/universal-xml-plugin</li> <li>appium</li> </ul>"},{"location":"reference/classes/appium_base_driver-1.BaseDriver/","title":"Class: BaseDriver&lt;C&gt;","text":"<p>@appium/base-driver.BaseDriver</p> <p>This ensures that all of the mixins correctly implement the interface described in Driver.</p> <p><code>Implements</code></p>"},{"location":"reference/classes/appium_base_driver-1.BaseDriver/#type-parameters","title":"Type parameters","text":"Name Type <code>C</code> {}"},{"location":"reference/classes/appium_base_driver-1.BaseDriver/#hierarchy","title":"Hierarchy","text":"<ul> <li><code>BaseDriverCore</code>&lt;<code>any</code>, <code>StringRecord</code>, <code>this</code>&gt; &amp; <code>ITimeoutCommands</code> &amp; <code>IEventCommands</code> &amp; <code>IFindCommands</code>&lt;<code>any</code>, <code>this</code>&gt; &amp; <code>ILogCommands</code>&lt;<code>any</code>, <code>this</code>&gt; &amp; <code>ISettingsCommands</code> &amp; <code>ISessionCommands</code> &amp; <code>IExecuteCommands</code></li> </ul> <p>\u21b3 <code>BaseDriver</code></p>"},{"location":"reference/classes/appium_base_driver-1.BaseDriver/#table-of-contents","title":"Table of contents","text":""},{"location":"reference/classes/appium_base_driver-1.BaseDriver/#constructors","title":"Constructors","text":"<ul> <li>constructor</li> </ul>"},{"location":"reference/classes/appium_base_driver-1.BaseDriver/#properties","title":"Properties","text":"<ul> <li>_eventHistory</li> <li>_log</li> <li>allowInsecure</li> <li>basePath</li> <li>caps</li> <li>cliArgs</li> <li>commandsQueueGuard</li> <li>denyInsecure</li> <li>desiredCapConstraints</li> <li>eventEmitter</li> <li>helpers</li> <li>implicitWaitMs</li> <li>initialOpts</li> <li>locatorStrategies</li> <li>managedDrivers</li> <li>newCommandTimeoutMs</li> <li>noCommandTimer</li> <li>opts</li> <li>originalCaps</li> <li>protocol</li> <li>relaxedSecurityEnabled</li> <li>resetOnUnexpectedShutdown</li> <li>server</li> <li>serverHost</li> <li>serverPath</li> <li>serverPort</li> <li>sessionId</li> <li>settings</li> <li>shouldValidateCaps</li> <li>shutdownUnexpectedly</li> <li>supportedLogTypes</li> <li>updateSettings</li> <li>webLocatorStrategies</li> <li>baseVersion</li> <li>executeMethodMap</li> <li>newMethodMap</li> <li>updateServer</li> </ul>"},{"location":"reference/classes/appium_base_driver-1.BaseDriver/#accessors","title":"Accessors","text":"<ul> <li>_desiredCapConstraints</li> <li>driverData</li> <li>eventHistory</li> <li>isCommandsQueueEnabled</li> <li>log</li> </ul>"},{"location":"reference/classes/appium_base_driver-1.BaseDriver/#methods","title":"Methods","text":"<ul> <li>addManagedDriver</li> <li>assertFeatureEnabled</li> <li>assignServer</li> <li>canProxy</li> <li>clearNewCommandTimeout</li> <li>createSession</li> <li>deleteSession</li> <li>driverForSession</li> <li>ensureFeatureEnabled</li> <li>executeCommand</li> <li>executeMethod</li> <li>findElOrEls</li> <li>findElOrElsWithProcessing</li> <li>findElement</li> <li>findElementFromElement</li> <li>findElementFromShadowRoot</li> <li>findElements</li> <li>findElementsFromElement</li> <li>findElementsFromShadowRoot</li> <li>getLog</li> <li>getLogEvents</li> <li>getLogTypes</li> <li>getManagedDrivers</li> <li>getPageSource</li> <li>getProxyAvoidList</li> <li>getSession</li> <li>getSessions</li> <li>getSettings</li> <li>getStatus</li> <li>getTimeouts</li> <li>implicitWait</li> <li>implicitWaitForCondition</li> <li>implicitWaitMJSONWP</li> <li>implicitWaitW3C</li> <li>isFeatureEnabled</li> <li>isMjsonwpProtocol</li> <li>isW3CProtocol</li> <li>logCustomEvent</li> <li>logEvent</li> <li>logExtraCaps</li> <li>newCommandTimeout</li> <li>onUnexpectedShutdown</li> <li>pageLoadTimeoutMJSONWP</li> <li>pageLoadTimeoutW3C</li> <li>parseTimeoutArgument</li> <li>proxyActive</li> <li>proxyRouteIsAvoided</li> <li>reset</li> <li>scriptTimeoutMJSONWP</li> <li>scriptTimeoutW3C</li> <li>sessionExists</li> <li>setImplicitWait</li> <li>setNewCommandTimeout</li> <li>setProtocolMJSONWP</li> <li>setProtocolW3C</li> <li>startNewCommandTimeout</li> <li>startUnexpectedShutdown</li> <li>timeouts</li> <li>validateDesiredCaps</li> <li>validateLocatorStrategy</li> </ul>"},{"location":"reference/classes/appium_base_driver-1.BaseDriver/#constructors_1","title":"Constructors","text":""},{"location":"reference/classes/appium_base_driver-1.BaseDriver/#constructor","title":"constructor","text":"<p>\u2022 new BaseDriver&lt;<code>C</code>&gt;(<code>...arguments_</code>)</p>"},{"location":"reference/classes/appium_base_driver-1.BaseDriver/#type-parameters_1","title":"Type parameters","text":"Name Type <code>C</code> extends <code>Readonly</code>&lt;<code>Record</code>&lt;<code>string</code>, <code>Constraint</code>&gt;&gt; = {}"},{"location":"reference/classes/appium_base_driver-1.BaseDriver/#parameters","title":"Parameters","text":"Name Type <code>...arguments_</code> <code>any</code>[]"},{"location":"reference/classes/appium_base_driver-1.BaseDriver/#inherited-from","title":"Inherited from","text":"<p>createBaseDriverClass(BaseDriverCore).constructor</p>"},{"location":"reference/classes/appium_base_driver-1.BaseDriver/#defined-in","title":"Defined in","text":"<p>node_modules/type-fest/source/basic.d.ts:13</p>"},{"location":"reference/classes/appium_base_driver-1.BaseDriver/#properties_1","title":"Properties","text":""},{"location":"reference/classes/appium_base_driver-1.BaseDriver/#_eventhistory","title":"_eventHistory","text":"<p>\u2022 _eventHistory: <code>EventHistory</code></p>"},{"location":"reference/classes/appium_base_driver-1.BaseDriver/#inherited-from_1","title":"Inherited from","text":"<p>createBaseDriverClass(BaseDriverCore)._eventHistory</p>"},{"location":"reference/classes/appium_base_driver-1.BaseDriver/#defined-in_1","title":"Defined in","text":"<p>packages/base-driver/lib/basedriver/core.js:87</p>"},{"location":"reference/classes/appium_base_driver-1.BaseDriver/#_log","title":"_log","text":"<p>\u2022 _log: <code>AppiumLogger</code></p>"},{"location":"reference/classes/appium_base_driver-1.BaseDriver/#inherited-from_2","title":"Inherited from","text":"<p>createBaseDriverClass(BaseDriverCore)._log</p>"},{"location":"reference/classes/appium_base_driver-1.BaseDriver/#defined-in_2","title":"Defined in","text":"<p>packages/base-driver/lib/basedriver/core.js:96</p>"},{"location":"reference/classes/appium_base_driver-1.BaseDriver/#allowinsecure","title":"allowInsecure","text":"<p>\u2022 allowInsecure: <code>string</code>[] = <code>[]</code></p>"},{"location":"reference/classes/appium_base_driver-1.BaseDriver/#inherited-from_3","title":"Inherited from","text":"<p>createBaseDriverClass(BaseDriverCore).allowInsecure</p>"},{"location":"reference/classes/appium_base_driver-1.BaseDriver/#defined-in_3","title":"Defined in","text":"<p>packages/base-driver/lib/basedriver/core.js:65</p>"},{"location":"reference/classes/appium_base_driver-1.BaseDriver/#basepath","title":"basePath","text":"<p>\u2022 basePath: <code>string</code> = <code>DEFAULT_BASE_PATH</code></p> <p>basePath is used for several purposes, for example in setting up proxying to other drivers, since we need to know what the base path of any incoming request might look like. We set it to the default initially but it is automatically updated during any actual program execution by the routeConfiguringFunction, which is necessarily run as the entrypoint for any Appium server</p>"},{"location":"reference/classes/appium_base_driver-1.BaseDriver/#inherited-from_4","title":"Inherited from","text":"<p>createBaseDriverClass(BaseDriverCore).basePath</p>"},{"location":"reference/classes/appium_base_driver-1.BaseDriver/#defined-in_4","title":"Defined in","text":"<p>packages/base-driver/lib/basedriver/core.js:60</p>"},{"location":"reference/classes/appium_base_driver-1.BaseDriver/#caps","title":"caps","text":"<p>\u2022 caps: <code>Partial</code>&lt;<code>ConstraintsToCaps</code>&lt;<code>any</code>&gt; &amp; <code>void</code>&gt;</p>"},{"location":"reference/classes/appium_base_driver-1.BaseDriver/#inherited-from_5","title":"Inherited from","text":"<p>createBaseDriverClass(BaseDriverCore).caps</p>"},{"location":"reference/classes/appium_base_driver-1.BaseDriver/#defined-in_5","title":"Defined in","text":"<p>packages/base-driver/lib/basedriver/driver.js:36</p>"},{"location":"reference/classes/appium_base_driver-1.BaseDriver/#cliargs","title":"cliArgs","text":"<p>\u2022 cliArgs: <code>StringRecord</code> &amp; <code>ServerArgs</code></p>"},{"location":"reference/classes/appium_base_driver-1.BaseDriver/#inherited-from_6","title":"Inherited from","text":"<p>createBaseDriverClass(BaseDriverCore).cliArgs</p>"},{"location":"reference/classes/appium_base_driver-1.BaseDriver/#defined-in_6","title":"Defined in","text":"<p>packages/base-driver/lib/basedriver/driver.js:31</p>"},{"location":"reference/classes/appium_base_driver-1.BaseDriver/#commandsqueueguard","title":"commandsQueueGuard","text":"<p>\u2022 <code>Protected</code> commandsQueueGuard: <code>AsyncLock</code></p>"},{"location":"reference/classes/appium_base_driver-1.BaseDriver/#inherited-from_7","title":"Inherited from","text":"<p>createBaseDriverClass(BaseDriverCore).commandsQueueGuard</p>"},{"location":"reference/classes/appium_base_driver-1.BaseDriver/#defined-in_7","title":"Defined in","text":"<p>packages/base-driver/lib/basedriver/core.js:111</p>"},{"location":"reference/classes/appium_base_driver-1.BaseDriver/#denyinsecure","title":"denyInsecure","text":"<p>\u2022 denyInsecure: <code>string</code>[] = <code>[]</code></p>"},{"location":"reference/classes/appium_base_driver-1.BaseDriver/#inherited-from_8","title":"Inherited from","text":"<p>createBaseDriverClass(BaseDriverCore).denyInsecure</p>"},{"location":"reference/classes/appium_base_driver-1.BaseDriver/#defined-in_8","title":"Defined in","text":"<p>packages/base-driver/lib/basedriver/core.js:68</p>"},{"location":"reference/classes/appium_base_driver-1.BaseDriver/#desiredcapconstraints","title":"desiredCapConstraints","text":"<p>\u2022 desiredCapConstraints: <code>any</code></p>"},{"location":"reference/classes/appium_base_driver-1.BaseDriver/#inherited-from_9","title":"Inherited from","text":"<p>createBaseDriverClass(BaseDriverCore).desiredCapConstraints</p>"},{"location":"reference/classes/appium_base_driver-1.BaseDriver/#defined-in_9","title":"Defined in","text":"<p>packages/base-driver/lib/basedriver/driver.js:46</p>"},{"location":"reference/classes/appium_base_driver-1.BaseDriver/#eventemitter","title":"eventEmitter","text":"<p>\u2022 eventEmitter: <code>EventEmitter</code></p>"},{"location":"reference/classes/appium_base_driver-1.BaseDriver/#inherited-from_10","title":"Inherited from","text":"<p>createBaseDriverClass(BaseDriverCore).eventEmitter</p>"},{"location":"reference/classes/appium_base_driver-1.BaseDriver/#defined-in_10","title":"Defined in","text":"<p>packages/base-driver/lib/basedriver/core.js:91</p>"},{"location":"reference/classes/appium_base_driver-1.BaseDriver/#helpers","title":"helpers","text":"<p>\u2022 helpers: <code>DriverHelpers</code>&lt;<code>any</code>&gt; = <code>helpers</code></p>"},{"location":"reference/classes/appium_base_driver-1.BaseDriver/#inherited-from_11","title":"Inherited from","text":"<p>createBaseDriverClass(BaseDriverCore).helpers</p>"},{"location":"reference/classes/appium_base_driver-1.BaseDriver/#defined-in_11","title":"Defined in","text":"<p>packages/base-driver/lib/basedriver/core.js:50</p>"},{"location":"reference/classes/appium_base_driver-1.BaseDriver/#implicitwaitms","title":"implicitWaitMs","text":"<p>\u2022 implicitWaitMs: <code>number</code> = <code>0</code></p>"},{"location":"reference/classes/appium_base_driver-1.BaseDriver/#inherited-from_12","title":"Inherited from","text":"<p>createBaseDriverClass(BaseDriverCore).implicitWaitMs</p>"},{"location":"reference/classes/appium_base_driver-1.BaseDriver/#defined-in_12","title":"Defined in","text":"<p>packages/base-driver/lib/basedriver/core.js:72</p>"},{"location":"reference/classes/appium_base_driver-1.BaseDriver/#initialopts","title":"initialOpts","text":"<p>\u2022 initialOpts: <code>ServerArgs</code></p>"},{"location":"reference/classes/appium_base_driver-1.BaseDriver/#inherited-from_13","title":"Inherited from","text":"<p>createBaseDriverClass(BaseDriverCore).initialOpts</p>"},{"location":"reference/classes/appium_base_driver-1.BaseDriver/#defined-in_13","title":"Defined in","text":"<p>packages/base-driver/lib/basedriver/core.js:48</p>"},{"location":"reference/classes/appium_base_driver-1.BaseDriver/#locatorstrategies","title":"locatorStrategies","text":"<p>\u2022 locatorStrategies: <code>string</code>[] = <code>[]</code></p>"},{"location":"reference/classes/appium_base_driver-1.BaseDriver/#inherited-from_14","title":"Inherited from","text":"<p>createBaseDriverClass(BaseDriverCore).locatorStrategies</p>"},{"location":"reference/classes/appium_base_driver-1.BaseDriver/#defined-in_14","title":"Defined in","text":"<p>packages/base-driver/lib/basedriver/core.js:75</p>"},{"location":"reference/classes/appium_base_driver-1.BaseDriver/#manageddrivers","title":"managedDrivers","text":"<p>\u2022 managedDrivers: <code>Driver</code>&lt;typeof <code>BASE_DESIRED_CAP_CONSTRAINTS</code>, <code>StringRecord</code>, <code>any</code>&gt;[] = <code>[]</code></p>"},{"location":"reference/classes/appium_base_driver-1.BaseDriver/#inherited-from_15","title":"Inherited from","text":"<p>createBaseDriverClass(BaseDriverCore).managedDrivers</p>"},{"location":"reference/classes/appium_base_driver-1.BaseDriver/#defined-in_15","title":"Defined in","text":"<p>packages/base-driver/lib/basedriver/core.js:81</p>"},{"location":"reference/classes/appium_base_driver-1.BaseDriver/#newcommandtimeoutms","title":"newCommandTimeoutMs","text":"<p>\u2022 newCommandTimeoutMs: <code>number</code></p>"},{"location":"reference/classes/appium_base_driver-1.BaseDriver/#inherited-from_16","title":"Inherited from","text":"<p>createBaseDriverClass(BaseDriverCore).newCommandTimeoutMs</p>"},{"location":"reference/classes/appium_base_driver-1.BaseDriver/#defined-in_16","title":"Defined in","text":"<p>packages/base-driver/lib/basedriver/driver.js:337</p>"},{"location":"reference/classes/appium_base_driver-1.BaseDriver/#nocommandtimer","title":"noCommandTimer","text":"<p>\u2022 noCommandTimer: <code>null</code> | <code>Timeout</code></p>"},{"location":"reference/classes/appium_base_driver-1.BaseDriver/#inherited-from_17","title":"Inherited from","text":"<p>createBaseDriverClass(BaseDriverCore).noCommandTimer</p>"},{"location":"reference/classes/appium_base_driver-1.BaseDriver/#defined-in_17","title":"Defined in","text":"<p>packages/base-driver/lib/basedriver/driver.js:189</p>"},{"location":"reference/classes/appium_base_driver-1.BaseDriver/#opts","title":"opts","text":"<p>\u2022 opts: <code>ServerArgs</code> &amp; <code>ExtraDriverOpts</code> &amp; <code>Partial</code>&lt;<code>ConstraintsToCaps</code>&lt;<code>any</code>&gt;&gt; &amp; <code>Partial</code>&lt;<code>ConstraintsToCaps</code>&lt;typeof <code>BASE_DESIRED_CAP_CONSTRAINTS</code>&gt;&gt;</p>"},{"location":"reference/classes/appium_base_driver-1.BaseDriver/#inherited-from_18","title":"Inherited from","text":"<p>createBaseDriverClass(BaseDriverCore).opts</p>"},{"location":"reference/classes/appium_base_driver-1.BaseDriver/#defined-in_18","title":"Defined in","text":"<p>packages/base-driver/lib/basedriver/driver.js:51</p>"},{"location":"reference/classes/appium_base_driver-1.BaseDriver/#originalcaps","title":"originalCaps","text":"<p>\u2022 originalCaps: <code>W3CCapabilities</code>&lt;<code>any</code>, <code>void</code>&gt;</p>"},{"location":"reference/classes/appium_base_driver-1.BaseDriver/#inherited-from_19","title":"Inherited from","text":"<p>createBaseDriverClass(BaseDriverCore).originalCaps</p>"},{"location":"reference/classes/appium_base_driver-1.BaseDriver/#defined-in_19","title":"Defined in","text":"<p>packages/base-driver/lib/basedriver/driver.js:41</p>"},{"location":"reference/classes/appium_base_driver-1.BaseDriver/#protocol","title":"protocol","text":"<p>\u2022 protocol: <code>undefined</code> | <code>string</code></p>"},{"location":"reference/classes/appium_base_driver-1.BaseDriver/#inherited-from_20","title":"Inherited from","text":"<p>createBaseDriverClass(BaseDriverCore).protocol</p>"},{"location":"reference/classes/appium_base_driver-1.BaseDriver/#defined-in_20","title":"Defined in","text":"<p>packages/base-driver/lib/basedriver/driver.js:100</p>"},{"location":"reference/classes/appium_base_driver-1.BaseDriver/#relaxedsecurityenabled","title":"relaxedSecurityEnabled","text":"<p>\u2022 relaxedSecurityEnabled: <code>boolean</code> = <code>false</code></p>"},{"location":"reference/classes/appium_base_driver-1.BaseDriver/#inherited-from_21","title":"Inherited from","text":"<p>createBaseDriverClass(BaseDriverCore).relaxedSecurityEnabled</p>"},{"location":"reference/classes/appium_base_driver-1.BaseDriver/#defined-in_21","title":"Defined in","text":"<p>packages/base-driver/lib/basedriver/core.js:62</p>"},{"location":"reference/classes/appium_base_driver-1.BaseDriver/#resetonunexpectedshutdown","title":"resetOnUnexpectedShutdown","text":"<p>\u2022 resetOnUnexpectedShutdown: <code>undefined</code> | () =&gt; <code>void</code></p>"},{"location":"reference/classes/appium_base_driver-1.BaseDriver/#inherited-from_22","title":"Inherited from","text":"<p>createBaseDriverClass(BaseDriverCore).resetOnUnexpectedShutdown</p>"},{"location":"reference/classes/appium_base_driver-1.BaseDriver/#defined-in_22","title":"Defined in","text":"<p>packages/base-driver/lib/basedriver/driver.js:237</p>"},{"location":"reference/classes/appium_base_driver-1.BaseDriver/#server","title":"server","text":"<p>\u2022 server: <code>undefined</code> | <code>AppiumServer</code></p>"},{"location":"reference/classes/appium_base_driver-1.BaseDriver/#inherited-from_23","title":"Inherited from","text":"<p>createBaseDriverClass(BaseDriverCore).server</p>"},{"location":"reference/classes/appium_base_driver-1.BaseDriver/#defined-in_23","title":"Defined in","text":"<p>packages/base-driver/lib/basedriver/driver.js:211</p>"},{"location":"reference/classes/appium_base_driver-1.BaseDriver/#serverhost","title":"serverHost","text":"<p>\u2022 serverHost: <code>undefined</code> | <code>string</code></p>"},{"location":"reference/classes/appium_base_driver-1.BaseDriver/#inherited-from_24","title":"Inherited from","text":"<p>createBaseDriverClass(BaseDriverCore).serverHost</p>"},{"location":"reference/classes/appium_base_driver-1.BaseDriver/#defined-in_24","title":"Defined in","text":"<p>packages/base-driver/lib/basedriver/driver.js:212</p>"},{"location":"reference/classes/appium_base_driver-1.BaseDriver/#serverpath","title":"serverPath","text":"<p>\u2022 serverPath: <code>undefined</code> | <code>string</code></p>"},{"location":"reference/classes/appium_base_driver-1.BaseDriver/#inherited-from_25","title":"Inherited from","text":"<p>createBaseDriverClass(BaseDriverCore).serverPath</p>"},{"location":"reference/classes/appium_base_driver-1.BaseDriver/#defined-in_25","title":"Defined in","text":"<p>packages/base-driver/lib/basedriver/driver.js:214</p>"},{"location":"reference/classes/appium_base_driver-1.BaseDriver/#serverport","title":"serverPort","text":"<p>\u2022 serverPort: <code>undefined</code> | <code>number</code></p>"},{"location":"reference/classes/appium_base_driver-1.BaseDriver/#inherited-from_26","title":"Inherited from","text":"<p>createBaseDriverClass(BaseDriverCore).serverPort</p>"},{"location":"reference/classes/appium_base_driver-1.BaseDriver/#defined-in_26","title":"Defined in","text":"<p>packages/base-driver/lib/basedriver/driver.js:213</p>"},{"location":"reference/classes/appium_base_driver-1.BaseDriver/#sessionid","title":"sessionId","text":"<p>\u2022 sessionId: <code>null</code> | <code>string</code></p>"},{"location":"reference/classes/appium_base_driver-1.BaseDriver/#inherited-from_27","title":"Inherited from","text":"<p>createBaseDriverClass(BaseDriverCore).sessionId</p>"},{"location":"reference/classes/appium_base_driver-1.BaseDriver/#defined-in_27","title":"Defined in","text":"<p>packages/base-driver/lib/basedriver/driver.js:307</p> <p>packages/base-driver/lib/basedriver/driver.js:363</p>"},{"location":"reference/classes/appium_base_driver-1.BaseDriver/#settings","title":"settings","text":"<p>\u2022 settings: <code>DeviceSettings</code>&lt;<code>any</code>&gt;</p> <p>settings should be instantiated by drivers which extend BaseDriver, but we set it to an empty DeviceSettings instance here to make sure that the default settings are applied even if an extending driver doesn't utilize the settings functionality itself</p>"},{"location":"reference/classes/appium_base_driver-1.BaseDriver/#inherited-from_28","title":"Inherited from","text":"<p>createBaseDriverClass(BaseDriverCore).settings</p>"},{"location":"reference/classes/appium_base_driver-1.BaseDriver/#defined-in_28","title":"Defined in","text":"<p>packages/base-driver/lib/basedriver/core.js:119</p>"},{"location":"reference/classes/appium_base_driver-1.BaseDriver/#shouldvalidatecaps","title":"shouldValidateCaps","text":"<p>\u2022 shouldValidateCaps: <code>boolean</code></p>"},{"location":"reference/classes/appium_base_driver-1.BaseDriver/#inherited-from_29","title":"Inherited from","text":"<p>createBaseDriverClass(BaseDriverCore).shouldValidateCaps</p>"},{"location":"reference/classes/appium_base_driver-1.BaseDriver/#defined-in_29","title":"Defined in","text":"<p>packages/base-driver/lib/basedriver/core.js:106</p>"},{"location":"reference/classes/appium_base_driver-1.BaseDriver/#shutdownunexpectedly","title":"shutdownUnexpectedly","text":"<p>\u2022 shutdownUnexpectedly: <code>boolean</code></p>"},{"location":"reference/classes/appium_base_driver-1.BaseDriver/#inherited-from_30","title":"Inherited from","text":"<p>createBaseDriverClass(BaseDriverCore).shutdownUnexpectedly</p>"},{"location":"reference/classes/appium_base_driver-1.BaseDriver/#defined-in_30","title":"Defined in","text":"<p>packages/base-driver/lib/basedriver/driver.js:172</p> <p>packages/base-driver/lib/basedriver/driver.js:178</p>"},{"location":"reference/classes/appium_base_driver-1.BaseDriver/#supportedlogtypes","title":"supportedLogTypes","text":"<p>\u2022 supportedLogTypes: <code>Readonly</code>&lt;<code>LogDefRecord</code>&lt;<code>any</code>&gt;&gt;</p> <p>Definition of the available log types</p>"},{"location":"reference/classes/appium_base_driver-1.BaseDriver/#inherited-from_31","title":"Inherited from","text":"<p>createBaseDriverClass(BaseDriverCore).supportedLogTypes</p>"},{"location":"reference/classes/appium_base_driver-1.BaseDriver/#defined-in_31","title":"Defined in","text":"<p>packages/types/build/lib/driver.d.ts:261</p>"},{"location":"reference/classes/appium_base_driver-1.BaseDriver/#updatesettings","title":"updateSettings","text":"<p>\u2022 updateSettings: (<code>settings</code>: <code>StringRecord</code>) =&gt; <code>Promise</code>&lt;<code>void</code>&gt;</p>"},{"location":"reference/classes/appium_base_driver-1.BaseDriver/#type-declaration","title":"Type declaration","text":"<p>\u25b8 (<code>settings</code>): <code>Promise</code>&lt;<code>void</code>&gt;</p> <p>Update the session's settings dictionary with a new settings object</p>"},{"location":"reference/classes/appium_base_driver-1.BaseDriver/#parameters_1","title":"Parameters","text":"Name Type Description <code>settings</code> <code>StringRecord</code> A key-value map of setting names to values. Settings not named in the map will not have their value adjusted."},{"location":"reference/classes/appium_base_driver-1.BaseDriver/#returns","title":"Returns","text":"<p><code>Promise</code>&lt;<code>void</code>&gt;</p>"},{"location":"reference/classes/appium_base_driver-1.BaseDriver/#inherited-from_32","title":"Inherited from","text":"<p>createBaseDriverClass(BaseDriverCore).updateSettings</p>"},{"location":"reference/classes/appium_base_driver-1.BaseDriver/#defined-in_32","title":"Defined in","text":"<p>packages/types/build/lib/driver.d.ts:303</p>"},{"location":"reference/classes/appium_base_driver-1.BaseDriver/#weblocatorstrategies","title":"webLocatorStrategies","text":"<p>\u2022 webLocatorStrategies: <code>string</code>[] = <code>[]</code></p>"},{"location":"reference/classes/appium_base_driver-1.BaseDriver/#inherited-from_33","title":"Inherited from","text":"<p>createBaseDriverClass(BaseDriverCore).webLocatorStrategies</p>"},{"location":"reference/classes/appium_base_driver-1.BaseDriver/#defined-in_33","title":"Defined in","text":"<p>packages/base-driver/lib/basedriver/core.js:78</p>"},{"location":"reference/classes/appium_base_driver-1.BaseDriver/#baseversion","title":"baseVersion","text":"<p>\u25aa <code>Static</code> baseVersion: <code>string</code></p>"},{"location":"reference/classes/appium_base_driver-1.BaseDriver/#inherited-from_34","title":"Inherited from","text":"<p>createBaseDriverClass(BaseDriverCore).baseVersion</p>"},{"location":"reference/classes/appium_base_driver-1.BaseDriver/#defined-in_34","title":"Defined in","text":"<p>packages/types/build/lib/driver.d.ts:1831</p>"},{"location":"reference/classes/appium_base_driver-1.BaseDriver/#executemethodmap","title":"executeMethodMap","text":"<p>\u25aa <code>Static</code> <code>Optional</code> executeMethodMap: <code>Readonly</code>&lt;<code>Record</code>&lt;<code>string</code>, <code>Readonly</code>&lt;<code>ExecuteMethodDef</code>&lt;<code>any</code>&gt;&gt;&gt;&gt;</p>"},{"location":"reference/classes/appium_base_driver-1.BaseDriver/#inherited-from_35","title":"Inherited from","text":"<p>createBaseDriverClass(BaseDriverCore).executeMethodMap</p>"},{"location":"reference/classes/appium_base_driver-1.BaseDriver/#defined-in_35","title":"Defined in","text":"<p>packages/types/build/lib/driver.d.ts:1834</p>"},{"location":"reference/classes/appium_base_driver-1.BaseDriver/#newmethodmap","title":"newMethodMap","text":"<p>\u25aa <code>Static</code> <code>Optional</code> newMethodMap: <code>Readonly</code>&lt;<code>Record</code>&lt;<code>string</code>, { <code>DELETE?</code>: <code>MethodDef</code>&lt;<code>any</code>&gt; ; <code>GET?</code>: <code>MethodDef</code>&lt;<code>any</code>&gt; ; <code>POST?</code>: <code>MethodDef</code>&lt;<code>any</code>&gt;  }&gt;&gt;</p>"},{"location":"reference/classes/appium_base_driver-1.BaseDriver/#inherited-from_36","title":"Inherited from","text":"<p>createBaseDriverClass(BaseDriverCore).newMethodMap</p>"},{"location":"reference/classes/appium_base_driver-1.BaseDriver/#defined-in_36","title":"Defined in","text":"<p>packages/types/build/lib/driver.d.ts:1833</p>"},{"location":"reference/classes/appium_base_driver-1.BaseDriver/#updateserver","title":"updateServer","text":"<p>\u25aa <code>Static</code> <code>Optional</code> updateServer: <code>UpdateServerCallback</code></p>"},{"location":"reference/classes/appium_base_driver-1.BaseDriver/#inherited-from_37","title":"Inherited from","text":"<p>createBaseDriverClass(BaseDriverCore).updateServer</p>"},{"location":"reference/classes/appium_base_driver-1.BaseDriver/#defined-in_37","title":"Defined in","text":"<p>packages/types/build/lib/driver.d.ts:1832</p>"},{"location":"reference/classes/appium_base_driver-1.BaseDriver/#accessors_1","title":"Accessors","text":""},{"location":"reference/classes/appium_base_driver-1.BaseDriver/#_desiredcapconstraints","title":"_desiredCapConstraints","text":"<p>\u2022 <code>Protected</code> <code>get</code> _desiredCapConstraints(): <code>Readonly</code>&lt;typeof <code>BASE_DESIRED_CAP_CONSTRAINTS</code> &amp; <code>C</code>&gt;</p> <p>Contains the base constraints plus whatever the subclass wants to add.</p> <p>Subclasses shouldn't need to use this. If you need to use this, please create an issue:</p> <p><code>See</code></p> <p>https://github.com/appium/appium/issues/new</p>"},{"location":"reference/classes/appium_base_driver-1.BaseDriver/#returns_1","title":"Returns","text":"<p><code>Readonly</code>&lt;typeof <code>BASE_DESIRED_CAP_CONSTRAINTS</code> &amp; <code>C</code>&gt;</p>"},{"location":"reference/classes/appium_base_driver-1.BaseDriver/#inherited-from_38","title":"Inherited from","text":"<p>createBaseDriverClass(BaseDriverCore)._desiredCapConstraints</p>"},{"location":"reference/classes/appium_base_driver-1.BaseDriver/#defined-in_38","title":"Defined in","text":"<p>packages/base-driver/lib/basedriver/driver.js:81</p>"},{"location":"reference/classes/appium_base_driver-1.BaseDriver/#driverdata","title":"driverData","text":"<p>\u2022 <code>get</code> driverData(): <code>Record</code>&lt;<code>string</code>, <code>unknown</code>&gt;</p> <p>This property is used by AppiumDriver to store the data of the specific driver sessions. This data can be later used to adjust properties for driver instances running in parallel. Override it in inherited driver classes if necessary.</p>"},{"location":"reference/classes/appium_base_driver-1.BaseDriver/#returns_2","title":"Returns","text":"<p><code>Record</code>&lt;<code>string</code>, <code>unknown</code>&gt;</p> <p>Driver properties mapping</p>"},{"location":"reference/classes/appium_base_driver-1.BaseDriver/#inherited-from_39","title":"Inherited from","text":"<p>createBaseDriverClass(BaseDriverCore).driverData</p>"},{"location":"reference/classes/appium_base_driver-1.BaseDriver/#defined-in_39","title":"Defined in","text":"<p>packages/base-driver/lib/basedriver/core.js:169</p>"},{"location":"reference/classes/appium_base_driver-1.BaseDriver/#eventhistory","title":"eventHistory","text":"<p>\u2022 <code>get</code> eventHistory(): <code>EventHistory</code></p>"},{"location":"reference/classes/appium_base_driver-1.BaseDriver/#returns_3","title":"Returns","text":"<p><code>EventHistory</code></p>"},{"location":"reference/classes/appium_base_driver-1.BaseDriver/#inherited-from_40","title":"Inherited from","text":"<p>createBaseDriverClass(BaseDriverCore).eventHistory</p>"},{"location":"reference/classes/appium_base_driver-1.BaseDriver/#defined-in_40","title":"Defined in","text":"<p>packages/base-driver/lib/basedriver/core.js:192</p>"},{"location":"reference/classes/appium_base_driver-1.BaseDriver/#iscommandsqueueenabled","title":"isCommandsQueueEnabled","text":"<p>\u2022 <code>get</code> isCommandsQueueEnabled(): <code>boolean</code></p> <p>This property controls the way the <code>executeCommand</code> method handles new driver commands received from the client. Override it for inherited classes only in special cases.</p>"},{"location":"reference/classes/appium_base_driver-1.BaseDriver/#returns_4","title":"Returns","text":"<p><code>boolean</code></p> <p>If the returned value is true (default) then all the commands   received by the particular driver instance are going to be put into the queue,   so each following command will not be executed until the previous command   execution is completed. False value disables that queue, so each driver command   is executed independently and does not wait for anything.</p>"},{"location":"reference/classes/appium_base_driver-1.BaseDriver/#inherited-from_41","title":"Inherited from","text":"<p>createBaseDriverClass(BaseDriverCore).isCommandsQueueEnabled</p>"},{"location":"reference/classes/appium_base_driver-1.BaseDriver/#defined-in_41","title":"Defined in","text":"<p>packages/base-driver/lib/basedriver/core.js:184</p>"},{"location":"reference/classes/appium_base_driver-1.BaseDriver/#log","title":"log","text":"<p>\u2022 <code>get</code> log(): <code>AppiumLogger</code></p>"},{"location":"reference/classes/appium_base_driver-1.BaseDriver/#returns_5","title":"Returns","text":"<p><code>AppiumLogger</code></p>"},{"location":"reference/classes/appium_base_driver-1.BaseDriver/#inherited-from_42","title":"Inherited from","text":"<p>createBaseDriverClass(BaseDriverCore).log</p>"},{"location":"reference/classes/appium_base_driver-1.BaseDriver/#defined-in_42","title":"Defined in","text":"<p>packages/base-driver/lib/basedriver/core.js:144</p>"},{"location":"reference/classes/appium_base_driver-1.BaseDriver/#methods_1","title":"Methods","text":""},{"location":"reference/classes/appium_base_driver-1.BaseDriver/#addmanageddriver","title":"addManagedDriver","text":"<p>\u25b8 addManagedDriver(<code>driver</code>): <code>void</code></p>"},{"location":"reference/classes/appium_base_driver-1.BaseDriver/#parameters_2","title":"Parameters","text":"Name Type <code>driver</code> <code>Driver</code>&lt;typeof <code>BASE_DESIRED_CAP_CONSTRAINTS</code>, <code>StringRecord</code>, <code>any</code>&gt;"},{"location":"reference/classes/appium_base_driver-1.BaseDriver/#returns_6","title":"Returns","text":"<p><code>void</code></p>"},{"location":"reference/classes/appium_base_driver-1.BaseDriver/#inherited-from_43","title":"Inherited from","text":"<p>createBaseDriverClass(BaseDriverCore).addManagedDriver</p>"},{"location":"reference/classes/appium_base_driver-1.BaseDriver/#defined-in_43","title":"Defined in","text":"<p>packages/base-driver/lib/basedriver/core.js:402</p>"},{"location":"reference/classes/appium_base_driver-1.BaseDriver/#assertfeatureenabled","title":"assertFeatureEnabled","text":"<p>\u25b8 assertFeatureEnabled(<code>name</code>): <code>void</code></p> <p>Assert that a given feature is enabled and throw a helpful error if it's not</p>"},{"location":"reference/classes/appium_base_driver-1.BaseDriver/#parameters_3","title":"Parameters","text":"Name Type Description <code>name</code> <code>string</code> name of feature/command"},{"location":"reference/classes/appium_base_driver-1.BaseDriver/#returns_7","title":"Returns","text":"<p><code>void</code></p>"},{"location":"reference/classes/appium_base_driver-1.BaseDriver/#inherited-from_44","title":"Inherited from","text":"<p>createBaseDriverClass(BaseDriverCore).assertFeatureEnabled</p>"},{"location":"reference/classes/appium_base_driver-1.BaseDriver/#defined-in_44","title":"Defined in","text":"<p>packages/base-driver/lib/basedriver/core.js:306</p>"},{"location":"reference/classes/appium_base_driver-1.BaseDriver/#assignserver","title":"assignServer","text":"<p>\u25b8 assignServer(<code>server</code>, <code>host</code>, <code>port</code>, <code>path</code>): <code>void</code></p>"},{"location":"reference/classes/appium_base_driver-1.BaseDriver/#parameters_4","title":"Parameters","text":"Name Type <code>server</code> <code>AppiumServer</code> <code>host</code> <code>string</code> <code>port</code> <code>number</code> <code>path</code> <code>string</code>"},{"location":"reference/classes/appium_base_driver-1.BaseDriver/#returns_8","title":"Returns","text":"<p><code>void</code></p>"},{"location":"reference/classes/appium_base_driver-1.BaseDriver/#inherited-from_45","title":"Inherited from","text":"<p>createBaseDriverClass(BaseDriverCore).assignServer</p>"},{"location":"reference/classes/appium_base_driver-1.BaseDriver/#defined-in_45","title":"Defined in","text":"<p>packages/base-driver/lib/basedriver/driver.js:210</p>"},{"location":"reference/classes/appium_base_driver-1.BaseDriver/#canproxy","title":"canProxy","text":"<p>\u25b8 canProxy(<code>sessionId?</code>): <code>boolean</code></p>"},{"location":"reference/classes/appium_base_driver-1.BaseDriver/#parameters_5","title":"Parameters","text":"Name Type <code>sessionId?</code> <code>string</code>"},{"location":"reference/classes/appium_base_driver-1.BaseDriver/#returns_9","title":"Returns","text":"<p><code>boolean</code></p>"},{"location":"reference/classes/appium_base_driver-1.BaseDriver/#inherited-from_46","title":"Inherited from","text":"<p>createBaseDriverClass(BaseDriverCore).canProxy</p>"},{"location":"reference/classes/appium_base_driver-1.BaseDriver/#defined-in_46","title":"Defined in","text":"<p>packages/base-driver/lib/basedriver/core.js:361</p>"},{"location":"reference/classes/appium_base_driver-1.BaseDriver/#clearnewcommandtimeout","title":"clearNewCommandTimeout","text":"<p>\u25b8 clearNewCommandTimeout(): <code>Promise</code>&lt;<code>void</code>&gt;</p>"},{"location":"reference/classes/appium_base_driver-1.BaseDriver/#returns_10","title":"Returns","text":"<p><code>Promise</code>&lt;<code>void</code>&gt;</p>"},{"location":"reference/classes/appium_base_driver-1.BaseDriver/#inherited-from_47","title":"Inherited from","text":"<p>createBaseDriverClass(BaseDriverCore).clearNewCommandTimeout</p>"},{"location":"reference/classes/appium_base_driver-1.BaseDriver/#defined-in_47","title":"Defined in","text":"<p>packages/base-driver/lib/basedriver/core.js:410</p>"},{"location":"reference/classes/appium_base_driver-1.BaseDriver/#createsession","title":"createSession","text":"<p>\u25b8 createSession(<code>w3cCapabilities1</code>, <code>w3cCapabilities2?</code>, <code>w3cCapabilities?</code>, <code>driverData?</code>): <code>Promise</code>&lt;[<code>string</code>, <code>Partial</code>&lt;<code>ConstraintsToCaps</code>&lt;<code>any</code>&gt; &amp; <code>void</code>&gt;]&gt;</p> <p>Historically the first two arguments were reserved for JSONWP capabilities. Appium 2 has dropped the support of these, so now we only accept capability objects in W3C format and thus allow any of the three arguments to represent the latter.</p>"},{"location":"reference/classes/appium_base_driver-1.BaseDriver/#parameters_6","title":"Parameters","text":"Name Type <code>w3cCapabilities1</code> <code>W3CCapabilities</code>&lt;<code>any</code>, <code>void</code>&gt; <code>w3cCapabilities2?</code> <code>W3CCapabilities</code>&lt;<code>any</code>, <code>void</code>&gt; <code>w3cCapabilities?</code> <code>W3CCapabilities</code>&lt;<code>any</code>, <code>void</code>&gt; <code>driverData?</code> <code>DriverData</code>[]"},{"location":"reference/classes/appium_base_driver-1.BaseDriver/#returns_11","title":"Returns","text":"<p><code>Promise</code>&lt;[<code>string</code>, <code>Partial</code>&lt;<code>ConstraintsToCaps</code>&lt;<code>any</code>&gt; &amp; <code>void</code>&gt;]&gt;</p>"},{"location":"reference/classes/appium_base_driver-1.BaseDriver/#inherited-from_48","title":"Inherited from","text":"<p>createBaseDriverClass(BaseDriverCore).createSession</p>"},{"location":"reference/classes/appium_base_driver-1.BaseDriver/#defined-in_48","title":"Defined in","text":"<p>packages/base-driver/lib/basedriver/driver.js:266</p>"},{"location":"reference/classes/appium_base_driver-1.BaseDriver/#deletesession","title":"deleteSession","text":"<p>\u25b8 deleteSession(<code>sessionId?</code>, <code>driverData?</code>): <code>Promise</code>&lt;<code>void</code>&gt;</p>"},{"location":"reference/classes/appium_base_driver-1.BaseDriver/#parameters_7","title":"Parameters","text":"Name Type <code>sessionId?</code> <code>string</code> <code>driverData?</code> <code>DriverData</code>[]"},{"location":"reference/classes/appium_base_driver-1.BaseDriver/#returns_12","title":"Returns","text":"<p><code>Promise</code>&lt;<code>void</code>&gt;</p>"},{"location":"reference/classes/appium_base_driver-1.BaseDriver/#inherited-from_49","title":"Inherited from","text":"<p>createBaseDriverClass(BaseDriverCore).deleteSession</p>"},{"location":"reference/classes/appium_base_driver-1.BaseDriver/#defined-in_49","title":"Defined in","text":"<p>packages/base-driver/lib/basedriver/driver.js:353</p>"},{"location":"reference/classes/appium_base_driver-1.BaseDriver/#driverforsession","title":"driverForSession","text":"<p>\u25b8 driverForSession(<code>sessionId</code>): <code>null</code> | <code>Core</code>&lt;<code>any</code>&gt;</p> <p>method required by MJSONWP in order to determine if the command should be proxied directly to the driver</p>"},{"location":"reference/classes/appium_base_driver-1.BaseDriver/#parameters_8","title":"Parameters","text":"Name Type <code>sessionId</code> <code>string</code>"},{"location":"reference/classes/appium_base_driver-1.BaseDriver/#returns_13","title":"Returns","text":"<p><code>null</code> | <code>Core</code>&lt;<code>any</code>&gt;</p>"},{"location":"reference/classes/appium_base_driver-1.BaseDriver/#inherited-from_50","title":"Inherited from","text":"<p>createBaseDriverClass(BaseDriverCore).driverForSession</p>"},{"location":"reference/classes/appium_base_driver-1.BaseDriver/#defined-in_50","title":"Defined in","text":"<p>packages/base-driver/lib/basedriver/core.js:241</p>"},{"location":"reference/classes/appium_base_driver-1.BaseDriver/#ensurefeatureenabled","title":"ensureFeatureEnabled","text":"<p>\u25b8 ensureFeatureEnabled(<code>name</code>): <code>void</code></p> <p>Assert that a given feature is enabled and throw a helpful error if it's not</p> <p><code>Deprecated</code></p>"},{"location":"reference/classes/appium_base_driver-1.BaseDriver/#parameters_9","title":"Parameters","text":"Name Type Description <code>name</code> <code>string</code> name of feature/command"},{"location":"reference/classes/appium_base_driver-1.BaseDriver/#returns_14","title":"Returns","text":"<p><code>void</code></p>"},{"location":"reference/classes/appium_base_driver-1.BaseDriver/#inherited-from_51","title":"Inherited from","text":"<p>createBaseDriverClass(BaseDriverCore).ensureFeatureEnabled</p>"},{"location":"reference/classes/appium_base_driver-1.BaseDriver/#defined-in_51","title":"Defined in","text":"<p>packages/base-driver/lib/basedriver/core.js:296</p>"},{"location":"reference/classes/appium_base_driver-1.BaseDriver/#executecommand","title":"executeCommand","text":"<p>\u25b8 executeCommand(<code>cmd</code>, <code>...args</code>): <code>Promise</code>&lt;<code>any</code>&gt;</p>"},{"location":"reference/classes/appium_base_driver-1.BaseDriver/#parameters_10","title":"Parameters","text":"Name Type <code>cmd</code> <code>string</code> <code>...args</code> <code>any</code>[]"},{"location":"reference/classes/appium_base_driver-1.BaseDriver/#returns_15","title":"Returns","text":"<p><code>Promise</code>&lt;<code>any</code>&gt;</p>"},{"location":"reference/classes/appium_base_driver-1.BaseDriver/#inherited-from_52","title":"Inherited from","text":"<p>createBaseDriverClass(BaseDriverCore).executeCommand</p>"},{"location":"reference/classes/appium_base_driver-1.BaseDriver/#defined-in_52","title":"Defined in","text":"<p>packages/base-driver/lib/basedriver/driver.js:94</p>"},{"location":"reference/classes/appium_base_driver-1.BaseDriver/#executemethod","title":"executeMethod","text":"<p>\u25b8 executeMethod(<code>script</code>, <code>args</code>): <code>Promise</code>&lt;<code>any</code>&gt;</p> <p>Call an <code>Execute Method</code> by its name with the given arguments. This method will check that the driver has registered the method matching the name, and send it the arguments.</p>"},{"location":"reference/classes/appium_base_driver-1.BaseDriver/#parameters_11","title":"Parameters","text":"Name Type Description <code>script</code> <code>string</code> the name of the Execute Method <code>args</code> [] | [<code>StringRecord</code>] a singleton array containing an arguments object"},{"location":"reference/classes/appium_base_driver-1.BaseDriver/#returns_16","title":"Returns","text":"<p><code>Promise</code>&lt;<code>any</code>&gt;</p> <p>The result of calling the Execute Method</p>"},{"location":"reference/classes/appium_base_driver-1.BaseDriver/#inherited-from_53","title":"Inherited from","text":"<p>createBaseDriverClass(BaseDriverCore).executeMethod</p>"},{"location":"reference/classes/appium_base_driver-1.BaseDriver/#defined-in_53","title":"Defined in","text":"<p>packages/types/build/lib/driver.d.ts:149</p>"},{"location":"reference/classes/appium_base_driver-1.BaseDriver/#findelorels","title":"findElOrEls","text":"<p>\u25b8 findElOrEls&lt;<code>Mult</code>&gt;(<code>strategy</code>, <code>selector</code>, <code>mult</code>, <code>context?</code>): <code>Promise</code>&lt;<code>Mult</code> extends <code>true</code> ? <code>Element</code>[] : <code>Element</code>&gt;</p> <p>A helper method that returns one or more UI elements based on the search criteria</p>"},{"location":"reference/classes/appium_base_driver-1.BaseDriver/#type-parameters_2","title":"Type parameters","text":"Name Type <code>Mult</code> extends <code>boolean</code>"},{"location":"reference/classes/appium_base_driver-1.BaseDriver/#parameters_12","title":"Parameters","text":"Name Type Description <code>strategy</code> <code>string</code> the locator strategy <code>selector</code> <code>string</code> the selector <code>mult</code> <code>Mult</code> whether or not we want to find multiple elements <code>context?</code> <code>any</code> the element to use as the search context basis if desiredCapabilities"},{"location":"reference/classes/appium_base_driver-1.BaseDriver/#returns_17","title":"Returns","text":"<p><code>Promise</code>&lt;<code>Mult</code> extends <code>true</code> ? <code>Element</code>[] : <code>Element</code>&gt;</p> <p>A single element or list of elements</p>"},{"location":"reference/classes/appium_base_driver-1.BaseDriver/#inherited-from_54","title":"Inherited from","text":"<p>createBaseDriverClass(BaseDriverCore).findElOrEls</p>"},{"location":"reference/classes/appium_base_driver-1.BaseDriver/#defined-in_54","title":"Defined in","text":"<p>packages/types/build/lib/driver.d.ts:236</p>"},{"location":"reference/classes/appium_base_driver-1.BaseDriver/#findelorelswithprocessing","title":"findElOrElsWithProcessing","text":"<p>\u25b8 findElOrElsWithProcessing&lt;<code>Mult</code>&gt;(<code>strategy</code>, <code>selector</code>, <code>mult</code>, <code>context?</code>): <code>Promise</code>&lt;<code>Mult</code> extends <code>true</code> ? <code>Element</code>[] : <code>Element</code>&gt;</p> <p>This is a wrapper for IFindCommands.findElOrEls that validates locator strategies and implements the <code>appium:printPageSourceOnFindFailure</code> capability</p>"},{"location":"reference/classes/appium_base_driver-1.BaseDriver/#type-parameters_3","title":"Type parameters","text":"Name Type <code>Mult</code> extends <code>boolean</code>"},{"location":"reference/classes/appium_base_driver-1.BaseDriver/#parameters_13","title":"Parameters","text":"Name Type Description <code>strategy</code> <code>string</code> the locator strategy <code>selector</code> <code>string</code> the selector <code>mult</code> <code>Mult</code> whether or not we want to find multiple elements <code>context?</code> <code>any</code> the element to use as the search context basis if desiredCapabilities"},{"location":"reference/classes/appium_base_driver-1.BaseDriver/#returns_18","title":"Returns","text":"<p><code>Promise</code>&lt;<code>Mult</code> extends <code>true</code> ? <code>Element</code>[] : <code>Element</code>&gt;</p> <p>A single element or list of elements</p>"},{"location":"reference/classes/appium_base_driver-1.BaseDriver/#inherited-from_55","title":"Inherited from","text":"<p>createBaseDriverClass(BaseDriverCore).findElOrElsWithProcessing</p>"},{"location":"reference/classes/appium_base_driver-1.BaseDriver/#defined-in_55","title":"Defined in","text":"<p>packages/types/build/lib/driver.d.ts:248</p>"},{"location":"reference/classes/appium_base_driver-1.BaseDriver/#findelement","title":"findElement","text":"<p>\u25b8 findElement(<code>strategy</code>, <code>selector</code>): <code>Promise</code>&lt;<code>Element</code>&gt;</p> <p>Find a UI element given a locator strategy and a selector, erroring if it can't be found</p> <p><code>See</code></p> <p>https://w3c.github.io/webdriver/#find-element</p>"},{"location":"reference/classes/appium_base_driver-1.BaseDriver/#parameters_14","title":"Parameters","text":"Name Type Description <code>strategy</code> <code>string</code> the locator strategy <code>selector</code> <code>string</code> the selector to combine with the strategy to find the specific element"},{"location":"reference/classes/appium_base_driver-1.BaseDriver/#returns_19","title":"Returns","text":"<p><code>Promise</code>&lt;<code>Element</code>&gt;</p> <p>The element object encoding the element id which can be used in element-related commands</p>"},{"location":"reference/classes/appium_base_driver-1.BaseDriver/#inherited-from_56","title":"Inherited from","text":"<p>createBaseDriverClass(BaseDriverCore).findElement</p>"},{"location":"reference/classes/appium_base_driver-1.BaseDriver/#defined-in_56","title":"Defined in","text":"<p>packages/types/build/lib/driver.d.ts:170</p>"},{"location":"reference/classes/appium_base_driver-1.BaseDriver/#findelementfromelement","title":"findElementFromElement","text":"<p>\u25b8 findElementFromElement(<code>strategy</code>, <code>selector</code>, <code>elementId</code>): <code>Promise</code>&lt;<code>Element</code>&gt;</p> <p>Find a UI element given a locator strategy and a selector, erroring if it can't be found. Only look for elements among the set of descendants of a given element</p> <p><code>See</code></p> <p>https://w3c.github.io/webdriver/#find-element-from-element</p>"},{"location":"reference/classes/appium_base_driver-1.BaseDriver/#parameters_15","title":"Parameters","text":"Name Type Description <code>strategy</code> <code>string</code> the locator strategy <code>selector</code> <code>string</code> the selector to combine with the strategy to find the specific element <code>elementId</code> <code>string</code> the id of the element to use as the search basis"},{"location":"reference/classes/appium_base_driver-1.BaseDriver/#returns_20","title":"Returns","text":"<p><code>Promise</code>&lt;<code>Element</code>&gt;</p> <p>The element object encoding the element id which can be used in element-related commands</p>"},{"location":"reference/classes/appium_base_driver-1.BaseDriver/#inherited-from_57","title":"Inherited from","text":"<p>createBaseDriverClass(BaseDriverCore).findElementFromElement</p>"},{"location":"reference/classes/appium_base_driver-1.BaseDriver/#defined-in_57","title":"Defined in","text":"<p>packages/types/build/lib/driver.d.ts:193</p>"},{"location":"reference/classes/appium_base_driver-1.BaseDriver/#findelementfromshadowroot","title":"findElementFromShadowRoot","text":"<p>\u25b8 <code>Optional</code> findElementFromShadowRoot(<code>strategy</code>, <code>selector</code>, <code>shadowId</code>): <code>Promise</code>&lt;<code>Element</code>&gt;</p> <p>Find an element from a shadow root</p> <p><code>See</code></p> <p>https://w3c.github.io/webdriver/#find-element-from-shadow-root</p>"},{"location":"reference/classes/appium_base_driver-1.BaseDriver/#parameters_16","title":"Parameters","text":"Name Type Description <code>strategy</code> <code>string</code> the locator strategy <code>selector</code> <code>string</code> the selector to combine with the strategy to find the specific elements <code>shadowId</code> <code>string</code> the id of the element to use as the search basis"},{"location":"reference/classes/appium_base_driver-1.BaseDriver/#returns_21","title":"Returns","text":"<p><code>Promise</code>&lt;<code>Element</code>&gt;</p> <p>The element inside the shadow root matching the selector</p>"},{"location":"reference/classes/appium_base_driver-1.BaseDriver/#inherited-from_58","title":"Inherited from","text":"<p>createBaseDriverClass(BaseDriverCore).findElementFromShadowRoot</p>"},{"location":"reference/classes/appium_base_driver-1.BaseDriver/#defined-in_58","title":"Defined in","text":"<p>packages/types/build/lib/driver.d.ts:215</p>"},{"location":"reference/classes/appium_base_driver-1.BaseDriver/#findelements","title":"findElements","text":"<p>\u25b8 findElements(<code>strategy</code>, <code>selector</code>): <code>Promise</code>&lt;<code>Element</code>[]&gt;</p> <p>Find a a list of all UI elements matching a given a locator strategy and a selector</p> <p><code>See</code></p> <p>https://w3c.github.io/webdriver/#find-elements</p>"},{"location":"reference/classes/appium_base_driver-1.BaseDriver/#parameters_17","title":"Parameters","text":"Name Type Description <code>strategy</code> <code>string</code> the locator strategy <code>selector</code> <code>string</code> the selector to combine with the strategy to find the specific elements"},{"location":"reference/classes/appium_base_driver-1.BaseDriver/#returns_22","title":"Returns","text":"<p><code>Promise</code>&lt;<code>Element</code>[]&gt;</p> <p>A possibly-empty list of element objects</p>"},{"location":"reference/classes/appium_base_driver-1.BaseDriver/#inherited-from_59","title":"Inherited from","text":"<p>createBaseDriverClass(BaseDriverCore).findElements</p>"},{"location":"reference/classes/appium_base_driver-1.BaseDriver/#defined-in_59","title":"Defined in","text":"<p>packages/types/build/lib/driver.d.ts:180</p>"},{"location":"reference/classes/appium_base_driver-1.BaseDriver/#findelementsfromelement","title":"findElementsFromElement","text":"<p>\u25b8 findElementsFromElement(<code>strategy</code>, <code>selector</code>, <code>elementId</code>): <code>Promise</code>&lt;<code>Element</code>[]&gt;</p> <p>Find a a list of all UI elements matching a given a locator strategy and a selector. Only look for elements among the set of descendants of a given element</p> <p><code>See</code></p> <p>https://w3c.github.io/webdriver/#find-elements-from-element</p>"},{"location":"reference/classes/appium_base_driver-1.BaseDriver/#parameters_18","title":"Parameters","text":"Name Type Description <code>strategy</code> <code>string</code> the locator strategy <code>selector</code> <code>string</code> the selector to combine with the strategy to find the specific elements <code>elementId</code> <code>string</code> the id of the element to use as the search basis"},{"location":"reference/classes/appium_base_driver-1.BaseDriver/#returns_23","title":"Returns","text":"<p><code>Promise</code>&lt;<code>Element</code>[]&gt;</p> <p>A possibly-empty list of element objects</p>"},{"location":"reference/classes/appium_base_driver-1.BaseDriver/#inherited-from_60","title":"Inherited from","text":"<p>createBaseDriverClass(BaseDriverCore).findElementsFromElement</p>"},{"location":"reference/classes/appium_base_driver-1.BaseDriver/#defined-in_60","title":"Defined in","text":"<p>packages/types/build/lib/driver.d.ts:205</p>"},{"location":"reference/classes/appium_base_driver-1.BaseDriver/#findelementsfromshadowroot","title":"findElementsFromShadowRoot","text":"<p>\u25b8 <code>Optional</code> findElementsFromShadowRoot(<code>strategy</code>, <code>selector</code>, <code>shadowId</code>): <code>Promise</code>&lt;<code>Element</code>[]&gt;</p> <p>Find elements from a shadow root</p> <p><code>See</code></p> <p>https://w3c.github.io/webdriver/#find-element-from-shadow-root</p>"},{"location":"reference/classes/appium_base_driver-1.BaseDriver/#parameters_19","title":"Parameters","text":"Name Type Description <code>strategy</code> <code>string</code> the locator strategy <code>selector</code> <code>string</code> the selector to combine with the strategy to find the specific elements <code>shadowId</code> <code>string</code> the id of the element to use as the search basis"},{"location":"reference/classes/appium_base_driver-1.BaseDriver/#returns_24","title":"Returns","text":"<p><code>Promise</code>&lt;<code>Element</code>[]&gt;</p> <p>A possibly empty list of elements inside the shadow root matching the selector</p>"},{"location":"reference/classes/appium_base_driver-1.BaseDriver/#inherited-from_61","title":"Inherited from","text":"<p>createBaseDriverClass(BaseDriverCore).findElementsFromShadowRoot</p>"},{"location":"reference/classes/appium_base_driver-1.BaseDriver/#defined-in_61","title":"Defined in","text":"<p>packages/types/build/lib/driver.d.ts:225</p>"},{"location":"reference/classes/appium_base_driver-1.BaseDriver/#getlog","title":"getLog","text":"<p>\u25b8 getLog(<code>logType</code>): <code>Promise</code>&lt;<code>unknown</code>[]&gt;</p> <p>Get the log for a given log type.</p>"},{"location":"reference/classes/appium_base_driver-1.BaseDriver/#parameters_20","title":"Parameters","text":"Name Type Description <code>logType</code> <code>string</code> Name/key of log type as defined in ILogCommands.supportedLogTypes."},{"location":"reference/classes/appium_base_driver-1.BaseDriver/#returns_25","title":"Returns","text":"<p><code>Promise</code>&lt;<code>unknown</code>[]&gt;</p>"},{"location":"reference/classes/appium_base_driver-1.BaseDriver/#inherited-from_62","title":"Inherited from","text":"<p>createBaseDriverClass(BaseDriverCore).getLog</p>"},{"location":"reference/classes/appium_base_driver-1.BaseDriver/#defined-in_62","title":"Defined in","text":"<p>packages/types/build/lib/driver.d.ts:271</p>"},{"location":"reference/classes/appium_base_driver-1.BaseDriver/#getlogevents","title":"getLogEvents","text":"<p>\u25b8 getLogEvents(<code>type?</code>): <code>Promise</code>&lt;<code>EventHistory</code> | <code>Record</code>&lt;<code>string</code>, <code>number</code>&gt;&gt;</p> <p>Get a list of events that have occurred in the current session</p>"},{"location":"reference/classes/appium_base_driver-1.BaseDriver/#parameters_21","title":"Parameters","text":"Name Type Description <code>type?</code> <code>string</code> | <code>string</code>[] filter the returned events by including one or more types"},{"location":"reference/classes/appium_base_driver-1.BaseDriver/#returns_26","title":"Returns","text":"<p><code>Promise</code>&lt;<code>EventHistory</code> | <code>Record</code>&lt;<code>string</code>, <code>number</code>&gt;&gt;</p> <p>The event history for the session</p>"},{"location":"reference/classes/appium_base_driver-1.BaseDriver/#inherited-from_63","title":"Inherited from","text":"<p>createBaseDriverClass(BaseDriverCore).getLogEvents</p>"},{"location":"reference/classes/appium_base_driver-1.BaseDriver/#defined-in_63","title":"Defined in","text":"<p>packages/types/build/lib/driver.d.ts:123</p>"},{"location":"reference/classes/appium_base_driver-1.BaseDriver/#getlogtypes","title":"getLogTypes","text":"<p>\u25b8 getLogTypes(): <code>Promise</code>&lt;<code>string</code>[]&gt;</p> <p>Get available log types as a list of strings</p>"},{"location":"reference/classes/appium_base_driver-1.BaseDriver/#returns_27","title":"Returns","text":"<p><code>Promise</code>&lt;<code>string</code>[]&gt;</p>"},{"location":"reference/classes/appium_base_driver-1.BaseDriver/#inherited-from_64","title":"Inherited from","text":"<p>createBaseDriverClass(BaseDriverCore).getLogTypes</p>"},{"location":"reference/classes/appium_base_driver-1.BaseDriver/#defined-in_64","title":"Defined in","text":"<p>packages/types/build/lib/driver.d.ts:265</p>"},{"location":"reference/classes/appium_base_driver-1.BaseDriver/#getmanageddrivers","title":"getManagedDrivers","text":"<p>\u25b8 getManagedDrivers(): <code>Driver</code>&lt;typeof <code>BASE_DESIRED_CAP_CONSTRAINTS</code>, <code>StringRecord</code>, <code>any</code>&gt;[]</p>"},{"location":"reference/classes/appium_base_driver-1.BaseDriver/#returns_28","title":"Returns","text":"<p><code>Driver</code>&lt;typeof <code>BASE_DESIRED_CAP_CONSTRAINTS</code>, <code>StringRecord</code>, <code>any</code>&gt;[]</p>"},{"location":"reference/classes/appium_base_driver-1.BaseDriver/#inherited-from_65","title":"Inherited from","text":"<p>createBaseDriverClass(BaseDriverCore).getManagedDrivers</p>"},{"location":"reference/classes/appium_base_driver-1.BaseDriver/#defined-in_65","title":"Defined in","text":"<p>packages/base-driver/lib/basedriver/core.js:406</p>"},{"location":"reference/classes/appium_base_driver-1.BaseDriver/#getpagesource","title":"getPageSource","text":"<p>\u25b8 getPageSource(): <code>Promise</code>&lt;<code>string</code>&gt;</p> <p>Get the current page/app source as HTML/XML</p> <p><code>See</code></p> <p>https://w3c.github.io/webdriver/#get-page-source</p>"},{"location":"reference/classes/appium_base_driver-1.BaseDriver/#returns_29","title":"Returns","text":"<p><code>Promise</code>&lt;<code>string</code>&gt;</p> <p>The UI hierarchy in a platform-appropriate format (e.g., HTML for a web page)</p>"},{"location":"reference/classes/appium_base_driver-1.BaseDriver/#inherited-from_66","title":"Inherited from","text":"<p>createBaseDriverClass(BaseDriverCore).getPageSource</p>"},{"location":"reference/classes/appium_base_driver-1.BaseDriver/#defined-in_66","title":"Defined in","text":"<p>packages/types/build/lib/driver.d.ts:255</p>"},{"location":"reference/classes/appium_base_driver-1.BaseDriver/#getproxyavoidlist","title":"getProxyAvoidList","text":"<p>\u25b8 getProxyAvoidList(<code>sessionId</code>): <code>RouteMatcher</code>[]</p>"},{"location":"reference/classes/appium_base_driver-1.BaseDriver/#parameters_22","title":"Parameters","text":"Name Type <code>sessionId</code> <code>string</code>"},{"location":"reference/classes/appium_base_driver-1.BaseDriver/#returns_30","title":"Returns","text":"<p><code>RouteMatcher</code>[]</p>"},{"location":"reference/classes/appium_base_driver-1.BaseDriver/#inherited-from_67","title":"Inherited from","text":"<p>createBaseDriverClass(BaseDriverCore).getProxyAvoidList</p>"},{"location":"reference/classes/appium_base_driver-1.BaseDriver/#defined-in_67","title":"Defined in","text":"<p>packages/base-driver/lib/basedriver/core.js:352</p>"},{"location":"reference/classes/appium_base_driver-1.BaseDriver/#getsession","title":"getSession","text":"<p>\u25b8 getSession(): <code>Promise</code>&lt;<code>SingularSessionData</code>&lt;typeof <code>BASE_DESIRED_CAP_CONSTRAINTS</code>, <code>void</code>&gt;&gt;</p> <p>Get the data for the current session</p>"},{"location":"reference/classes/appium_base_driver-1.BaseDriver/#returns_31","title":"Returns","text":"<p><code>Promise</code>&lt;<code>SingularSessionData</code>&lt;typeof <code>BASE_DESIRED_CAP_CONSTRAINTS</code>, <code>void</code>&gt;&gt;</p> <p>A session data object</p>"},{"location":"reference/classes/appium_base_driver-1.BaseDriver/#inherited-from_68","title":"Inherited from","text":"<p>createBaseDriverClass(BaseDriverCore).getSession</p>"},{"location":"reference/classes/appium_base_driver-1.BaseDriver/#defined-in_68","title":"Defined in","text":"<p>packages/types/build/lib/driver.d.ts:137</p>"},{"location":"reference/classes/appium_base_driver-1.BaseDriver/#getsessions","title":"getSessions","text":"<p>\u25b8 getSessions(): <code>Promise</code>&lt;<code>MultiSessionData</code>&lt;typeof <code>BASE_DESIRED_CAP_CONSTRAINTS</code>, <code>void</code>&gt;[]&gt;</p> <p>Get data for all sessions running on an Appium server</p>"},{"location":"reference/classes/appium_base_driver-1.BaseDriver/#returns_32","title":"Returns","text":"<p><code>Promise</code>&lt;<code>MultiSessionData</code>&lt;typeof <code>BASE_DESIRED_CAP_CONSTRAINTS</code>, <code>void</code>&gt;[]&gt;</p> <p>A list of session data objects</p>"},{"location":"reference/classes/appium_base_driver-1.BaseDriver/#inherited-from_69","title":"Inherited from","text":"<p>createBaseDriverClass(BaseDriverCore).getSessions</p>"},{"location":"reference/classes/appium_base_driver-1.BaseDriver/#defined-in_69","title":"Defined in","text":"<p>packages/types/build/lib/driver.d.ts:131</p>"},{"location":"reference/classes/appium_base_driver-1.BaseDriver/#getsettings","title":"getSettings","text":"<p>\u25b8 getSettings(): <code>Promise</code>&lt;<code>StringRecord</code>&gt;</p> <p>Get the current settings for the session</p>"},{"location":"reference/classes/appium_base_driver-1.BaseDriver/#returns_33","title":"Returns","text":"<p><code>Promise</code>&lt;<code>StringRecord</code>&gt;</p> <p>The settings object</p>"},{"location":"reference/classes/appium_base_driver-1.BaseDriver/#inherited-from_70","title":"Inherited from","text":"<p>createBaseDriverClass(BaseDriverCore).getSettings</p>"},{"location":"reference/classes/appium_base_driver-1.BaseDriver/#defined-in_70","title":"Defined in","text":"<p>packages/types/build/lib/driver.d.ts:309</p>"},{"location":"reference/classes/appium_base_driver-1.BaseDriver/#getstatus","title":"getStatus","text":"<p>\u25b8 getStatus(): <code>Promise</code>&lt;{}&gt;</p>"},{"location":"reference/classes/appium_base_driver-1.BaseDriver/#returns_34","title":"Returns","text":"<p><code>Promise</code>&lt;{}&gt;</p>"},{"location":"reference/classes/appium_base_driver-1.BaseDriver/#inherited-from_71","title":"Inherited from","text":"<p>createBaseDriverClass(BaseDriverCore).getStatus</p>"},{"location":"reference/classes/appium_base_driver-1.BaseDriver/#defined-in_71","title":"Defined in","text":"<p>packages/base-driver/lib/basedriver/core.js:220</p>"},{"location":"reference/classes/appium_base_driver-1.BaseDriver/#gettimeouts","title":"getTimeouts","text":"<p>\u25b8 getTimeouts(): <code>Promise</code>&lt;<code>Record</code>&lt;<code>string</code>, <code>number</code>&gt;&gt;</p> <p>Get the current timeouts</p> <p><code>See</code></p> <p>https://w3c.github.io/webdriver/#get-timeouts</p>"},{"location":"reference/classes/appium_base_driver-1.BaseDriver/#returns_35","title":"Returns","text":"<p><code>Promise</code>&lt;<code>Record</code>&lt;<code>string</code>, <code>number</code>&gt;&gt;</p> <p>A map of timeout names to ms values</p>"},{"location":"reference/classes/appium_base_driver-1.BaseDriver/#inherited-from_72","title":"Inherited from","text":"<p>createBaseDriverClass(BaseDriverCore).getTimeouts</p>"},{"location":"reference/classes/appium_base_driver-1.BaseDriver/#defined-in_72","title":"Defined in","text":"<p>packages/types/build/lib/driver.d.ts:53</p>"},{"location":"reference/classes/appium_base_driver-1.BaseDriver/#implicitwait","title":"implicitWait","text":"<p>\u25b8 implicitWait(<code>ms</code>): <code>Promise</code>&lt;<code>void</code>&gt;</p> <p>Set the implicit wait timeout</p> <p><code>Deprecated</code></p> <p>Use <code>timeouts</code> instead</p>"},{"location":"reference/classes/appium_base_driver-1.BaseDriver/#parameters_23","title":"Parameters","text":"Name Type Description <code>ms</code> <code>string</code> | <code>number</code> the timeout in ms"},{"location":"reference/classes/appium_base_driver-1.BaseDriver/#returns_36","title":"Returns","text":"<p><code>Promise</code>&lt;<code>void</code>&gt;</p>"},{"location":"reference/classes/appium_base_driver-1.BaseDriver/#inherited-from_73","title":"Inherited from","text":"<p>createBaseDriverClass(BaseDriverCore).implicitWait</p>"},{"location":"reference/classes/appium_base_driver-1.BaseDriver/#defined-in_73","title":"Defined in","text":"<p>packages/types/build/lib/driver.d.ts:32</p>"},{"location":"reference/classes/appium_base_driver-1.BaseDriver/#implicitwaitforcondition","title":"implicitWaitForCondition","text":"<p>\u25b8 implicitWaitForCondition(<code>condition</code>): <code>Promise</code>&lt;<code>unknown</code>&gt;</p> <p>Periodically retry an async function up until the currently set implicit wait timeout</p>"},{"location":"reference/classes/appium_base_driver-1.BaseDriver/#parameters_24","title":"Parameters","text":"Name Type Description <code>condition</code> () =&gt; <code>Promise</code>&lt;<code>any</code>&gt; the behaviour to retry until it returns truthy"},{"location":"reference/classes/appium_base_driver-1.BaseDriver/#returns_37","title":"Returns","text":"<p><code>Promise</code>&lt;<code>unknown</code>&gt;</p> <p>The return value of the condition</p>"},{"location":"reference/classes/appium_base_driver-1.BaseDriver/#inherited-from_74","title":"Inherited from","text":"<p>createBaseDriverClass(BaseDriverCore).implicitWaitForCondition</p>"},{"location":"reference/classes/appium_base_driver-1.BaseDriver/#defined-in_74","title":"Defined in","text":"<p>packages/types/build/lib/driver.d.ts:46</p>"},{"location":"reference/classes/appium_base_driver-1.BaseDriver/#implicitwaitmjsonwp","title":"implicitWaitMJSONWP","text":"<p>\u25b8 implicitWaitMJSONWP(<code>ms</code>): <code>Promise</code>&lt;<code>void</code>&gt;</p> <p>Set the implicit wait value that was sent in via the JSONWP</p> <p><code>Deprecated</code></p>"},{"location":"reference/classes/appium_base_driver-1.BaseDriver/#parameters_25","title":"Parameters","text":"Name Type Description <code>ms</code> <code>number</code> the timeout in ms"},{"location":"reference/classes/appium_base_driver-1.BaseDriver/#returns_38","title":"Returns","text":"<p><code>Promise</code>&lt;<code>void</code>&gt;</p>"},{"location":"reference/classes/appium_base_driver-1.BaseDriver/#inherited-from_75","title":"Inherited from","text":"<p>createBaseDriverClass(BaseDriverCore).implicitWaitMJSONWP</p>"},{"location":"reference/classes/appium_base_driver-1.BaseDriver/#defined-in_75","title":"Defined in","text":"<p>packages/types/build/lib/driver.d.ts:66</p>"},{"location":"reference/classes/appium_base_driver-1.BaseDriver/#implicitwaitw3c","title":"implicitWaitW3C","text":"<p>\u25b8 implicitWaitW3C(<code>ms</code>): <code>Promise</code>&lt;<code>void</code>&gt;</p> <p>Set the implicit wait value that was sent in via the W3C protocol</p>"},{"location":"reference/classes/appium_base_driver-1.BaseDriver/#parameters_26","title":"Parameters","text":"Name Type Description <code>ms</code> <code>number</code> the timeout in ms"},{"location":"reference/classes/appium_base_driver-1.BaseDriver/#returns_39","title":"Returns","text":"<p><code>Promise</code>&lt;<code>void</code>&gt;</p>"},{"location":"reference/classes/appium_base_driver-1.BaseDriver/#inherited-from_76","title":"Inherited from","text":"<p>createBaseDriverClass(BaseDriverCore).implicitWaitW3C</p>"},{"location":"reference/classes/appium_base_driver-1.BaseDriver/#defined-in_76","title":"Defined in","text":"<p>packages/types/build/lib/driver.d.ts:59</p>"},{"location":"reference/classes/appium_base_driver-1.BaseDriver/#isfeatureenabled","title":"isFeatureEnabled","text":"<p>\u25b8 isFeatureEnabled(<code>name</code>): <code>boolean</code></p> <p>Check whether a given feature is enabled via its name</p>"},{"location":"reference/classes/appium_base_driver-1.BaseDriver/#parameters_27","title":"Parameters","text":"Name Type Description <code>name</code> <code>string</code> name of feature/command"},{"location":"reference/classes/appium_base_driver-1.BaseDriver/#returns_40","title":"Returns","text":"<p><code>boolean</code></p>"},{"location":"reference/classes/appium_base_driver-1.BaseDriver/#inherited-from_77","title":"Inherited from","text":"<p>createBaseDriverClass(BaseDriverCore).isFeatureEnabled</p>"},{"location":"reference/classes/appium_base_driver-1.BaseDriver/#defined-in_77","title":"Defined in","text":"<p>packages/base-driver/lib/basedriver/core.js:268</p>"},{"location":"reference/classes/appium_base_driver-1.BaseDriver/#ismjsonwpprotocol","title":"isMjsonwpProtocol","text":"<p>\u25b8 isMjsonwpProtocol(): <code>boolean</code></p>"},{"location":"reference/classes/appium_base_driver-1.BaseDriver/#returns_41","title":"Returns","text":"<p><code>boolean</code></p>"},{"location":"reference/classes/appium_base_driver-1.BaseDriver/#inherited-from_78","title":"Inherited from","text":"<p>createBaseDriverClass(BaseDriverCore).isMjsonwpProtocol</p>"},{"location":"reference/classes/appium_base_driver-1.BaseDriver/#defined-in_78","title":"Defined in","text":"<p>packages/base-driver/lib/basedriver/core.js:245</p>"},{"location":"reference/classes/appium_base_driver-1.BaseDriver/#isw3cprotocol","title":"isW3CProtocol","text":"<p>\u25b8 isW3CProtocol(): <code>boolean</code></p>"},{"location":"reference/classes/appium_base_driver-1.BaseDriver/#returns_42","title":"Returns","text":"<p><code>boolean</code></p>"},{"location":"reference/classes/appium_base_driver-1.BaseDriver/#inherited-from_79","title":"Inherited from","text":"<p>createBaseDriverClass(BaseDriverCore).isW3CProtocol</p>"},{"location":"reference/classes/appium_base_driver-1.BaseDriver/#defined-in_79","title":"Defined in","text":"<p>packages/base-driver/lib/basedriver/core.js:249</p>"},{"location":"reference/classes/appium_base_driver-1.BaseDriver/#logcustomevent","title":"logCustomEvent","text":"<p>\u25b8 logCustomEvent(<code>vendor</code>, <code>event</code>): <code>Promise</code>&lt;<code>void</code>&gt;</p> <p>Add a custom-named event to the Appium event log</p>"},{"location":"reference/classes/appium_base_driver-1.BaseDriver/#parameters_28","title":"Parameters","text":"Name Type Description <code>vendor</code> <code>string</code> the name of the vendor or tool the event belongs to, to namespace the event <code>event</code> <code>string</code> the name of the event itself"},{"location":"reference/classes/appium_base_driver-1.BaseDriver/#returns_43","title":"Returns","text":"<p><code>Promise</code>&lt;<code>void</code>&gt;</p>"},{"location":"reference/classes/appium_base_driver-1.BaseDriver/#inherited-from_80","title":"Inherited from","text":"<p>createBaseDriverClass(BaseDriverCore).logCustomEvent</p>"},{"location":"reference/classes/appium_base_driver-1.BaseDriver/#defined-in_80","title":"Defined in","text":"<p>packages/types/build/lib/driver.d.ts:115</p>"},{"location":"reference/classes/appium_base_driver-1.BaseDriver/#logevent","title":"logEvent","text":"<p>\u25b8 logEvent(<code>eventName</code>): <code>void</code></p> <p>API method for driver developers to log timings for important events</p>"},{"location":"reference/classes/appium_base_driver-1.BaseDriver/#parameters_29","title":"Parameters","text":"Name Type <code>eventName</code> <code>string</code>"},{"location":"reference/classes/appium_base_driver-1.BaseDriver/#returns_44","title":"Returns","text":"<p><code>void</code></p>"},{"location":"reference/classes/appium_base_driver-1.BaseDriver/#inherited-from_81","title":"Inherited from","text":"<p>createBaseDriverClass(BaseDriverCore).logEvent</p>"},{"location":"reference/classes/appium_base_driver-1.BaseDriver/#defined-in_81","title":"Defined in","text":"<p>packages/base-driver/lib/basedriver/core.js:200</p>"},{"location":"reference/classes/appium_base_driver-1.BaseDriver/#logextracaps","title":"logExtraCaps","text":"<p>\u25b8 logExtraCaps(<code>caps</code>): <code>void</code></p>"},{"location":"reference/classes/appium_base_driver-1.BaseDriver/#parameters_30","title":"Parameters","text":"Name Type <code>caps</code> <code>Partial</code>&lt;<code>ConstraintsToCaps</code>&lt;<code>any</code>&gt; &amp; <code>void</code>&gt;"},{"location":"reference/classes/appium_base_driver-1.BaseDriver/#returns_45","title":"Returns","text":"<p><code>void</code></p>"},{"location":"reference/classes/appium_base_driver-1.BaseDriver/#inherited-from_82","title":"Inherited from","text":"<p>createBaseDriverClass(BaseDriverCore).logExtraCaps</p>"},{"location":"reference/classes/appium_base_driver-1.BaseDriver/#defined-in_82","title":"Defined in","text":"<p>packages/base-driver/lib/basedriver/driver.js:371</p>"},{"location":"reference/classes/appium_base_driver-1.BaseDriver/#newcommandtimeout","title":"newCommandTimeout","text":"<p>\u25b8 newCommandTimeout(<code>ms</code>): <code>Promise</code>&lt;<code>void</code>&gt;</p> <p>Set Appium's new command timeout</p>"},{"location":"reference/classes/appium_base_driver-1.BaseDriver/#parameters_31","title":"Parameters","text":"Name Type Description <code>ms</code> <code>number</code> the timeout in ms"},{"location":"reference/classes/appium_base_driver-1.BaseDriver/#returns_46","title":"Returns","text":"<p><code>Promise</code>&lt;<code>void</code>&gt;</p>"},{"location":"reference/classes/appium_base_driver-1.BaseDriver/#inherited-from_83","title":"Inherited from","text":"<p>createBaseDriverClass(BaseDriverCore).newCommandTimeout</p>"},{"location":"reference/classes/appium_base_driver-1.BaseDriver/#defined-in_83","title":"Defined in","text":"<p>packages/types/build/lib/driver.d.ts:98</p>"},{"location":"reference/classes/appium_base_driver-1.BaseDriver/#onunexpectedshutdown","title":"onUnexpectedShutdown","text":"<p>\u25b8 onUnexpectedShutdown(<code>handler</code>): <code>void</code></p> <p>Set a callback handler if needed to execute a custom piece of code when the driver is shut down unexpectedly. Multiple calls to this method will cause the handler to be executed mutiple times</p>"},{"location":"reference/classes/appium_base_driver-1.BaseDriver/#parameters_32","title":"Parameters","text":"Name Type Description <code>handler</code> (...<code>args</code>: <code>any</code>[]) =&gt; <code>void</code> The code to be executed on unexpected shutdown. The function may accept one argument, which is the actual error instance, which caused the driver to shut down."},{"location":"reference/classes/appium_base_driver-1.BaseDriver/#returns_47","title":"Returns","text":"<p><code>void</code></p>"},{"location":"reference/classes/appium_base_driver-1.BaseDriver/#inherited-from_84","title":"Inherited from","text":"<p>createBaseDriverClass(BaseDriverCore).onUnexpectedShutdown</p>"},{"location":"reference/classes/appium_base_driver-1.BaseDriver/#defined-in_84","title":"Defined in","text":"<p>packages/base-driver/lib/basedriver/core.js:157</p>"},{"location":"reference/classes/appium_base_driver-1.BaseDriver/#pageloadtimeoutmjsonwp","title":"pageLoadTimeoutMJSONWP","text":"<p>\u25b8 pageLoadTimeoutMJSONWP(<code>ms</code>): <code>Promise</code>&lt;<code>void</code>&gt;</p> <p>Set the page load timeout value that was sent in via the JSONWP</p> <p><code>Deprecated</code></p>"},{"location":"reference/classes/appium_base_driver-1.BaseDriver/#parameters_33","title":"Parameters","text":"Name Type Description <code>ms</code> <code>number</code> the timeout in ms"},{"location":"reference/classes/appium_base_driver-1.BaseDriver/#returns_48","title":"Returns","text":"<p><code>Promise</code>&lt;<code>void</code>&gt;</p>"},{"location":"reference/classes/appium_base_driver-1.BaseDriver/#inherited-from_85","title":"Inherited from","text":"<p>createBaseDriverClass(BaseDriverCore).pageLoadTimeoutMJSONWP</p>"},{"location":"reference/classes/appium_base_driver-1.BaseDriver/#defined-in_85","title":"Defined in","text":"<p>packages/types/build/lib/driver.d.ts:79</p>"},{"location":"reference/classes/appium_base_driver-1.BaseDriver/#pageloadtimeoutw3c","title":"pageLoadTimeoutW3C","text":"<p>\u25b8 pageLoadTimeoutW3C(<code>ms</code>): <code>Promise</code>&lt;<code>void</code>&gt;</p> <p>Set the page load timeout value that was sent in via the W3C protocol</p>"},{"location":"reference/classes/appium_base_driver-1.BaseDriver/#parameters_34","title":"Parameters","text":"Name Type Description <code>ms</code> <code>number</code> the timeout in ms"},{"location":"reference/classes/appium_base_driver-1.BaseDriver/#returns_49","title":"Returns","text":"<p><code>Promise</code>&lt;<code>void</code>&gt;</p>"},{"location":"reference/classes/appium_base_driver-1.BaseDriver/#inherited-from_86","title":"Inherited from","text":"<p>createBaseDriverClass(BaseDriverCore).pageLoadTimeoutW3C</p>"},{"location":"reference/classes/appium_base_driver-1.BaseDriver/#defined-in_86","title":"Defined in","text":"<p>packages/types/build/lib/driver.d.ts:72</p>"},{"location":"reference/classes/appium_base_driver-1.BaseDriver/#parsetimeoutargument","title":"parseTimeoutArgument","text":"<p>\u25b8 parseTimeoutArgument(<code>ms</code>): <code>number</code></p> <p>Get a timeout value from a number or a string</p>"},{"location":"reference/classes/appium_base_driver-1.BaseDriver/#parameters_35","title":"Parameters","text":"Name Type Description <code>ms</code> <code>string</code> | <code>number</code> the timeout value as a number or a string"},{"location":"reference/classes/appium_base_driver-1.BaseDriver/#returns_50","title":"Returns","text":"<p><code>number</code></p> <p>The timeout as a number in ms</p>"},{"location":"reference/classes/appium_base_driver-1.BaseDriver/#inherited-from_87","title":"Inherited from","text":"<p>createBaseDriverClass(BaseDriverCore).parseTimeoutArgument</p>"},{"location":"reference/classes/appium_base_driver-1.BaseDriver/#defined-in_87","title":"Defined in","text":"<p>packages/types/build/lib/driver.d.ts:106</p>"},{"location":"reference/classes/appium_base_driver-1.BaseDriver/#proxyactive","title":"proxyActive","text":"<p>\u25b8 proxyActive(<code>sessionId?</code>): <code>boolean</code></p>"},{"location":"reference/classes/appium_base_driver-1.BaseDriver/#parameters_36","title":"Parameters","text":"Name Type <code>sessionId?</code> <code>string</code>"},{"location":"reference/classes/appium_base_driver-1.BaseDriver/#returns_51","title":"Returns","text":"<p><code>boolean</code></p>"},{"location":"reference/classes/appium_base_driver-1.BaseDriver/#inherited-from_88","title":"Inherited from","text":"<p>createBaseDriverClass(BaseDriverCore).proxyActive</p>"},{"location":"reference/classes/appium_base_driver-1.BaseDriver/#defined-in_88","title":"Defined in","text":"<p>packages/base-driver/lib/basedriver/core.js:343</p>"},{"location":"reference/classes/appium_base_driver-1.BaseDriver/#proxyrouteisavoided","title":"proxyRouteIsAvoided","text":"<p>\u25b8 proxyRouteIsAvoided(<code>sessionId</code>, <code>method</code>, <code>url</code>, <code>body?</code>): <code>boolean</code></p> <p>Whether a given command route (expressed as method and url) should not be proxied according to this driver</p>"},{"location":"reference/classes/appium_base_driver-1.BaseDriver/#parameters_37","title":"Parameters","text":"Name Type Description <code>sessionId</code> <code>string</code> the current sessionId (in case the driver runs multiple session ids and requires it). This is not used in this method but should be made available to overridden methods. <code>method</code> <code>HTTPMethod</code> HTTP method of the route <code>url</code> <code>string</code> url of the route <code>body?</code> <code>any</code> webdriver request body"},{"location":"reference/classes/appium_base_driver-1.BaseDriver/#returns_52","title":"Returns","text":"<p><code>boolean</code></p> <ul> <li>whether the route should be avoided</li> </ul>"},{"location":"reference/classes/appium_base_driver-1.BaseDriver/#inherited-from_89","title":"Inherited from","text":"<p>createBaseDriverClass(BaseDriverCore).proxyRouteIsAvoided</p>"},{"location":"reference/classes/appium_base_driver-1.BaseDriver/#defined-in_89","title":"Defined in","text":"<p>packages/base-driver/lib/basedriver/core.js:378</p>"},{"location":"reference/classes/appium_base_driver-1.BaseDriver/#reset","title":"reset","text":"<p>\u25b8 reset(): <code>Promise</code>&lt;<code>void</code>&gt;</p>"},{"location":"reference/classes/appium_base_driver-1.BaseDriver/#returns_53","title":"Returns","text":"<p><code>Promise</code>&lt;<code>void</code>&gt;</p>"},{"location":"reference/classes/appium_base_driver-1.BaseDriver/#inherited-from_90","title":"Inherited from","text":"<p>createBaseDriverClass(BaseDriverCore).reset</p>"},{"location":"reference/classes/appium_base_driver-1.BaseDriver/#defined-in_90","title":"Defined in","text":"<p>packages/base-driver/lib/basedriver/driver.js:221</p>"},{"location":"reference/classes/appium_base_driver-1.BaseDriver/#scripttimeoutmjsonwp","title":"scriptTimeoutMJSONWP","text":"<p>\u25b8 scriptTimeoutMJSONWP(<code>ms</code>): <code>Promise</code>&lt;<code>void</code>&gt;</p> <p>Set the script timeout value that was sent in via the JSONWP</p> <p><code>Deprecated</code></p>"},{"location":"reference/classes/appium_base_driver-1.BaseDriver/#parameters_38","title":"Parameters","text":"Name Type Description <code>ms</code> <code>number</code> the timeout in ms"},{"location":"reference/classes/appium_base_driver-1.BaseDriver/#returns_54","title":"Returns","text":"<p><code>Promise</code>&lt;<code>void</code>&gt;</p>"},{"location":"reference/classes/appium_base_driver-1.BaseDriver/#inherited-from_91","title":"Inherited from","text":"<p>createBaseDriverClass(BaseDriverCore).scriptTimeoutMJSONWP</p>"},{"location":"reference/classes/appium_base_driver-1.BaseDriver/#defined-in_91","title":"Defined in","text":"<p>packages/types/build/lib/driver.d.ts:92</p>"},{"location":"reference/classes/appium_base_driver-1.BaseDriver/#scripttimeoutw3c","title":"scriptTimeoutW3C","text":"<p>\u25b8 scriptTimeoutW3C(<code>ms</code>): <code>Promise</code>&lt;<code>void</code>&gt;</p> <p>Set the script timeout value that was sent in via the W3C protocol</p>"},{"location":"reference/classes/appium_base_driver-1.BaseDriver/#parameters_39","title":"Parameters","text":"Name Type Description <code>ms</code> <code>number</code> the timeout in ms"},{"location":"reference/classes/appium_base_driver-1.BaseDriver/#returns_55","title":"Returns","text":"<p><code>Promise</code>&lt;<code>void</code>&gt;</p>"},{"location":"reference/classes/appium_base_driver-1.BaseDriver/#inherited-from_92","title":"Inherited from","text":"<p>createBaseDriverClass(BaseDriverCore).scriptTimeoutW3C</p>"},{"location":"reference/classes/appium_base_driver-1.BaseDriver/#defined-in_92","title":"Defined in","text":"<p>packages/types/build/lib/driver.d.ts:85</p>"},{"location":"reference/classes/appium_base_driver-1.BaseDriver/#sessionexists","title":"sessionExists","text":"<p>\u25b8 sessionExists(<code>sessionId?</code>): <code>boolean</code></p> <p>method required by MJSONWP in order to determine whether it should respond with an invalid session response</p>"},{"location":"reference/classes/appium_base_driver-1.BaseDriver/#parameters_40","title":"Parameters","text":"Name Type <code>sessionId?</code> <code>string</code>"},{"location":"reference/classes/appium_base_driver-1.BaseDriver/#returns_56","title":"Returns","text":"<p><code>boolean</code></p>"},{"location":"reference/classes/appium_base_driver-1.BaseDriver/#inherited-from_93","title":"Inherited from","text":"<p>createBaseDriverClass(BaseDriverCore).sessionExists</p>"},{"location":"reference/classes/appium_base_driver-1.BaseDriver/#defined-in_93","title":"Defined in","text":"<p>packages/base-driver/lib/basedriver/core.js:230</p>"},{"location":"reference/classes/appium_base_driver-1.BaseDriver/#setimplicitwait","title":"setImplicitWait","text":"<p>\u25b8 setImplicitWait(<code>ms</code>): <code>void</code></p> <p>A helper method (not a command) used to set the implicit wait value</p>"},{"location":"reference/classes/appium_base_driver-1.BaseDriver/#parameters_41","title":"Parameters","text":"Name Type Description <code>ms</code> <code>number</code> the implicit wait in ms"},{"location":"reference/classes/appium_base_driver-1.BaseDriver/#returns_57","title":"Returns","text":"<p><code>void</code></p>"},{"location":"reference/classes/appium_base_driver-1.BaseDriver/#inherited-from_94","title":"Inherited from","text":"<p>createBaseDriverClass(BaseDriverCore).setImplicitWait</p>"},{"location":"reference/classes/appium_base_driver-1.BaseDriver/#defined-in_94","title":"Defined in","text":"<p>packages/types/build/lib/driver.d.ts:38</p>"},{"location":"reference/classes/appium_base_driver-1.BaseDriver/#setnewcommandtimeout","title":"setNewCommandTimeout","text":"<p>\u25b8 setNewCommandTimeout(<code>ms</code>): <code>void</code></p> <p>Set the new command timeout</p>"},{"location":"reference/classes/appium_base_driver-1.BaseDriver/#parameters_42","title":"Parameters","text":"Name Type Description <code>ms</code> <code>number</code> the timeout in ms"},{"location":"reference/classes/appium_base_driver-1.BaseDriver/#returns_58","title":"Returns","text":"<p><code>void</code></p>"},{"location":"reference/classes/appium_base_driver-1.BaseDriver/#inherited-from_95","title":"Inherited from","text":"<p>createBaseDriverClass(BaseDriverCore).setNewCommandTimeout</p>"},{"location":"reference/classes/appium_base_driver-1.BaseDriver/#defined-in_95","title":"Defined in","text":"<p>packages/types/build/lib/driver.d.ts:24</p>"},{"location":"reference/classes/appium_base_driver-1.BaseDriver/#setprotocolmjsonwp","title":"setProtocolMJSONWP","text":"<p>\u25b8 setProtocolMJSONWP(): <code>void</code></p>"},{"location":"reference/classes/appium_base_driver-1.BaseDriver/#returns_59","title":"Returns","text":"<p><code>void</code></p>"},{"location":"reference/classes/appium_base_driver-1.BaseDriver/#inherited-from_96","title":"Inherited from","text":"<p>createBaseDriverClass(BaseDriverCore).setProtocolMJSONWP</p>"},{"location":"reference/classes/appium_base_driver-1.BaseDriver/#defined-in_96","title":"Defined in","text":"<p>packages/base-driver/lib/basedriver/core.js:253</p>"},{"location":"reference/classes/appium_base_driver-1.BaseDriver/#setprotocolw3c","title":"setProtocolW3C","text":"<p>\u25b8 setProtocolW3C(): <code>void</code></p>"},{"location":"reference/classes/appium_base_driver-1.BaseDriver/#returns_60","title":"Returns","text":"<p><code>void</code></p>"},{"location":"reference/classes/appium_base_driver-1.BaseDriver/#inherited-from_97","title":"Inherited from","text":"<p>createBaseDriverClass(BaseDriverCore).setProtocolW3C</p>"},{"location":"reference/classes/appium_base_driver-1.BaseDriver/#defined-in_97","title":"Defined in","text":"<p>packages/base-driver/lib/basedriver/core.js:257</p>"},{"location":"reference/classes/appium_base_driver-1.BaseDriver/#startnewcommandtimeout","title":"startNewCommandTimeout","text":"<p>\u25b8 startNewCommandTimeout(): <code>Promise</code>&lt;<code>void</code>&gt;</p>"},{"location":"reference/classes/appium_base_driver-1.BaseDriver/#returns_61","title":"Returns","text":"<p><code>Promise</code>&lt;<code>void</code>&gt;</p>"},{"location":"reference/classes/appium_base_driver-1.BaseDriver/#inherited-from_98","title":"Inherited from","text":"<p>createBaseDriverClass(BaseDriverCore).startNewCommandTimeout</p>"},{"location":"reference/classes/appium_base_driver-1.BaseDriver/#defined-in_98","title":"Defined in","text":"<p>packages/base-driver/lib/basedriver/driver.js:182</p>"},{"location":"reference/classes/appium_base_driver-1.BaseDriver/#startunexpectedshutdown","title":"startUnexpectedShutdown","text":"<p>\u25b8 startUnexpectedShutdown(<code>err?</code>): <code>Promise</code>&lt;<code>void</code>&gt;</p>"},{"location":"reference/classes/appium_base_driver-1.BaseDriver/#parameters_43","title":"Parameters","text":"Name Type <code>err</code> <code>Error</code> | <code>NoSuchDriverError</code>"},{"location":"reference/classes/appium_base_driver-1.BaseDriver/#returns_62","title":"Returns","text":"<p><code>Promise</code>&lt;<code>void</code>&gt;</p>"},{"location":"reference/classes/appium_base_driver-1.BaseDriver/#inherited-from_99","title":"Inherited from","text":"<p>createBaseDriverClass(BaseDriverCore).startUnexpectedShutdown</p>"},{"location":"reference/classes/appium_base_driver-1.BaseDriver/#defined-in_99","title":"Defined in","text":"<p>packages/base-driver/lib/basedriver/driver.js:168</p>"},{"location":"reference/classes/appium_base_driver-1.BaseDriver/#timeouts","title":"timeouts","text":"<p>\u25b8 timeouts(<code>type</code>, <code>ms</code>, <code>script?</code>, <code>pageLoad?</code>, <code>implicit?</code>): <code>Promise</code>&lt;<code>void</code>&gt;</p> <p>Set the various timeouts associated with a session</p> <p><code>See</code></p> <p>https://w3c.github.io/webdriver/#set-timeouts</p>"},{"location":"reference/classes/appium_base_driver-1.BaseDriver/#parameters_44","title":"Parameters","text":"Name Type Description <code>type</code> <code>string</code> used only for the old (JSONWP) command, the type of the timeout <code>ms</code> <code>string</code> | <code>number</code> used only for the old (JSONWP) command, the ms for the timeout <code>script?</code> <code>number</code> the number in ms for the script timeout, used for the W3C command <code>pageLoad?</code> <code>number</code> the number in ms for the pageLoad timeout, used for the W3C command <code>implicit?</code> <code>string</code> | <code>number</code> the number in ms for the implicit wait timeout, used for the W3C command"},{"location":"reference/classes/appium_base_driver-1.BaseDriver/#returns_63","title":"Returns","text":"<p><code>Promise</code>&lt;<code>void</code>&gt;</p>"},{"location":"reference/classes/appium_base_driver-1.BaseDriver/#inherited-from_100","title":"Inherited from","text":"<p>createBaseDriverClass(BaseDriverCore).timeouts</p>"},{"location":"reference/classes/appium_base_driver-1.BaseDriver/#defined-in_100","title":"Defined in","text":"<p>packages/types/build/lib/driver.d.ts:18</p>"},{"location":"reference/classes/appium_base_driver-1.BaseDriver/#validatedesiredcaps","title":"validateDesiredCaps","text":"<p>\u25b8 validateDesiredCaps(<code>caps</code>): <code>boolean</code></p>"},{"location":"reference/classes/appium_base_driver-1.BaseDriver/#parameters_45","title":"Parameters","text":"Name Type <code>caps</code> <code>Partial</code>&lt;<code>ConstraintsToCaps</code>&lt;<code>any</code>&gt; &amp; <code>void</code>&gt;"},{"location":"reference/classes/appium_base_driver-1.BaseDriver/#returns_64","title":"Returns","text":"<p><code>boolean</code></p>"},{"location":"reference/classes/appium_base_driver-1.BaseDriver/#inherited-from_101","title":"Inherited from","text":"<p>createBaseDriverClass(BaseDriverCore).validateDesiredCaps</p>"},{"location":"reference/classes/appium_base_driver-1.BaseDriver/#defined-in_101","title":"Defined in","text":"<p>packages/base-driver/lib/basedriver/driver.js:388</p>"},{"location":"reference/classes/appium_base_driver-1.BaseDriver/#validatelocatorstrategy","title":"validateLocatorStrategy","text":"<p>\u25b8 validateLocatorStrategy(<code>strategy</code>, <code>webContext?</code>): <code>void</code></p>"},{"location":"reference/classes/appium_base_driver-1.BaseDriver/#parameters_46","title":"Parameters","text":"Name Type Default value <code>strategy</code> <code>string</code> <code>undefined</code> <code>webContext?</code> <code>boolean</code> <code>false</code>"},{"location":"reference/classes/appium_base_driver-1.BaseDriver/#returns_65","title":"Returns","text":"<p><code>void</code></p>"},{"location":"reference/classes/appium_base_driver-1.BaseDriver/#inherited-from_102","title":"Inherited from","text":"<p>createBaseDriverClass(BaseDriverCore).validateLocatorStrategy</p>"},{"location":"reference/classes/appium_base_driver-1.BaseDriver/#defined-in_102","title":"Defined in","text":"<p>packages/base-driver/lib/basedriver/core.js:323</p>"},{"location":"reference/classes/appium_base_driver-1.DeviceSettings/","title":"Class: DeviceSettings&lt;T&gt;","text":"<p>@appium/base-driver.DeviceSettings</p> <p><code>Implements</code></p>"},{"location":"reference/classes/appium_base_driver-1.DeviceSettings/#type-parameters","title":"Type parameters","text":"Name <code>T</code>"},{"location":"reference/classes/appium_base_driver-1.DeviceSettings/#table-of-contents","title":"Table of contents","text":""},{"location":"reference/classes/appium_base_driver-1.DeviceSettings/#constructors","title":"Constructors","text":"<ul> <li>constructor</li> </ul>"},{"location":"reference/classes/appium_base_driver-1.DeviceSettings/#properties","title":"Properties","text":"<ul> <li>_onSettingsUpdate</li> <li>_settings</li> </ul>"},{"location":"reference/classes/appium_base_driver-1.DeviceSettings/#methods","title":"Methods","text":"<ul> <li>getSettings</li> <li>update</li> </ul>"},{"location":"reference/classes/appium_base_driver-1.DeviceSettings/#constructors_1","title":"Constructors","text":""},{"location":"reference/classes/appium_base_driver-1.DeviceSettings/#constructor","title":"constructor","text":"<p>\u2022 new DeviceSettings&lt;<code>T</code>&gt;(<code>defaultSettings?</code>, <code>onSettingsUpdate?</code>)</p> <p>Creates a shallow copy of the <code>defaultSettings</code> parameter!</p>"},{"location":"reference/classes/appium_base_driver-1.DeviceSettings/#type-parameters_1","title":"Type parameters","text":"Name <code>T</code>"},{"location":"reference/classes/appium_base_driver-1.DeviceSettings/#parameters","title":"Parameters","text":"Name Type <code>defaultSettings?</code> <code>Record</code>&lt;<code>string</code>, <code>T</code>&gt; <code>onSettingsUpdate?</code> <code>SettingsUpdateListener</code>&lt;<code>T</code>&gt;"},{"location":"reference/classes/appium_base_driver-1.DeviceSettings/#defined-in","title":"Defined in","text":"<p>packages/base-driver/lib/basedriver/device-settings.js:33</p>"},{"location":"reference/classes/appium_base_driver-1.DeviceSettings/#properties_1","title":"Properties","text":""},{"location":"reference/classes/appium_base_driver-1.DeviceSettings/#_onsettingsupdate","title":"_onSettingsUpdate","text":"<p>\u2022 <code>Protected</code> _onSettingsUpdate: <code>SettingsUpdateListener</code>&lt;<code>T</code>&gt;</p>"},{"location":"reference/classes/appium_base_driver-1.DeviceSettings/#defined-in_1","title":"Defined in","text":"<p>packages/base-driver/lib/basedriver/device-settings.js:26</p>"},{"location":"reference/classes/appium_base_driver-1.DeviceSettings/#_settings","title":"_settings","text":"<p>\u2022 <code>Protected</code> _settings: <code>Record</code>&lt;<code>string</code>, <code>T</code>&gt;</p>"},{"location":"reference/classes/appium_base_driver-1.DeviceSettings/#defined-in_2","title":"Defined in","text":"<p>packages/base-driver/lib/basedriver/device-settings.js:20</p>"},{"location":"reference/classes/appium_base_driver-1.DeviceSettings/#methods_1","title":"Methods","text":""},{"location":"reference/classes/appium_base_driver-1.DeviceSettings/#getsettings","title":"getSettings","text":"<p>\u25b8 getSettings(): <code>Record</code>&lt;<code>string</code>, <code>T</code>&gt;</p>"},{"location":"reference/classes/appium_base_driver-1.DeviceSettings/#returns","title":"Returns","text":"<p><code>Record</code>&lt;<code>string</code>, <code>T</code>&gt;</p>"},{"location":"reference/classes/appium_base_driver-1.DeviceSettings/#defined-in_3","title":"Defined in","text":"<p>packages/base-driver/lib/basedriver/device-settings.js:70</p>"},{"location":"reference/classes/appium_base_driver-1.DeviceSettings/#update","title":"update","text":"<p>\u25b8 update(<code>newSettings</code>): <code>Promise</code>&lt;<code>void</code>&gt;</p> <p>calls updateSettings from implementing driver every time a setting is changed.</p>"},{"location":"reference/classes/appium_base_driver-1.DeviceSettings/#parameters_1","title":"Parameters","text":"Name Type <code>newSettings</code> <code>Record</code>&lt;<code>string</code>, <code>T</code>&gt;"},{"location":"reference/classes/appium_base_driver-1.DeviceSettings/#returns_1","title":"Returns","text":"<p><code>Promise</code>&lt;<code>void</code>&gt;</p>"},{"location":"reference/classes/appium_base_driver-1.DeviceSettings/#defined-in_4","title":"Defined in","text":"<p>packages/base-driver/lib/basedriver/device-settings.js:42</p>"},{"location":"reference/classes/appium_base_driver-1.DriverCore/","title":"Class: DriverCore&lt;C&gt;","text":"<p>@appium/base-driver.DriverCore</p> <p><code>Implements</code></p>"},{"location":"reference/classes/appium_base_driver-1.DriverCore/#type-parameters","title":"Type parameters","text":"Name Type <code>C</code> <code>BaseDriverCapConstraints</code>"},{"location":"reference/classes/appium_base_driver-1.DriverCore/#table-of-contents","title":"Table of contents","text":""},{"location":"reference/classes/appium_base_driver-1.DriverCore/#constructors","title":"Constructors","text":"<ul> <li>constructor</li> </ul>"},{"location":"reference/classes/appium_base_driver-1.DriverCore/#properties","title":"Properties","text":"<ul> <li>_eventHistory</li> <li>_log</li> <li>allowInsecure</li> <li>basePath</li> <li>commandsQueueGuard</li> <li>denyInsecure</li> <li>eventEmitter</li> <li>helpers</li> <li>implicitWaitMs</li> <li>initialOpts</li> <li>locatorStrategies</li> <li>managedDrivers</li> <li>newCommandTimeoutMs</li> <li>noCommandTimer</li> <li>opts</li> <li>protocol</li> <li>relaxedSecurityEnabled</li> <li>sessionId</li> <li>settings</li> <li>shouldValidateCaps</li> <li>shutdownUnexpectedly</li> <li>webLocatorStrategies</li> <li>baseVersion</li> <li>executeMethodMap</li> </ul>"},{"location":"reference/classes/appium_base_driver-1.DriverCore/#accessors","title":"Accessors","text":"<ul> <li>driverData</li> <li>eventHistory</li> <li>isCommandsQueueEnabled</li> <li>log</li> </ul>"},{"location":"reference/classes/appium_base_driver-1.DriverCore/#methods","title":"Methods","text":"<ul> <li>addManagedDriver</li> <li>assertFeatureEnabled</li> <li>canProxy</li> <li>clearNewCommandTimeout</li> <li>driverForSession</li> <li>ensureFeatureEnabled</li> <li>getManagedDrivers</li> <li>getProxyAvoidList</li> <li>getStatus</li> <li>isFeatureEnabled</li> <li>isMjsonwpProtocol</li> <li>isW3CProtocol</li> <li>logEvent</li> <li>onUnexpectedShutdown</li> <li>proxyActive</li> <li>proxyRouteIsAvoided</li> <li>sessionExists</li> <li>setProtocolMJSONWP</li> <li>setProtocolW3C</li> <li>validateLocatorStrategy</li> </ul>"},{"location":"reference/classes/appium_base_driver-1.DriverCore/#constructors_1","title":"Constructors","text":""},{"location":"reference/classes/appium_base_driver-1.DriverCore/#constructor","title":"constructor","text":"<p>\u2022 new DriverCore&lt;<code>C</code>&gt;(<code>opts?</code>, <code>shouldValidateCaps?</code>)</p>"},{"location":"reference/classes/appium_base_driver-1.DriverCore/#type-parameters_1","title":"Type parameters","text":"Name Type <code>C</code> extends <code>Readonly</code>&lt;<code>Record</code>&lt;<code>string</code>, <code>Constraint</code>&gt;&gt; = typeof <code>BASE_DESIRED_CAP_CONSTRAINTS</code>"},{"location":"reference/classes/appium_base_driver-1.DriverCore/#parameters","title":"Parameters","text":"Name Type Default value <code>opts</code> <code>DriverOpts</code>&lt;<code>C</code>&gt; <code>undefined</code> <code>shouldValidateCaps?</code> <code>boolean</code> <code>true</code>"},{"location":"reference/classes/appium_base_driver-1.DriverCore/#defined-in","title":"Defined in","text":"<p>packages/base-driver/lib/basedriver/core.js:125</p>"},{"location":"reference/classes/appium_base_driver-1.DriverCore/#properties_1","title":"Properties","text":""},{"location":"reference/classes/appium_base_driver-1.DriverCore/#_eventhistory","title":"_eventHistory","text":"<p>\u2022 _eventHistory: <code>EventHistory</code></p>"},{"location":"reference/classes/appium_base_driver-1.DriverCore/#defined-in_1","title":"Defined in","text":"<p>packages/base-driver/lib/basedriver/core.js:87</p>"},{"location":"reference/classes/appium_base_driver-1.DriverCore/#_log","title":"_log","text":"<p>\u2022 _log: <code>AppiumLogger</code></p>"},{"location":"reference/classes/appium_base_driver-1.DriverCore/#defined-in_2","title":"Defined in","text":"<p>packages/base-driver/lib/basedriver/core.js:96</p>"},{"location":"reference/classes/appium_base_driver-1.DriverCore/#allowinsecure","title":"allowInsecure","text":"<p>\u2022 allowInsecure: <code>string</code>[] = <code>[]</code></p>"},{"location":"reference/classes/appium_base_driver-1.DriverCore/#defined-in_3","title":"Defined in","text":"<p>packages/base-driver/lib/basedriver/core.js:65</p>"},{"location":"reference/classes/appium_base_driver-1.DriverCore/#basepath","title":"basePath","text":"<p>\u2022 basePath: <code>string</code> = <code>DEFAULT_BASE_PATH</code></p> <p>basePath is used for several purposes, for example in setting up proxying to other drivers, since we need to know what the base path of any incoming request might look like. We set it to the default initially but it is automatically updated during any actual program execution by the routeConfiguringFunction, which is necessarily run as the entrypoint for any Appium server</p>"},{"location":"reference/classes/appium_base_driver-1.DriverCore/#defined-in_4","title":"Defined in","text":"<p>packages/base-driver/lib/basedriver/core.js:60</p>"},{"location":"reference/classes/appium_base_driver-1.DriverCore/#commandsqueueguard","title":"commandsQueueGuard","text":"<p>\u2022 <code>Protected</code> commandsQueueGuard: <code>AsyncLock</code></p>"},{"location":"reference/classes/appium_base_driver-1.DriverCore/#defined-in_5","title":"Defined in","text":"<p>packages/base-driver/lib/basedriver/core.js:111</p>"},{"location":"reference/classes/appium_base_driver-1.DriverCore/#denyinsecure","title":"denyInsecure","text":"<p>\u2022 denyInsecure: <code>string</code>[] = <code>[]</code></p>"},{"location":"reference/classes/appium_base_driver-1.DriverCore/#defined-in_6","title":"Defined in","text":"<p>packages/base-driver/lib/basedriver/core.js:68</p>"},{"location":"reference/classes/appium_base_driver-1.DriverCore/#eventemitter","title":"eventEmitter","text":"<p>\u2022 eventEmitter: <code>EventEmitter</code></p>"},{"location":"reference/classes/appium_base_driver-1.DriverCore/#defined-in_7","title":"Defined in","text":"<p>packages/base-driver/lib/basedriver/core.js:91</p>"},{"location":"reference/classes/appium_base_driver-1.DriverCore/#helpers","title":"helpers","text":"<p>\u2022 helpers: <code>DriverHelpers</code>&lt;<code>any</code>&gt; = <code>helpers</code></p>"},{"location":"reference/classes/appium_base_driver-1.DriverCore/#defined-in_8","title":"Defined in","text":"<p>packages/base-driver/lib/basedriver/core.js:50</p>"},{"location":"reference/classes/appium_base_driver-1.DriverCore/#implicitwaitms","title":"implicitWaitMs","text":"<p>\u2022 implicitWaitMs: <code>number</code> = <code>0</code></p>"},{"location":"reference/classes/appium_base_driver-1.DriverCore/#defined-in_9","title":"Defined in","text":"<p>packages/base-driver/lib/basedriver/core.js:72</p>"},{"location":"reference/classes/appium_base_driver-1.DriverCore/#initialopts","title":"initialOpts","text":"<p>\u2022 initialOpts: <code>ServerArgs</code></p>"},{"location":"reference/classes/appium_base_driver-1.DriverCore/#defined-in_10","title":"Defined in","text":"<p>packages/base-driver/lib/basedriver/core.js:48</p>"},{"location":"reference/classes/appium_base_driver-1.DriverCore/#locatorstrategies","title":"locatorStrategies","text":"<p>\u2022 locatorStrategies: <code>string</code>[] = <code>[]</code></p>"},{"location":"reference/classes/appium_base_driver-1.DriverCore/#defined-in_11","title":"Defined in","text":"<p>packages/base-driver/lib/basedriver/core.js:75</p>"},{"location":"reference/classes/appium_base_driver-1.DriverCore/#manageddrivers","title":"managedDrivers","text":"<p>\u2022 managedDrivers: <code>Driver</code>&lt;typeof <code>BASE_DESIRED_CAP_CONSTRAINTS</code>, <code>StringRecord</code>, <code>any</code>&gt;[] = <code>[]</code></p>"},{"location":"reference/classes/appium_base_driver-1.DriverCore/#defined-in_12","title":"Defined in","text":"<p>packages/base-driver/lib/basedriver/core.js:81</p>"},{"location":"reference/classes/appium_base_driver-1.DriverCore/#newcommandtimeoutms","title":"newCommandTimeoutMs","text":"<p>\u2022 newCommandTimeoutMs: <code>number</code> = <code>NEW_COMMAND_TIMEOUT_MS</code></p>"},{"location":"reference/classes/appium_base_driver-1.DriverCore/#defined-in_13","title":"Defined in","text":"<p>packages/base-driver/lib/basedriver/core.js:70</p>"},{"location":"reference/classes/appium_base_driver-1.DriverCore/#nocommandtimer","title":"noCommandTimer","text":"<p>\u2022 noCommandTimer: <code>null</code> | <code>Timeout</code> = <code>null</code></p>"},{"location":"reference/classes/appium_base_driver-1.DriverCore/#defined-in_14","title":"Defined in","text":"<p>packages/base-driver/lib/basedriver/core.js:84</p>"},{"location":"reference/classes/appium_base_driver-1.DriverCore/#opts","title":"opts","text":"<p>\u2022 opts: <code>DriverOpts</code>&lt;<code>C</code>&gt;</p>"},{"location":"reference/classes/appium_base_driver-1.DriverCore/#defined-in_15","title":"Defined in","text":"<p>packages/base-driver/lib/basedriver/core.js:43</p>"},{"location":"reference/classes/appium_base_driver-1.DriverCore/#protocol","title":"protocol","text":"<p>\u2022 protocol: <code>undefined</code> | <code>string</code></p>"},{"location":"reference/classes/appium_base_driver-1.DriverCore/#defined-in_16","title":"Defined in","text":"<p>packages/base-driver/lib/basedriver/core.js:254</p> <p>packages/base-driver/lib/basedriver/core.js:258</p>"},{"location":"reference/classes/appium_base_driver-1.DriverCore/#relaxedsecurityenabled","title":"relaxedSecurityEnabled","text":"<p>\u2022 relaxedSecurityEnabled: <code>boolean</code> = <code>false</code></p>"},{"location":"reference/classes/appium_base_driver-1.DriverCore/#defined-in_17","title":"Defined in","text":"<p>packages/base-driver/lib/basedriver/core.js:62</p>"},{"location":"reference/classes/appium_base_driver-1.DriverCore/#sessionid","title":"sessionId","text":"<p>\u2022 sessionId: <code>null</code> | <code>string</code> = <code>null</code></p>"},{"location":"reference/classes/appium_base_driver-1.DriverCore/#defined-in_18","title":"Defined in","text":"<p>packages/base-driver/lib/basedriver/core.js:38</p>"},{"location":"reference/classes/appium_base_driver-1.DriverCore/#settings","title":"settings","text":"<p>\u2022 settings: <code>DeviceSettings</code>&lt;<code>any</code>&gt;</p> <p>settings should be instantiated by drivers which extend BaseDriver, but we set it to an empty DeviceSettings instance here to make sure that the default settings are applied even if an extending driver doesn't utilize the settings functionality itself</p>"},{"location":"reference/classes/appium_base_driver-1.DriverCore/#defined-in_19","title":"Defined in","text":"<p>packages/base-driver/lib/basedriver/core.js:119</p>"},{"location":"reference/classes/appium_base_driver-1.DriverCore/#shouldvalidatecaps","title":"shouldValidateCaps","text":"<p>\u2022 shouldValidateCaps: <code>boolean</code></p>"},{"location":"reference/classes/appium_base_driver-1.DriverCore/#defined-in_20","title":"Defined in","text":"<p>packages/base-driver/lib/basedriver/core.js:106</p>"},{"location":"reference/classes/appium_base_driver-1.DriverCore/#shutdownunexpectedly","title":"shutdownUnexpectedly","text":"<p>\u2022 <code>Protected</code> shutdownUnexpectedly: <code>boolean</code> = <code>false</code></p>"},{"location":"reference/classes/appium_base_driver-1.DriverCore/#defined-in_21","title":"Defined in","text":"<p>packages/base-driver/lib/basedriver/core.js:101</p>"},{"location":"reference/classes/appium_base_driver-1.DriverCore/#weblocatorstrategies","title":"webLocatorStrategies","text":"<p>\u2022 webLocatorStrategies: <code>string</code>[] = <code>[]</code></p>"},{"location":"reference/classes/appium_base_driver-1.DriverCore/#defined-in_22","title":"Defined in","text":"<p>packages/base-driver/lib/basedriver/core.js:78</p>"},{"location":"reference/classes/appium_base_driver-1.DriverCore/#baseversion","title":"baseVersion","text":"<p>\u25aa <code>Static</code> baseVersion: <code>any</code> = <code>BASEDRIVER_VER</code></p> <p>Make the basedriver version available so for any driver which inherits from this package, we know which version of basedriver it inherited from</p>"},{"location":"reference/classes/appium_base_driver-1.DriverCore/#defined-in_23","title":"Defined in","text":"<p>packages/base-driver/lib/basedriver/core.js:30</p>"},{"location":"reference/classes/appium_base_driver-1.DriverCore/#executemethodmap","title":"executeMethodMap","text":"<p>\u25aa <code>Static</code> executeMethodMap: <code>Readonly</code>&lt;<code>Record</code>&lt;<code>string</code>, <code>Readonly</code>&lt;<code>ExecuteMethodDef</code>&lt;<code>DriverCore</code>&lt;typeof <code>BASE_DESIRED_CAP_CONSTRAINTS</code>&gt;&gt;&gt;&gt;&gt; = <code>{}</code></p>"},{"location":"reference/classes/appium_base_driver-1.DriverCore/#defined-in_24","title":"Defined in","text":"<p>packages/base-driver/lib/basedriver/core.js:33</p>"},{"location":"reference/classes/appium_base_driver-1.DriverCore/#accessors_1","title":"Accessors","text":""},{"location":"reference/classes/appium_base_driver-1.DriverCore/#driverdata","title":"driverData","text":"<p>\u2022 <code>get</code> driverData(): <code>Record</code>&lt;<code>string</code>, <code>unknown</code>&gt;</p> <p>This property is used by AppiumDriver to store the data of the specific driver sessions. This data can be later used to adjust properties for driver instances running in parallel. Override it in inherited driver classes if necessary.</p>"},{"location":"reference/classes/appium_base_driver-1.DriverCore/#returns","title":"Returns","text":"<p><code>Record</code>&lt;<code>string</code>, <code>unknown</code>&gt;</p> <p>Driver properties mapping</p>"},{"location":"reference/classes/appium_base_driver-1.DriverCore/#defined-in_25","title":"Defined in","text":"<p>packages/base-driver/lib/basedriver/core.js:169</p>"},{"location":"reference/classes/appium_base_driver-1.DriverCore/#eventhistory","title":"eventHistory","text":"<p>\u2022 <code>get</code> eventHistory(): <code>EventHistory</code></p>"},{"location":"reference/classes/appium_base_driver-1.DriverCore/#returns_1","title":"Returns","text":"<p><code>EventHistory</code></p>"},{"location":"reference/classes/appium_base_driver-1.DriverCore/#defined-in_26","title":"Defined in","text":"<p>packages/base-driver/lib/basedriver/core.js:192</p>"},{"location":"reference/classes/appium_base_driver-1.DriverCore/#iscommandsqueueenabled","title":"isCommandsQueueEnabled","text":"<p>\u2022 <code>get</code> isCommandsQueueEnabled(): <code>boolean</code></p> <p>This property controls the way the <code>executeCommand</code> method handles new driver commands received from the client. Override it for inherited classes only in special cases.</p>"},{"location":"reference/classes/appium_base_driver-1.DriverCore/#returns_2","title":"Returns","text":"<p><code>boolean</code></p> <p>If the returned value is true (default) then all the commands   received by the particular driver instance are going to be put into the queue,   so each following command will not be executed until the previous command   execution is completed. False value disables that queue, so each driver command   is executed independently and does not wait for anything.</p>"},{"location":"reference/classes/appium_base_driver-1.DriverCore/#defined-in_27","title":"Defined in","text":"<p>packages/base-driver/lib/basedriver/core.js:184</p>"},{"location":"reference/classes/appium_base_driver-1.DriverCore/#log","title":"log","text":"<p>\u2022 <code>get</code> log(): <code>AppiumLogger</code></p>"},{"location":"reference/classes/appium_base_driver-1.DriverCore/#returns_3","title":"Returns","text":"<p><code>AppiumLogger</code></p>"},{"location":"reference/classes/appium_base_driver-1.DriverCore/#defined-in_28","title":"Defined in","text":"<p>packages/base-driver/lib/basedriver/core.js:144</p>"},{"location":"reference/classes/appium_base_driver-1.DriverCore/#methods_1","title":"Methods","text":""},{"location":"reference/classes/appium_base_driver-1.DriverCore/#addmanageddriver","title":"addManagedDriver","text":"<p>\u25b8 addManagedDriver(<code>driver</code>): <code>void</code></p>"},{"location":"reference/classes/appium_base_driver-1.DriverCore/#parameters_1","title":"Parameters","text":"Name Type <code>driver</code> <code>Driver</code>&lt;typeof <code>BASE_DESIRED_CAP_CONSTRAINTS</code>, <code>StringRecord</code>, <code>any</code>&gt;"},{"location":"reference/classes/appium_base_driver-1.DriverCore/#returns_4","title":"Returns","text":"<p><code>void</code></p>"},{"location":"reference/classes/appium_base_driver-1.DriverCore/#defined-in_29","title":"Defined in","text":"<p>packages/base-driver/lib/basedriver/core.js:402</p>"},{"location":"reference/classes/appium_base_driver-1.DriverCore/#assertfeatureenabled","title":"assertFeatureEnabled","text":"<p>\u25b8 assertFeatureEnabled(<code>name</code>): <code>void</code></p> <p>Assert that a given feature is enabled and throw a helpful error if it's not</p>"},{"location":"reference/classes/appium_base_driver-1.DriverCore/#parameters_2","title":"Parameters","text":"Name Type Description <code>name</code> <code>string</code> name of feature/command"},{"location":"reference/classes/appium_base_driver-1.DriverCore/#returns_5","title":"Returns","text":"<p><code>void</code></p>"},{"location":"reference/classes/appium_base_driver-1.DriverCore/#defined-in_30","title":"Defined in","text":"<p>packages/base-driver/lib/basedriver/core.js:306</p>"},{"location":"reference/classes/appium_base_driver-1.DriverCore/#canproxy","title":"canProxy","text":"<p>\u25b8 canProxy(<code>sessionId?</code>): <code>boolean</code></p>"},{"location":"reference/classes/appium_base_driver-1.DriverCore/#parameters_3","title":"Parameters","text":"Name Type <code>sessionId?</code> <code>string</code>"},{"location":"reference/classes/appium_base_driver-1.DriverCore/#returns_6","title":"Returns","text":"<p><code>boolean</code></p>"},{"location":"reference/classes/appium_base_driver-1.DriverCore/#defined-in_31","title":"Defined in","text":"<p>packages/base-driver/lib/basedriver/core.js:361</p>"},{"location":"reference/classes/appium_base_driver-1.DriverCore/#clearnewcommandtimeout","title":"clearNewCommandTimeout","text":"<p>\u25b8 clearNewCommandTimeout(): <code>Promise</code>&lt;<code>void</code>&gt;</p>"},{"location":"reference/classes/appium_base_driver-1.DriverCore/#returns_7","title":"Returns","text":"<p><code>Promise</code>&lt;<code>void</code>&gt;</p>"},{"location":"reference/classes/appium_base_driver-1.DriverCore/#defined-in_32","title":"Defined in","text":"<p>packages/base-driver/lib/basedriver/core.js:410</p>"},{"location":"reference/classes/appium_base_driver-1.DriverCore/#driverforsession","title":"driverForSession","text":"<p>\u25b8 driverForSession(<code>sessionId</code>): <code>null</code> | <code>Core</code>&lt;<code>C</code>&gt;</p> <p>method required by MJSONWP in order to determine if the command should be proxied directly to the driver</p>"},{"location":"reference/classes/appium_base_driver-1.DriverCore/#parameters_4","title":"Parameters","text":"Name Type <code>sessionId</code> <code>string</code>"},{"location":"reference/classes/appium_base_driver-1.DriverCore/#returns_8","title":"Returns","text":"<p><code>null</code> | <code>Core</code>&lt;<code>C</code>&gt;</p>"},{"location":"reference/classes/appium_base_driver-1.DriverCore/#defined-in_33","title":"Defined in","text":"<p>packages/base-driver/lib/basedriver/core.js:241</p>"},{"location":"reference/classes/appium_base_driver-1.DriverCore/#ensurefeatureenabled","title":"ensureFeatureEnabled","text":"<p>\u25b8 ensureFeatureEnabled(<code>name</code>): <code>void</code></p> <p>Assert that a given feature is enabled and throw a helpful error if it's not</p> <p><code>Deprecated</code></p>"},{"location":"reference/classes/appium_base_driver-1.DriverCore/#parameters_5","title":"Parameters","text":"Name Type Description <code>name</code> <code>string</code> name of feature/command"},{"location":"reference/classes/appium_base_driver-1.DriverCore/#returns_9","title":"Returns","text":"<p><code>void</code></p>"},{"location":"reference/classes/appium_base_driver-1.DriverCore/#defined-in_34","title":"Defined in","text":"<p>packages/base-driver/lib/basedriver/core.js:296</p>"},{"location":"reference/classes/appium_base_driver-1.DriverCore/#getmanageddrivers","title":"getManagedDrivers","text":"<p>\u25b8 getManagedDrivers(): <code>Driver</code>&lt;typeof <code>BASE_DESIRED_CAP_CONSTRAINTS</code>, <code>StringRecord</code>, <code>any</code>&gt;[]</p>"},{"location":"reference/classes/appium_base_driver-1.DriverCore/#returns_10","title":"Returns","text":"<p><code>Driver</code>&lt;typeof <code>BASE_DESIRED_CAP_CONSTRAINTS</code>, <code>StringRecord</code>, <code>any</code>&gt;[]</p>"},{"location":"reference/classes/appium_base_driver-1.DriverCore/#defined-in_35","title":"Defined in","text":"<p>packages/base-driver/lib/basedriver/core.js:406</p>"},{"location":"reference/classes/appium_base_driver-1.DriverCore/#getproxyavoidlist","title":"getProxyAvoidList","text":"<p>\u25b8 getProxyAvoidList(<code>sessionId</code>): <code>RouteMatcher</code>[]</p>"},{"location":"reference/classes/appium_base_driver-1.DriverCore/#parameters_6","title":"Parameters","text":"Name Type <code>sessionId</code> <code>string</code>"},{"location":"reference/classes/appium_base_driver-1.DriverCore/#returns_11","title":"Returns","text":"<p><code>RouteMatcher</code>[]</p>"},{"location":"reference/classes/appium_base_driver-1.DriverCore/#defined-in_36","title":"Defined in","text":"<p>packages/base-driver/lib/basedriver/core.js:352</p>"},{"location":"reference/classes/appium_base_driver-1.DriverCore/#getstatus","title":"getStatus","text":"<p>\u25b8 getStatus(): <code>Promise</code>&lt;{}&gt;</p>"},{"location":"reference/classes/appium_base_driver-1.DriverCore/#returns_12","title":"Returns","text":"<p><code>Promise</code>&lt;{}&gt;</p>"},{"location":"reference/classes/appium_base_driver-1.DriverCore/#defined-in_37","title":"Defined in","text":"<p>packages/base-driver/lib/basedriver/core.js:220</p>"},{"location":"reference/classes/appium_base_driver-1.DriverCore/#isfeatureenabled","title":"isFeatureEnabled","text":"<p>\u25b8 isFeatureEnabled(<code>name</code>): <code>boolean</code></p> <p>Check whether a given feature is enabled via its name</p>"},{"location":"reference/classes/appium_base_driver-1.DriverCore/#parameters_7","title":"Parameters","text":"Name Type Description <code>name</code> <code>string</code> name of feature/command"},{"location":"reference/classes/appium_base_driver-1.DriverCore/#returns_13","title":"Returns","text":"<p><code>boolean</code></p>"},{"location":"reference/classes/appium_base_driver-1.DriverCore/#defined-in_38","title":"Defined in","text":"<p>packages/base-driver/lib/basedriver/core.js:268</p>"},{"location":"reference/classes/appium_base_driver-1.DriverCore/#ismjsonwpprotocol","title":"isMjsonwpProtocol","text":"<p>\u25b8 isMjsonwpProtocol(): <code>boolean</code></p>"},{"location":"reference/classes/appium_base_driver-1.DriverCore/#returns_14","title":"Returns","text":"<p><code>boolean</code></p>"},{"location":"reference/classes/appium_base_driver-1.DriverCore/#defined-in_39","title":"Defined in","text":"<p>packages/base-driver/lib/basedriver/core.js:245</p>"},{"location":"reference/classes/appium_base_driver-1.DriverCore/#isw3cprotocol","title":"isW3CProtocol","text":"<p>\u25b8 isW3CProtocol(): <code>boolean</code></p>"},{"location":"reference/classes/appium_base_driver-1.DriverCore/#returns_15","title":"Returns","text":"<p><code>boolean</code></p>"},{"location":"reference/classes/appium_base_driver-1.DriverCore/#defined-in_40","title":"Defined in","text":"<p>packages/base-driver/lib/basedriver/core.js:249</p>"},{"location":"reference/classes/appium_base_driver-1.DriverCore/#logevent","title":"logEvent","text":"<p>\u25b8 logEvent(<code>eventName</code>): <code>void</code></p> <p>API method for driver developers to log timings for important events</p>"},{"location":"reference/classes/appium_base_driver-1.DriverCore/#parameters_8","title":"Parameters","text":"Name Type <code>eventName</code> <code>string</code>"},{"location":"reference/classes/appium_base_driver-1.DriverCore/#returns_16","title":"Returns","text":"<p><code>void</code></p>"},{"location":"reference/classes/appium_base_driver-1.DriverCore/#defined-in_41","title":"Defined in","text":"<p>packages/base-driver/lib/basedriver/core.js:200</p>"},{"location":"reference/classes/appium_base_driver-1.DriverCore/#onunexpectedshutdown","title":"onUnexpectedShutdown","text":"<p>\u25b8 onUnexpectedShutdown(<code>handler</code>): <code>void</code></p> <p>Set a callback handler if needed to execute a custom piece of code when the driver is shut down unexpectedly. Multiple calls to this method will cause the handler to be executed mutiple times</p>"},{"location":"reference/classes/appium_base_driver-1.DriverCore/#parameters_9","title":"Parameters","text":"Name Type Description <code>handler</code> (...<code>args</code>: <code>any</code>[]) =&gt; <code>void</code> The code to be executed on unexpected shutdown. The function may accept one argument, which is the actual error instance, which caused the driver to shut down."},{"location":"reference/classes/appium_base_driver-1.DriverCore/#returns_17","title":"Returns","text":"<p><code>void</code></p>"},{"location":"reference/classes/appium_base_driver-1.DriverCore/#defined-in_42","title":"Defined in","text":"<p>packages/base-driver/lib/basedriver/core.js:157</p>"},{"location":"reference/classes/appium_base_driver-1.DriverCore/#proxyactive","title":"proxyActive","text":"<p>\u25b8 proxyActive(<code>sessionId?</code>): <code>boolean</code></p>"},{"location":"reference/classes/appium_base_driver-1.DriverCore/#parameters_10","title":"Parameters","text":"Name Type <code>sessionId?</code> <code>string</code>"},{"location":"reference/classes/appium_base_driver-1.DriverCore/#returns_18","title":"Returns","text":"<p><code>boolean</code></p>"},{"location":"reference/classes/appium_base_driver-1.DriverCore/#defined-in_43","title":"Defined in","text":"<p>packages/base-driver/lib/basedriver/core.js:343</p>"},{"location":"reference/classes/appium_base_driver-1.DriverCore/#proxyrouteisavoided","title":"proxyRouteIsAvoided","text":"<p>\u25b8 proxyRouteIsAvoided(<code>sessionId</code>, <code>method</code>, <code>url</code>, <code>body?</code>): <code>boolean</code></p> <p>Whether a given command route (expressed as method and url) should not be proxied according to this driver</p>"},{"location":"reference/classes/appium_base_driver-1.DriverCore/#parameters_11","title":"Parameters","text":"Name Type Description <code>sessionId</code> <code>string</code> the current sessionId (in case the driver runs multiple session ids and requires it). This is not used in this method but should be made available to overridden methods. <code>method</code> <code>HTTPMethod</code> HTTP method of the route <code>url</code> <code>string</code> url of the route <code>body?</code> <code>any</code> webdriver request body"},{"location":"reference/classes/appium_base_driver-1.DriverCore/#returns_19","title":"Returns","text":"<p><code>boolean</code></p> <ul> <li>whether the route should be avoided</li> </ul>"},{"location":"reference/classes/appium_base_driver-1.DriverCore/#defined-in_44","title":"Defined in","text":"<p>packages/base-driver/lib/basedriver/core.js:378</p>"},{"location":"reference/classes/appium_base_driver-1.DriverCore/#sessionexists","title":"sessionExists","text":"<p>\u25b8 sessionExists(<code>sessionId?</code>): <code>boolean</code></p> <p>method required by MJSONWP in order to determine whether it should respond with an invalid session response</p>"},{"location":"reference/classes/appium_base_driver-1.DriverCore/#parameters_12","title":"Parameters","text":"Name Type <code>sessionId?</code> <code>string</code>"},{"location":"reference/classes/appium_base_driver-1.DriverCore/#returns_20","title":"Returns","text":"<p><code>boolean</code></p>"},{"location":"reference/classes/appium_base_driver-1.DriverCore/#defined-in_45","title":"Defined in","text":"<p>packages/base-driver/lib/basedriver/core.js:230</p>"},{"location":"reference/classes/appium_base_driver-1.DriverCore/#setprotocolmjsonwp","title":"setProtocolMJSONWP","text":"<p>\u25b8 setProtocolMJSONWP(): <code>void</code></p>"},{"location":"reference/classes/appium_base_driver-1.DriverCore/#returns_21","title":"Returns","text":"<p><code>void</code></p>"},{"location":"reference/classes/appium_base_driver-1.DriverCore/#defined-in_46","title":"Defined in","text":"<p>packages/base-driver/lib/basedriver/core.js:253</p>"},{"location":"reference/classes/appium_base_driver-1.DriverCore/#setprotocolw3c","title":"setProtocolW3C","text":"<p>\u25b8 setProtocolW3C(): <code>void</code></p>"},{"location":"reference/classes/appium_base_driver-1.DriverCore/#returns_22","title":"Returns","text":"<p><code>void</code></p>"},{"location":"reference/classes/appium_base_driver-1.DriverCore/#defined-in_47","title":"Defined in","text":"<p>packages/base-driver/lib/basedriver/core.js:257</p>"},{"location":"reference/classes/appium_base_driver-1.DriverCore/#validatelocatorstrategy","title":"validateLocatorStrategy","text":"<p>\u25b8 validateLocatorStrategy(<code>strategy</code>, <code>webContext?</code>): <code>void</code></p>"},{"location":"reference/classes/appium_base_driver-1.DriverCore/#parameters_13","title":"Parameters","text":"Name Type Default value <code>strategy</code> <code>string</code> <code>undefined</code> <code>webContext?</code> <code>boolean</code> <code>false</code>"},{"location":"reference/classes/appium_base_driver-1.DriverCore/#returns_23","title":"Returns","text":"<p><code>void</code></p>"},{"location":"reference/classes/appium_base_driver-1.DriverCore/#defined-in_48","title":"Defined in","text":"<p>packages/base-driver/lib/basedriver/core.js:323</p>"},{"location":"reference/classes/appium_base_driver-1.JWProxy/","title":"Class: JWProxy","text":"<p>@appium/base-driver.JWProxy</p>"},{"location":"reference/classes/appium_base_driver-1.JWProxy/#table-of-contents","title":"Table of contents","text":""},{"location":"reference/classes/appium_base_driver-1.JWProxy/#constructors","title":"Constructors","text":"<ul> <li>constructor</li> </ul>"},{"location":"reference/classes/appium_base_driver-1.JWProxy/#properties","title":"Properties","text":"<ul> <li>_activeRequests</li> <li>_downstreamProtocol</li> <li>_log</li> <li>base</li> <li>httpAgent</li> <li>httpsAgent</li> <li>port</li> <li>protocolConverter</li> <li>reqBasePath</li> <li>scheme</li> <li>server</li> <li>sessionId</li> <li>timeout</li> </ul>"},{"location":"reference/classes/appium_base_driver-1.JWProxy/#accessors","title":"Accessors","text":"<ul> <li>downstreamProtocol</li> <li>log</li> </ul>"},{"location":"reference/classes/appium_base_driver-1.JWProxy/#methods","title":"Methods","text":"<ul> <li>cancelActiveRequests</li> <li>command</li> <li>endpointRequiresSessionId</li> <li>getActiveRequestsCount</li> <li>getProtocolFromResBody</li> <li>getSessionIdFromUrl</li> <li>getUrlForProxy</li> <li>proxy</li> <li>proxyCommand</li> <li>proxyReqRes</li> <li>request</li> <li>requestToCommandName</li> </ul>"},{"location":"reference/classes/appium_base_driver-1.JWProxy/#constructors_1","title":"Constructors","text":""},{"location":"reference/classes/appium_base_driver-1.JWProxy/#constructor","title":"constructor","text":"<p>\u2022 new JWProxy(<code>opts?</code>)</p>"},{"location":"reference/classes/appium_base_driver-1.JWProxy/#parameters","title":"Parameters","text":"Name Type <code>opts</code> <code>Object</code>"},{"location":"reference/classes/appium_base_driver-1.JWProxy/#defined-in","title":"Defined in","text":"<p>packages/base-driver/lib/jsonwp-proxy/proxy.js:53</p>"},{"location":"reference/classes/appium_base_driver-1.JWProxy/#properties_1","title":"Properties","text":""},{"location":"reference/classes/appium_base_driver-1.JWProxy/#_activerequests","title":"_activeRequests","text":"<p>\u2022 _activeRequests: <code>any</code>[]</p>"},{"location":"reference/classes/appium_base_driver-1.JWProxy/#defined-in_1","title":"Defined in","text":"<p>packages/base-driver/lib/jsonwp-proxy/proxy.js:70</p> <p>packages/base-driver/lib/jsonwp-proxy/proxy.js:111</p>"},{"location":"reference/classes/appium_base_driver-1.JWProxy/#_downstreamprotocol","title":"_downstreamProtocol","text":"<p>\u2022 _downstreamProtocol: <code>any</code></p>"},{"location":"reference/classes/appium_base_driver-1.JWProxy/#defined-in_2","title":"Defined in","text":"<p>packages/base-driver/lib/jsonwp-proxy/proxy.js:71</p> <p>packages/base-driver/lib/jsonwp-proxy/proxy.js:119</p>"},{"location":"reference/classes/appium_base_driver-1.JWProxy/#_log","title":"_log","text":"<p>\u2022 _log: <code>any</code></p>"},{"location":"reference/classes/appium_base_driver-1.JWProxy/#defined-in_3","title":"Defined in","text":"<p>packages/base-driver/lib/jsonwp-proxy/proxy.js:80</p>"},{"location":"reference/classes/appium_base_driver-1.JWProxy/#base","title":"base","text":"<p>\u2022 base: <code>string</code></p>"},{"location":"reference/classes/appium_base_driver-1.JWProxy/#defined-in_4","title":"Defined in","text":"<p>packages/base-driver/lib/jsonwp-proxy/proxy.js:45</p>"},{"location":"reference/classes/appium_base_driver-1.JWProxy/#httpagent","title":"httpAgent","text":"<p>\u2022 httpAgent: <code>Agent</code></p>"},{"location":"reference/classes/appium_base_driver-1.JWProxy/#defined-in_5","title":"Defined in","text":"<p>packages/base-driver/lib/jsonwp-proxy/proxy.js:77</p>"},{"location":"reference/classes/appium_base_driver-1.JWProxy/#httpsagent","title":"httpsAgent","text":"<p>\u2022 httpsAgent: <code>Agent</code></p>"},{"location":"reference/classes/appium_base_driver-1.JWProxy/#defined-in_6","title":"Defined in","text":"<p>packages/base-driver/lib/jsonwp-proxy/proxy.js:78</p>"},{"location":"reference/classes/appium_base_driver-1.JWProxy/#port","title":"port","text":"<p>\u2022 port: <code>number</code></p>"},{"location":"reference/classes/appium_base_driver-1.JWProxy/#defined-in_7","title":"Defined in","text":"<p>packages/base-driver/lib/jsonwp-proxy/proxy.js:43</p>"},{"location":"reference/classes/appium_base_driver-1.JWProxy/#protocolconverter","title":"protocolConverter","text":"<p>\u2022 protocolConverter: <code>ProtocolConverter</code></p>"},{"location":"reference/classes/appium_base_driver-1.JWProxy/#defined-in_8","title":"Defined in","text":"<p>packages/base-driver/lib/jsonwp-proxy/proxy.js:79</p>"},{"location":"reference/classes/appium_base_driver-1.JWProxy/#reqbasepath","title":"reqBasePath","text":"<p>\u2022 reqBasePath: <code>string</code></p>"},{"location":"reference/classes/appium_base_driver-1.JWProxy/#defined-in_9","title":"Defined in","text":"<p>packages/base-driver/lib/jsonwp-proxy/proxy.js:47</p>"},{"location":"reference/classes/appium_base_driver-1.JWProxy/#scheme","title":"scheme","text":"<p>\u2022 scheme: <code>string</code></p>"},{"location":"reference/classes/appium_base_driver-1.JWProxy/#defined-in_10","title":"Defined in","text":"<p>packages/base-driver/lib/jsonwp-proxy/proxy.js:39</p>"},{"location":"reference/classes/appium_base_driver-1.JWProxy/#server","title":"server","text":"<p>\u2022 server: <code>string</code></p>"},{"location":"reference/classes/appium_base_driver-1.JWProxy/#defined-in_11","title":"Defined in","text":"<p>packages/base-driver/lib/jsonwp-proxy/proxy.js:41</p>"},{"location":"reference/classes/appium_base_driver-1.JWProxy/#sessionid","title":"sessionId","text":"<p>\u2022 sessionId: <code>null</code> | <code>string</code></p>"},{"location":"reference/classes/appium_base_driver-1.JWProxy/#defined-in_12","title":"Defined in","text":"<p>packages/base-driver/lib/jsonwp-proxy/proxy.js:49</p>"},{"location":"reference/classes/appium_base_driver-1.JWProxy/#timeout","title":"timeout","text":"<p>\u2022 timeout: <code>number</code></p>"},{"location":"reference/classes/appium_base_driver-1.JWProxy/#defined-in_13","title":"Defined in","text":"<p>packages/base-driver/lib/jsonwp-proxy/proxy.js:51</p>"},{"location":"reference/classes/appium_base_driver-1.JWProxy/#accessors_1","title":"Accessors","text":""},{"location":"reference/classes/appium_base_driver-1.JWProxy/#downstreamprotocol","title":"downstreamProtocol","text":"<p>\u2022 <code>get</code> downstreamProtocol(): <code>any</code></p>"},{"location":"reference/classes/appium_base_driver-1.JWProxy/#returns","title":"Returns","text":"<p><code>any</code></p>"},{"location":"reference/classes/appium_base_driver-1.JWProxy/#defined-in_14","title":"Defined in","text":"<p>packages/base-driver/lib/jsonwp-proxy/proxy.js:123</p> <p>\u2022 <code>set</code> downstreamProtocol(<code>value</code>): <code>void</code></p>"},{"location":"reference/classes/appium_base_driver-1.JWProxy/#parameters_1","title":"Parameters","text":"Name Type <code>value</code> <code>any</code>"},{"location":"reference/classes/appium_base_driver-1.JWProxy/#returns_1","title":"Returns","text":"<p><code>void</code></p>"},{"location":"reference/classes/appium_base_driver-1.JWProxy/#defined-in_15","title":"Defined in","text":"<p>packages/base-driver/lib/jsonwp-proxy/proxy.js:118</p>"},{"location":"reference/classes/appium_base_driver-1.JWProxy/#log","title":"log","text":"<p>\u2022 <code>get</code> log(): <code>any</code></p>"},{"location":"reference/classes/appium_base_driver-1.JWProxy/#returns_2","title":"Returns","text":"<p><code>any</code></p>"},{"location":"reference/classes/appium_base_driver-1.JWProxy/#defined-in_16","title":"Defined in","text":"<p>packages/base-driver/lib/jsonwp-proxy/proxy.js:83</p>"},{"location":"reference/classes/appium_base_driver-1.JWProxy/#methods_1","title":"Methods","text":""},{"location":"reference/classes/appium_base_driver-1.JWProxy/#cancelactiverequests","title":"cancelActiveRequests","text":"<p>\u25b8 cancelActiveRequests(): <code>void</code></p>"},{"location":"reference/classes/appium_base_driver-1.JWProxy/#returns_3","title":"Returns","text":"<p><code>void</code></p>"},{"location":"reference/classes/appium_base_driver-1.JWProxy/#defined-in_17","title":"Defined in","text":"<p>packages/base-driver/lib/jsonwp-proxy/proxy.js:110</p>"},{"location":"reference/classes/appium_base_driver-1.JWProxy/#command","title":"command","text":"<p>\u25b8 command(<code>url</code>, <code>method</code>, <code>body?</code>): <code>Promise</code>&lt;<code>any</code>&gt;</p>"},{"location":"reference/classes/appium_base_driver-1.JWProxy/#parameters_2","title":"Parameters","text":"Name Type Default value <code>url</code> <code>any</code> <code>undefined</code> <code>method</code> <code>any</code> <code>undefined</code> <code>body</code> <code>null</code> <code>null</code>"},{"location":"reference/classes/appium_base_driver-1.JWProxy/#returns_4","title":"Returns","text":"<p><code>Promise</code>&lt;<code>any</code>&gt;</p>"},{"location":"reference/classes/appium_base_driver-1.JWProxy/#defined-in_18","title":"Defined in","text":"<p>packages/base-driver/lib/jsonwp-proxy/proxy.js:333</p>"},{"location":"reference/classes/appium_base_driver-1.JWProxy/#endpointrequiressessionid","title":"endpointRequiresSessionId","text":"<p>\u25b8 endpointRequiresSessionId(<code>endpoint</code>): <code>boolean</code></p>"},{"location":"reference/classes/appium_base_driver-1.JWProxy/#parameters_3","title":"Parameters","text":"Name Type <code>endpoint</code> <code>any</code>"},{"location":"reference/classes/appium_base_driver-1.JWProxy/#returns_5","title":"Returns","text":"<p><code>boolean</code></p>"},{"location":"reference/classes/appium_base_driver-1.JWProxy/#defined-in_19","title":"Defined in","text":"<p>packages/base-driver/lib/jsonwp-proxy/proxy.js:114</p>"},{"location":"reference/classes/appium_base_driver-1.JWProxy/#getactiverequestscount","title":"getActiveRequestsCount","text":"<p>\u25b8 getActiveRequestsCount(): <code>number</code></p>"},{"location":"reference/classes/appium_base_driver-1.JWProxy/#returns_6","title":"Returns","text":"<p><code>number</code></p>"},{"location":"reference/classes/appium_base_driver-1.JWProxy/#defined-in_20","title":"Defined in","text":"<p>packages/base-driver/lib/jsonwp-proxy/proxy.js:106</p>"},{"location":"reference/classes/appium_base_driver-1.JWProxy/#getprotocolfromresbody","title":"getProtocolFromResBody","text":"<p>\u25b8 getProtocolFromResBody(<code>resObj</code>): <code>undefined</code> | <code>string</code></p>"},{"location":"reference/classes/appium_base_driver-1.JWProxy/#parameters_4","title":"Parameters","text":"Name Type <code>resObj</code> <code>any</code>"},{"location":"reference/classes/appium_base_driver-1.JWProxy/#returns_7","title":"Returns","text":"<p><code>undefined</code> | <code>string</code></p>"},{"location":"reference/classes/appium_base_driver-1.JWProxy/#defined-in_21","title":"Defined in","text":"<p>packages/base-driver/lib/jsonwp-proxy/proxy.js:284</p>"},{"location":"reference/classes/appium_base_driver-1.JWProxy/#getsessionidfromurl","title":"getSessionIdFromUrl","text":"<p>\u25b8 getSessionIdFromUrl(<code>url</code>): <code>any</code></p>"},{"location":"reference/classes/appium_base_driver-1.JWProxy/#parameters_5","title":"Parameters","text":"Name Type <code>url</code> <code>any</code>"},{"location":"reference/classes/appium_base_driver-1.JWProxy/#returns_8","title":"Returns","text":"<p><code>any</code></p>"},{"location":"reference/classes/appium_base_driver-1.JWProxy/#defined-in_22","title":"Defined in","text":"<p>packages/base-driver/lib/jsonwp-proxy/proxy.js:385</p>"},{"location":"reference/classes/appium_base_driver-1.JWProxy/#geturlforproxy","title":"getUrlForProxy","text":"<p>\u25b8 getUrlForProxy(<code>url</code>): <code>string</code></p>"},{"location":"reference/classes/appium_base_driver-1.JWProxy/#parameters_6","title":"Parameters","text":"Name Type <code>url</code> <code>any</code>"},{"location":"reference/classes/appium_base_driver-1.JWProxy/#returns_9","title":"Returns","text":"<p><code>string</code></p>"},{"location":"reference/classes/appium_base_driver-1.JWProxy/#defined-in_23","title":"Defined in","text":"<p>packages/base-driver/lib/jsonwp-proxy/proxy.js:127</p>"},{"location":"reference/classes/appium_base_driver-1.JWProxy/#proxy","title":"proxy","text":"<p>\u25b8 proxy(<code>url</code>, <code>method</code>, <code>body?</code>): <code>Promise</code>&lt;<code>any</code>[]&gt;</p>"},{"location":"reference/classes/appium_base_driver-1.JWProxy/#parameters_7","title":"Parameters","text":"Name Type Default value <code>url</code> <code>any</code> <code>undefined</code> <code>method</code> <code>any</code> <code>undefined</code> <code>body</code> <code>null</code> <code>null</code>"},{"location":"reference/classes/appium_base_driver-1.JWProxy/#returns_10","title":"Returns","text":"<p><code>Promise</code>&lt;<code>any</code>[]&gt;</p>"},{"location":"reference/classes/appium_base_driver-1.JWProxy/#defined-in_24","title":"Defined in","text":"<p>packages/base-driver/lib/jsonwp-proxy/proxy.js:185</p>"},{"location":"reference/classes/appium_base_driver-1.JWProxy/#proxycommand","title":"proxyCommand","text":"<p>\u25b8 proxyCommand(<code>url</code>, <code>method</code>, <code>body?</code>): <code>Promise</code>&lt;<code>any</code>&gt;</p>"},{"location":"reference/classes/appium_base_driver-1.JWProxy/#parameters_8","title":"Parameters","text":"Name Type Default value <code>url</code> <code>any</code> <code>undefined</code> <code>method</code> <code>any</code> <code>undefined</code> <code>body</code> <code>null</code> <code>null</code>"},{"location":"reference/classes/appium_base_driver-1.JWProxy/#returns_11","title":"Returns","text":"<p><code>Promise</code>&lt;<code>any</code>&gt;</p>"},{"location":"reference/classes/appium_base_driver-1.JWProxy/#defined-in_25","title":"Defined in","text":"<p>packages/base-driver/lib/jsonwp-proxy/proxy.js:323</p>"},{"location":"reference/classes/appium_base_driver-1.JWProxy/#proxyreqres","title":"proxyReqRes","text":"<p>\u25b8 proxyReqRes(<code>req</code>, <code>res</code>): <code>Promise</code>&lt;<code>void</code>&gt;</p>"},{"location":"reference/classes/appium_base_driver-1.JWProxy/#parameters_9","title":"Parameters","text":"Name Type <code>req</code> <code>any</code> <code>res</code> <code>any</code>"},{"location":"reference/classes/appium_base_driver-1.JWProxy/#returns_12","title":"Returns","text":"<p><code>Promise</code>&lt;<code>void</code>&gt;</p>"},{"location":"reference/classes/appium_base_driver-1.JWProxy/#defined-in_26","title":"Defined in","text":"<p>packages/base-driver/lib/jsonwp-proxy/proxy.js:390</p>"},{"location":"reference/classes/appium_base_driver-1.JWProxy/#request","title":"request","text":"<p>\u25b8 <code>Private</code> request(<code>requestConfig</code>): <code>Promise</code>&lt;<code>AxiosResponse</code>&lt;<code>any</code>, <code>any</code>&gt;&gt;</p> <p>Performs requests to the downstream server</p> <ul> <li>Do not call this method directly, it uses client-specific arguments and responses!</li> </ul>"},{"location":"reference/classes/appium_base_driver-1.JWProxy/#parameters_10","title":"Parameters","text":"Name Type <code>requestConfig</code> <code>RawAxiosRequestConfig</code>&lt;<code>any</code>&gt;"},{"location":"reference/classes/appium_base_driver-1.JWProxy/#returns_13","title":"Returns","text":"<p><code>Promise</code>&lt;<code>AxiosResponse</code>&lt;<code>any</code>, <code>any</code>&gt;&gt;</p>"},{"location":"reference/classes/appium_base_driver-1.JWProxy/#defined-in_27","title":"Defined in","text":"<p>packages/base-driver/lib/jsonwp-proxy/proxy.js:96</p>"},{"location":"reference/classes/appium_base_driver-1.JWProxy/#requesttocommandname","title":"requestToCommandName","text":"<p>\u25b8 requestToCommandName(<code>url</code>, <code>method</code>): <code>undefined</code> | <code>string</code></p>"},{"location":"reference/classes/appium_base_driver-1.JWProxy/#parameters_11","title":"Parameters","text":"Name Type <code>url</code> <code>string</code> <code>method</code> <code>HTTPMethod</code>"},{"location":"reference/classes/appium_base_driver-1.JWProxy/#returns_14","title":"Returns","text":"<p><code>undefined</code> | <code>string</code></p>"},{"location":"reference/classes/appium_base_driver-1.JWProxy/#defined-in_28","title":"Defined in","text":"<p>packages/base-driver/lib/jsonwp-proxy/proxy.js:299</p>"},{"location":"reference/classes/appium_base_plugin.BasePlugin/","title":"Class: BasePlugin","text":"<p>@appium/base-plugin.BasePlugin</p> <p><code>Implements</code></p>"},{"location":"reference/classes/appium_base_plugin.BasePlugin/#table-of-contents","title":"Table of contents","text":""},{"location":"reference/classes/appium_base_plugin.BasePlugin/#constructors","title":"Constructors","text":"<ul> <li>constructor</li> </ul>"},{"location":"reference/classes/appium_base_plugin.BasePlugin/#properties","title":"Properties","text":"<ul> <li>cliArgs</li> <li>logger</li> <li>name</li> <li>executeMethodMap</li> <li>newMethodMap</li> </ul>"},{"location":"reference/classes/appium_base_plugin.BasePlugin/#methods","title":"Methods","text":"<ul> <li>executeMethod</li> </ul>"},{"location":"reference/classes/appium_base_plugin.BasePlugin/#constructors_1","title":"Constructors","text":""},{"location":"reference/classes/appium_base_plugin.BasePlugin/#constructor","title":"constructor","text":"<p>\u2022 new BasePlugin(<code>name</code>, <code>cliArgs?</code>)</p>"},{"location":"reference/classes/appium_base_plugin.BasePlugin/#parameters","title":"Parameters","text":"Name Type <code>name</code> <code>string</code> <code>cliArgs?</code> <code>Record</code>&lt;<code>string</code>, <code>unknown</code>&gt;"},{"location":"reference/classes/appium_base_plugin.BasePlugin/#defined-in","title":"Defined in","text":"<p>packages/base-plugin/lib/plugin.js:47</p>"},{"location":"reference/classes/appium_base_plugin.BasePlugin/#properties_1","title":"Properties","text":""},{"location":"reference/classes/appium_base_plugin.BasePlugin/#cliargs","title":"cliArgs","text":"<p>\u2022 cliArgs: <code>Record</code>&lt;<code>string</code>, <code>unknown</code>&gt;</p>"},{"location":"reference/classes/appium_base_plugin.BasePlugin/#defined-in_1","title":"Defined in","text":"<p>packages/base-plugin/lib/plugin.js:49</p>"},{"location":"reference/classes/appium_base_plugin.BasePlugin/#logger","title":"logger","text":"<p>\u2022 logger: <code>AppiumLogger</code></p>"},{"location":"reference/classes/appium_base_plugin.BasePlugin/#defined-in_2","title":"Defined in","text":"<p>packages/base-plugin/lib/plugin.js:50</p>"},{"location":"reference/classes/appium_base_plugin.BasePlugin/#name","title":"name","text":"<p>\u2022 name: <code>string</code></p>"},{"location":"reference/classes/appium_base_plugin.BasePlugin/#defined-in_3","title":"Defined in","text":"<p>packages/base-plugin/lib/plugin.js:48</p>"},{"location":"reference/classes/appium_base_plugin.BasePlugin/#executemethodmap","title":"executeMethodMap","text":"<p>\u25aa <code>Static</code> executeMethodMap: <code>Object</code> = <code>{}</code></p> <p>Subclasses should use type <code>import('@appium/types').ExecuteMethodMap&lt;SubclassName&gt;</code>.</p> <p>Building up this map allows the use of the convenience function <code>executeMethod</code>, which basically does verification of names and parameters for execute methods implemented by this plugin.</p> <pre><code>static executeMethodMap = {\n'foo: bar': {\ncommand: 'commandName',\nparams: {required: ['thing1', 'thing2'], optional: ['thing3']},\n},\n} as const;\n</code></pre>"},{"location":"reference/classes/appium_base_plugin.BasePlugin/#defined-in_4","title":"Defined in","text":"<p>packages/base-plugin/lib/plugin.js:41</p>"},{"location":"reference/classes/appium_base_plugin.BasePlugin/#newmethodmap","title":"newMethodMap","text":"<p>\u25aa <code>Static</code> newMethodMap: <code>Object</code> = <code>{}</code></p> <p>Subclasses should use type <code>import('@appium/types').MethodMap&lt;SubclassName&gt;</code>.</p> <p>This will verify that the commands in the <code>newMethodMap</code> property are valid.  It is impossible to use a generic type param here; the type of this should really be something like <code>MethodMap&lt;T extends BasePlugin&gt;</code> but that isn't a thing TS does.</p> <pre><code>static newMethodMap = {\n'/session/:sessionId/fake_data': {\nGET: {command: 'getFakeSessionData', neverProxy: true},\n}\n} as const;\n</code></pre>"},{"location":"reference/classes/appium_base_plugin.BasePlugin/#defined-in_5","title":"Defined in","text":"<p>packages/base-plugin/lib/plugin.js:23</p>"},{"location":"reference/classes/appium_base_plugin.BasePlugin/#methods_1","title":"Methods","text":""},{"location":"reference/classes/appium_base_plugin.BasePlugin/#executemethod","title":"executeMethod","text":"<p>\u25b8 executeMethod&lt;<code>D</code>&gt;(<code>next</code>, <code>driver</code>, <code>script</code>, <code>protoArgs</code>): <code>Promise</code>&lt;<code>any</code>&gt;</p> <p>A convenience method that can be called by plugins who implement their own <code>executeMethodMap</code>. Only useful if your plugin has defined <code>executeMethodMap</code>. This helper requires passing in the <code>next</code> and <code>driver</code> objects since naturally we'd want to make sure to trigger the driver's own <code>executeMethod</code> call if an execute method is not found on the plugin itself.</p>"},{"location":"reference/classes/appium_base_plugin.BasePlugin/#type-parameters","title":"Type parameters","text":"Name Type <code>D</code> extends <code>Driver</code>&lt;typeof <code>BASE_DESIRED_CAP_CONSTRAINTS</code>, <code>StringRecord</code>, <code>any</code>, <code>D</code>&gt;"},{"location":"reference/classes/appium_base_plugin.BasePlugin/#parameters_1","title":"Parameters","text":"Name Type <code>next</code> <code>NextPluginCallback</code> <code>driver</code> <code>D</code> <code>script</code> <code>string</code> <code>protoArgs</code> [<code>Record</code>&lt;<code>string</code>, <code>any</code>&gt;] | []"},{"location":"reference/classes/appium_base_plugin.BasePlugin/#returns","title":"Returns","text":"<p><code>Promise</code>&lt;<code>any</code>&gt;</p>"},{"location":"reference/classes/appium_base_plugin.BasePlugin/#defined-in_6","title":"Defined in","text":"<p>packages/base-plugin/lib/plugin.js:66</p>"},{"location":"reference/classes/appium_execute_driver_plugin-1.ExecuteDriverPlugin/","title":"Class: ExecuteDriverPlugin","text":"<p>@appium/execute-driver-plugin.ExecuteDriverPlugin</p> <p><code>Implements</code></p>"},{"location":"reference/classes/appium_execute_driver_plugin-1.ExecuteDriverPlugin/#hierarchy","title":"Hierarchy","text":"<ul> <li><code>BasePlugin</code></li> </ul> <p>\u21b3 <code>ExecuteDriverPlugin</code></p>"},{"location":"reference/classes/appium_execute_driver_plugin-1.ExecuteDriverPlugin/#table-of-contents","title":"Table of contents","text":""},{"location":"reference/classes/appium_execute_driver_plugin-1.ExecuteDriverPlugin/#constructors","title":"Constructors","text":"<ul> <li>constructor</li> </ul>"},{"location":"reference/classes/appium_execute_driver_plugin-1.ExecuteDriverPlugin/#properties","title":"Properties","text":"<ul> <li>cliArgs</li> <li>logger</li> <li>name</li> <li>executeMethodMap</li> <li>newMethodMap</li> </ul>"},{"location":"reference/classes/appium_execute_driver_plugin-1.ExecuteDriverPlugin/#methods","title":"Methods","text":"<ul> <li>executeDriverScript</li> <li>executeMethod</li> </ul>"},{"location":"reference/classes/appium_execute_driver_plugin-1.ExecuteDriverPlugin/#constructors_1","title":"Constructors","text":""},{"location":"reference/classes/appium_execute_driver_plugin-1.ExecuteDriverPlugin/#constructor","title":"constructor","text":"<p>\u2022 new ExecuteDriverPlugin(<code>name</code>, <code>cliArgs?</code>)</p>"},{"location":"reference/classes/appium_execute_driver_plugin-1.ExecuteDriverPlugin/#parameters","title":"Parameters","text":"Name Type <code>name</code> <code>string</code> <code>cliArgs?</code> <code>Record</code>&lt;<code>string</code>, <code>unknown</code>&gt;"},{"location":"reference/classes/appium_execute_driver_plugin-1.ExecuteDriverPlugin/#inherited-from","title":"Inherited from","text":"<p>BasePlugin.constructor</p>"},{"location":"reference/classes/appium_execute_driver_plugin-1.ExecuteDriverPlugin/#defined-in","title":"Defined in","text":"<p>packages/base-plugin/build/lib/plugin.d.ts:47</p>"},{"location":"reference/classes/appium_execute_driver_plugin-1.ExecuteDriverPlugin/#properties_1","title":"Properties","text":""},{"location":"reference/classes/appium_execute_driver_plugin-1.ExecuteDriverPlugin/#cliargs","title":"cliArgs","text":"<p>\u2022 cliArgs: <code>Record</code>&lt;<code>string</code>, <code>unknown</code>&gt;</p>"},{"location":"reference/classes/appium_execute_driver_plugin-1.ExecuteDriverPlugin/#inherited-from_1","title":"Inherited from","text":"<p>BasePlugin.cliArgs</p>"},{"location":"reference/classes/appium_execute_driver_plugin-1.ExecuteDriverPlugin/#defined-in_1","title":"Defined in","text":"<p>packages/base-plugin/build/lib/plugin.d.ts:49</p>"},{"location":"reference/classes/appium_execute_driver_plugin-1.ExecuteDriverPlugin/#logger","title":"logger","text":"<p>\u2022 logger: <code>AppiumLogger</code></p>"},{"location":"reference/classes/appium_execute_driver_plugin-1.ExecuteDriverPlugin/#inherited-from_2","title":"Inherited from","text":"<p>BasePlugin.logger</p>"},{"location":"reference/classes/appium_execute_driver_plugin-1.ExecuteDriverPlugin/#defined-in_2","title":"Defined in","text":"<p>packages/base-plugin/build/lib/plugin.d.ts:50</p>"},{"location":"reference/classes/appium_execute_driver_plugin-1.ExecuteDriverPlugin/#name","title":"name","text":"<p>\u2022 name: <code>string</code></p>"},{"location":"reference/classes/appium_execute_driver_plugin-1.ExecuteDriverPlugin/#inherited-from_3","title":"Inherited from","text":"<p>BasePlugin.name</p>"},{"location":"reference/classes/appium_execute_driver_plugin-1.ExecuteDriverPlugin/#defined-in_3","title":"Defined in","text":"<p>packages/base-plugin/build/lib/plugin.d.ts:48</p>"},{"location":"reference/classes/appium_execute_driver_plugin-1.ExecuteDriverPlugin/#executemethodmap","title":"executeMethodMap","text":"<p>\u25aa <code>Static</code> executeMethodMap: <code>Object</code></p> <p>Subclasses should use type <code>import('@appium/types').ExecuteMethodMap&lt;SubclassName&gt;</code>.</p> <p>Building up this map allows the use of the convenience function <code>executeMethod</code>, which basically does verification of names and parameters for execute methods implemented by this plugin.</p> <pre><code>static executeMethodMap = {\n'foo: bar': {\ncommand: 'commandName',\nparams: {required: ['thing1', 'thing2'], optional: ['thing3']},\n},\n} as const;\n</code></pre>"},{"location":"reference/classes/appium_execute_driver_plugin-1.ExecuteDriverPlugin/#inherited-from_4","title":"Inherited from","text":"<p>BasePlugin.executeMethodMap</p>"},{"location":"reference/classes/appium_execute_driver_plugin-1.ExecuteDriverPlugin/#defined-in_4","title":"Defined in","text":"<p>packages/base-plugin/build/lib/plugin.d.ts:42</p>"},{"location":"reference/classes/appium_execute_driver_plugin-1.ExecuteDriverPlugin/#newmethodmap","title":"newMethodMap","text":"<p>\u25aa <code>Static</code> newMethodMap: <code>Object</code></p> <p>Subclasses should use type <code>import('@appium/types').MethodMap&lt;SubclassName&gt;</code>.</p> <p>This will verify that the commands in the <code>newMethodMap</code> property are valid.  It is impossible to use a generic type param here; the type of this should really be something like <code>MethodMap&lt;T extends BasePlugin&gt;</code> but that isn't a thing TS does.</p> <pre><code>static newMethodMap = {\n'/session/:sessionId/fake_data': {\nGET: {command: 'getFakeSessionData', neverProxy: true},\n}\n} as const;\n</code></pre>"},{"location":"reference/classes/appium_execute_driver_plugin-1.ExecuteDriverPlugin/#type-declaration","title":"Type declaration","text":"Name Type <code>/session/:sessionId/appium/execute_driver</code> { <code>POST</code>: { <code>command</code>: <code>\"executeDriverScript\"</code> = 'executeDriverScript'; <code>payloadParams</code>: { <code>optional</code>: readonly [<code>\"type\"</code>, <code>\"timeout\"</code>] ; <code>required</code>: readonly [<code>\"script\"</code>]  }  }  } <code>/session/:sessionId/appium/execute_driver.POST</code> { <code>command</code>: <code>\"executeDriverScript\"</code> = 'executeDriverScript'; <code>payloadParams</code>: { <code>optional</code>: readonly [<code>\"type\"</code>, <code>\"timeout\"</code>] ; <code>required</code>: readonly [<code>\"script\"</code>]  }  } <code>/session/:sessionId/appium/execute_driver.POST.command</code> <code>\"executeDriverScript\"</code> <code>/session/:sessionId/appium/execute_driver.POST.payloadParams</code> { <code>optional</code>: readonly [<code>\"type\"</code>, <code>\"timeout\"</code>] ; <code>required</code>: readonly [<code>\"script\"</code>]  } <code>/session/:sessionId/appium/execute_driver.POST.payloadParams.optional</code> readonly [<code>\"type\"</code>, <code>\"timeout\"</code>] <code>/session/:sessionId/appium/execute_driver.POST.payloadParams.required</code> readonly [<code>\"script\"</code>]"},{"location":"reference/classes/appium_execute_driver_plugin-1.ExecuteDriverPlugin/#overrides","title":"Overrides","text":"<p>BasePlugin.newMethodMap</p>"},{"location":"reference/classes/appium_execute_driver_plugin-1.ExecuteDriverPlugin/#defined-in_5","title":"Defined in","text":"<p>packages/execute-driver-plugin/lib/plugin.js:12</p>"},{"location":"reference/classes/appium_execute_driver_plugin-1.ExecuteDriverPlugin/#methods_1","title":"Methods","text":""},{"location":"reference/classes/appium_execute_driver_plugin-1.ExecuteDriverPlugin/#executedriverscript","title":"executeDriverScript","text":"<p>\u25b8 executeDriverScript(<code>next</code>, <code>driver</code>, <code>script</code>, <code>scriptType?</code>, <code>timeoutMs?</code>): <code>Promise</code>&lt;<code>any</code>&gt;</p> <p>This method takes a string which is executed as javascript in the context of a new nodejs VM, and which has available a webdriverio driver object, having already been attached to the currently running session.</p> <p><code>Throws</code></p>"},{"location":"reference/classes/appium_execute_driver_plugin-1.ExecuteDriverPlugin/#parameters_1","title":"Parameters","text":"Name Type Default value Description <code>next</code> <code>NextPluginCallback</code> <code>undefined</code> standard behaviour for executeDriverScript <code>driver</code> <code>ExternalDriver</code>&lt;typeof <code>BASE_DESIRED_CAP_CONSTRAINTS</code>&gt; <code>undefined</code> Appium driver handling this command <code>script</code> <code>string</code> <code>undefined</code> the string representing the driver script to run <code>scriptType?</code> <code>string</code> <code>'webdriverio'</code> the name of the driver script library (currently only webdriverio is supported) <code>timeoutMs?</code> <code>number</code> <code>DEFAULT_SCRIPT_TIMEOUT_MS</code> timeout for the script process"},{"location":"reference/classes/appium_execute_driver_plugin-1.ExecuteDriverPlugin/#returns","title":"Returns","text":"<p><code>Promise</code>&lt;<code>any</code>&gt;</p> <ul> <li>a JSONifiable object representing the return value of the script</li> </ul>"},{"location":"reference/classes/appium_execute_driver_plugin-1.ExecuteDriverPlugin/#defined-in_6","title":"Defined in","text":"<p>packages/execute-driver-plugin/lib/plugin.js:38</p>"},{"location":"reference/classes/appium_execute_driver_plugin-1.ExecuteDriverPlugin/#executemethod","title":"executeMethod","text":"<p>\u25b8 executeMethod&lt;<code>D</code>&gt;(<code>this</code>, <code>next</code>, <code>driver</code>, <code>script</code>, <code>protoArgs</code>): <code>Promise</code>&lt;<code>any</code>&gt;</p> <p>A convenience method that can be called by plugins who implement their own <code>executeMethodMap</code>. Only useful if your plugin has defined <code>executeMethodMap</code>. This helper requires passing in the <code>next</code> and <code>driver</code> objects since naturally we'd want to make sure to trigger the driver's own <code>executeMethod</code> call if an execute method is not found on the plugin itself.</p>"},{"location":"reference/classes/appium_execute_driver_plugin-1.ExecuteDriverPlugin/#type-parameters","title":"Type parameters","text":"Name Type <code>D</code> extends <code>Driver</code>&lt;typeof <code>BASE_DESIRED_CAP_CONSTRAINTS</code>, <code>StringRecord</code>, <code>any</code>, <code>D</code>&gt;"},{"location":"reference/classes/appium_execute_driver_plugin-1.ExecuteDriverPlugin/#parameters_2","title":"Parameters","text":"Name Type <code>this</code> <code>Plugin</code> <code>next</code> <code>NextPluginCallback</code> <code>driver</code> <code>D</code> <code>script</code> <code>string</code> <code>protoArgs</code> [] | [<code>Record</code>&lt;<code>string</code>, <code>any</code>&gt;]"},{"location":"reference/classes/appium_execute_driver_plugin-1.ExecuteDriverPlugin/#returns_1","title":"Returns","text":"<p><code>Promise</code>&lt;<code>any</code>&gt;</p>"},{"location":"reference/classes/appium_execute_driver_plugin-1.ExecuteDriverPlugin/#inherited-from_5","title":"Inherited from","text":"<p>BasePlugin.executeMethod</p>"},{"location":"reference/classes/appium_execute_driver_plugin-1.ExecuteDriverPlugin/#defined-in_7","title":"Defined in","text":"<p>packages/base-plugin/build/lib/plugin.d.ts:64</p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/","title":"Class: FakeDriver","text":"<p>@appium/fake-driver.FakeDriver</p> <p><code>Implements</code></p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#hierarchy","title":"Hierarchy","text":"<ul> <li><code>BaseDriver</code></li> </ul> <p>\u21b3 <code>FakeDriver</code></p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#table-of-contents","title":"Table of contents","text":""},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#constructors","title":"Constructors","text":"<ul> <li>constructor</li> </ul>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#properties","title":"Properties","text":"<ul> <li>_eventHistory</li> <li>_log</li> <li>_proxyActive</li> <li>allowInsecure</li> <li>appModel</li> <li>assertAlert</li> <li>assertNoAlert</li> <li>assertWebviewContext</li> <li>basePath</li> <li>caps</li> <li>clear</li> <li>cliArgs</li> <li>click</li> <li>commandsQueueGuard</li> <li>curContext</li> <li>denyInsecure</li> <li>desiredCapConstraints</li> <li>doubleClick</li> <li>elMap</li> <li>elementDisplayed</li> <li>elementEnabled</li> <li>elementSelected</li> <li>equalsElement</li> <li>eventEmitter</li> <li>execute</li> <li>fakeAddition</li> <li>fakeThing</li> <li>findElOrEls</li> <li>findElement</li> <li>findElementFromElement</li> <li>findElements</li> <li>findElementsFromElement</li> <li>focusedElId</li> <li>getAlertText</li> <li>getAttribute</li> <li>getContexts</li> <li>getCssProperty</li> <li>getCurrentContext</li> <li>getElement</li> <li>getElementRect</li> <li>getElements</li> <li>getExistingElementForNode</li> <li>getGeoLocation</li> <li>getLocation</li> <li>getLocationInView</li> <li>getLog</li> <li>getName</li> <li>getOrientation</li> <li>getPageSource</li> <li>getRawContexts</li> <li>getScreenshot</li> <li>getSize</li> <li>getText</li> <li>getWindowRect</li> <li>getWindowSize</li> <li>helpers</li> <li>implicitWaitMs</li> <li>initialOpts</li> <li>keys</li> <li>locatorStrategies</li> <li>managedDrivers</li> <li>maxElId</li> <li>mobileShake</li> <li>newCommandTimeoutMs</li> <li>noCommandTimer</li> <li>opts</li> <li>originalCaps</li> <li>performActions</li> <li>postAcceptAlert</li> <li>postDismissAlert</li> <li>protocol</li> <li>relaxedSecurityEnabled</li> <li>releaseActions</li> <li>resetOnUnexpectedShutdown</li> <li>server</li> <li>serverHost</li> <li>serverPath</li> <li>serverPort</li> <li>sessionId</li> <li>setAlertText</li> <li>setContext</li> <li>setFrame</li> <li>setGeoLocation</li> <li>setOrientation</li> <li>setValue</li> <li>settings</li> <li>shook</li> <li>shouldValidateCaps</li> <li>shutdownUnexpectedly</li> <li>supportedLogTypes</li> <li>title</li> <li>updateSettings</li> <li>webLocatorStrategies</li> <li>wrapNewEl</li> <li>baseVersion</li> <li>executeMethodMap</li> <li>newMethodMap</li> </ul>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#accessors","title":"Accessors","text":"<ul> <li>_desiredCapConstraints</li> <li>driverData</li> <li>eventHistory</li> <li>isCommandsQueueEnabled</li> <li>log</li> </ul>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#methods","title":"Methods","text":"<ul> <li>addManagedDriver</li> <li>assertFeatureEnabled</li> <li>assignServer</li> <li>callDeprecatedCommand</li> <li>canProxy</li> <li>clearNewCommandTimeout</li> <li>createSession</li> <li>deleteSession</li> <li>driverForSession</li> <li>ensureFeatureEnabled</li> <li>executeCommand</li> <li>executeMethod</li> <li>findElOrElsWithProcessing</li> <li>findElementFromShadowRoot</li> <li>findElementsFromShadowRoot</li> <li>getDeprecatedCommandsCalled</li> <li>getFakeDriverArgs</li> <li>getFakeThing</li> <li>getLogEvents</li> <li>getLogTypes</li> <li>getManagedDrivers</li> <li>getProxyAvoidList</li> <li>getSession</li> <li>getSessions</li> <li>getSettings</li> <li>getStatus</li> <li>getTimeouts</li> <li>implicitWait</li> <li>implicitWaitForCondition</li> <li>implicitWaitMJSONWP</li> <li>implicitWaitW3C</li> <li>isFeatureEnabled</li> <li>isMjsonwpProtocol</li> <li>isW3CProtocol</li> <li>logCustomEvent</li> <li>logEvent</li> <li>logExtraCaps</li> <li>newCommandTimeout</li> <li>onUnexpectedShutdown</li> <li>pageLoadTimeoutMJSONWP</li> <li>pageLoadTimeoutW3C</li> <li>parseTimeoutArgument</li> <li>proxyActive</li> <li>proxyCommand</li> <li>proxyReqRes</li> <li>proxyRouteIsAvoided</li> <li>reset</li> <li>scriptTimeoutMJSONWP</li> <li>scriptTimeoutW3C</li> <li>sessionExists</li> <li>setFakeThing</li> <li>setImplicitWait</li> <li>setNewCommandTimeout</li> <li>setProtocolMJSONWP</li> <li>setProtocolW3C</li> <li>startNewCommandTimeout</li> <li>startUnexpectedShutdown</li> <li>timeouts</li> <li>validateDesiredCaps</li> <li>validateLocatorStrategy</li> <li>fakeRoute</li> <li>updateServer</li> </ul>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#constructors_1","title":"Constructors","text":""},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#constructor","title":"constructor","text":"<p>\u2022 new FakeDriver(<code>opts?</code>, <code>shouldValidateCaps?</code>)</p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#parameters","title":"Parameters","text":"Name Type Default value <code>opts</code> <code>Object</code> <code>{}</code> <code>shouldValidateCaps</code> <code>boolean</code> <code>true</code>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#overrides","title":"Overrides","text":"<p>BaseDriver.constructor</p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#defined-in","title":"Defined in","text":"<p>packages/fake-driver/lib/driver.js:33</p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#properties_1","title":"Properties","text":""},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#_eventhistory","title":"_eventHistory","text":"<p>\u2022 _eventHistory: <code>EventHistory</code></p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#inherited-from","title":"Inherited from","text":"<p>BaseDriver._eventHistory</p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#defined-in_1","title":"Defined in","text":"<p>packages/base-driver/build/lib/basedriver/core.d.ts:67</p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#_log","title":"_log","text":"<p>\u2022 _log: <code>AppiumLogger</code></p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#inherited-from_1","title":"Inherited from","text":"<p>BaseDriver._log</p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#defined-in_2","title":"Defined in","text":"<p>packages/base-driver/build/lib/basedriver/core.d.ts:73</p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#_proxyactive","title":"_proxyActive","text":"<p>\u2022 _proxyActive: <code>boolean</code></p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#defined-in_3","title":"Defined in","text":"<p>packages/fake-driver/lib/driver.js:40</p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#allowinsecure","title":"allowInsecure","text":"<p>\u2022 allowInsecure: <code>string</code>[]</p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#inherited-from_2","title":"Inherited from","text":"<p>BaseDriver.allowInsecure</p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#defined-in_4","title":"Defined in","text":"<p>packages/base-driver/build/lib/basedriver/core.d.ts:53</p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#appmodel","title":"appModel","text":"<p>\u2022 appModel: <code>FakeApp</code></p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#defined-in_5","title":"Defined in","text":"<p>packages/fake-driver/lib/driver.js:31</p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#assertalert","title":"assertAlert","text":"<p>\u2022 assertAlert: () =&gt; <code>void</code> = <code>alert.assertAlert</code></p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#type-declaration","title":"Type declaration","text":"<p>\u25b8 (): <code>void</code></p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#returns","title":"Returns","text":"<p><code>void</code></p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#defined-in_6","title":"Defined in","text":"<p>packages/fake-driver/lib/driver.js:209</p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#assertnoalert","title":"assertNoAlert","text":"<p>\u2022 assertNoAlert: () =&gt; <code>void</code> = <code>alert.assertNoAlert</code></p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#type-declaration_1","title":"Type declaration","text":"<p>\u25b8 (): <code>void</code></p> <p>ALERT *</p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#returns_1","title":"Returns","text":"<p><code>void</code></p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#defined-in_7","title":"Defined in","text":"<p>packages/fake-driver/lib/driver.js:208</p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#assertwebviewcontext","title":"assertWebviewContext","text":"<p>\u2022 assertWebviewContext: () =&gt; <code>void</code> = <code>contexts.assertWebviewContext</code></p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#type-declaration_2","title":"Type declaration","text":"<p>\u25b8 (): <code>void</code></p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#returns_2","title":"Returns","text":"<p><code>void</code></p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#defined-in_8","title":"Defined in","text":"<p>packages/fake-driver/lib/driver.js:219</p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#basepath","title":"basePath","text":"<p>\u2022 basePath: <code>string</code></p> <p>basePath is used for several purposes, for example in setting up proxying to other drivers, since we need to know what the base path of any incoming request might look like. We set it to the default initially but it is automatically updated during any actual program execution by the routeConfiguringFunction, which is necessarily run as the entrypoint for any Appium server</p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#inherited-from_3","title":"Inherited from","text":"<p>BaseDriver.basePath</p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#defined-in_9","title":"Defined in","text":"<p>packages/base-driver/build/lib/basedriver/core.d.ts:50</p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#caps","title":"caps","text":"<p>\u2022 caps: <code>Partial</code>&lt;<code>ConstraintsToCaps</code>&lt;<code>any</code>&gt; &amp; <code>void</code>&gt;</p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#inherited-from_4","title":"Inherited from","text":"<p>BaseDriver.caps</p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#defined-in_10","title":"Defined in","text":"<p>packages/fake-driver/lib/driver.js:96</p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#clear","title":"clear","text":"<p>\u2022 clear: (<code>elementId</code>: <code>any</code>) =&gt; <code>Promise</code>&lt;<code>void</code>&gt; = <code>element.clear</code></p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#type-declaration_3","title":"Type declaration","text":"<p>\u25b8 (<code>elementId</code>): <code>Promise</code>&lt;<code>void</code>&gt;</p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#parameters_1","title":"Parameters","text":"Name Type <code>elementId</code> <code>any</code>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#returns_3","title":"Returns","text":"<p><code>Promise</code>&lt;<code>void</code>&gt;</p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#defined-in_11","title":"Defined in","text":"<p>packages/fake-driver/lib/driver.js:236</p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#cliargs","title":"cliArgs","text":"<p>\u2022 cliArgs: <code>StringRecord</code> &amp; <code>ServerArgs</code></p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#inherited-from_5","title":"Inherited from","text":"<p>BaseDriver.cliArgs</p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#defined-in_12","title":"Defined in","text":"<p>packages/base-driver/build/lib/basedriver/driver.d.ts:17</p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#click","title":"click","text":"<p>\u2022 click: (<code>elementId</code>: <code>string</code>) =&gt; <code>Promise</code>&lt;<code>void</code>&gt; = <code>element.click</code></p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#type-declaration_4","title":"Type declaration","text":"<p>\u25b8 (<code>elementId</code>): <code>Promise</code>&lt;<code>void</code>&gt;</p> <p>This comment should be displayed instead of the one from ExternalDriver</p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#parameters_2","title":"Parameters","text":"Name Type <code>elementId</code> <code>string</code>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#returns_4","title":"Returns","text":"<p><code>Promise</code>&lt;<code>void</code>&gt;</p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#defined-in_13","title":"Defined in","text":"<p>packages/fake-driver/lib/driver.js:237</p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#commandsqueueguard","title":"commandsQueueGuard","text":"<p>\u2022 <code>Protected</code> commandsQueueGuard: <code>AsyncLock</code></p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#inherited-from_6","title":"Inherited from","text":"<p>BaseDriver.commandsQueueGuard</p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#defined-in_14","title":"Defined in","text":"<p>packages/base-driver/build/lib/basedriver/core.d.ts:85</p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#curcontext","title":"curContext","text":"<p>\u2022 curContext: <code>string</code></p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#defined-in_15","title":"Defined in","text":"<p>packages/fake-driver/lib/driver.js:29</p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#denyinsecure","title":"denyInsecure","text":"<p>\u2022 denyInsecure: <code>string</code>[]</p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#inherited-from_7","title":"Inherited from","text":"<p>BaseDriver.denyInsecure</p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#defined-in_16","title":"Defined in","text":"<p>packages/base-driver/build/lib/basedriver/core.d.ts:55</p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#desiredcapconstraints","title":"desiredCapConstraints","text":"<p>\u2022 desiredCapConstraints: <code>Object</code> = <code>FAKE_DRIVER_CONSTRAINTS</code></p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#type-declaration_5","title":"Type declaration","text":"Name Type <code>app</code> { <code>isString</code>: <code>true</code> = true; <code>presence</code>: <code>true</code> = true } <code>app.isString</code> <code>true</code> <code>app.presence</code> <code>true</code> <code>uniqueApp</code> { <code>isBoolean</code>: <code>true</code> = true } <code>uniqueApp.isBoolean</code> <code>true</code>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#overrides_1","title":"Overrides","text":"<p>BaseDriver.desiredCapConstraints</p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#defined-in_17","title":"Defined in","text":"<p>packages/fake-driver/lib/driver.js:26</p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#doubleclick","title":"doubleClick","text":"<p>\u2022 doubleClick: () =&gt; <code>Promise</code>&lt;<code>void</code>&gt; = <code>general.doubleClick</code></p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#type-declaration_6","title":"Type declaration","text":"<p>\u25b8 (): <code>Promise</code>&lt;<code>void</code>&gt;</p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#returns_5","title":"Returns","text":"<p><code>Promise</code>&lt;<code>void</code>&gt;</p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#defined-in_18","title":"Defined in","text":"<p>packages/fake-driver/lib/driver.js:273</p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#elmap","title":"elMap","text":"<p>\u2022 elMap: <code>Object</code></p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#defined-in_19","title":"Defined in","text":"<p>packages/fake-driver/lib/driver.js:36</p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#elementdisplayed","title":"elementDisplayed","text":"<p>\u2022 elementDisplayed: (<code>elementId</code>: <code>any</code>) =&gt; <code>Promise</code>&lt;<code>any</code>&gt; = <code>element.elementDisplayed</code></p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#type-declaration_7","title":"Type declaration","text":"<p>\u25b8 (<code>elementId</code>): <code>Promise</code>&lt;<code>any</code>&gt;</p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#parameters_3","title":"Parameters","text":"Name Type <code>elementId</code> <code>any</code>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#returns_6","title":"Returns","text":"<p><code>Promise</code>&lt;<code>any</code>&gt;</p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#defined-in_20","title":"Defined in","text":"<p>packages/fake-driver/lib/driver.js:231</p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#elementenabled","title":"elementEnabled","text":"<p>\u2022 elementEnabled: (<code>elementId</code>: <code>any</code>) =&gt; <code>Promise</code>&lt;<code>any</code>&gt; = <code>element.elementEnabled</code></p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#type-declaration_8","title":"Type declaration","text":"<p>\u25b8 (<code>elementId</code>): <code>Promise</code>&lt;<code>any</code>&gt;</p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#parameters_4","title":"Parameters","text":"Name Type <code>elementId</code> <code>any</code>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#returns_7","title":"Returns","text":"<p><code>Promise</code>&lt;<code>any</code>&gt;</p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#defined-in_21","title":"Defined in","text":"<p>packages/fake-driver/lib/driver.js:232</p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#elementselected","title":"elementSelected","text":"<p>\u2022 elementSelected: (<code>elementId</code>: <code>any</code>) =&gt; <code>Promise</code>&lt;<code>any</code>&gt; = <code>element.elementSelected</code></p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#type-declaration_9","title":"Type declaration","text":"<p>\u25b8 (<code>elementId</code>): <code>Promise</code>&lt;<code>any</code>&gt;</p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#parameters_5","title":"Parameters","text":"Name Type <code>elementId</code> <code>any</code>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#returns_8","title":"Returns","text":"<p><code>Promise</code>&lt;<code>any</code>&gt;</p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#defined-in_22","title":"Defined in","text":"<p>packages/fake-driver/lib/driver.js:233</p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#equalselement","title":"equalsElement","text":"<p>\u2022 equalsElement: (<code>el1Id</code>: <code>any</code>, <code>el2Id</code>: <code>any</code>) =&gt; <code>any</code> = <code>element.equalsElement</code></p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#type-declaration_10","title":"Type declaration","text":"<p>\u25b8 (<code>el1Id</code>, <code>el2Id</code>): <code>any</code></p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#parameters_6","title":"Parameters","text":"Name Type <code>el1Id</code> <code>any</code> <code>el2Id</code> <code>any</code>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#returns_9","title":"Returns","text":"<p><code>any</code></p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#defined-in_23","title":"Defined in","text":"<p>packages/fake-driver/lib/driver.js:241</p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#eventemitter","title":"eventEmitter","text":"<p>\u2022 eventEmitter: <code>EventEmitter</code></p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#inherited-from_8","title":"Inherited from","text":"<p>BaseDriver.eventEmitter</p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#defined-in_24","title":"Defined in","text":"<p>packages/base-driver/build/lib/basedriver/core.d.ts:69</p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#execute","title":"execute","text":"<p>\u2022 execute: (<code>script</code>: <code>any</code>, <code>args</code>: <code>any</code>) =&gt; <code>Promise</code>&lt;<code>any</code>&gt; = <code>general.execute</code></p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#type-declaration_11","title":"Type declaration","text":"<p>\u25b8 (<code>script</code>, <code>args</code>): <code>Promise</code>&lt;<code>any</code>&gt;</p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#parameters_7","title":"Parameters","text":"Name Type <code>script</code> <code>any</code> <code>args</code> <code>any</code>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#returns_10","title":"Returns","text":"<p><code>Promise</code>&lt;<code>any</code>&gt;</p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#defined-in_25","title":"Defined in","text":"<p>packages/fake-driver/lib/driver.js:274</p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#fakeaddition","title":"fakeAddition","text":"<p>\u2022 fakeAddition: (<code>num1</code>: <code>number</code>, <code>num2</code>: <code>number</code>, <code>num3?</code>: <code>number</code>) =&gt; <code>Promise</code>&lt;<code>number</code>&gt; = <code>general.fakeAddition</code></p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#type-declaration_12","title":"Type declaration","text":"<p>\u25b8 (<code>num1</code>, <code>num2</code>, <code>num3?</code>): <code>Promise</code>&lt;<code>number</code>&gt;</p> <p>Add two or maybe even three numbers</p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#parameters_8","title":"Parameters","text":"Name Type Default value <code>num1</code> <code>number</code> <code>undefined</code> <code>num2</code> <code>number</code> <code>undefined</code> <code>num3?</code> <code>number</code> <code>0</code>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#returns_11","title":"Returns","text":"<p><code>Promise</code>&lt;<code>number</code>&gt;</p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#defined-in_26","title":"Defined in","text":"<p>packages/fake-driver/lib/driver.js:275</p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#fakething","title":"fakeThing","text":"<p>\u2022 fakeThing: <code>any</code></p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#defined-in_27","title":"Defined in","text":"<p>packages/fake-driver/lib/driver.js:39</p> <p>packages/fake-driver/lib/driver.js:120</p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#findelorels","title":"findElOrEls","text":"<p>\u2022 findElOrEls: (<code>strategy</code>: <code>string</code>, <code>selector</code>: <code>string</code>, <code>mult</code>: <code>Mult</code>, <code>context?</code>: <code>Ctx</code>) =&gt; <code>Promise</code>&lt;<code>Mult</code> extends <code>true</code> ? <code>Element</code>[] : <code>Element</code>&gt; = <code>find.findElOrEls</code>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#type-declaration_13","title":"Type declaration","text":"<p>\u25b8 &lt;<code>Mult</code>, <code>Ctx</code>&gt;(<code>strategy</code>, <code>selector</code>, <code>mult</code>, <code>context?</code>): <code>Promise</code>&lt;<code>Mult</code> extends <code>true</code> ? <code>Element</code>[] : <code>Element</code>&gt;</p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#type-parameters","title":"Type parameters","text":"Name Type <code>Mult</code> extends <code>boolean</code> <code>Ctx</code> <code>any</code>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#parameters_9","title":"Parameters","text":"Name Type <code>strategy</code> <code>string</code> <code>selector</code> <code>string</code> <code>mult</code> <code>Mult</code> <code>context?</code> <code>Ctx</code>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#returns_12","title":"Returns","text":"<p><code>Promise</code>&lt;<code>Mult</code> extends <code>true</code> ? <code>Element</code>[] : <code>Element</code>&gt;</p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#overrides_2","title":"Overrides","text":"<p>BaseDriver.findElOrEls</p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#defined-in_28","title":"Defined in","text":"<p>packages/fake-driver/lib/driver.js:251</p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#findelement","title":"findElement","text":"<p>\u2022 findElement: (<code>strategy</code>: <code>string</code>, <code>selector</code>: <code>string</code>) =&gt; <code>Promise</code>&lt;<code>Element</code>&gt; = <code>find.findElement</code></p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#type-declaration_14","title":"Type declaration","text":"<p>\u25b8 (<code>strategy</code>, <code>selector</code>): <code>Promise</code>&lt;<code>Element</code>&gt;</p> <p>This should override whatever's in ExternalDriver</p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#parameters_10","title":"Parameters","text":"Name Type Description <code>strategy</code> <code>string</code> Strategy <code>selector</code> <code>string</code> Selector"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#returns_13","title":"Returns","text":"<p><code>Promise</code>&lt;<code>Element</code>&gt;</p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#overrides_3","title":"Overrides","text":"<p>BaseDriver.findElement</p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#defined-in_29","title":"Defined in","text":"<p>packages/fake-driver/lib/driver.js:252</p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#findelementfromelement","title":"findElementFromElement","text":"<p>\u2022 findElementFromElement: (<code>strategy</code>: <code>any</code>, <code>selector</code>: <code>any</code>, <code>elementId</code>: <code>any</code>) =&gt; <code>Promise</code>&lt;<code>Element</code>&gt; = <code>find.findElementFromElement</code></p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#type-declaration_15","title":"Type declaration","text":"<p>\u25b8 (<code>strategy</code>, <code>selector</code>, <code>elementId</code>): <code>Promise</code>&lt;<code>Element</code>&gt;</p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#parameters_11","title":"Parameters","text":"Name Type <code>strategy</code> <code>any</code> <code>selector</code> <code>any</code> <code>elementId</code> <code>any</code>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#returns_14","title":"Returns","text":"<p><code>Promise</code>&lt;<code>Element</code>&gt;</p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#overrides_4","title":"Overrides","text":"<p>BaseDriver.findElementFromElement</p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#defined-in_30","title":"Defined in","text":"<p>packages/fake-driver/lib/driver.js:254</p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#findelements","title":"findElements","text":"<p>\u2022 findElements: (<code>strategy</code>: <code>any</code>, <code>selector</code>: <code>any</code>) =&gt; <code>Promise</code>&lt;<code>Element</code>[]&gt; = <code>find.findElements</code></p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#type-declaration_16","title":"Type declaration","text":"<p>\u25b8 (<code>strategy</code>, <code>selector</code>): <code>Promise</code>&lt;<code>Element</code>[]&gt;</p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#parameters_12","title":"Parameters","text":"Name Type <code>strategy</code> <code>any</code> <code>selector</code> <code>any</code>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#returns_15","title":"Returns","text":"<p><code>Promise</code>&lt;<code>Element</code>[]&gt;</p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#overrides_5","title":"Overrides","text":"<p>BaseDriver.findElements</p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#defined-in_31","title":"Defined in","text":"<p>packages/fake-driver/lib/driver.js:253</p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#findelementsfromelement","title":"findElementsFromElement","text":"<p>\u2022 findElementsFromElement: (<code>strategy</code>: <code>any</code>, <code>selector</code>: <code>any</code>, <code>elementId</code>: <code>any</code>) =&gt; <code>Promise</code>&lt;<code>Element</code>[]&gt; = <code>find.findElementsFromElement</code></p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#type-declaration_17","title":"Type declaration","text":"<p>\u25b8 (<code>strategy</code>, <code>selector</code>, <code>elementId</code>): <code>Promise</code>&lt;<code>Element</code>[]&gt;</p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#parameters_13","title":"Parameters","text":"Name Type <code>strategy</code> <code>any</code> <code>selector</code> <code>any</code> <code>elementId</code> <code>any</code>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#returns_16","title":"Returns","text":"<p><code>Promise</code>&lt;<code>Element</code>[]&gt;</p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#overrides_6","title":"Overrides","text":"<p>BaseDriver.findElementsFromElement</p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#defined-in_32","title":"Defined in","text":"<p>packages/fake-driver/lib/driver.js:255</p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#focusedelid","title":"focusedElId","text":"<p>\u2022 focusedElId: <code>any</code></p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#defined-in_33","title":"Defined in","text":"<p>packages/fake-driver/lib/driver.js:37</p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#getalerttext","title":"getAlertText","text":"<p>\u2022 getAlertText: () =&gt; <code>Promise</code>&lt;<code>string</code>&gt; = <code>alert.getAlertText</code></p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#type-declaration_18","title":"Type declaration","text":"<p>\u25b8 (): <code>Promise</code>&lt;<code>string</code>&gt;</p> <p>Get the text of an alert</p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#returns_17","title":"Returns","text":"<p><code>Promise</code>&lt;<code>string</code>&gt;</p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#defined-in_34","title":"Defined in","text":"<p>packages/fake-driver/lib/driver.js:210</p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#getattribute","title":"getAttribute","text":"<p>\u2022 getAttribute: (<code>attr</code>: <code>any</code>, <code>elementId</code>: <code>any</code>) =&gt; <code>Promise</code>&lt;<code>any</code>&gt; = <code>element.getAttribute</code></p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#type-declaration_19","title":"Type declaration","text":"<p>\u25b8 (<code>attr</code>, <code>elementId</code>): <code>Promise</code>&lt;<code>any</code>&gt;</p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#parameters_14","title":"Parameters","text":"Name Type <code>attr</code> <code>any</code> <code>elementId</code> <code>any</code>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#returns_18","title":"Returns","text":"<p><code>Promise</code>&lt;<code>any</code>&gt;</p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#defined-in_35","title":"Defined in","text":"<p>packages/fake-driver/lib/driver.js:238</p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#getcontexts","title":"getContexts","text":"<p>\u2022 getContexts: () =&gt; <code>Promise</code>&lt;<code>string</code>[]&gt; = <code>contexts.getContexts</code></p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#type-declaration_20","title":"Type declaration","text":"<p>\u25b8 (): <code>Promise</code>&lt;<code>string</code>[]&gt;</p> <p>Get the list of available contexts</p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#returns_19","title":"Returns","text":"<p><code>Promise</code>&lt;<code>string</code>[]&gt;</p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#defined-in_36","title":"Defined in","text":"<p>packages/fake-driver/lib/driver.js:221</p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#getcssproperty","title":"getCssProperty","text":"<p>\u2022 getCssProperty: (<code>prop</code>: <code>any</code>, <code>elementId</code>: <code>any</code>) =&gt; <code>Promise</code>&lt;<code>any</code>&gt; = <code>element.getCssProperty</code></p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#type-declaration_21","title":"Type declaration","text":"<p>\u25b8 (<code>prop</code>, <code>elementId</code>): <code>Promise</code>&lt;<code>any</code>&gt;</p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#parameters_15","title":"Parameters","text":"Name Type <code>prop</code> <code>any</code> <code>elementId</code> <code>any</code>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#returns_20","title":"Returns","text":"<p><code>Promise</code>&lt;<code>any</code>&gt;</p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#defined-in_37","title":"Defined in","text":"<p>packages/fake-driver/lib/driver.js:242</p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#getcurrentcontext","title":"getCurrentContext","text":"<p>\u2022 getCurrentContext: () =&gt; <code>Promise</code>&lt;<code>string</code>&gt; = <code>contexts.getCurrentContext</code></p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#type-declaration_22","title":"Type declaration","text":"<p>\u25b8 (): <code>Promise</code>&lt;<code>string</code>&gt;</p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#returns_21","title":"Returns","text":"<p><code>Promise</code>&lt;<code>string</code>&gt;</p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#defined-in_38","title":"Defined in","text":"<p>packages/fake-driver/lib/driver.js:220</p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#getelement","title":"getElement","text":"<p>\u2022 getElement: (<code>elId</code>: <code>any</code>) =&gt; <code>any</code> = <code>element.getElement</code></p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#type-declaration_23","title":"Type declaration","text":"<p>\u25b8 (<code>elId</code>): <code>any</code></p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#parameters_16","title":"Parameters","text":"Name Type <code>elId</code> <code>any</code>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#returns_22","title":"Returns","text":"<p><code>any</code></p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#defined-in_39","title":"Defined in","text":"<p>packages/fake-driver/lib/driver.js:229</p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#getelementrect","title":"getElementRect","text":"<p>\u2022 getElementRect: (<code>elementId</code>: <code>any</code>) =&gt; <code>any</code> = <code>element.getElementRect</code></p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#type-declaration_24","title":"Type declaration","text":"<p>\u25b8 (<code>elementId</code>): <code>any</code></p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#parameters_17","title":"Parameters","text":"Name Type <code>elementId</code> <code>any</code>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#returns_23","title":"Returns","text":"<p><code>any</code></p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#defined-in_40","title":"Defined in","text":"<p>packages/fake-driver/lib/driver.js:239</p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#getelements","title":"getElements","text":"<p>\u2022 getElements: (<code>elIds</code>: <code>any</code>) =&gt; <code>any</code> = <code>element.getElements</code></p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#type-declaration_25","title":"Type declaration","text":"<p>\u25b8 (<code>elIds</code>): <code>any</code></p> <p>ELEMENTS *</p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#parameters_18","title":"Parameters","text":"Name Type <code>elIds</code> <code>any</code>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#returns_24","title":"Returns","text":"<p><code>any</code></p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#defined-in_41","title":"Defined in","text":"<p>packages/fake-driver/lib/driver.js:228</p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#getexistingelementfornode","title":"getExistingElementForNode","text":"<p>\u2022 getExistingElementForNode: (<code>node</code>: <code>any</code>) =&gt; <code>null</code> | <code>string</code> = <code>find.getExistingElementForNode</code></p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#type-declaration_26","title":"Type declaration","text":"<p>\u25b8 (<code>node</code>): <code>null</code> | <code>string</code></p> <p>FIND *</p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#parameters_19","title":"Parameters","text":"Name Type <code>node</code> <code>any</code>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#returns_25","title":"Returns","text":"<p><code>null</code> | <code>string</code></p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#defined-in_42","title":"Defined in","text":"<p>packages/fake-driver/lib/driver.js:249</p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#getgeolocation","title":"getGeoLocation","text":"<p>\u2022 getGeoLocation: () =&gt; <code>Promise</code>&lt;<code>Location</code>&gt; = <code>general.getGeoLocation</code></p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#type-declaration_27","title":"Type declaration","text":"<p>\u25b8 (): <code>Promise</code>&lt;<code>Location</code>&gt;</p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#returns_26","title":"Returns","text":"<p><code>Promise</code>&lt;<code>Location</code>&gt;</p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#defined-in_43","title":"Defined in","text":"<p>packages/fake-driver/lib/driver.js:263</p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#getlocation","title":"getLocation","text":"<p>\u2022 getLocation: (<code>elementId</code>: <code>string</code>) =&gt; <code>Promise</code>&lt;<code>any</code>&gt; = <code>element.getLocation</code></p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#type-declaration_28","title":"Type declaration","text":"<p>\u25b8 (<code>elementId</code>): <code>Promise</code>&lt;<code>any</code>&gt;</p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#parameters_20","title":"Parameters","text":"Name Type <code>elementId</code> <code>string</code>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#returns_27","title":"Returns","text":"<p><code>Promise</code>&lt;<code>any</code>&gt;</p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#defined-in_44","title":"Defined in","text":"<p>packages/fake-driver/lib/driver.js:243</p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#getlocationinview","title":"getLocationInView","text":"<p>\u2022 getLocationInView: (<code>elementId</code>: <code>any</code>) =&gt; <code>Promise</code>&lt;<code>any</code>&gt; = <code>element.getLocationInView</code></p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#type-declaration_29","title":"Type declaration","text":"<p>\u25b8 (<code>elementId</code>): <code>Promise</code>&lt;<code>any</code>&gt;</p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#parameters_21","title":"Parameters","text":"Name Type <code>elementId</code> <code>any</code>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#returns_28","title":"Returns","text":"<p><code>Promise</code>&lt;<code>any</code>&gt;</p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#defined-in_45","title":"Defined in","text":"<p>packages/fake-driver/lib/driver.js:244</p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#getlog","title":"getLog","text":"<p>\u2022 getLog: (<code>type</code>: <code>any</code>) =&gt; <code>Promise</code>&lt;<code>any</code>[]&gt; = <code>general.getLog</code></p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#type-declaration_30","title":"Type declaration","text":"<p>\u25b8 (<code>type</code>): <code>Promise</code>&lt;<code>any</code>[]&gt;</p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#parameters_22","title":"Parameters","text":"Name Type <code>type</code> <code>any</code>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#returns_29","title":"Returns","text":"<p><code>Promise</code>&lt;<code>any</code>[]&gt;</p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#overrides_7","title":"Overrides","text":"<p>BaseDriver.getLog</p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#defined-in_46","title":"Defined in","text":"<p>packages/fake-driver/lib/driver.js:271</p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#getname","title":"getName","text":"<p>\u2022 getName: (<code>elementId</code>: <code>any</code>) =&gt; <code>Promise</code>&lt;<code>any</code>&gt; = <code>element.getName</code></p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#type-declaration_31","title":"Type declaration","text":"<p>\u25b8 (<code>elementId</code>): <code>Promise</code>&lt;<code>any</code>&gt;</p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#parameters_23","title":"Parameters","text":"Name Type <code>elementId</code> <code>any</code>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#returns_30","title":"Returns","text":"<p><code>Promise</code>&lt;<code>any</code>&gt;</p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#defined-in_47","title":"Defined in","text":"<p>packages/fake-driver/lib/driver.js:230</p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#getorientation","title":"getOrientation","text":"<p>\u2022 getOrientation: () =&gt; <code>Promise</code>&lt;<code>string</code>&gt; = <code>general.getOrientation</code></p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#type-declaration_32","title":"Type declaration","text":"<p>\u25b8 (): <code>Promise</code>&lt;<code>string</code>&gt;</p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#returns_31","title":"Returns","text":"<p><code>Promise</code>&lt;<code>string</code>&gt;</p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#defined-in_48","title":"Defined in","text":"<p>packages/fake-driver/lib/driver.js:265</p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#getpagesource","title":"getPageSource","text":"<p>\u2022 getPageSource: () =&gt; <code>Promise</code>&lt;<code>string</code>&gt; = <code>general.getPageSource</code></p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#type-declaration_33","title":"Type declaration","text":"<p>\u25b8 (): <code>Promise</code>&lt;<code>string</code>&gt;</p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#returns_32","title":"Returns","text":"<p><code>Promise</code>&lt;<code>string</code>&gt;</p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#overrides_8","title":"Overrides","text":"<p>BaseDriver.getPageSource</p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#defined-in_49","title":"Defined in","text":"<p>packages/fake-driver/lib/driver.js:264</p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#getrawcontexts","title":"getRawContexts","text":"<p>\u2022 getRawContexts: () =&gt; { <code>NATIVE_APP</code>: <code>null</code> = null; <code>PROXY</code>: <code>null</code> = null } = <code>contexts.getRawContexts</code></p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#type-declaration_34","title":"Type declaration","text":"<p>\u25b8 (): <code>Object</code></p> <p>CONTEXTS *</p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#returns_33","title":"Returns","text":"<p><code>Object</code></p> Name Type <code>NATIVE_APP</code> <code>null</code> <code>PROXY</code> <code>null</code>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#defined-in_50","title":"Defined in","text":"<p>packages/fake-driver/lib/driver.js:218</p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#getscreenshot","title":"getScreenshot","text":"<p>\u2022 getScreenshot: () =&gt; <code>Promise</code>&lt;<code>string</code>&gt; = <code>general.getScreenshot</code></p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#type-declaration_35","title":"Type declaration","text":"<p>\u25b8 (): <code>Promise</code>&lt;<code>string</code>&gt;</p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#returns_34","title":"Returns","text":"<p><code>Promise</code>&lt;<code>string</code>&gt;</p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#defined-in_51","title":"Defined in","text":"<p>packages/fake-driver/lib/driver.js:267</p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#getsize","title":"getSize","text":"<p>\u2022 getSize: (<code>elementId</code>: <code>any</code>) =&gt; <code>any</code> = <code>element.getSize</code></p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#type-declaration_36","title":"Type declaration","text":"<p>\u25b8 (<code>elementId</code>): <code>any</code></p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#parameters_24","title":"Parameters","text":"Name Type <code>elementId</code> <code>any</code>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#returns_35","title":"Returns","text":"<p><code>any</code></p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#defined-in_52","title":"Defined in","text":"<p>packages/fake-driver/lib/driver.js:240</p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#gettext","title":"getText","text":"<p>\u2022 getText: (<code>elementId</code>: <code>any</code>) =&gt; <code>Promise</code>&lt;<code>any</code>&gt; = <code>element.getText</code></p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#type-declaration_37","title":"Type declaration","text":"<p>\u25b8 (<code>elementId</code>): <code>Promise</code>&lt;<code>any</code>&gt;</p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#parameters_25","title":"Parameters","text":"Name Type <code>elementId</code> <code>any</code>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#returns_36","title":"Returns","text":"<p><code>Promise</code>&lt;<code>any</code>&gt;</p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#defined-in_53","title":"Defined in","text":"<p>packages/fake-driver/lib/driver.js:235</p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#getwindowrect","title":"getWindowRect","text":"<p>\u2022 getWindowRect: () =&gt; <code>Promise</code>&lt;{ <code>height</code>: <code>number</code> ; <code>width</code>: <code>number</code> ; <code>x</code>: <code>number</code> = 0; <code>y</code>: <code>number</code> = 0 }&gt; = <code>general.getWindowRect</code></p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#type-declaration_38","title":"Type declaration","text":"<p>\u25b8 (): <code>Promise</code>&lt;{ <code>height</code>: <code>number</code> ; <code>width</code>: <code>number</code> ; <code>x</code>: <code>number</code> = 0; <code>y</code>: <code>number</code> = 0 }&gt;</p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#returns_37","title":"Returns","text":"<p><code>Promise</code>&lt;{ <code>height</code>: <code>number</code> ; <code>width</code>: <code>number</code> ; <code>x</code>: <code>number</code> = 0; <code>y</code>: <code>number</code> = 0 }&gt;</p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#defined-in_54","title":"Defined in","text":"<p>packages/fake-driver/lib/driver.js:269</p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#getwindowsize","title":"getWindowSize","text":"<p>\u2022 getWindowSize: () =&gt; <code>Promise</code>&lt;{ <code>height</code>: <code>number</code> ; <code>width</code>: <code>number</code>  }&gt; = <code>general.getWindowSize</code></p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#type-declaration_39","title":"Type declaration","text":"<p>\u25b8 (): <code>Promise</code>&lt;{ <code>height</code>: <code>number</code> ; <code>width</code>: <code>number</code>  }&gt;</p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#returns_38","title":"Returns","text":"<p><code>Promise</code>&lt;{ <code>height</code>: <code>number</code> ; <code>width</code>: <code>number</code>  }&gt;</p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#defined-in_55","title":"Defined in","text":"<p>packages/fake-driver/lib/driver.js:268</p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#helpers","title":"helpers","text":"<p>\u2022 helpers: <code>DriverHelpers</code>&lt;<code>any</code>&gt;</p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#inherited-from_9","title":"Inherited from","text":"<p>BaseDriver.helpers</p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#defined-in_56","title":"Defined in","text":"<p>packages/base-driver/build/lib/basedriver/core.d.ts:41</p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#implicitwaitms","title":"implicitWaitMs","text":"<p>\u2022 implicitWaitMs: <code>number</code></p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#inherited-from_10","title":"Inherited from","text":"<p>BaseDriver.implicitWaitMs</p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#defined-in_57","title":"Defined in","text":"<p>packages/base-driver/build/lib/basedriver/core.d.ts:57</p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#initialopts","title":"initialOpts","text":"<p>\u2022 initialOpts: <code>ServerArgs</code></p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#inherited-from_11","title":"Inherited from","text":"<p>BaseDriver.initialOpts</p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#defined-in_58","title":"Defined in","text":"<p>packages/base-driver/build/lib/basedriver/core.d.ts:40</p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#keys","title":"keys","text":"<p>\u2022 keys: (<code>value</code>: <code>any</code>) =&gt; <code>Promise</code>&lt;<code>void</code>&gt; = <code>general.keys</code></p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#type-declaration_40","title":"Type declaration","text":"<p>\u25b8 (<code>value</code>): <code>Promise</code>&lt;<code>void</code>&gt;</p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#parameters_26","title":"Parameters","text":"Name Type <code>value</code> <code>any</code>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#returns_39","title":"Returns","text":"<p><code>Promise</code>&lt;<code>void</code>&gt;</p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#defined-in_59","title":"Defined in","text":"<p>packages/fake-driver/lib/driver.js:261</p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#locatorstrategies","title":"locatorStrategies","text":"<p>\u2022 locatorStrategies: <code>string</code>[]</p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#inherited-from_12","title":"Inherited from","text":"<p>BaseDriver.locatorStrategies</p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#defined-in_60","title":"Defined in","text":"<p>packages/base-driver/build/lib/basedriver/core.d.ts:59</p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#manageddrivers","title":"managedDrivers","text":"<p>\u2022 managedDrivers: <code>Driver</code>&lt;typeof <code>BASE_DESIRED_CAP_CONSTRAINTS</code>, <code>StringRecord</code>, <code>any</code>&gt;[]</p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#inherited-from_13","title":"Inherited from","text":"<p>BaseDriver.managedDrivers</p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#defined-in_61","title":"Defined in","text":"<p>packages/base-driver/build/lib/basedriver/core.d.ts:63</p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#maxelid","title":"maxElId","text":"<p>\u2022 maxElId: <code>number</code></p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#defined-in_62","title":"Defined in","text":"<p>packages/fake-driver/lib/driver.js:38</p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#mobileshake","title":"mobileShake","text":"<p>\u2022 mobileShake: () =&gt; <code>Promise</code>&lt;<code>void</code>&gt; = <code>general.mobileShake</code></p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#type-declaration_41","title":"Type declaration","text":"<p>\u25b8 (): <code>Promise</code>&lt;<code>void</code>&gt;</p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#returns_40","title":"Returns","text":"<p><code>Promise</code>&lt;<code>void</code>&gt;</p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#defined-in_63","title":"Defined in","text":"<p>packages/fake-driver/lib/driver.js:272</p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#newcommandtimeoutms","title":"newCommandTimeoutMs","text":"<p>\u2022 newCommandTimeoutMs: <code>number</code></p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#inherited-from_14","title":"Inherited from","text":"<p>BaseDriver.newCommandTimeoutMs</p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#defined-in_64","title":"Defined in","text":"<p>packages/base-driver/build/lib/basedriver/core.d.ts:56</p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#nocommandtimer","title":"noCommandTimer","text":"<p>\u2022 noCommandTimer: <code>null</code> | <code>Timeout</code></p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#inherited-from_15","title":"Inherited from","text":"<p>BaseDriver.noCommandTimer</p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#defined-in_65","title":"Defined in","text":"<p>packages/base-driver/build/lib/basedriver/core.d.ts:65</p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#opts","title":"opts","text":"<p>\u2022 opts: <code>ServerArgs</code> &amp; <code>ExtraDriverOpts</code> &amp; <code>Partial</code>&lt;<code>ConstraintsToCaps</code>&lt;<code>any</code>&gt;&gt; &amp; <code>Partial</code>&lt;<code>ConstraintsToCaps</code>&lt;typeof <code>BASE_DESIRED_CAP_CONSTRAINTS</code>&gt;&gt;</p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#inherited-from_16","title":"Inherited from","text":"<p>BaseDriver.opts</p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#defined-in_66","title":"Defined in","text":"<p>packages/base-driver/build/lib/basedriver/driver.d.ts:33</p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#originalcaps","title":"originalCaps","text":"<p>\u2022 originalCaps: <code>W3CCapabilities</code>&lt;<code>any</code>, <code>void</code>&gt;</p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#inherited-from_17","title":"Inherited from","text":"<p>BaseDriver.originalCaps</p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#defined-in_67","title":"Defined in","text":"<p>packages/base-driver/build/lib/basedriver/driver.d.ts:25</p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#performactions","title":"performActions","text":"<p>\u2022 performActions: (<code>actions</code>: <code>any</code>) =&gt; <code>Promise</code>&lt;<code>void</code>&gt; = <code>general.performActions</code></p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#type-declaration_42","title":"Type declaration","text":"<p>\u25b8 (<code>actions</code>): <code>Promise</code>&lt;<code>void</code>&gt;</p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#parameters_27","title":"Parameters","text":"Name Type <code>actions</code> <code>any</code>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#returns_41","title":"Returns","text":"<p><code>Promise</code>&lt;<code>void</code>&gt;</p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#defined-in_68","title":"Defined in","text":"<p>packages/fake-driver/lib/driver.js:270</p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#postacceptalert","title":"postAcceptAlert","text":"<p>\u2022 postAcceptAlert: () =&gt; <code>Promise</code>&lt;<code>void</code>&gt; = <code>alert.postAcceptAlert</code></p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#type-declaration_43","title":"Type declaration","text":"<p>\u25b8 (): <code>Promise</code>&lt;<code>void</code>&gt;</p> <p>Accept an alert</p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#returns_42","title":"Returns","text":"<p><code>Promise</code>&lt;<code>void</code>&gt;</p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#defined-in_69","title":"Defined in","text":"<p>packages/fake-driver/lib/driver.js:212</p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#postdismissalert","title":"postDismissAlert","text":"<p>\u2022 postDismissAlert: () =&gt; <code>Promise</code>&lt;<code>void</code>&gt; = <code>alert.postDismissAlert</code></p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#type-declaration_44","title":"Type declaration","text":"<p>\u25b8 (): <code>Promise</code>&lt;<code>void</code>&gt;</p> <p>Dismiss an alert</p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#returns_43","title":"Returns","text":"<p><code>Promise</code>&lt;<code>void</code>&gt;</p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#defined-in_70","title":"Defined in","text":"<p>packages/fake-driver/lib/driver.js:213</p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#protocol","title":"protocol","text":"<p>\u2022 protocol: <code>undefined</code> | <code>string</code></p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#inherited-from_18","title":"Inherited from","text":"<p>BaseDriver.protocol</p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#defined-in_71","title":"Defined in","text":"<p>packages/base-driver/build/lib/basedriver/core.d.ts:153</p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#relaxedsecurityenabled","title":"relaxedSecurityEnabled","text":"<p>\u2022 relaxedSecurityEnabled: <code>boolean</code></p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#inherited-from_19","title":"Inherited from","text":"<p>BaseDriver.relaxedSecurityEnabled</p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#defined-in_72","title":"Defined in","text":"<p>packages/base-driver/build/lib/basedriver/core.d.ts:51</p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#releaseactions","title":"releaseActions","text":"<p>\u2022 releaseActions: () =&gt; <code>Promise</code>&lt;<code>void</code>&gt; = <code>general.releaseActions</code></p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#type-declaration_45","title":"Type declaration","text":"<p>\u25b8 (): <code>Promise</code>&lt;<code>void</code>&gt;</p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#returns_44","title":"Returns","text":"<p><code>Promise</code>&lt;<code>void</code>&gt;</p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#defined-in_73","title":"Defined in","text":"<p>packages/fake-driver/lib/driver.js:276</p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#resetonunexpectedshutdown","title":"resetOnUnexpectedShutdown","text":"<p>\u2022 resetOnUnexpectedShutdown: <code>undefined</code> | () =&gt; <code>void</code></p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#inherited-from_20","title":"Inherited from","text":"<p>BaseDriver.resetOnUnexpectedShutdown</p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#defined-in_74","title":"Defined in","text":"<p>packages/base-driver/build/lib/basedriver/driver.d.ts:69</p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#server","title":"server","text":"<p>\u2022 server: <code>undefined</code> | <code>AppiumServer</code></p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#inherited-from_21","title":"Inherited from","text":"<p>BaseDriver.server</p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#defined-in_75","title":"Defined in","text":"<p>packages/base-driver/build/lib/basedriver/driver.d.ts:64</p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#serverhost","title":"serverHost","text":"<p>\u2022 serverHost: <code>undefined</code> | <code>string</code></p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#inherited-from_22","title":"Inherited from","text":"<p>BaseDriver.serverHost</p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#defined-in_76","title":"Defined in","text":"<p>packages/base-driver/build/lib/basedriver/driver.d.ts:65</p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#serverpath","title":"serverPath","text":"<p>\u2022 serverPath: <code>undefined</code> | <code>string</code></p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#inherited-from_23","title":"Inherited from","text":"<p>BaseDriver.serverPath</p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#defined-in_77","title":"Defined in","text":"<p>packages/base-driver/build/lib/basedriver/driver.d.ts:67</p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#serverport","title":"serverPort","text":"<p>\u2022 serverPort: <code>undefined</code> | <code>number</code></p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#inherited-from_24","title":"Inherited from","text":"<p>BaseDriver.serverPort</p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#defined-in_78","title":"Defined in","text":"<p>packages/base-driver/build/lib/basedriver/driver.d.ts:66</p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#sessionid","title":"sessionId","text":"<p>\u2022 sessionId: <code>null</code> | <code>string</code></p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#inherited-from_25","title":"Inherited from","text":"<p>BaseDriver.sessionId</p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#defined-in_79","title":"Defined in","text":"<p>packages/base-driver/build/lib/basedriver/core.d.ts:32</p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#setalerttext","title":"setAlertText","text":"<p>\u2022 setAlertText: (<code>text</code>: <code>string</code>) =&gt; <code>Promise</code>&lt;<code>void</code>&gt; = <code>alert.setAlertText</code></p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#type-declaration_46","title":"Type declaration","text":"<p>\u25b8 (<code>text</code>): <code>Promise</code>&lt;<code>void</code>&gt;</p> <p>Set the text of an alert</p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#parameters_28","title":"Parameters","text":"Name Type <code>text</code> <code>string</code>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#returns_45","title":"Returns","text":"<p><code>Promise</code>&lt;<code>void</code>&gt;</p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#defined-in_80","title":"Defined in","text":"<p>packages/fake-driver/lib/driver.js:211</p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#setcontext","title":"setContext","text":"<p>\u2022 setContext: (<code>context</code>: <code>string</code>) =&gt; <code>Promise</code>&lt;<code>void</code>&gt; = <code>contexts.setContext</code></p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#type-declaration_47","title":"Type declaration","text":"<p>\u25b8 (<code>context</code>): <code>Promise</code>&lt;<code>void</code>&gt;</p> <p>Set the current context</p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#parameters_29","title":"Parameters","text":"Name Type Description <code>context</code> <code>string</code> name of the context"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#returns_46","title":"Returns","text":"<p><code>Promise</code>&lt;<code>void</code>&gt;</p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#defined-in_81","title":"Defined in","text":"<p>packages/fake-driver/lib/driver.js:222</p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#setframe","title":"setFrame","text":"<p>\u2022 setFrame: (<code>frameId</code>: <code>number</code>) =&gt; <code>Promise</code>&lt;<code>void</code>&gt; = <code>contexts.setFrame</code></p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#type-declaration_48","title":"Type declaration","text":"<p>\u25b8 (<code>frameId</code>): <code>Promise</code>&lt;<code>void</code>&gt;</p> <p>Set the active frame</p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#parameters_30","title":"Parameters","text":"Name Type <code>frameId</code> <code>number</code>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#returns_47","title":"Returns","text":"<p><code>Promise</code>&lt;<code>void</code>&gt;</p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#defined-in_82","title":"Defined in","text":"<p>packages/fake-driver/lib/driver.js:223</p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#setgeolocation","title":"setGeoLocation","text":"<p>\u2022 setGeoLocation: (<code>location</code>: <code>any</code>) =&gt; <code>Promise</code>&lt;<code>void</code>&gt; = <code>general.setGeoLocation</code></p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#type-declaration_49","title":"Type declaration","text":"<p>\u25b8 (<code>location</code>): <code>Promise</code>&lt;<code>void</code>&gt;</p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#parameters_31","title":"Parameters","text":"Name Type <code>location</code> <code>any</code>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#returns_48","title":"Returns","text":"<p><code>Promise</code>&lt;<code>void</code>&gt;</p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#defined-in_83","title":"Defined in","text":"<p>packages/fake-driver/lib/driver.js:262</p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#setorientation","title":"setOrientation","text":"<p>\u2022 setOrientation: (<code>o</code>: <code>any</code>) =&gt; <code>Promise</code>&lt;<code>void</code>&gt; = <code>general.setOrientation</code></p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#type-declaration_50","title":"Type declaration","text":"<p>\u25b8 (<code>o</code>): <code>Promise</code>&lt;<code>void</code>&gt;</p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#parameters_32","title":"Parameters","text":"Name Type <code>o</code> <code>any</code>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#returns_49","title":"Returns","text":"<p><code>Promise</code>&lt;<code>void</code>&gt;</p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#defined-in_84","title":"Defined in","text":"<p>packages/fake-driver/lib/driver.js:266</p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#setvalue","title":"setValue","text":"<p>\u2022 setValue: (<code>keys</code>: <code>any</code>, <code>elementId</code>: <code>any</code>) =&gt; <code>Promise</code>&lt;<code>void</code>&gt; = <code>element.setValue</code></p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#type-declaration_51","title":"Type declaration","text":"<p>\u25b8 (<code>keys</code>, <code>elementId</code>): <code>Promise</code>&lt;<code>void</code>&gt;</p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#parameters_33","title":"Parameters","text":"Name Type <code>keys</code> <code>any</code> <code>elementId</code> <code>any</code>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#returns_50","title":"Returns","text":"<p><code>Promise</code>&lt;<code>void</code>&gt;</p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#defined-in_85","title":"Defined in","text":"<p>packages/fake-driver/lib/driver.js:234</p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#settings","title":"settings","text":"<p>\u2022 settings: <code>DeviceSettings</code>&lt;<code>any</code>&gt;</p> <p>settings should be instantiated by drivers which extend BaseDriver, but we set it to an empty DeviceSettings instance here to make sure that the default settings are applied even if an extending driver doesn't utilize the settings functionality itself</p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#inherited-from_26","title":"Inherited from","text":"<p>BaseDriver.settings</p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#defined-in_86","title":"Defined in","text":"<p>packages/base-driver/build/lib/basedriver/core.d.ts:92</p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#shook","title":"shook","text":"<p>\u2022 shook: <code>boolean</code></p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#defined-in_87","title":"Defined in","text":"<p>packages/fake-driver/lib/driver.js:41</p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#shouldvalidatecaps","title":"shouldValidateCaps","text":"<p>\u2022 shouldValidateCaps: <code>boolean</code></p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#inherited-from_27","title":"Inherited from","text":"<p>BaseDriver.shouldValidateCaps</p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#defined-in_88","title":"Defined in","text":"<p>packages/base-driver/build/lib/basedriver/core.d.ts:81</p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#shutdownunexpectedly","title":"shutdownUnexpectedly","text":"<p>\u2022 <code>Protected</code> shutdownUnexpectedly: <code>boolean</code></p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#inherited-from_28","title":"Inherited from","text":"<p>BaseDriver.shutdownUnexpectedly</p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#defined-in_89","title":"Defined in","text":"<p>packages/base-driver/build/lib/basedriver/core.d.ts:77</p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#supportedlogtypes","title":"supportedLogTypes","text":"<p>\u2022 supportedLogTypes: <code>Readonly</code>&lt;<code>LogDefRecord</code>&lt;<code>any</code>&gt;&gt;</p> <p>Definition of the available log types</p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#inherited-from_29","title":"Inherited from","text":"<p>BaseDriver.supportedLogTypes</p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#defined-in_90","title":"Defined in","text":"<p>packages/types/build/lib/driver.d.ts:261</p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#title","title":"title","text":"<p>\u2022 title: () =&gt; <code>Promise</code>&lt;<code>any</code>&gt; = <code>general.title</code></p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#type-declaration_52","title":"Type declaration","text":"<p>\u25b8 (): <code>Promise</code>&lt;<code>any</code>&gt;</p> <p>GENERAL *</p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#returns_51","title":"Returns","text":"<p><code>Promise</code>&lt;<code>any</code>&gt;</p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#defined-in_91","title":"Defined in","text":"<p>packages/fake-driver/lib/driver.js:260</p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#updatesettings","title":"updateSettings","text":"<p>\u2022 updateSettings: (<code>settings</code>: <code>StringRecord</code>) =&gt; <code>Promise</code>&lt;<code>void</code>&gt;</p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#type-declaration_53","title":"Type declaration","text":"<p>\u25b8 (<code>settings</code>): <code>Promise</code>&lt;<code>void</code>&gt;</p> <p>Update the session's settings dictionary with a new settings object</p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#parameters_34","title":"Parameters","text":"Name Type Description <code>settings</code> <code>StringRecord</code> A key-value map of setting names to values. Settings not named in the map will not have their value adjusted."},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#returns_52","title":"Returns","text":"<p><code>Promise</code>&lt;<code>void</code>&gt;</p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#inherited-from_30","title":"Inherited from","text":"<p>BaseDriver.updateSettings</p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#defined-in_92","title":"Defined in","text":"<p>packages/types/build/lib/driver.d.ts:303</p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#weblocatorstrategies","title":"webLocatorStrategies","text":"<p>\u2022 webLocatorStrategies: <code>string</code>[]</p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#inherited-from_31","title":"Inherited from","text":"<p>BaseDriver.webLocatorStrategies</p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#defined-in_93","title":"Defined in","text":"<p>packages/base-driver/build/lib/basedriver/core.d.ts:61</p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#wrapnewel","title":"wrapNewEl","text":"<p>\u2022 wrapNewEl: (<code>obj</code>: <code>any</code>) =&gt; { <code>ELEMENT</code>: <code>string</code> = existingElId } = <code>find.wrapNewEl</code></p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#type-declaration_54","title":"Type declaration","text":"<p>\u25b8 (<code>obj</code>): <code>Object</code></p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#parameters_35","title":"Parameters","text":"Name Type <code>obj</code> <code>any</code>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#returns_53","title":"Returns","text":"<p><code>Object</code></p> Name Type <code>ELEMENT</code> <code>string</code>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#defined-in_94","title":"Defined in","text":"<p>packages/fake-driver/lib/driver.js:250</p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#baseversion","title":"baseVersion","text":"<p>\u25aa <code>Static</code> baseVersion: <code>string</code></p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#inherited-from_32","title":"Inherited from","text":"<p>BaseDriver.baseVersion</p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#defined-in_95","title":"Defined in","text":"<p>packages/types/build/lib/driver.d.ts:1831</p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#executemethodmap","title":"executeMethodMap","text":"<p>\u25aa <code>Static</code> executeMethodMap: <code>Object</code></p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#type-declaration_55","title":"Type declaration","text":"Name Type Description <code>fake: addition</code> { <code>command</code>: <code>\"fakeAddition\"</code> = 'fakeAddition'; <code>params</code>: { <code>optional</code>: readonly [<code>\"num3\"</code>] ; <code>required</code>: readonly [<code>\"num1\"</code>, <code>\"num2\"</code>]  }  } - <code>fake: addition.command</code> <code>\"fakeAddition\"</code> - <code>fake: addition.params</code> { <code>optional</code>: readonly [<code>\"num3\"</code>] ; <code>required</code>: readonly [<code>\"num1\"</code>, <code>\"num2\"</code>]  } - <code>fake: addition.params.optional</code> readonly [<code>\"num3\"</code>] - <code>fake: addition.params.required</code> readonly [<code>\"num1\"</code>, <code>\"num2\"</code>] - <code>fake: getDeprecatedCommandsCalled</code> { <code>command</code>: <code>\"getDeprecatedCommandsCalled\"</code> = 'getDeprecatedCommandsCalled' } - <code>fake: getDeprecatedCommandsCalled.command</code> <code>\"getDeprecatedCommandsCalled\"</code> - <code>fake: getThing</code> { <code>command</code>: <code>\"getFakeThing\"</code> = 'getFakeThing' } Gets a thing (a fake thing) <code>fake: getThing.command</code> <code>\"getFakeThing\"</code> - <code>fake: setThing</code> { <code>command</code>: <code>\"setFakeThing\"</code> = 'setFakeThing'; <code>params</code>: { <code>required</code>: readonly [<code>\"thing\"</code>]  }  } - <code>fake: setThing.command</code> <code>\"setFakeThing\"</code> - <code>fake: setThing.params</code> { <code>required</code>: readonly [<code>\"thing\"</code>]  } - <code>fake: setThing.params.required</code> readonly [<code>\"thing\"</code>] -"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#overrides_9","title":"Overrides","text":"<p>BaseDriver.executeMethodMap</p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#defined-in_96","title":"Defined in","text":"<p>packages/fake-driver/lib/driver.js:173</p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#newmethodmap","title":"newMethodMap","text":"<p>\u25aa <code>Static</code> newMethodMap: <code>Object</code></p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#type-declaration_56","title":"Type declaration","text":"Name Type <code>/session/:sessionId/deprecated</code> { <code>POST</code>: { <code>command</code>: <code>\"callDeprecatedCommand\"</code> = 'callDeprecatedCommand'; <code>deprecated</code>: <code>true</code> = true }  } <code>/session/:sessionId/deprecated.POST</code> { <code>command</code>: <code>\"callDeprecatedCommand\"</code> = 'callDeprecatedCommand'; <code>deprecated</code>: <code>true</code> = true } <code>/session/:sessionId/deprecated.POST.command</code> <code>\"callDeprecatedCommand\"</code> <code>/session/:sessionId/deprecated.POST.deprecated</code> <code>true</code> <code>/session/:sessionId/doubleclick</code> { <code>POST</code>: { <code>command</code>: <code>\"doubleClick\"</code> = 'doubleClick' }  } <code>/session/:sessionId/doubleclick.POST</code> { <code>command</code>: <code>\"doubleClick\"</code> = 'doubleClick' } <code>/session/:sessionId/doubleclick.POST.command</code> <code>\"doubleClick\"</code> <code>/session/:sessionId/fakedriver</code> { <code>GET</code>: { <code>command</code>: <code>\"getFakeThing\"</code> = 'getFakeThing' } ; <code>POST</code>: { <code>command</code>: <code>\"setFakeThing\"</code> = 'setFakeThing'; <code>payloadParams</code>: { <code>required</code>: readonly [<code>\"thing\"</code>]  }  }  } <code>/session/:sessionId/fakedriver.GET</code> { <code>command</code>: <code>\"getFakeThing\"</code> = 'getFakeThing' } <code>/session/:sessionId/fakedriver.GET.command</code> <code>\"getFakeThing\"</code> <code>/session/:sessionId/fakedriver.POST</code> { <code>command</code>: <code>\"setFakeThing\"</code> = 'setFakeThing'; <code>payloadParams</code>: { <code>required</code>: readonly [<code>\"thing\"</code>]  }  } <code>/session/:sessionId/fakedriver.POST.command</code> <code>\"setFakeThing\"</code> <code>/session/:sessionId/fakedriver.POST.payloadParams</code> { <code>required</code>: readonly [<code>\"thing\"</code>]  } <code>/session/:sessionId/fakedriver.POST.payloadParams.required</code> readonly [<code>\"thing\"</code>] <code>/session/:sessionId/fakedriverargs</code> { <code>GET</code>: { <code>command</code>: <code>\"getFakeDriverArgs\"</code> = 'getFakeDriverArgs' }  } <code>/session/:sessionId/fakedriverargs.GET</code> { <code>command</code>: <code>\"getFakeDriverArgs\"</code> = 'getFakeDriverArgs' } <code>/session/:sessionId/fakedriverargs.GET.command</code> <code>\"getFakeDriverArgs\"</code>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#overrides_10","title":"Overrides","text":"<p>BaseDriver.newMethodMap</p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#defined-in_97","title":"Defined in","text":"<p>packages/fake-driver/lib/driver.js:153</p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#accessors_1","title":"Accessors","text":""},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#_desiredcapconstraints","title":"_desiredCapConstraints","text":"<p>\u2022 <code>Protected</code> <code>get</code> _desiredCapConstraints(): <code>Readonly</code>&lt;typeof <code>BASE_DESIRED_CAP_CONSTRAINTS</code> &amp; <code>C</code>&gt;</p> <p>Contains the base constraints plus whatever the subclass wants to add.</p> <p>Subclasses shouldn't need to use this. If you need to use this, please create an issue:</p> <p><code>See</code></p> <p>https://github.com/appium/appium/issues/new</p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#returns_54","title":"Returns","text":"<p><code>Readonly</code>&lt;typeof <code>BASE_DESIRED_CAP_CONSTRAINTS</code> &amp; <code>C</code>&gt;</p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#inherited-from_33","title":"Inherited from","text":"<p>BaseDriver._desiredCapConstraints</p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#defined-in_98","title":"Defined in","text":"<p>packages/base-driver/build/lib/basedriver/driver.d.ts:43</p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#driverdata","title":"driverData","text":"<p>\u2022 <code>get</code> driverData(): <code>Object</code></p> <p>This property is used by AppiumDriver to store the data of the specific driver sessions. This data can be later used to adjust properties for driver instances running in parallel. Override it in inherited driver classes if necessary.</p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#returns_55","title":"Returns","text":"<p><code>Object</code></p> <p>Driver properties mapping</p> Name Type <code>isUnique</code> <code>boolean</code>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#overrides_11","title":"Overrides","text":"<p>BaseDriver.driverData</p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#defined-in_99","title":"Defined in","text":"<p>packages/fake-driver/lib/driver.js:101</p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#eventhistory","title":"eventHistory","text":"<p>\u2022 <code>get</code> eventHistory(): <code>EventHistory</code></p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#returns_56","title":"Returns","text":"<p><code>EventHistory</code></p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#inherited-from_34","title":"Inherited from","text":"<p>BaseDriver.eventHistory</p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#defined-in_100","title":"Defined in","text":"<p>packages/base-driver/build/lib/basedriver/core.d.ts:125</p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#iscommandsqueueenabled","title":"isCommandsQueueEnabled","text":"<p>\u2022 <code>get</code> isCommandsQueueEnabled(): <code>boolean</code></p> <p>This property controls the way the <code>executeCommand</code> method handles new driver commands received from the client. Override it for inherited classes only in special cases.</p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#returns_57","title":"Returns","text":"<p><code>boolean</code></p> <p>If the returned value is true (default) then all the commands   received by the particular driver instance are going to be put into the queue,   so each following command will not be executed until the previous command   execution is completed. False value disables that queue, so each driver command   is executed independently and does not wait for anything.</p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#inherited-from_35","title":"Inherited from","text":"<p>BaseDriver.isCommandsQueueEnabled</p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#defined-in_101","title":"Defined in","text":"<p>packages/base-driver/build/lib/basedriver/core.d.ts:124</p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#log","title":"log","text":"<p>\u2022 <code>get</code> log(): <code>AppiumLogger</code></p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#returns_58","title":"Returns","text":"<p><code>AppiumLogger</code></p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#inherited-from_36","title":"Inherited from","text":"<p>BaseDriver.log</p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#defined-in_102","title":"Defined in","text":"<p>packages/base-driver/build/lib/basedriver/core.d.ts:93</p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#methods_1","title":"Methods","text":""},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#addmanageddriver","title":"addManagedDriver","text":"<p>\u25b8 addManagedDriver(<code>driver</code>): <code>void</code></p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#parameters_36","title":"Parameters","text":"Name Type <code>driver</code> <code>Driver</code>&lt;typeof <code>BASE_DESIRED_CAP_CONSTRAINTS</code>, <code>StringRecord</code>, <code>any</code>&gt;"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#returns_59","title":"Returns","text":"<p><code>void</code></p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#inherited-from_37","title":"Inherited from","text":"<p>BaseDriver.addManagedDriver</p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#defined-in_103","title":"Defined in","text":"<p>packages/base-driver/build/lib/basedriver/core.d.ts:220</p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#assertfeatureenabled","title":"assertFeatureEnabled","text":"<p>\u25b8 assertFeatureEnabled(<code>name</code>): <code>void</code></p> <p>Assert that a given feature is enabled and throw a helpful error if it's not</p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#parameters_37","title":"Parameters","text":"Name Type Description <code>name</code> <code>string</code> name of feature/command"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#returns_60","title":"Returns","text":"<p><code>void</code></p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#inherited-from_38","title":"Inherited from","text":"<p>BaseDriver.assertFeatureEnabled</p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#defined-in_104","title":"Defined in","text":"<p>packages/base-driver/build/lib/basedriver/core.d.ts:177</p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#assignserver","title":"assignServer","text":"<p>\u25b8 assignServer(<code>server</code>, <code>host</code>, <code>port</code>, <code>path</code>): <code>void</code></p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#parameters_38","title":"Parameters","text":"Name Type <code>server</code> <code>AppiumServer</code> <code>host</code> <code>string</code> <code>port</code> <code>number</code> <code>path</code> <code>string</code>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#returns_61","title":"Returns","text":"<p><code>void</code></p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#inherited-from_39","title":"Inherited from","text":"<p>BaseDriver.assignServer</p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#defined-in_105","title":"Defined in","text":"<p>packages/base-driver/build/lib/basedriver/driver.d.ts:63</p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#calldeprecatedcommand","title":"callDeprecatedCommand","text":"<p>\u25b8 callDeprecatedCommand(): <code>Promise</code>&lt;<code>void</code>&gt;</p> <p>This is a command that exists just to be an example of a deprecated command</p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#returns_62","title":"Returns","text":"<p><code>Promise</code>&lt;<code>void</code>&gt;</p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#defined-in_106","title":"Defined in","text":"<p>packages/fake-driver/lib/driver.js:149</p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#canproxy","title":"canProxy","text":"<p>\u25b8 canProxy(): <code>boolean</code></p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#returns_63","title":"Returns","text":"<p><code>boolean</code></p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#overrides_12","title":"Overrides","text":"<p>BaseDriver.canProxy</p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#defined-in_107","title":"Defined in","text":"<p>packages/fake-driver/lib/driver.js:48</p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#clearnewcommandtimeout","title":"clearNewCommandTimeout","text":"<p>\u25b8 clearNewCommandTimeout(): <code>Promise</code>&lt;<code>void</code>&gt;</p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#returns_64","title":"Returns","text":"<p><code>Promise</code>&lt;<code>void</code>&gt;</p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#inherited-from_40","title":"Inherited from","text":"<p>BaseDriver.clearNewCommandTimeout</p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#defined-in_108","title":"Defined in","text":"<p>packages/base-driver/build/lib/basedriver/core.d.ts:222</p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#createsession","title":"createSession","text":"<p>\u25b8 createSession(<code>w3cCapabilities1</code>, <code>w3cCapabilities2?</code>, <code>w3cCapabilities3?</code>, <code>driverData?</code>): <code>Promise</code>&lt;[<code>string</code>, <code>Partial</code>&lt;<code>ConstraintsToCaps</code>&lt;typeof <code>BASE_DESIRED_CAP_CONSTRAINTS</code> &amp; { <code>app</code>: { <code>isString</code>: <code>true</code> = true; <code>presence</code>: <code>true</code> = true } ; <code>uniqueApp</code>: { <code>isBoolean</code>: <code>true</code> = true }  }&gt; &amp; <code>void</code>&gt;]&gt;</p> <p>Comment for <code>createSession</code> in <code>FakeDriver</code></p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#parameters_39","title":"Parameters","text":"Name Type Default value Description <code>w3cCapabilities1</code> <code>W3CFakeDriverCaps</code> <code>undefined</code> W3C Capabilities <code>w3cCapabilities2?</code> <code>W3CFakeDriverCaps</code> <code>undefined</code> W3C Capabilities <code>w3cCapabilities3?</code> <code>W3CFakeDriverCaps</code> <code>undefined</code> W3C Capabilities <code>driverData?</code> <code>DriverData</code>[] <code>[]</code> Other session data"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#returns_65","title":"Returns","text":"<p><code>Promise</code>&lt;[<code>string</code>, <code>Partial</code>&lt;<code>ConstraintsToCaps</code>&lt;typeof <code>BASE_DESIRED_CAP_CONSTRAINTS</code> &amp; { <code>app</code>: { <code>isString</code>: <code>true</code> = true; <code>presence</code>: <code>true</code> = true } ; <code>uniqueApp</code>: { <code>isBoolean</code>: <code>true</code> = true }  }&gt; &amp; <code>void</code>&gt;]&gt;</p> <p>Session ID and normalized capabilities</p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#overrides_13","title":"Overrides","text":"<p>BaseDriver.createSession</p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#defined-in_109","title":"Defined in","text":"<p>packages/fake-driver/lib/driver.js:78</p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#deletesession","title":"deleteSession","text":"<p>\u25b8 deleteSession(<code>sessionId?</code>, <code>driverData?</code>): <code>Promise</code>&lt;<code>void</code>&gt;</p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#parameters_40","title":"Parameters","text":"Name Type <code>sessionId?</code> <code>string</code> <code>driverData?</code> <code>DriverData</code>[]"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#returns_66","title":"Returns","text":"<p><code>Promise</code>&lt;<code>void</code>&gt;</p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#inherited-from_41","title":"Inherited from","text":"<p>BaseDriver.deleteSession</p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#defined-in_110","title":"Defined in","text":"<p>packages/base-driver/build/lib/basedriver/driver.d.ts:89</p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#driverforsession","title":"driverForSession","text":"<p>\u25b8 driverForSession(<code>sessionId</code>): <code>null</code> | <code>Core</code>&lt;<code>any</code>&gt;</p> <p>method required by MJSONWP in order to determine if the command should be proxied directly to the driver</p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#parameters_41","title":"Parameters","text":"Name Type <code>sessionId</code> <code>string</code>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#returns_67","title":"Returns","text":"<p><code>null</code> | <code>Core</code>&lt;<code>any</code>&gt;</p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#inherited-from_42","title":"Inherited from","text":"<p>BaseDriver.driverForSession</p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#defined-in_111","title":"Defined in","text":"<p>packages/base-driver/build/lib/basedriver/core.d.ts:149</p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#ensurefeatureenabled","title":"ensureFeatureEnabled","text":"<p>\u25b8 ensureFeatureEnabled(<code>name</code>): <code>void</code></p> <p>Assert that a given feature is enabled and throw a helpful error if it's not</p> <p><code>Deprecated</code></p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#parameters_42","title":"Parameters","text":"Name Type Description <code>name</code> <code>string</code> name of feature/command"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#returns_68","title":"Returns","text":"<p><code>void</code></p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#inherited-from_43","title":"Inherited from","text":"<p>BaseDriver.ensureFeatureEnabled</p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#defined-in_112","title":"Defined in","text":"<p>packages/base-driver/build/lib/basedriver/core.d.ts:170</p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#executecommand","title":"executeCommand","text":"<p>\u25b8 executeCommand(<code>cmd</code>, <code>...args</code>): <code>Promise</code>&lt;<code>any</code>&gt;</p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#parameters_43","title":"Parameters","text":"Name Type <code>cmd</code> <code>string</code> <code>...args</code> <code>any</code>[]"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#returns_69","title":"Returns","text":"<p><code>Promise</code>&lt;<code>any</code>&gt;</p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#inherited-from_44","title":"Inherited from","text":"<p>BaseDriver.executeCommand</p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#defined-in_113","title":"Defined in","text":"<p>packages/base-driver/build/lib/basedriver/driver.d.ts:49</p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#executemethod","title":"executeMethod","text":"<p>\u25b8 executeMethod(<code>script</code>, <code>args</code>): <code>Promise</code>&lt;<code>any</code>&gt;</p> <p>Call an <code>Execute Method</code> by its name with the given arguments. This method will check that the driver has registered the method matching the name, and send it the arguments.</p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#parameters_44","title":"Parameters","text":"Name Type Description <code>script</code> <code>string</code> the name of the Execute Method <code>args</code> [] | [<code>StringRecord</code>] a singleton array containing an arguments object"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#returns_70","title":"Returns","text":"<p><code>Promise</code>&lt;<code>any</code>&gt;</p> <p>The result of calling the Execute Method</p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#inherited-from_45","title":"Inherited from","text":"<p>BaseDriver.executeMethod</p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#defined-in_114","title":"Defined in","text":"<p>packages/types/build/lib/driver.d.ts:149</p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#findelorelswithprocessing","title":"findElOrElsWithProcessing","text":"<p>\u25b8 findElOrElsWithProcessing&lt;<code>Mult</code>&gt;(<code>strategy</code>, <code>selector</code>, <code>mult</code>, <code>context?</code>): <code>Promise</code>&lt;<code>Mult</code> extends <code>true</code> ? <code>Element</code>[] : <code>Element</code>&gt;</p> <p>This is a wrapper for IFindCommands.findElOrEls that validates locator strategies and implements the <code>appium:printPageSourceOnFindFailure</code> capability</p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#type-parameters_1","title":"Type parameters","text":"Name Type <code>Mult</code> extends <code>boolean</code>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#parameters_45","title":"Parameters","text":"Name Type Description <code>strategy</code> <code>string</code> the locator strategy <code>selector</code> <code>string</code> the selector <code>mult</code> <code>Mult</code> whether or not we want to find multiple elements <code>context?</code> <code>any</code> the element to use as the search context basis if desiredCapabilities"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#returns_71","title":"Returns","text":"<p><code>Promise</code>&lt;<code>Mult</code> extends <code>true</code> ? <code>Element</code>[] : <code>Element</code>&gt;</p> <p>A single element or list of elements</p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#inherited-from_46","title":"Inherited from","text":"<p>BaseDriver.findElOrElsWithProcessing</p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#defined-in_115","title":"Defined in","text":"<p>packages/types/build/lib/driver.d.ts:248</p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#findelementfromshadowroot","title":"findElementFromShadowRoot","text":"<p>\u25b8 <code>Optional</code> findElementFromShadowRoot(<code>strategy</code>, <code>selector</code>, <code>shadowId</code>): <code>Promise</code>&lt;<code>Element</code>&gt;</p> <p>Find an element from a shadow root</p> <p><code>See</code></p> <p>https://w3c.github.io/webdriver/#find-element-from-shadow-root</p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#parameters_46","title":"Parameters","text":"Name Type Description <code>strategy</code> <code>string</code> the locator strategy <code>selector</code> <code>string</code> the selector to combine with the strategy to find the specific elements <code>shadowId</code> <code>string</code> the id of the element to use as the search basis"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#returns_72","title":"Returns","text":"<p><code>Promise</code>&lt;<code>Element</code>&gt;</p> <p>The element inside the shadow root matching the selector</p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#inherited-from_47","title":"Inherited from","text":"<p>BaseDriver.findElementFromShadowRoot</p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#defined-in_116","title":"Defined in","text":"<p>packages/types/build/lib/driver.d.ts:215</p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#findelementsfromshadowroot","title":"findElementsFromShadowRoot","text":"<p>\u25b8 <code>Optional</code> findElementsFromShadowRoot(<code>strategy</code>, <code>selector</code>, <code>shadowId</code>): <code>Promise</code>&lt;<code>Element</code>[]&gt;</p> <p>Find elements from a shadow root</p> <p><code>See</code></p> <p>https://w3c.github.io/webdriver/#find-element-from-shadow-root</p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#parameters_47","title":"Parameters","text":"Name Type Description <code>strategy</code> <code>string</code> the locator strategy <code>selector</code> <code>string</code> the selector to combine with the strategy to find the specific elements <code>shadowId</code> <code>string</code> the id of the element to use as the search basis"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#returns_73","title":"Returns","text":"<p><code>Promise</code>&lt;<code>Element</code>[]&gt;</p> <p>A possibly empty list of elements inside the shadow root matching the selector</p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#inherited-from_48","title":"Inherited from","text":"<p>BaseDriver.findElementsFromShadowRoot</p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#defined-in_117","title":"Defined in","text":"<p>packages/types/build/lib/driver.d.ts:225</p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#getdeprecatedcommandscalled","title":"getDeprecatedCommandsCalled","text":"<p>\u25b8 getDeprecatedCommandsCalled(): <code>Promise</code>&lt;<code>string</code>[]&gt;</p> <p>This is a command that will return a list of deprecated command names called</p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#returns_74","title":"Returns","text":"<p><code>Promise</code>&lt;<code>string</code>[]&gt;</p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#defined-in_118","title":"Defined in","text":"<p>packages/fake-driver/lib/driver.js:139</p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#getfakedriverargs","title":"getFakeDriverArgs","text":"<p>\u25b8 getFakeDriverArgs(): <code>Promise</code>&lt;<code>StringRecord</code> &amp; <code>ServerArgs</code>&gt;</p> <p>Get the driver args that were sent in via the CLI</p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#returns_75","title":"Returns","text":"<p><code>Promise</code>&lt;<code>StringRecord</code> &amp; <code>ServerArgs</code>&gt;</p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#defined-in_119","title":"Defined in","text":"<p>packages/fake-driver/lib/driver.js:129</p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#getfakething","title":"getFakeThing","text":"<p>\u25b8 getFakeThing(): <code>Promise</code>&lt;<code>any</code>&gt;</p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#returns_76","title":"Returns","text":"<p><code>Promise</code>&lt;<code>any</code>&gt;</p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#defined-in_120","title":"Defined in","text":"<p>packages/fake-driver/lib/driver.js:107</p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#getlogevents","title":"getLogEvents","text":"<p>\u25b8 getLogEvents(<code>type?</code>): <code>Promise</code>&lt;<code>EventHistory</code> | <code>Record</code>&lt;<code>string</code>, <code>number</code>&gt;&gt;</p> <p>Get a list of events that have occurred in the current session</p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#parameters_48","title":"Parameters","text":"Name Type Description <code>type?</code> <code>string</code> | <code>string</code>[] filter the returned events by including one or more types"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#returns_77","title":"Returns","text":"<p><code>Promise</code>&lt;<code>EventHistory</code> | <code>Record</code>&lt;<code>string</code>, <code>number</code>&gt;&gt;</p> <p>The event history for the session</p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#inherited-from_49","title":"Inherited from","text":"<p>BaseDriver.getLogEvents</p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#defined-in_121","title":"Defined in","text":"<p>packages/types/build/lib/driver.d.ts:123</p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#getlogtypes","title":"getLogTypes","text":"<p>\u25b8 getLogTypes(): <code>Promise</code>&lt;<code>string</code>[]&gt;</p> <p>Get available log types as a list of strings</p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#returns_78","title":"Returns","text":"<p><code>Promise</code>&lt;<code>string</code>[]&gt;</p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#inherited-from_50","title":"Inherited from","text":"<p>BaseDriver.getLogTypes</p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#defined-in_122","title":"Defined in","text":"<p>packages/types/build/lib/driver.d.ts:265</p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#getmanageddrivers","title":"getManagedDrivers","text":"<p>\u25b8 getManagedDrivers(): <code>Driver</code>&lt;typeof <code>BASE_DESIRED_CAP_CONSTRAINTS</code>, <code>StringRecord</code>, <code>any</code>&gt;[]</p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#returns_79","title":"Returns","text":"<p><code>Driver</code>&lt;typeof <code>BASE_DESIRED_CAP_CONSTRAINTS</code>, <code>StringRecord</code>, <code>any</code>&gt;[]</p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#inherited-from_51","title":"Inherited from","text":"<p>BaseDriver.getManagedDrivers</p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#defined-in_123","title":"Defined in","text":"<p>packages/base-driver/build/lib/basedriver/core.d.ts:221</p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#getproxyavoidlist","title":"getProxyAvoidList","text":"<p>\u25b8 getProxyAvoidList(<code>sessionId</code>): <code>RouteMatcher</code>[]</p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#parameters_49","title":"Parameters","text":"Name Type <code>sessionId</code> <code>string</code>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#returns_80","title":"Returns","text":"<p><code>RouteMatcher</code>[]</p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#inherited-from_52","title":"Inherited from","text":"<p>BaseDriver.getProxyAvoidList</p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#defined-in_124","title":"Defined in","text":"<p>packages/base-driver/build/lib/basedriver/core.d.ts:195</p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#getsession","title":"getSession","text":"<p>\u25b8 getSession(): <code>Promise</code>&lt;<code>SingularSessionData</code>&lt;typeof <code>BASE_DESIRED_CAP_CONSTRAINTS</code>, <code>void</code>&gt;&gt;</p> <p>Get the data for the current session</p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#returns_81","title":"Returns","text":"<p><code>Promise</code>&lt;<code>SingularSessionData</code>&lt;typeof <code>BASE_DESIRED_CAP_CONSTRAINTS</code>, <code>void</code>&gt;&gt;</p> <p>A session data object</p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#inherited-from_53","title":"Inherited from","text":"<p>BaseDriver.getSession</p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#defined-in_125","title":"Defined in","text":"<p>packages/types/build/lib/driver.d.ts:137</p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#getsessions","title":"getSessions","text":"<p>\u25b8 getSessions(): <code>Promise</code>&lt;<code>MultiSessionData</code>&lt;typeof <code>BASE_DESIRED_CAP_CONSTRAINTS</code>, <code>void</code>&gt;[]&gt;</p> <p>Get data for all sessions running on an Appium server</p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#returns_82","title":"Returns","text":"<p><code>Promise</code>&lt;<code>MultiSessionData</code>&lt;typeof <code>BASE_DESIRED_CAP_CONSTRAINTS</code>, <code>void</code>&gt;[]&gt;</p> <p>A list of session data objects</p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#inherited-from_54","title":"Inherited from","text":"<p>BaseDriver.getSessions</p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#defined-in_126","title":"Defined in","text":"<p>packages/types/build/lib/driver.d.ts:131</p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#getsettings","title":"getSettings","text":"<p>\u25b8 getSettings(): <code>Promise</code>&lt;<code>StringRecord</code>&gt;</p> <p>Get the current settings for the session</p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#returns_83","title":"Returns","text":"<p><code>Promise</code>&lt;<code>StringRecord</code>&gt;</p> <p>The settings object</p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#inherited-from_55","title":"Inherited from","text":"<p>BaseDriver.getSettings</p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#defined-in_127","title":"Defined in","text":"<p>packages/types/build/lib/driver.d.ts:309</p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#getstatus","title":"getStatus","text":"<p>\u25b8 getStatus(): <code>Promise</code>&lt;{}&gt;</p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#returns_84","title":"Returns","text":"<p><code>Promise</code>&lt;{}&gt;</p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#inherited-from_56","title":"Inherited from","text":"<p>BaseDriver.getStatus</p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#defined-in_128","title":"Defined in","text":"<p>packages/base-driver/build/lib/basedriver/core.d.ts:135</p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#gettimeouts","title":"getTimeouts","text":"<p>\u25b8 getTimeouts(): <code>Promise</code>&lt;<code>Record</code>&lt;<code>string</code>, <code>number</code>&gt;&gt;</p> <p>Get the current timeouts</p> <p><code>See</code></p> <p>https://w3c.github.io/webdriver/#get-timeouts</p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#returns_85","title":"Returns","text":"<p><code>Promise</code>&lt;<code>Record</code>&lt;<code>string</code>, <code>number</code>&gt;&gt;</p> <p>A map of timeout names to ms values</p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#inherited-from_57","title":"Inherited from","text":"<p>BaseDriver.getTimeouts</p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#defined-in_129","title":"Defined in","text":"<p>packages/types/build/lib/driver.d.ts:53</p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#implicitwait","title":"implicitWait","text":"<p>\u25b8 implicitWait(<code>ms</code>): <code>Promise</code>&lt;<code>void</code>&gt;</p> <p>Set the implicit wait timeout</p> <p><code>Deprecated</code></p> <p>Use <code>timeouts</code> instead</p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#parameters_50","title":"Parameters","text":"Name Type Description <code>ms</code> <code>string</code> | <code>number</code> the timeout in ms"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#returns_86","title":"Returns","text":"<p><code>Promise</code>&lt;<code>void</code>&gt;</p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#inherited-from_58","title":"Inherited from","text":"<p>BaseDriver.implicitWait</p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#defined-in_130","title":"Defined in","text":"<p>packages/types/build/lib/driver.d.ts:32</p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#implicitwaitforcondition","title":"implicitWaitForCondition","text":"<p>\u25b8 implicitWaitForCondition(<code>condition</code>): <code>Promise</code>&lt;<code>unknown</code>&gt;</p> <p>Periodically retry an async function up until the currently set implicit wait timeout</p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#parameters_51","title":"Parameters","text":"Name Type Description <code>condition</code> () =&gt; <code>Promise</code>&lt;<code>any</code>&gt; the behaviour to retry until it returns truthy"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#returns_87","title":"Returns","text":"<p><code>Promise</code>&lt;<code>unknown</code>&gt;</p> <p>The return value of the condition</p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#inherited-from_59","title":"Inherited from","text":"<p>BaseDriver.implicitWaitForCondition</p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#defined-in_131","title":"Defined in","text":"<p>packages/types/build/lib/driver.d.ts:46</p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#implicitwaitmjsonwp","title":"implicitWaitMJSONWP","text":"<p>\u25b8 implicitWaitMJSONWP(<code>ms</code>): <code>Promise</code>&lt;<code>void</code>&gt;</p> <p>Set the implicit wait value that was sent in via the JSONWP</p> <p><code>Deprecated</code></p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#parameters_52","title":"Parameters","text":"Name Type Description <code>ms</code> <code>number</code> the timeout in ms"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#returns_88","title":"Returns","text":"<p><code>Promise</code>&lt;<code>void</code>&gt;</p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#inherited-from_60","title":"Inherited from","text":"<p>BaseDriver.implicitWaitMJSONWP</p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#defined-in_132","title":"Defined in","text":"<p>packages/types/build/lib/driver.d.ts:66</p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#implicitwaitw3c","title":"implicitWaitW3C","text":"<p>\u25b8 implicitWaitW3C(<code>ms</code>): <code>Promise</code>&lt;<code>void</code>&gt;</p> <p>Set the implicit wait value that was sent in via the W3C protocol</p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#parameters_53","title":"Parameters","text":"Name Type Description <code>ms</code> <code>number</code> the timeout in ms"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#returns_89","title":"Returns","text":"<p><code>Promise</code>&lt;<code>void</code>&gt;</p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#inherited-from_61","title":"Inherited from","text":"<p>BaseDriver.implicitWaitW3C</p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#defined-in_133","title":"Defined in","text":"<p>packages/types/build/lib/driver.d.ts:59</p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#isfeatureenabled","title":"isFeatureEnabled","text":"<p>\u25b8 isFeatureEnabled(<code>name</code>): <code>boolean</code></p> <p>Check whether a given feature is enabled via its name</p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#parameters_54","title":"Parameters","text":"Name Type Description <code>name</code> <code>string</code> name of feature/command"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#returns_90","title":"Returns","text":"<p><code>boolean</code></p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#inherited-from_62","title":"Inherited from","text":"<p>BaseDriver.isFeatureEnabled</p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#defined-in_134","title":"Defined in","text":"<p>packages/base-driver/build/lib/basedriver/core.d.ts:162</p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#ismjsonwpprotocol","title":"isMjsonwpProtocol","text":"<p>\u25b8 isMjsonwpProtocol(): <code>boolean</code></p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#returns_91","title":"Returns","text":"<p><code>boolean</code></p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#inherited-from_63","title":"Inherited from","text":"<p>BaseDriver.isMjsonwpProtocol</p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#defined-in_135","title":"Defined in","text":"<p>packages/base-driver/build/lib/basedriver/core.d.ts:150</p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#isw3cprotocol","title":"isW3CProtocol","text":"<p>\u25b8 isW3CProtocol(): <code>boolean</code></p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#returns_92","title":"Returns","text":"<p><code>boolean</code></p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#inherited-from_64","title":"Inherited from","text":"<p>BaseDriver.isW3CProtocol</p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#defined-in_136","title":"Defined in","text":"<p>packages/base-driver/build/lib/basedriver/core.d.ts:151</p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#logcustomevent","title":"logCustomEvent","text":"<p>\u25b8 logCustomEvent(<code>vendor</code>, <code>event</code>): <code>Promise</code>&lt;<code>void</code>&gt;</p> <p>Add a custom-named event to the Appium event log</p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#parameters_55","title":"Parameters","text":"Name Type Description <code>vendor</code> <code>string</code> the name of the vendor or tool the event belongs to, to namespace the event <code>event</code> <code>string</code> the name of the event itself"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#returns_93","title":"Returns","text":"<p><code>Promise</code>&lt;<code>void</code>&gt;</p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#inherited-from_65","title":"Inherited from","text":"<p>BaseDriver.logCustomEvent</p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#defined-in_137","title":"Defined in","text":"<p>packages/types/build/lib/driver.d.ts:115</p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#logevent","title":"logEvent","text":"<p>\u25b8 logEvent(<code>eventName</code>): <code>void</code></p> <p>API method for driver developers to log timings for important events</p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#parameters_56","title":"Parameters","text":"Name Type <code>eventName</code> <code>string</code>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#returns_94","title":"Returns","text":"<p><code>void</code></p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#inherited-from_66","title":"Inherited from","text":"<p>BaseDriver.logEvent</p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#defined-in_138","title":"Defined in","text":"<p>packages/base-driver/build/lib/basedriver/core.d.ts:130</p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#logextracaps","title":"logExtraCaps","text":"<p>\u25b8 logExtraCaps(<code>caps</code>): <code>void</code></p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#parameters_57","title":"Parameters","text":"Name Type <code>caps</code> <code>Partial</code>&lt;<code>ConstraintsToCaps</code>&lt;<code>any</code>&gt; &amp; <code>void</code>&gt;"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#returns_95","title":"Returns","text":"<p><code>void</code></p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#inherited-from_67","title":"Inherited from","text":"<p>BaseDriver.logExtraCaps</p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#defined-in_139","title":"Defined in","text":"<p>packages/base-driver/build/lib/basedriver/driver.d.ts:94</p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#newcommandtimeout","title":"newCommandTimeout","text":"<p>\u25b8 newCommandTimeout(<code>ms</code>): <code>Promise</code>&lt;<code>void</code>&gt;</p> <p>Set Appium's new command timeout</p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#parameters_58","title":"Parameters","text":"Name Type Description <code>ms</code> <code>number</code> the timeout in ms"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#returns_96","title":"Returns","text":"<p><code>Promise</code>&lt;<code>void</code>&gt;</p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#inherited-from_68","title":"Inherited from","text":"<p>BaseDriver.newCommandTimeout</p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#defined-in_140","title":"Defined in","text":"<p>packages/types/build/lib/driver.d.ts:98</p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#onunexpectedshutdown","title":"onUnexpectedShutdown","text":"<p>\u25b8 onUnexpectedShutdown(<code>handler</code>): <code>void</code></p> <p>Set a callback handler if needed to execute a custom piece of code when the driver is shut down unexpectedly. Multiple calls to this method will cause the handler to be executed mutiple times</p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#parameters_59","title":"Parameters","text":"Name Type Description <code>handler</code> (...<code>args</code>: <code>any</code>[]) =&gt; <code>void</code> The code to be executed on unexpected shutdown. The function may accept one argument, which is the actual error instance, which caused the driver to shut down."},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#returns_97","title":"Returns","text":"<p><code>void</code></p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#inherited-from_69","title":"Inherited from","text":"<p>BaseDriver.onUnexpectedShutdown</p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#defined-in_141","title":"Defined in","text":"<p>packages/base-driver/build/lib/basedriver/core.d.ts:103</p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#pageloadtimeoutmjsonwp","title":"pageLoadTimeoutMJSONWP","text":"<p>\u25b8 pageLoadTimeoutMJSONWP(<code>ms</code>): <code>Promise</code>&lt;<code>void</code>&gt;</p> <p>Set the page load timeout value that was sent in via the JSONWP</p> <p><code>Deprecated</code></p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#parameters_60","title":"Parameters","text":"Name Type Description <code>ms</code> <code>number</code> the timeout in ms"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#returns_98","title":"Returns","text":"<p><code>Promise</code>&lt;<code>void</code>&gt;</p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#inherited-from_70","title":"Inherited from","text":"<p>BaseDriver.pageLoadTimeoutMJSONWP</p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#defined-in_142","title":"Defined in","text":"<p>packages/types/build/lib/driver.d.ts:79</p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#pageloadtimeoutw3c","title":"pageLoadTimeoutW3C","text":"<p>\u25b8 pageLoadTimeoutW3C(<code>ms</code>): <code>Promise</code>&lt;<code>void</code>&gt;</p> <p>Set the page load timeout value that was sent in via the W3C protocol</p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#parameters_61","title":"Parameters","text":"Name Type Description <code>ms</code> <code>number</code> the timeout in ms"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#returns_99","title":"Returns","text":"<p><code>Promise</code>&lt;<code>void</code>&gt;</p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#inherited-from_71","title":"Inherited from","text":"<p>BaseDriver.pageLoadTimeoutW3C</p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#defined-in_143","title":"Defined in","text":"<p>packages/types/build/lib/driver.d.ts:72</p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#parsetimeoutargument","title":"parseTimeoutArgument","text":"<p>\u25b8 parseTimeoutArgument(<code>ms</code>): <code>number</code></p> <p>Get a timeout value from a number or a string</p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#parameters_62","title":"Parameters","text":"Name Type Description <code>ms</code> <code>string</code> | <code>number</code> the timeout value as a number or a string"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#returns_100","title":"Returns","text":"<p><code>number</code></p> <p>The timeout as a number in ms</p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#inherited-from_72","title":"Inherited from","text":"<p>BaseDriver.parseTimeoutArgument</p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#defined-in_144","title":"Defined in","text":"<p>packages/types/build/lib/driver.d.ts:106</p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#proxyactive","title":"proxyActive","text":"<p>\u25b8 proxyActive(): <code>boolean</code></p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#returns_101","title":"Returns","text":"<p><code>boolean</code></p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#overrides_14","title":"Overrides","text":"<p>BaseDriver.proxyActive</p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#defined-in_145","title":"Defined in","text":"<p>packages/fake-driver/lib/driver.js:44</p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#proxycommand","title":"proxyCommand","text":"<p>\u25b8 proxyCommand&lt;<code>T</code>&gt;(): <code>Promise</code>&lt;<code>T</code>&gt;</p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#type-parameters_2","title":"Type parameters","text":"Name Type <code>T</code> <code>any</code>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#returns_102","title":"Returns","text":"<p><code>Promise</code>&lt;<code>T</code>&gt;</p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#defined-in_146","title":"Defined in","text":"<p>packages/fake-driver/lib/driver.js:65</p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#proxyreqres","title":"proxyReqRes","text":"<p>\u25b8 proxyReqRes(<code>req</code>, <code>res</code>): <code>void</code></p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#parameters_63","title":"Parameters","text":"Name Type <code>req</code> <code>any</code> <code>res</code> <code>any</code>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#returns_103","title":"Returns","text":"<p><code>void</code></p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#defined-in_147","title":"Defined in","text":"<p>packages/fake-driver/lib/driver.js:52</p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#proxyrouteisavoided","title":"proxyRouteIsAvoided","text":"<p>\u25b8 proxyRouteIsAvoided(<code>sessionId</code>, <code>method</code>, <code>url</code>, <code>body?</code>): <code>boolean</code></p> <p>Whether a given command route (expressed as method and url) should not be proxied according to this driver</p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#parameters_64","title":"Parameters","text":"Name Type Description <code>sessionId</code> <code>string</code> the current sessionId (in case the driver runs multiple session ids and requires it). This is not used in this method but should be made available to overridden methods. <code>method</code> <code>HTTPMethod</code> HTTP method of the route <code>url</code> <code>string</code> url of the route <code>body?</code> <code>any</code> webdriver request body"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#returns_104","title":"Returns","text":"<p><code>boolean</code></p> <ul> <li>whether the route should be avoided</li> </ul>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#inherited-from_73","title":"Inherited from","text":"<p>BaseDriver.proxyRouteIsAvoided</p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#defined-in_148","title":"Defined in","text":"<p>packages/base-driver/build/lib/basedriver/core.d.ts:215</p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#reset","title":"reset","text":"<p>\u25b8 reset(): <code>Promise</code>&lt;<code>void</code>&gt;</p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#returns_105","title":"Returns","text":"<p><code>Promise</code>&lt;<code>void</code>&gt;</p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#inherited-from_74","title":"Inherited from","text":"<p>BaseDriver.reset</p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#defined-in_149","title":"Defined in","text":"<p>packages/base-driver/build/lib/basedriver/driver.d.ts:68</p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#scripttimeoutmjsonwp","title":"scriptTimeoutMJSONWP","text":"<p>\u25b8 scriptTimeoutMJSONWP(<code>ms</code>): <code>Promise</code>&lt;<code>void</code>&gt;</p> <p>Set the script timeout value that was sent in via the JSONWP</p> <p><code>Deprecated</code></p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#parameters_65","title":"Parameters","text":"Name Type Description <code>ms</code> <code>number</code> the timeout in ms"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#returns_106","title":"Returns","text":"<p><code>Promise</code>&lt;<code>void</code>&gt;</p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#inherited-from_75","title":"Inherited from","text":"<p>BaseDriver.scriptTimeoutMJSONWP</p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#defined-in_150","title":"Defined in","text":"<p>packages/types/build/lib/driver.d.ts:92</p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#scripttimeoutw3c","title":"scriptTimeoutW3C","text":"<p>\u25b8 scriptTimeoutW3C(<code>ms</code>): <code>Promise</code>&lt;<code>void</code>&gt;</p> <p>Set the script timeout value that was sent in via the W3C protocol</p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#parameters_66","title":"Parameters","text":"Name Type Description <code>ms</code> <code>number</code> the timeout in ms"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#returns_107","title":"Returns","text":"<p><code>Promise</code>&lt;<code>void</code>&gt;</p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#inherited-from_76","title":"Inherited from","text":"<p>BaseDriver.scriptTimeoutW3C</p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#defined-in_151","title":"Defined in","text":"<p>packages/types/build/lib/driver.d.ts:85</p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#sessionexists","title":"sessionExists","text":"<p>\u25b8 sessionExists(<code>sessionId?</code>): <code>boolean</code></p> <p>method required by MJSONWP in order to determine whether it should respond with an invalid session response</p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#parameters_67","title":"Parameters","text":"Name Type <code>sessionId?</code> <code>string</code>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#returns_108","title":"Returns","text":"<p><code>boolean</code></p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#inherited-from_77","title":"Inherited from","text":"<p>BaseDriver.sessionExists</p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#defined-in_152","title":"Defined in","text":"<p>packages/base-driver/build/lib/basedriver/core.d.ts:142</p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#setfakething","title":"setFakeThing","text":"<p>\u25b8 setFakeThing(<code>thing</code>): <code>Promise</code>&lt;<code>null</code>&gt;</p> <p>Set the 'thing' value (so that it can be retrieved later)</p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#parameters_68","title":"Parameters","text":"Name Type <code>thing</code> <code>any</code>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#returns_109","title":"Returns","text":"<p><code>Promise</code>&lt;<code>null</code>&gt;</p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#defined-in_153","title":"Defined in","text":"<p>packages/fake-driver/lib/driver.js:118</p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#setimplicitwait","title":"setImplicitWait","text":"<p>\u25b8 setImplicitWait(<code>ms</code>): <code>void</code></p> <p>A helper method (not a command) used to set the implicit wait value</p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#parameters_69","title":"Parameters","text":"Name Type Description <code>ms</code> <code>number</code> the implicit wait in ms"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#returns_110","title":"Returns","text":"<p><code>void</code></p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#inherited-from_78","title":"Inherited from","text":"<p>BaseDriver.setImplicitWait</p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#defined-in_154","title":"Defined in","text":"<p>packages/types/build/lib/driver.d.ts:38</p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#setnewcommandtimeout","title":"setNewCommandTimeout","text":"<p>\u25b8 setNewCommandTimeout(<code>ms</code>): <code>void</code></p> <p>Set the new command timeout</p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#parameters_70","title":"Parameters","text":"Name Type Description <code>ms</code> <code>number</code> the timeout in ms"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#returns_111","title":"Returns","text":"<p><code>void</code></p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#inherited-from_79","title":"Inherited from","text":"<p>BaseDriver.setNewCommandTimeout</p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#defined-in_155","title":"Defined in","text":"<p>packages/types/build/lib/driver.d.ts:24</p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#setprotocolmjsonwp","title":"setProtocolMJSONWP","text":"<p>\u25b8 setProtocolMJSONWP(): <code>void</code></p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#returns_112","title":"Returns","text":"<p><code>void</code></p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#inherited-from_80","title":"Inherited from","text":"<p>BaseDriver.setProtocolMJSONWP</p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#defined-in_156","title":"Defined in","text":"<p>packages/base-driver/build/lib/basedriver/core.d.ts:152</p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#setprotocolw3c","title":"setProtocolW3C","text":"<p>\u25b8 setProtocolW3C(): <code>void</code></p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#returns_113","title":"Returns","text":"<p><code>void</code></p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#inherited-from_81","title":"Inherited from","text":"<p>BaseDriver.setProtocolW3C</p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#defined-in_157","title":"Defined in","text":"<p>packages/base-driver/build/lib/basedriver/core.d.ts:154</p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#startnewcommandtimeout","title":"startNewCommandTimeout","text":"<p>\u25b8 startNewCommandTimeout(): <code>Promise</code>&lt;<code>void</code>&gt;</p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#returns_114","title":"Returns","text":"<p><code>Promise</code>&lt;<code>void</code>&gt;</p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#inherited-from_82","title":"Inherited from","text":"<p>BaseDriver.startNewCommandTimeout</p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#defined-in_158","title":"Defined in","text":"<p>packages/base-driver/build/lib/basedriver/driver.d.ts:55</p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#startunexpectedshutdown","title":"startUnexpectedShutdown","text":"<p>\u25b8 startUnexpectedShutdown(<code>err?</code>): <code>Promise</code>&lt;<code>void</code>&gt;</p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#parameters_71","title":"Parameters","text":"Name Type <code>err?</code> <code>Error</code> | <code>NoSuchDriverError</code>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#returns_115","title":"Returns","text":"<p><code>Promise</code>&lt;<code>void</code>&gt;</p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#inherited-from_83","title":"Inherited from","text":"<p>BaseDriver.startUnexpectedShutdown</p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#defined-in_159","title":"Defined in","text":"<p>packages/base-driver/build/lib/basedriver/driver.d.ts:54</p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#timeouts","title":"timeouts","text":"<p>\u25b8 timeouts(<code>type</code>, <code>ms</code>, <code>script?</code>, <code>pageLoad?</code>, <code>implicit?</code>): <code>Promise</code>&lt;<code>void</code>&gt;</p> <p>Set the various timeouts associated with a session</p> <p><code>See</code></p> <p>https://w3c.github.io/webdriver/#set-timeouts</p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#parameters_72","title":"Parameters","text":"Name Type Description <code>type</code> <code>string</code> used only for the old (JSONWP) command, the type of the timeout <code>ms</code> <code>string</code> | <code>number</code> used only for the old (JSONWP) command, the ms for the timeout <code>script?</code> <code>number</code> the number in ms for the script timeout, used for the W3C command <code>pageLoad?</code> <code>number</code> the number in ms for the pageLoad timeout, used for the W3C command <code>implicit?</code> <code>string</code> | <code>number</code> the number in ms for the implicit wait timeout, used for the W3C command"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#returns_116","title":"Returns","text":"<p><code>Promise</code>&lt;<code>void</code>&gt;</p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#inherited-from_84","title":"Inherited from","text":"<p>BaseDriver.timeouts</p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#defined-in_160","title":"Defined in","text":"<p>packages/types/build/lib/driver.d.ts:18</p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#validatedesiredcaps","title":"validateDesiredCaps","text":"<p>\u25b8 validateDesiredCaps(<code>caps</code>): <code>boolean</code></p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#parameters_73","title":"Parameters","text":"Name Type <code>caps</code> <code>Partial</code>&lt;<code>ConstraintsToCaps</code>&lt;<code>any</code>&gt; &amp; <code>void</code>&gt;"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#returns_117","title":"Returns","text":"<p><code>boolean</code></p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#inherited-from_85","title":"Inherited from","text":"<p>BaseDriver.validateDesiredCaps</p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#defined-in_161","title":"Defined in","text":"<p>packages/base-driver/build/lib/basedriver/driver.d.ts:100</p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#validatelocatorstrategy","title":"validateLocatorStrategy","text":"<p>\u25b8 validateLocatorStrategy(<code>strategy</code>, <code>webContext?</code>): <code>void</code></p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#parameters_74","title":"Parameters","text":"Name Type <code>strategy</code> <code>string</code> <code>webContext?</code> <code>boolean</code>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#returns_118","title":"Returns","text":"<p><code>void</code></p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#inherited-from_86","title":"Inherited from","text":"<p>BaseDriver.validateLocatorStrategy</p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#defined-in_162","title":"Defined in","text":"<p>packages/base-driver/build/lib/basedriver/core.d.ts:183</p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#fakeroute","title":"fakeRoute","text":"<p>\u25b8 <code>Static</code> fakeRoute(<code>req</code>, <code>res</code>): <code>void</code></p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#parameters_75","title":"Parameters","text":"Name Type <code>req</code> <code>any</code> <code>res</code> <code>any</code>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#returns_119","title":"Returns","text":"<p><code>void</code></p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#defined-in_163","title":"Defined in","text":"<p>packages/fake-driver/lib/driver.js:193</p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#updateserver","title":"updateServer","text":"<p>\u25b8 <code>Static</code> updateServer(<code>expressApp</code>, <code>httpServer</code>, <code>cliArgs</code>): <code>Promise</code>&lt;<code>void</code>&gt;</p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#parameters_76","title":"Parameters","text":"Name Type <code>expressApp</code> <code>any</code> <code>httpServer</code> <code>any</code> <code>cliArgs</code> <code>any</code>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#returns_120","title":"Returns","text":"<p><code>Promise</code>&lt;<code>void</code>&gt;</p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#overrides_15","title":"Overrides","text":"<p>BaseDriver.updateServer</p>"},{"location":"reference/classes/appium_fake_driver-1.FakeDriver/#defined-in_164","title":"Defined in","text":"<p>packages/fake-driver/lib/driver.js:197</p>"},{"location":"reference/classes/appium_images_plugin-1.ImageElementPlugin/","title":"Class: ImageElementPlugin","text":"<p>@appium/images-plugin.ImageElementPlugin</p>"},{"location":"reference/classes/appium_images_plugin-1.ImageElementPlugin/#hierarchy","title":"Hierarchy","text":"<ul> <li><code>\"/Users/jlipps/Code/gh/appium/appium/packages/appium/plugin\"</code></li> </ul> <p>\u21b3 <code>ImageElementPlugin</code></p>"},{"location":"reference/classes/appium_images_plugin-1.ImageElementPlugin/#table-of-contents","title":"Table of contents","text":""},{"location":"reference/classes/appium_images_plugin-1.ImageElementPlugin/#constructors","title":"Constructors","text":"<ul> <li>constructor</li> </ul>"},{"location":"reference/classes/appium_images_plugin-1.ImageElementPlugin/#properties","title":"Properties","text":"<ul> <li>finder</li> <li>newMethodMap</li> </ul>"},{"location":"reference/classes/appium_images_plugin-1.ImageElementPlugin/#methods","title":"Methods","text":"<ul> <li>_find</li> <li>compareImages</li> <li>findElement</li> <li>findElements</li> <li>handle</li> </ul>"},{"location":"reference/classes/appium_images_plugin-1.ImageElementPlugin/#constructors_1","title":"Constructors","text":""},{"location":"reference/classes/appium_images_plugin-1.ImageElementPlugin/#constructor","title":"constructor","text":"<p>\u2022 new ImageElementPlugin(<code>pluginName</code>)</p>"},{"location":"reference/classes/appium_images_plugin-1.ImageElementPlugin/#parameters","title":"Parameters","text":"Name Type <code>pluginName</code> <code>any</code>"},{"location":"reference/classes/appium_images_plugin-1.ImageElementPlugin/#overrides","title":"Overrides","text":"<p>BasePlugin.constructor</p>"},{"location":"reference/classes/appium_images_plugin-1.ImageElementPlugin/#defined-in","title":"Defined in","text":"<p>packages/images-plugin/lib/plugin.js:21</p>"},{"location":"reference/classes/appium_images_plugin-1.ImageElementPlugin/#properties_1","title":"Properties","text":""},{"location":"reference/classes/appium_images_plugin-1.ImageElementPlugin/#finder","title":"finder","text":"<p>\u2022 finder: <code>default</code></p>"},{"location":"reference/classes/appium_images_plugin-1.ImageElementPlugin/#defined-in_1","title":"Defined in","text":"<p>packages/images-plugin/lib/plugin.js:23</p>"},{"location":"reference/classes/appium_images_plugin-1.ImageElementPlugin/#newmethodmap","title":"newMethodMap","text":"<p>\u25aa <code>Static</code> newMethodMap: <code>Object</code></p>"},{"location":"reference/classes/appium_images_plugin-1.ImageElementPlugin/#type-declaration","title":"Type declaration","text":"Name Type <code>/session/:sessionId/appium/compare_images</code> { <code>POST</code>: { <code>command</code>: <code>\"compareImages\"</code> = 'compareImages'; <code>neverProxy</code>: <code>true</code> = true; <code>payloadParams</code>: { <code>optional</code>: readonly [<code>\"options\"</code>] ; <code>required</code>: readonly [<code>\"mode\"</code>, <code>\"firstImage\"</code>, <code>\"secondImage\"</code>]  }  }  } <code>/session/:sessionId/appium/compare_images.POST</code> { <code>command</code>: <code>\"compareImages\"</code> = 'compareImages'; <code>neverProxy</code>: <code>true</code> = true; <code>payloadParams</code>: { <code>optional</code>: readonly [<code>\"options\"</code>] ; <code>required</code>: readonly [<code>\"mode\"</code>, <code>\"firstImage\"</code>, <code>\"secondImage\"</code>]  }  } <code>/session/:sessionId/appium/compare_images.POST.command</code> <code>\"compareImages\"</code> <code>/session/:sessionId/appium/compare_images.POST.neverProxy</code> <code>true</code> <code>/session/:sessionId/appium/compare_images.POST.payloadParams</code> { <code>optional</code>: readonly [<code>\"options\"</code>] ; <code>required</code>: readonly [<code>\"mode\"</code>, <code>\"firstImage\"</code>, <code>\"secondImage\"</code>]  } <code>/session/:sessionId/appium/compare_images.POST.payloadParams.optional</code> readonly [<code>\"options\"</code>] <code>/session/:sessionId/appium/compare_images.POST.payloadParams.required</code> readonly [<code>\"mode\"</code>, <code>\"firstImage\"</code>, <code>\"secondImage\"</code>]"},{"location":"reference/classes/appium_images_plugin-1.ImageElementPlugin/#defined-in_2","title":"Defined in","text":"<p>packages/images-plugin/lib/plugin.js:27</p>"},{"location":"reference/classes/appium_images_plugin-1.ImageElementPlugin/#methods_1","title":"Methods","text":""},{"location":"reference/classes/appium_images_plugin-1.ImageElementPlugin/#_find","title":"_find","text":"<p>\u25b8 _find(<code>multiple</code>, <code>next</code>, <code>driver</code>, <code>...args</code>): <code>Promise</code>&lt;<code>any</code>&gt;</p>"},{"location":"reference/classes/appium_images_plugin-1.ImageElementPlugin/#parameters_1","title":"Parameters","text":"Name Type <code>multiple</code> <code>any</code> <code>next</code> <code>any</code> <code>driver</code> <code>any</code> <code>...args</code> <code>any</code>[]"},{"location":"reference/classes/appium_images_plugin-1.ImageElementPlugin/#returns","title":"Returns","text":"<p><code>Promise</code>&lt;<code>any</code>&gt;</p>"},{"location":"reference/classes/appium_images_plugin-1.ImageElementPlugin/#defined-in_3","title":"Defined in","text":"<p>packages/images-plugin/lib/plugin.js:52</p>"},{"location":"reference/classes/appium_images_plugin-1.ImageElementPlugin/#compareimages","title":"compareImages","text":"<p>\u25b8 compareImages(<code>next</code>, <code>driver</code>, <code>...args</code>): <code>Promise</code>&lt;<code>any</code>&gt;</p>"},{"location":"reference/classes/appium_images_plugin-1.ImageElementPlugin/#parameters_2","title":"Parameters","text":"Name Type <code>next</code> <code>any</code> <code>driver</code> <code>any</code> <code>...args</code> <code>any</code>[]"},{"location":"reference/classes/appium_images_plugin-1.ImageElementPlugin/#returns_1","title":"Returns","text":"<p><code>Promise</code>&lt;<code>any</code>&gt;</p>"},{"location":"reference/classes/appium_images_plugin-1.ImageElementPlugin/#defined-in_4","title":"Defined in","text":"<p>packages/images-plugin/lib/plugin.js:40</p>"},{"location":"reference/classes/appium_images_plugin-1.ImageElementPlugin/#findelement","title":"findElement","text":"<p>\u25b8 findElement(<code>next</code>, <code>driver</code>, <code>...args</code>): <code>Promise</code>&lt;<code>any</code>&gt;</p>"},{"location":"reference/classes/appium_images_plugin-1.ImageElementPlugin/#parameters_3","title":"Parameters","text":"Name Type <code>next</code> <code>any</code> <code>driver</code> <code>any</code> <code>...args</code> <code>any</code>[]"},{"location":"reference/classes/appium_images_plugin-1.ImageElementPlugin/#returns_2","title":"Returns","text":"<p><code>Promise</code>&lt;<code>any</code>&gt;</p>"},{"location":"reference/classes/appium_images_plugin-1.ImageElementPlugin/#defined-in_5","title":"Defined in","text":"<p>packages/images-plugin/lib/plugin.js:44</p>"},{"location":"reference/classes/appium_images_plugin-1.ImageElementPlugin/#findelements","title":"findElements","text":"<p>\u25b8 findElements(<code>next</code>, <code>driver</code>, <code>...args</code>): <code>Promise</code>&lt;<code>any</code>&gt;</p>"},{"location":"reference/classes/appium_images_plugin-1.ImageElementPlugin/#parameters_4","title":"Parameters","text":"Name Type <code>next</code> <code>any</code> <code>driver</code> <code>any</code> <code>...args</code> <code>any</code>[]"},{"location":"reference/classes/appium_images_plugin-1.ImageElementPlugin/#returns_3","title":"Returns","text":"<p><code>Promise</code>&lt;<code>any</code>&gt;</p>"},{"location":"reference/classes/appium_images_plugin-1.ImageElementPlugin/#defined-in_6","title":"Defined in","text":"<p>packages/images-plugin/lib/plugin.js:48</p>"},{"location":"reference/classes/appium_images_plugin-1.ImageElementPlugin/#handle","title":"handle","text":"<p>\u25b8 handle(<code>next</code>, <code>driver</code>, <code>cmdName</code>, <code>...args</code>): <code>Promise</code>&lt;<code>any</code>&gt;</p>"},{"location":"reference/classes/appium_images_plugin-1.ImageElementPlugin/#parameters_5","title":"Parameters","text":"Name Type <code>next</code> <code>any</code> <code>driver</code> <code>any</code> <code>cmdName</code> <code>any</code> <code>...args</code> <code>any</code>[]"},{"location":"reference/classes/appium_images_plugin-1.ImageElementPlugin/#returns_4","title":"Returns","text":"<p><code>Promise</code>&lt;<code>any</code>&gt;</p>"},{"location":"reference/classes/appium_images_plugin-1.ImageElementPlugin/#defined-in_7","title":"Defined in","text":"<p>packages/images-plugin/lib/plugin.js:64</p>"},{"location":"reference/classes/appium_relaxed_caps_plugin-1.RelaxedCapsPlugin/","title":"Class: RelaxedCapsPlugin","text":"<p>@appium/relaxed-caps-plugin.RelaxedCapsPlugin</p>"},{"location":"reference/classes/appium_relaxed_caps_plugin-1.RelaxedCapsPlugin/#hierarchy","title":"Hierarchy","text":"<ul> <li><code>\"/Users/jlipps/Code/gh/appium/appium/packages/appium/plugin\"</code></li> </ul> <p>\u21b3 <code>RelaxedCapsPlugin</code></p>"},{"location":"reference/classes/appium_relaxed_caps_plugin-1.RelaxedCapsPlugin/#table-of-contents","title":"Table of contents","text":""},{"location":"reference/classes/appium_relaxed_caps_plugin-1.RelaxedCapsPlugin/#constructors","title":"Constructors","text":"<ul> <li>constructor</li> </ul>"},{"location":"reference/classes/appium_relaxed_caps_plugin-1.RelaxedCapsPlugin/#methods","title":"Methods","text":"<ul> <li>createSession</li> <li>transformCaps</li> </ul>"},{"location":"reference/classes/appium_relaxed_caps_plugin-1.RelaxedCapsPlugin/#constructors_1","title":"Constructors","text":""},{"location":"reference/classes/appium_relaxed_caps_plugin-1.RelaxedCapsPlugin/#constructor","title":"constructor","text":"<p>\u2022 new RelaxedCapsPlugin()</p>"},{"location":"reference/classes/appium_relaxed_caps_plugin-1.RelaxedCapsPlugin/#inherited-from","title":"Inherited from","text":"<p>BasePlugin.constructor</p>"},{"location":"reference/classes/appium_relaxed_caps_plugin-1.RelaxedCapsPlugin/#methods_1","title":"Methods","text":""},{"location":"reference/classes/appium_relaxed_caps_plugin-1.RelaxedCapsPlugin/#createsession","title":"createSession","text":"<p>\u25b8 createSession(<code>next</code>, <code>driver</code>, <code>jwpDesCaps</code>, <code>jwpReqCaps</code>, <code>caps</code>): <code>Promise</code>&lt;<code>any</code>&gt;</p>"},{"location":"reference/classes/appium_relaxed_caps_plugin-1.RelaxedCapsPlugin/#parameters","title":"Parameters","text":"Name Type <code>next</code> <code>any</code> <code>driver</code> <code>any</code> <code>jwpDesCaps</code> <code>any</code> <code>jwpReqCaps</code> <code>any</code> <code>caps</code> <code>any</code>"},{"location":"reference/classes/appium_relaxed_caps_plugin-1.RelaxedCapsPlugin/#returns","title":"Returns","text":"<p><code>Promise</code>&lt;<code>any</code>&gt;</p>"},{"location":"reference/classes/appium_relaxed_caps_plugin-1.RelaxedCapsPlugin/#defined-in","title":"Defined in","text":"<p>packages/relaxed-caps-plugin/lib/plugin.js:50</p>"},{"location":"reference/classes/appium_relaxed_caps_plugin-1.RelaxedCapsPlugin/#transformcaps","title":"transformCaps","text":"<p>\u25b8 transformCaps(<code>caps</code>): <code>any</code></p>"},{"location":"reference/classes/appium_relaxed_caps_plugin-1.RelaxedCapsPlugin/#parameters_1","title":"Parameters","text":"Name Type <code>caps</code> <code>any</code>"},{"location":"reference/classes/appium_relaxed_caps_plugin-1.RelaxedCapsPlugin/#returns_1","title":"Returns","text":"<p><code>any</code></p>"},{"location":"reference/classes/appium_relaxed_caps_plugin-1.RelaxedCapsPlugin/#defined-in_1","title":"Defined in","text":"<p>packages/relaxed-caps-plugin/lib/plugin.js:22</p>"},{"location":"reference/classes/appium_support.console.CliConsole/","title":"Class: CliConsole","text":"<p>@appium/support.console.CliConsole</p> <p>A particular console/logging class for Appium's CLI.</p> <ul> <li>By default, uses some fancy symbols</li> <li>Writes to <code>STDERR</code>, generally.</li> <li>In \"JSON mode\", <code>STDERR</code> is squelched. Use Console.json to write the JSON.</li> </ul> <p>DO NOT extend this to do anything other than what it already does. Download a library or something.</p>"},{"location":"reference/classes/appium_support.console.CliConsole/#table-of-contents","title":"Table of contents","text":""},{"location":"reference/classes/appium_support.console.CliConsole/#constructors","title":"Constructors","text":"<ul> <li>constructor</li> </ul>"},{"location":"reference/classes/appium_support.console.CliConsole/#properties","title":"Properties","text":"<ul> <li>#console</li> <li>#useColor</li> <li>#useSymbols</li> <li>symbolToColor</li> </ul>"},{"location":"reference/classes/appium_support.console.CliConsole/#methods","title":"Methods","text":"<ul> <li>debug</li> <li>decorate</li> <li>dump</li> <li>error</li> <li>info</li> <li>json</li> <li>log</li> <li>ok</li> <li>warn</li> </ul>"},{"location":"reference/classes/appium_support.console.CliConsole/#constructors_1","title":"Constructors","text":""},{"location":"reference/classes/appium_support.console.CliConsole/#constructor","title":"constructor","text":"<p>\u2022 new CliConsole(<code>opts?</code>)</p>"},{"location":"reference/classes/appium_support.console.CliConsole/#parameters","title":"Parameters","text":"Name Type <code>opts</code> <code>ConsoleOpts</code>"},{"location":"reference/classes/appium_support.console.CliConsole/#defined-in","title":"Defined in","text":"<p>packages/support/lib/console.js:60</p>"},{"location":"reference/classes/appium_support.console.CliConsole/#properties_1","title":"Properties","text":""},{"location":"reference/classes/appium_support.console.CliConsole/#console","title":"#console","text":"<p>\u2022 <code>Private</code> #console: <code>Console</code></p> <p>Internal console</p>"},{"location":"reference/classes/appium_support.console.CliConsole/#defined-in_1","title":"Defined in","text":"<p>packages/support/lib/console.js:32</p>"},{"location":"reference/classes/appium_support.console.CliConsole/#usecolor","title":"#useColor","text":"<p>\u2022 <code>Private</code> #useColor: <code>boolean</code></p> <p>Whether or not to use color.</p>"},{"location":"reference/classes/appium_support.console.CliConsole/#defined-in_2","title":"Defined in","text":"<p>packages/support/lib/console.js:44</p>"},{"location":"reference/classes/appium_support.console.CliConsole/#usesymbols","title":"#useSymbols","text":"<p>\u2022 <code>Private</code> #useSymbols: <code>boolean</code></p> <p>Whether or not to use fancy symbols when logging.</p>"},{"location":"reference/classes/appium_support.console.CliConsole/#defined-in_3","title":"Defined in","text":"<p>packages/support/lib/console.js:39</p>"},{"location":"reference/classes/appium_support.console.CliConsole/#symboltocolor","title":"symbolToColor","text":"<p>\u25aa <code>Static</code> symbolToColor: <code>Record</code>&lt;<code>\"info\"</code> | <code>\"success\"</code> | <code>\"warning\"</code> | <code>\"error\"</code>, <code>string</code> | <code>number</code> | <code>symbol</code>&gt;</p>"},{"location":"reference/classes/appium_support.console.CliConsole/#defined-in_4","title":"Defined in","text":"<p>packages/support/lib/console.js:49</p>"},{"location":"reference/classes/appium_support.console.CliConsole/#methods_1","title":"Methods","text":""},{"location":"reference/classes/appium_support.console.CliConsole/#debug","title":"debug","text":"<p>\u25b8 debug(<code>message?</code>, <code>...args</code>): <code>void</code></p> <p>Alias for Console.log</p>"},{"location":"reference/classes/appium_support.console.CliConsole/#parameters_1","title":"Parameters","text":"Name Type <code>message?</code> <code>string</code> <code>...args</code> <code>any</code>[]"},{"location":"reference/classes/appium_support.console.CliConsole/#returns","title":"Returns","text":"<p><code>void</code></p>"},{"location":"reference/classes/appium_support.console.CliConsole/#defined-in_5","title":"Defined in","text":"<p>packages/support/lib/console.js:121</p>"},{"location":"reference/classes/appium_support.console.CliConsole/#decorate","title":"decorate","text":"<p>\u25b8 decorate(<code>msg?</code>, <code>symbol?</code>): <code>undefined</code> | <code>string</code></p> <p>Wraps a message string in breathtaking fanciness</p> <p>Returns <code>undefined</code> if <code>msg</code> is <code>undefined</code>.</p>"},{"location":"reference/classes/appium_support.console.CliConsole/#parameters_2","title":"Parameters","text":"Name Type Description <code>msg?</code> <code>string</code> Message to decorate, if anything <code>symbol?</code> <code>\"info\"</code> | <code>\"success\"</code> | <code>\"warning\"</code> | <code>\"error\"</code> Symbol to use"},{"location":"reference/classes/appium_support.console.CliConsole/#returns_1","title":"Returns","text":"<p><code>undefined</code> | <code>string</code></p>"},{"location":"reference/classes/appium_support.console.CliConsole/#defined-in_6","title":"Defined in","text":"<p>packages/support/lib/console.js:74</p>"},{"location":"reference/classes/appium_support.console.CliConsole/#dump","title":"dump","text":"<p>\u25b8 dump(<code>item</code>, <code>opts?</code>): <code>void</code></p> <p>Wraps console.dir</p>"},{"location":"reference/classes/appium_support.console.CliConsole/#parameters_3","title":"Parameters","text":"Name Type <code>item</code> <code>any</code> <code>opts?</code> <code>InspectOptions</code>"},{"location":"reference/classes/appium_support.console.CliConsole/#returns_2","title":"Returns","text":"<p><code>void</code></p>"},{"location":"reference/classes/appium_support.console.CliConsole/#defined-in_7","title":"Defined in","text":"<p>packages/support/lib/console.js:130</p>"},{"location":"reference/classes/appium_support.console.CliConsole/#error","title":"error","text":"<p>\u25b8 error(<code>message?</code>, <code>...args</code>): <code>void</code></p> <p>An \"error\" message</p>"},{"location":"reference/classes/appium_support.console.CliConsole/#parameters_4","title":"Parameters","text":"Name Type <code>message?</code> <code>string</code> <code>...args</code> <code>any</code>[]"},{"location":"reference/classes/appium_support.console.CliConsole/#returns_3","title":"Returns","text":"<p><code>void</code></p>"},{"location":"reference/classes/appium_support.console.CliConsole/#defined-in_8","title":"Defined in","text":"<p>packages/support/lib/console.js:157</p>"},{"location":"reference/classes/appium_support.console.CliConsole/#info","title":"info","text":"<p>\u25b8 info(<code>message?</code>, <code>...args</code>): <code>void</code></p> <p>An \"info\" message</p>"},{"location":"reference/classes/appium_support.console.CliConsole/#parameters_5","title":"Parameters","text":"Name Type <code>message?</code> <code>string</code> <code>...args</code> <code>any</code>[]"},{"location":"reference/classes/appium_support.console.CliConsole/#returns_4","title":"Returns","text":"<p><code>void</code></p>"},{"location":"reference/classes/appium_support.console.CliConsole/#defined-in_9","title":"Defined in","text":"<p>packages/support/lib/console.js:139</p>"},{"location":"reference/classes/appium_support.console.CliConsole/#json","title":"json","text":"<p>\u25b8 json(<code>value</code>): <code>void</code></p> <p>Writes to <code>STDOUT</code>.  Must be stringifyable.</p> <p>You probably don't want to call this more than once before exiting (since that will output invalid JSON).</p>"},{"location":"reference/classes/appium_support.console.CliConsole/#parameters_6","title":"Parameters","text":"Name Type <code>value</code> <code>JsonValue</code>"},{"location":"reference/classes/appium_support.console.CliConsole/#returns_5","title":"Returns","text":"<p><code>void</code></p>"},{"location":"reference/classes/appium_support.console.CliConsole/#defined-in_10","title":"Defined in","text":"<p>packages/support/lib/console.js:94</p>"},{"location":"reference/classes/appium_support.console.CliConsole/#log","title":"log","text":"<p>\u25b8 log(<code>message?</code>, <code>...args</code>): <code>void</code></p> <p>General logging function.</p>"},{"location":"reference/classes/appium_support.console.CliConsole/#parameters_7","title":"Parameters","text":"Name Type <code>message?</code> <code>string</code> <code>...args</code> <code>any</code>[]"},{"location":"reference/classes/appium_support.console.CliConsole/#returns_6","title":"Returns","text":"<p><code>void</code></p>"},{"location":"reference/classes/appium_support.console.CliConsole/#defined-in_11","title":"Defined in","text":"<p>packages/support/lib/console.js:103</p>"},{"location":"reference/classes/appium_support.console.CliConsole/#ok","title":"ok","text":"<p>\u25b8 ok(<code>message?</code>, <code>...args</code>): <code>void</code></p> <p>A \"success\" message</p>"},{"location":"reference/classes/appium_support.console.CliConsole/#parameters_8","title":"Parameters","text":"Name Type <code>message?</code> <code>string</code> <code>...args</code> <code>any</code>[]"},{"location":"reference/classes/appium_support.console.CliConsole/#returns_7","title":"Returns","text":"<p><code>void</code></p>"},{"location":"reference/classes/appium_support.console.CliConsole/#defined-in_12","title":"Defined in","text":"<p>packages/support/lib/console.js:112</p>"},{"location":"reference/classes/appium_support.console.CliConsole/#warn","title":"warn","text":"<p>\u25b8 warn(<code>message?</code>, <code>...args</code>): <code>void</code></p> <p>A \"warning\" message</p>"},{"location":"reference/classes/appium_support.console.CliConsole/#parameters_9","title":"Parameters","text":"Name Type <code>message?</code> <code>string</code> <code>...args</code> <code>any</code>[]"},{"location":"reference/classes/appium_support.console.CliConsole/#returns_8","title":"Returns","text":"<p><code>void</code></p>"},{"location":"reference/classes/appium_support.console.CliConsole/#defined-in_13","title":"Defined in","text":"<p>packages/support/lib/console.js:148</p>"},{"location":"reference/classes/appium_support.mjpeg.MJpegStream/","title":"Class: MJpegStream","text":"<p>@appium/support.mjpeg.MJpegStream</p> <p>Class which stores the last bit of data streamed into it</p>"},{"location":"reference/classes/appium_support.mjpeg.MJpegStream/#hierarchy","title":"Hierarchy","text":"<ul> <li><code>Writable</code></li> </ul> <p>\u21b3 <code>MJpegStream</code></p>"},{"location":"reference/classes/appium_support.mjpeg.MJpegStream/#table-of-contents","title":"Table of contents","text":""},{"location":"reference/classes/appium_support.mjpeg.MJpegStream/#constructors","title":"Constructors","text":"<ul> <li>constructor</li> </ul>"},{"location":"reference/classes/appium_support.mjpeg.MJpegStream/#properties","title":"Properties","text":"<ul> <li>closed</li> <li>consumer</li> <li>destroyed</li> <li>errorHandler</li> <li>errored</li> <li>lastChunk</li> <li>registerStartFailure</li> <li>registerStartSuccess</li> <li>responseStream</li> <li>updateCount</li> <li>url</li> <li>writable</li> <li>writableCorked</li> <li>writableEnded</li> <li>writableFinished</li> <li>writableHighWaterMark</li> <li>writableLength</li> <li>writableNeedDrain</li> <li>writableObjectMode</li> <li>captureRejectionSymbol</li> <li>captureRejections</li> <li>defaultMaxListeners</li> <li>errorMonitor</li> </ul>"},{"location":"reference/classes/appium_support.mjpeg.MJpegStream/#accessors","title":"Accessors","text":"<ul> <li>lastChunkBase64</li> </ul>"},{"location":"reference/classes/appium_support.mjpeg.MJpegStream/#methods","title":"Methods","text":"<ul> <li>_construct</li> <li>_destroy</li> <li>_final</li> <li>_write</li> <li>_writev</li> <li>addListener</li> <li>clear</li> <li>cork</li> <li>destroy</li> <li>emit</li> <li>end</li> <li>eventNames</li> <li>getMaxListeners</li> <li>lastChunkPNG</li> <li>lastChunkPNGBase64</li> <li>listenerCount</li> <li>listeners</li> <li>off</li> <li>on</li> <li>once</li> <li>pipe</li> <li>prependListener</li> <li>prependOnceListener</li> <li>rawListeners</li> <li>removeAllListeners</li> <li>removeListener</li> <li>setDefaultEncoding</li> <li>setMaxListeners</li> <li>start</li> <li>stop</li> <li>uncork</li> <li>write</li> <li>fromWeb</li> <li>getEventListeners</li> <li>listenerCount</li> <li>on</li> <li>once</li> <li>setMaxListeners</li> <li>toWeb</li> </ul>"},{"location":"reference/classes/appium_support.mjpeg.MJpegStream/#constructors_1","title":"Constructors","text":""},{"location":"reference/classes/appium_support.mjpeg.MJpegStream/#constructor","title":"constructor","text":"<p>\u2022 new MJpegStream(<code>mJpegUrl</code>, <code>errorHandler?</code>, <code>options?</code>)</p> <p>Create an MJpegStream</p>"},{"location":"reference/classes/appium_support.mjpeg.MJpegStream/#parameters","title":"Parameters","text":"Name Type Default value Description <code>mJpegUrl</code> <code>string</code> <code>undefined</code> URL of MJPEG-over-HTTP stream <code>errorHandler?</code> <code>Function</code> <code>_.noop</code> additional function that will be called in the case of any errors. <code>options?</code> <code>any</code> <code>{}</code> Options to pass to the Writable constructor"},{"location":"reference/classes/appium_support.mjpeg.MJpegStream/#overrides","title":"Overrides","text":"<p>Writable.constructor</p>"},{"location":"reference/classes/appium_support.mjpeg.MJpegStream/#defined-in","title":"Defined in","text":"<p>packages/support/lib/mjpeg.js:46</p>"},{"location":"reference/classes/appium_support.mjpeg.MJpegStream/#properties_1","title":"Properties","text":""},{"location":"reference/classes/appium_support.mjpeg.MJpegStream/#closed","title":"closed","text":"<p>\u2022 <code>Readonly</code> closed: <code>boolean</code></p> <p>Is true after 'close' has been emitted.</p> <p><code>Since</code></p> <p>v8.0.0</p>"},{"location":"reference/classes/appium_support.mjpeg.MJpegStream/#inherited-from","title":"Inherited from","text":"<p>Writable.closed</p>"},{"location":"reference/classes/appium_support.mjpeg.MJpegStream/#defined-in_1","title":"Defined in","text":"<p>node_modules/@types/node/ts4.8/stream.d.ts:584</p>"},{"location":"reference/classes/appium_support.mjpeg.MJpegStream/#consumer","title":"consumer","text":"<p>\u2022 consumer: <code>any</code></p>"},{"location":"reference/classes/appium_support.mjpeg.MJpegStream/#defined-in_2","title":"Defined in","text":"<p>packages/support/lib/mjpeg.js:105</p> <p>packages/support/lib/mjpeg.js:119</p>"},{"location":"reference/classes/appium_support.mjpeg.MJpegStream/#destroyed","title":"destroyed","text":"<p>\u2022 destroyed: <code>boolean</code></p> <p>Is <code>true</code> after <code>writable.destroy()</code> has been called.</p> <p><code>Since</code></p> <p>v8.0.0</p>"},{"location":"reference/classes/appium_support.mjpeg.MJpegStream/#inherited-from_1","title":"Inherited from","text":"<p>Writable.destroyed</p>"},{"location":"reference/classes/appium_support.mjpeg.MJpegStream/#defined-in_3","title":"Defined in","text":"<p>node_modules/@types/node/ts4.8/stream.d.ts:579</p>"},{"location":"reference/classes/appium_support.mjpeg.MJpegStream/#errorhandler","title":"errorHandler","text":"<p>\u2022 errorHandler: <code>Function</code></p>"},{"location":"reference/classes/appium_support.mjpeg.MJpegStream/#defined-in_4","title":"Defined in","text":"<p>packages/support/lib/mjpeg.js:49</p>"},{"location":"reference/classes/appium_support.mjpeg.MJpegStream/#errored","title":"errored","text":"<p>\u2022 <code>Readonly</code> errored: <code>null</code> | <code>Error</code></p> <p>Returns error if the stream has been destroyed with an error.</p> <p><code>Since</code></p> <p>v18.0.0</p>"},{"location":"reference/classes/appium_support.mjpeg.MJpegStream/#inherited-from_2","title":"Inherited from","text":"<p>Writable.errored</p>"},{"location":"reference/classes/appium_support.mjpeg.MJpegStream/#defined-in_5","title":"Defined in","text":"<p>node_modules/@types/node/ts4.8/stream.d.ts:589</p>"},{"location":"reference/classes/appium_support.mjpeg.MJpegStream/#lastchunk","title":"lastChunk","text":"<p>\u2022 lastChunk: <code>undefined</code> | <code>null</code> | <code>Buffer</code></p>"},{"location":"reference/classes/appium_support.mjpeg.MJpegStream/#defined-in_6","title":"Defined in","text":"<p>packages/support/lib/mjpeg.js:106</p> <p>packages/support/lib/mjpeg.js:137</p> <p>packages/support/lib/mjpeg.js:147</p> <p>packages/support/lib/mjpeg.js:193</p>"},{"location":"reference/classes/appium_support.mjpeg.MJpegStream/#registerstartfailure","title":"registerStartFailure","text":"<p>\u2022 registerStartFailure: <code>undefined</code> | <code>null</code> | (<code>error?</code>: <code>any</code>) =&gt; <code>void</code></p>"},{"location":"reference/classes/appium_support.mjpeg.MJpegStream/#defined-in_7","title":"Defined in","text":"<p>packages/support/lib/mjpeg.js:103</p> <p>packages/support/lib/mjpeg.js:125</p>"},{"location":"reference/classes/appium_support.mjpeg.MJpegStream/#registerstartsuccess","title":"registerStartSuccess","text":"<p>\u2022 registerStartSuccess: <code>undefined</code> | <code>null</code> | (<code>thenableOrResult?</code>: <code>any</code>) =&gt; <code>void</code></p>"},{"location":"reference/classes/appium_support.mjpeg.MJpegStream/#defined-in_8","title":"Defined in","text":"<p>packages/support/lib/mjpeg.js:102</p> <p>packages/support/lib/mjpeg.js:124</p> <p>packages/support/lib/mjpeg.js:198</p>"},{"location":"reference/classes/appium_support.mjpeg.MJpegStream/#responsestream","title":"responseStream","text":"<p>\u2022 responseStream: <code>any</code></p>"},{"location":"reference/classes/appium_support.mjpeg.MJpegStream/#defined-in_9","title":"Defined in","text":"<p>packages/support/lib/mjpeg.js:104</p> <p>packages/support/lib/mjpeg.js:151</p>"},{"location":"reference/classes/appium_support.mjpeg.MJpegStream/#updatecount","title":"updateCount","text":"<p>\u2022 updateCount: <code>number</code> = <code>0</code></p>"},{"location":"reference/classes/appium_support.mjpeg.MJpegStream/#defined-in_10","title":"Defined in","text":"<p>packages/support/lib/mjpeg.js:37</p>"},{"location":"reference/classes/appium_support.mjpeg.MJpegStream/#url","title":"url","text":"<p>\u2022 url: <code>string</code></p>"},{"location":"reference/classes/appium_support.mjpeg.MJpegStream/#defined-in_11","title":"Defined in","text":"<p>packages/support/lib/mjpeg.js:50</p>"},{"location":"reference/classes/appium_support.mjpeg.MJpegStream/#writable","title":"writable","text":"<p>\u2022 <code>Readonly</code> writable: <code>boolean</code></p> <p>Is <code>true</code> if it is safe to call <code>writable.write()</code>, which means the stream has not been destroyed, errored or ended.</p> <p><code>Since</code></p> <p>v11.4.0</p>"},{"location":"reference/classes/appium_support.mjpeg.MJpegStream/#inherited-from_3","title":"Inherited from","text":"<p>Writable.writable</p>"},{"location":"reference/classes/appium_support.mjpeg.MJpegStream/#defined-in_12","title":"Defined in","text":"<p>node_modules/@types/node/ts4.8/stream.d.ts:540</p>"},{"location":"reference/classes/appium_support.mjpeg.MJpegStream/#writablecorked","title":"writableCorked","text":"<p>\u2022 <code>Readonly</code> writableCorked: <code>number</code></p> <p>Number of times <code>writable.uncork()</code> needs to be called in order to fully uncork the stream.</p> <p><code>Since</code></p> <p>v13.2.0, v12.16.0</p>"},{"location":"reference/classes/appium_support.mjpeg.MJpegStream/#inherited-from_4","title":"Inherited from","text":"<p>Writable.writableCorked</p>"},{"location":"reference/classes/appium_support.mjpeg.MJpegStream/#defined-in_13","title":"Defined in","text":"<p>node_modules/@types/node/ts4.8/stream.d.ts:574</p>"},{"location":"reference/classes/appium_support.mjpeg.MJpegStream/#writableended","title":"writableEnded","text":"<p>\u2022 <code>Readonly</code> writableEnded: <code>boolean</code></p> <p>Is <code>true</code> after <code>writable.end()</code> has been called. This property does not indicate whether the data has been flushed, for this use <code>writable.writableFinished</code> instead.</p> <p><code>Since</code></p> <p>v12.9.0</p>"},{"location":"reference/classes/appium_support.mjpeg.MJpegStream/#inherited-from_5","title":"Inherited from","text":"<p>Writable.writableEnded</p>"},{"location":"reference/classes/appium_support.mjpeg.MJpegStream/#defined-in_14","title":"Defined in","text":"<p>node_modules/@types/node/ts4.8/stream.d.ts:546</p>"},{"location":"reference/classes/appium_support.mjpeg.MJpegStream/#writablefinished","title":"writableFinished","text":"<p>\u2022 <code>Readonly</code> writableFinished: <code>boolean</code></p> <p>Is set to <code>true</code> immediately before the <code>'finish'</code> event is emitted.</p> <p><code>Since</code></p> <p>v12.6.0</p>"},{"location":"reference/classes/appium_support.mjpeg.MJpegStream/#inherited-from_6","title":"Inherited from","text":"<p>Writable.writableFinished</p>"},{"location":"reference/classes/appium_support.mjpeg.MJpegStream/#defined-in_15","title":"Defined in","text":"<p>node_modules/@types/node/ts4.8/stream.d.ts:551</p>"},{"location":"reference/classes/appium_support.mjpeg.MJpegStream/#writablehighwatermark","title":"writableHighWaterMark","text":"<p>\u2022 <code>Readonly</code> writableHighWaterMark: <code>number</code></p> <p>Return the value of <code>highWaterMark</code> passed when creating this <code>Writable</code>.</p> <p><code>Since</code></p> <p>v9.3.0</p>"},{"location":"reference/classes/appium_support.mjpeg.MJpegStream/#inherited-from_7","title":"Inherited from","text":"<p>Writable.writableHighWaterMark</p>"},{"location":"reference/classes/appium_support.mjpeg.MJpegStream/#defined-in_16","title":"Defined in","text":"<p>node_modules/@types/node/ts4.8/stream.d.ts:556</p>"},{"location":"reference/classes/appium_support.mjpeg.MJpegStream/#writablelength","title":"writableLength","text":"<p>\u2022 <code>Readonly</code> writableLength: <code>number</code></p> <p>This property contains the number of bytes (or objects) in the queue ready to be written. The value provides introspection data regarding the status of the <code>highWaterMark</code>.</p> <p><code>Since</code></p> <p>v9.4.0</p>"},{"location":"reference/classes/appium_support.mjpeg.MJpegStream/#inherited-from_8","title":"Inherited from","text":"<p>Writable.writableLength</p>"},{"location":"reference/classes/appium_support.mjpeg.MJpegStream/#defined-in_17","title":"Defined in","text":"<p>node_modules/@types/node/ts4.8/stream.d.ts:563</p>"},{"location":"reference/classes/appium_support.mjpeg.MJpegStream/#writableneeddrain","title":"writableNeedDrain","text":"<p>\u2022 <code>Readonly</code> writableNeedDrain: <code>boolean</code></p> <p>Is <code>true</code> if the stream's buffer has been full and stream will emit 'drain'.</p> <p><code>Since</code></p> <p>v15.2.0, v14.17.0</p>"},{"location":"reference/classes/appium_support.mjpeg.MJpegStream/#inherited-from_9","title":"Inherited from","text":"<p>Writable.writableNeedDrain</p>"},{"location":"reference/classes/appium_support.mjpeg.MJpegStream/#defined-in_18","title":"Defined in","text":"<p>node_modules/@types/node/ts4.8/stream.d.ts:594</p>"},{"location":"reference/classes/appium_support.mjpeg.MJpegStream/#writableobjectmode","title":"writableObjectMode","text":"<p>\u2022 <code>Readonly</code> writableObjectMode: <code>boolean</code></p> <p>Getter for the property <code>objectMode</code> of a given <code>Writable</code> stream.</p> <p><code>Since</code></p> <p>v12.3.0</p>"},{"location":"reference/classes/appium_support.mjpeg.MJpegStream/#inherited-from_10","title":"Inherited from","text":"<p>Writable.writableObjectMode</p>"},{"location":"reference/classes/appium_support.mjpeg.MJpegStream/#defined-in_19","title":"Defined in","text":"<p>node_modules/@types/node/ts4.8/stream.d.ts:568</p>"},{"location":"reference/classes/appium_support.mjpeg.MJpegStream/#capturerejectionsymbol","title":"captureRejectionSymbol","text":"<p>\u25aa <code>Static</code> <code>Readonly</code> captureRejectionSymbol: typeof <code>captureRejectionSymbol</code></p>"},{"location":"reference/classes/appium_support.mjpeg.MJpegStream/#inherited-from_11","title":"Inherited from","text":"<p>Writable.captureRejectionSymbol</p>"},{"location":"reference/classes/appium_support.mjpeg.MJpegStream/#defined-in_20","title":"Defined in","text":"<p>node_modules/@types/node/ts4.8/events.d.ts:328</p>"},{"location":"reference/classes/appium_support.mjpeg.MJpegStream/#capturerejections","title":"captureRejections","text":"<p>\u25aa <code>Static</code> captureRejections: <code>boolean</code></p> <p>Sets or gets the default captureRejection value for all emitters.</p>"},{"location":"reference/classes/appium_support.mjpeg.MJpegStream/#inherited-from_12","title":"Inherited from","text":"<p>Writable.captureRejections</p>"},{"location":"reference/classes/appium_support.mjpeg.MJpegStream/#defined-in_21","title":"Defined in","text":"<p>node_modules/@types/node/ts4.8/events.d.ts:333</p>"},{"location":"reference/classes/appium_support.mjpeg.MJpegStream/#defaultmaxlisteners","title":"defaultMaxListeners","text":"<p>\u25aa <code>Static</code> defaultMaxListeners: <code>number</code></p>"},{"location":"reference/classes/appium_support.mjpeg.MJpegStream/#inherited-from_13","title":"Inherited from","text":"<p>Writable.defaultMaxListeners</p>"},{"location":"reference/classes/appium_support.mjpeg.MJpegStream/#defined-in_22","title":"Defined in","text":"<p>node_modules/@types/node/ts4.8/events.d.ts:334</p>"},{"location":"reference/classes/appium_support.mjpeg.MJpegStream/#errormonitor","title":"errorMonitor","text":"<p>\u25aa <code>Static</code> <code>Readonly</code> errorMonitor: typeof <code>errorMonitor</code></p> <p>This symbol shall be used to install a listener for only monitoring <code>'error'</code> events. Listeners installed using this symbol are called before the regular <code>'error'</code> listeners are called.</p> <p>Installing a listener using this symbol does not change the behavior once an <code>'error'</code> event is emitted, therefore the process will still crash if no regular <code>'error'</code> listener is installed.</p>"},{"location":"reference/classes/appium_support.mjpeg.MJpegStream/#inherited-from_14","title":"Inherited from","text":"<p>Writable.errorMonitor</p>"},{"location":"reference/classes/appium_support.mjpeg.MJpegStream/#defined-in_23","title":"Defined in","text":"<p>node_modules/@types/node/ts4.8/events.d.ts:327</p>"},{"location":"reference/classes/appium_support.mjpeg.MJpegStream/#accessors_1","title":"Accessors","text":""},{"location":"reference/classes/appium_support.mjpeg.MJpegStream/#lastchunkbase64","title":"lastChunkBase64","text":"<p>\u2022 <code>get</code> lastChunkBase64(): <code>null</code> | <code>string</code></p> <p>Get the base64-encoded version of the JPEG</p>"},{"location":"reference/classes/appium_support.mjpeg.MJpegStream/#returns","title":"Returns","text":"<p><code>null</code> | <code>string</code></p> <p>base64-encoded JPEG image data or <code>null</code> if no image can be parsed</p>"},{"location":"reference/classes/appium_support.mjpeg.MJpegStream/#defined-in_24","title":"Defined in","text":"<p>packages/support/lib/mjpeg.js:60</p>"},{"location":"reference/classes/appium_support.mjpeg.MJpegStream/#methods_1","title":"Methods","text":""},{"location":"reference/classes/appium_support.mjpeg.MJpegStream/#_construct","title":"_construct","text":"<p>\u25b8 <code>Optional</code> _construct(<code>callback</code>): <code>void</code></p>"},{"location":"reference/classes/appium_support.mjpeg.MJpegStream/#parameters_1","title":"Parameters","text":"Name Type <code>callback</code> (<code>error?</code>: <code>null</code> | <code>Error</code>) =&gt; <code>void</code>"},{"location":"reference/classes/appium_support.mjpeg.MJpegStream/#returns_1","title":"Returns","text":"<p><code>void</code></p>"},{"location":"reference/classes/appium_support.mjpeg.MJpegStream/#inherited-from_15","title":"Inherited from","text":"<p>Writable._construct</p>"},{"location":"reference/classes/appium_support.mjpeg.MJpegStream/#defined-in_25","title":"Defined in","text":"<p>node_modules/@types/node/ts4.8/stream.d.ts:604</p>"},{"location":"reference/classes/appium_support.mjpeg.MJpegStream/#_destroy","title":"_destroy","text":"<p>\u25b8 _destroy(<code>error</code>, <code>callback</code>): <code>void</code></p>"},{"location":"reference/classes/appium_support.mjpeg.MJpegStream/#parameters_2","title":"Parameters","text":"Name Type <code>error</code> <code>null</code> | <code>Error</code> <code>callback</code> (<code>error?</code>: <code>null</code> | <code>Error</code>) =&gt; <code>void</code>"},{"location":"reference/classes/appium_support.mjpeg.MJpegStream/#returns_2","title":"Returns","text":"<p><code>void</code></p>"},{"location":"reference/classes/appium_support.mjpeg.MJpegStream/#inherited-from_16","title":"Inherited from","text":"<p>Writable._destroy</p>"},{"location":"reference/classes/appium_support.mjpeg.MJpegStream/#defined-in_26","title":"Defined in","text":"<p>node_modules/@types/node/ts4.8/stream.d.ts:605</p>"},{"location":"reference/classes/appium_support.mjpeg.MJpegStream/#_final","title":"_final","text":"<p>\u25b8 _final(<code>callback</code>): <code>void</code></p>"},{"location":"reference/classes/appium_support.mjpeg.MJpegStream/#parameters_3","title":"Parameters","text":"Name Type <code>callback</code> (<code>error?</code>: <code>null</code> | <code>Error</code>) =&gt; <code>void</code>"},{"location":"reference/classes/appium_support.mjpeg.MJpegStream/#returns_3","title":"Returns","text":"<p><code>void</code></p>"},{"location":"reference/classes/appium_support.mjpeg.MJpegStream/#inherited-from_17","title":"Inherited from","text":"<p>Writable._final</p>"},{"location":"reference/classes/appium_support.mjpeg.MJpegStream/#defined-in_27","title":"Defined in","text":"<p>node_modules/@types/node/ts4.8/stream.d.ts:606</p>"},{"location":"reference/classes/appium_support.mjpeg.MJpegStream/#_write","title":"_write","text":"<p>\u25b8 _write(<code>chunk</code>, <code>encoding</code>, <code>callback</code>): <code>void</code></p>"},{"location":"reference/classes/appium_support.mjpeg.MJpegStream/#parameters_4","title":"Parameters","text":"Name Type <code>chunk</code> <code>any</code> <code>encoding</code> <code>BufferEncoding</code> <code>callback</code> (<code>error?</code>: <code>null</code> | <code>Error</code>) =&gt; <code>void</code>"},{"location":"reference/classes/appium_support.mjpeg.MJpegStream/#returns_4","title":"Returns","text":"<p><code>void</code></p>"},{"location":"reference/classes/appium_support.mjpeg.MJpegStream/#inherited-from_18","title":"Inherited from","text":"<p>Writable._write</p>"},{"location":"reference/classes/appium_support.mjpeg.MJpegStream/#defined-in_28","title":"Defined in","text":"<p>node_modules/@types/node/ts4.8/stream.d.ts:596</p>"},{"location":"reference/classes/appium_support.mjpeg.MJpegStream/#_writev","title":"_writev","text":"<p>\u25b8 <code>Optional</code> _writev(<code>chunks</code>, <code>callback</code>): <code>void</code></p>"},{"location":"reference/classes/appium_support.mjpeg.MJpegStream/#parameters_5","title":"Parameters","text":"Name Type <code>chunks</code> { <code>chunk</code>: <code>any</code> ; <code>encoding</code>: <code>BufferEncoding</code>  }[] <code>callback</code> (<code>error?</code>: <code>null</code> | <code>Error</code>) =&gt; <code>void</code>"},{"location":"reference/classes/appium_support.mjpeg.MJpegStream/#returns_5","title":"Returns","text":"<p><code>void</code></p>"},{"location":"reference/classes/appium_support.mjpeg.MJpegStream/#inherited-from_19","title":"Inherited from","text":"<p>Writable._writev</p>"},{"location":"reference/classes/appium_support.mjpeg.MJpegStream/#defined-in_29","title":"Defined in","text":"<p>node_modules/@types/node/ts4.8/stream.d.ts:597</p>"},{"location":"reference/classes/appium_support.mjpeg.MJpegStream/#addlistener","title":"addListener","text":"<p>\u25b8 addListener(<code>event</code>, <code>listener</code>): <code>MJpegStream</code></p> <p>Event emitter The defined events on documents including: 1. close 2. drain 3. error 4. finish 5. pipe 6. unpipe</p>"},{"location":"reference/classes/appium_support.mjpeg.MJpegStream/#parameters_6","title":"Parameters","text":"Name Type <code>event</code> <code>\"close\"</code> <code>listener</code> () =&gt; <code>void</code>"},{"location":"reference/classes/appium_support.mjpeg.MJpegStream/#returns_6","title":"Returns","text":"<p><code>MJpegStream</code></p>"},{"location":"reference/classes/appium_support.mjpeg.MJpegStream/#inherited-from_20","title":"Inherited from","text":"<p>Writable.addListener</p>"},{"location":"reference/classes/appium_support.mjpeg.MJpegStream/#defined-in_30","title":"Defined in","text":"<p>node_modules/@types/node/ts4.8/stream.d.ts:772</p> <p>\u25b8 addListener(<code>event</code>, <code>listener</code>): <code>MJpegStream</code></p>"},{"location":"reference/classes/appium_support.mjpeg.MJpegStream/#parameters_7","title":"Parameters","text":"Name Type <code>event</code> <code>\"drain\"</code> <code>listener</code> () =&gt; <code>void</code>"},{"location":"reference/classes/appium_support.mjpeg.MJpegStream/#returns_7","title":"Returns","text":"<p><code>MJpegStream</code></p>"},{"location":"reference/classes/appium_support.mjpeg.MJpegStream/#inherited-from_21","title":"Inherited from","text":"<p>Writable.addListener</p>"},{"location":"reference/classes/appium_support.mjpeg.MJpegStream/#defined-in_31","title":"Defined in","text":"<p>node_modules/@types/node/ts4.8/stream.d.ts:773</p> <p>\u25b8 addListener(<code>event</code>, <code>listener</code>): <code>MJpegStream</code></p>"},{"location":"reference/classes/appium_support.mjpeg.MJpegStream/#parameters_8","title":"Parameters","text":"Name Type <code>event</code> <code>\"error\"</code> <code>listener</code> (<code>err</code>: <code>Error</code>) =&gt; <code>void</code>"},{"location":"reference/classes/appium_support.mjpeg.MJpegStream/#returns_8","title":"Returns","text":"<p><code>MJpegStream</code></p>"},{"location":"reference/classes/appium_support.mjpeg.MJpegStream/#inherited-from_22","title":"Inherited from","text":"<p>Writable.addListener</p>"},{"location":"reference/classes/appium_support.mjpeg.MJpegStream/#defined-in_32","title":"Defined in","text":"<p>node_modules/@types/node/ts4.8/stream.d.ts:774</p> <p>\u25b8 addListener(<code>event</code>, <code>listener</code>): <code>MJpegStream</code></p>"},{"location":"reference/classes/appium_support.mjpeg.MJpegStream/#parameters_9","title":"Parameters","text":"Name Type <code>event</code> <code>\"finish\"</code> <code>listener</code> () =&gt; <code>void</code>"},{"location":"reference/classes/appium_support.mjpeg.MJpegStream/#returns_9","title":"Returns","text":"<p><code>MJpegStream</code></p>"},{"location":"reference/classes/appium_support.mjpeg.MJpegStream/#inherited-from_23","title":"Inherited from","text":"<p>Writable.addListener</p>"},{"location":"reference/classes/appium_support.mjpeg.MJpegStream/#defined-in_33","title":"Defined in","text":"<p>node_modules/@types/node/ts4.8/stream.d.ts:775</p> <p>\u25b8 addListener(<code>event</code>, <code>listener</code>): <code>MJpegStream</code></p>"},{"location":"reference/classes/appium_support.mjpeg.MJpegStream/#parameters_10","title":"Parameters","text":"Name Type <code>event</code> <code>\"pipe\"</code> <code>listener</code> (<code>src</code>: <code>Readable</code>) =&gt; <code>void</code>"},{"location":"reference/classes/appium_support.mjpeg.MJpegStream/#returns_10","title":"Returns","text":"<p><code>MJpegStream</code></p>"},{"location":"reference/classes/appium_support.mjpeg.MJpegStream/#inherited-from_24","title":"Inherited from","text":"<p>Writable.addListener</p>"},{"location":"reference/classes/appium_support.mjpeg.MJpegStream/#defined-in_34","title":"Defined in","text":"<p>node_modules/@types/node/ts4.8/stream.d.ts:776</p> <p>\u25b8 addListener(<code>event</code>, <code>listener</code>): <code>MJpegStream</code></p>"},{"location":"reference/classes/appium_support.mjpeg.MJpegStream/#parameters_11","title":"Parameters","text":"Name Type <code>event</code> <code>\"unpipe\"</code> <code>listener</code> (<code>src</code>: <code>Readable</code>) =&gt; <code>void</code>"},{"location":"reference/classes/appium_support.mjpeg.MJpegStream/#returns_11","title":"Returns","text":"<p><code>MJpegStream</code></p>"},{"location":"reference/classes/appium_support.mjpeg.MJpegStream/#inherited-from_25","title":"Inherited from","text":"<p>Writable.addListener</p>"},{"location":"reference/classes/appium_support.mjpeg.MJpegStream/#defined-in_35","title":"Defined in","text":"<p>node_modules/@types/node/ts4.8/stream.d.ts:777</p> <p>\u25b8 addListener(<code>event</code>, <code>listener</code>): <code>MJpegStream</code></p>"},{"location":"reference/classes/appium_support.mjpeg.MJpegStream/#parameters_12","title":"Parameters","text":"Name Type <code>event</code> <code>string</code> | <code>symbol</code> <code>listener</code> (...<code>args</code>: <code>any</code>[]) =&gt; <code>void</code>"},{"location":"reference/classes/appium_support.mjpeg.MJpegStream/#returns_12","title":"Returns","text":"<p><code>MJpegStream</code></p>"},{"location":"reference/classes/appium_support.mjpeg.MJpegStream/#inherited-from_26","title":"Inherited from","text":"<p>Writable.addListener</p>"},{"location":"reference/classes/appium_support.mjpeg.MJpegStream/#defined-in_36","title":"Defined in","text":"<p>node_modules/@types/node/ts4.8/stream.d.ts:778</p>"},{"location":"reference/classes/appium_support.mjpeg.MJpegStream/#clear","title":"clear","text":"<p>\u25b8 clear(): <code>void</code></p> <p>Reset internal state</p>"},{"location":"reference/classes/appium_support.mjpeg.MJpegStream/#returns_13","title":"Returns","text":"<p><code>void</code></p>"},{"location":"reference/classes/appium_support.mjpeg.MJpegStream/#defined-in_37","title":"Defined in","text":"<p>packages/support/lib/mjpeg.js:101</p>"},{"location":"reference/classes/appium_support.mjpeg.MJpegStream/#cork","title":"cork","text":"<p>\u25b8 cork(): <code>void</code></p> <p>The <code>writable.cork()</code> method forces all written data to be buffered in memory. The buffered data will be flushed when either the uncork or end methods are called.</p> <p>The primary intent of <code>writable.cork()</code> is to accommodate a situation in which several small chunks are written to the stream in rapid succession. Instead of immediately forwarding them to the underlying destination, <code>writable.cork()</code>buffers all the chunks until <code>writable.uncork()</code> is called, which will pass them all to <code>writable._writev()</code>, if present. This prevents a head-of-line blocking situation where data is being buffered while waiting for the first small chunk to be processed. However, use of <code>writable.cork()</code> without implementing<code>writable._writev()</code> may have an adverse effect on throughput.</p> <p>See also: <code>writable.uncork()</code>, <code>writable._writev()</code>.</p> <p><code>Since</code></p> <p>v0.11.2</p>"},{"location":"reference/classes/appium_support.mjpeg.MJpegStream/#returns_14","title":"Returns","text":"<p><code>void</code></p>"},{"location":"reference/classes/appium_support.mjpeg.MJpegStream/#inherited-from_27","title":"Inherited from","text":"<p>Writable.cork</p>"},{"location":"reference/classes/appium_support.mjpeg.MJpegStream/#defined-in_38","title":"Defined in","text":"<p>node_modules/@types/node/ts4.8/stream.d.ts:710</p>"},{"location":"reference/classes/appium_support.mjpeg.MJpegStream/#destroy","title":"destroy","text":"<p>\u25b8 destroy(<code>error?</code>): <code>MJpegStream</code></p> <p>Destroy the stream. Optionally emit an <code>'error'</code> event, and emit a <code>'close'</code>event (unless <code>emitClose</code> is set to <code>false</code>). After this call, the writable stream has ended and subsequent calls to <code>write()</code> or <code>end()</code> will result in an <code>ERR_STREAM_DESTROYED</code> error. This is a destructive and immediate way to destroy a stream. Previous calls to<code>write()</code> may not have drained, and may trigger an <code>ERR_STREAM_DESTROYED</code> error. Use <code>end()</code> instead of destroy if data should flush before close, or wait for the <code>'drain'</code> event before destroying the stream.</p> <p>Once <code>destroy()</code> has been called any further calls will be a no-op and no further errors except from <code>_destroy()</code> may be emitted as <code>'error'</code>.</p> <p>Implementors should not override this method, but instead implement <code>writable._destroy()</code>.</p> <p><code>Since</code></p> <p>v8.0.0</p>"},{"location":"reference/classes/appium_support.mjpeg.MJpegStream/#parameters_13","title":"Parameters","text":"Name Type Description <code>error?</code> <code>Error</code> Optional, an error to emit with <code>'error'</code> event."},{"location":"reference/classes/appium_support.mjpeg.MJpegStream/#returns_15","title":"Returns","text":"<p><code>MJpegStream</code></p>"},{"location":"reference/classes/appium_support.mjpeg.MJpegStream/#inherited-from_28","title":"Inherited from","text":"<p>Writable.destroy</p>"},{"location":"reference/classes/appium_support.mjpeg.MJpegStream/#defined-in_39","title":"Defined in","text":"<p>node_modules/@types/node/ts4.8/stream.d.ts:761</p>"},{"location":"reference/classes/appium_support.mjpeg.MJpegStream/#emit","title":"emit","text":"<p>\u25b8 emit(<code>event</code>): <code>boolean</code></p>"},{"location":"reference/classes/appium_support.mjpeg.MJpegStream/#parameters_14","title":"Parameters","text":"Name Type <code>event</code> <code>\"close\"</code>"},{"location":"reference/classes/appium_support.mjpeg.MJpegStream/#returns_16","title":"Returns","text":"<p><code>boolean</code></p>"},{"location":"reference/classes/appium_support.mjpeg.MJpegStream/#inherited-from_29","title":"Inherited from","text":"<p>Writable.emit</p>"},{"location":"reference/classes/appium_support.mjpeg.MJpegStream/#defined-in_40","title":"Defined in","text":"<p>node_modules/@types/node/ts4.8/stream.d.ts:779</p> <p>\u25b8 emit(<code>event</code>): <code>boolean</code></p>"},{"location":"reference/classes/appium_support.mjpeg.MJpegStream/#parameters_15","title":"Parameters","text":"Name Type <code>event</code> <code>\"drain\"</code>"},{"location":"reference/classes/appium_support.mjpeg.MJpegStream/#returns_17","title":"Returns","text":"<p><code>boolean</code></p>"},{"location":"reference/classes/appium_support.mjpeg.MJpegStream/#inherited-from_30","title":"Inherited from","text":"<p>Writable.emit</p>"},{"location":"reference/classes/appium_support.mjpeg.MJpegStream/#defined-in_41","title":"Defined in","text":"<p>node_modules/@types/node/ts4.8/stream.d.ts:780</p> <p>\u25b8 emit(<code>event</code>, <code>err</code>): <code>boolean</code></p>"},{"location":"reference/classes/appium_support.mjpeg.MJpegStream/#parameters_16","title":"Parameters","text":"Name Type <code>event</code> <code>\"error\"</code> <code>err</code> <code>Error</code>"},{"location":"reference/classes/appium_support.mjpeg.MJpegStream/#returns_18","title":"Returns","text":"<p><code>boolean</code></p>"},{"location":"reference/classes/appium_support.mjpeg.MJpegStream/#inherited-from_31","title":"Inherited from","text":"<p>Writable.emit</p>"},{"location":"reference/classes/appium_support.mjpeg.MJpegStream/#defined-in_42","title":"Defined in","text":"<p>node_modules/@types/node/ts4.8/stream.d.ts:781</p> <p>\u25b8 emit(<code>event</code>): <code>boolean</code></p>"},{"location":"reference/classes/appium_support.mjpeg.MJpegStream/#parameters_17","title":"Parameters","text":"Name Type <code>event</code> <code>\"finish\"</code>"},{"location":"reference/classes/appium_support.mjpeg.MJpegStream/#returns_19","title":"Returns","text":"<p><code>boolean</code></p>"},{"location":"reference/classes/appium_support.mjpeg.MJpegStream/#inherited-from_32","title":"Inherited from","text":"<p>Writable.emit</p>"},{"location":"reference/classes/appium_support.mjpeg.MJpegStream/#defined-in_43","title":"Defined in","text":"<p>node_modules/@types/node/ts4.8/stream.d.ts:782</p> <p>\u25b8 emit(<code>event</code>, <code>src</code>): <code>boolean</code></p>"},{"location":"reference/classes/appium_support.mjpeg.MJpegStream/#parameters_18","title":"Parameters","text":"Name Type <code>event</code> <code>\"pipe\"</code> <code>src</code> <code>Readable</code>"},{"location":"reference/classes/appium_support.mjpeg.MJpegStream/#returns_20","title":"Returns","text":"<p><code>boolean</code></p>"},{"location":"reference/classes/appium_support.mjpeg.MJpegStream/#inherited-from_33","title":"Inherited from","text":"<p>Writable.emit</p>"},{"location":"reference/classes/appium_support.mjpeg.MJpegStream/#defined-in_44","title":"Defined in","text":"<p>node_modules/@types/node/ts4.8/stream.d.ts:783</p> <p>\u25b8 emit(<code>event</code>, <code>src</code>): <code>boolean</code></p>"},{"location":"reference/classes/appium_support.mjpeg.MJpegStream/#parameters_19","title":"Parameters","text":"Name Type <code>event</code> <code>\"unpipe\"</code> <code>src</code> <code>Readable</code>"},{"location":"reference/classes/appium_support.mjpeg.MJpegStream/#returns_21","title":"Returns","text":"<p><code>boolean</code></p>"},{"location":"reference/classes/appium_support.mjpeg.MJpegStream/#inherited-from_34","title":"Inherited from","text":"<p>Writable.emit</p>"},{"location":"reference/classes/appium_support.mjpeg.MJpegStream/#defined-in_45","title":"Defined in","text":"<p>node_modules/@types/node/ts4.8/stream.d.ts:784</p> <p>\u25b8 emit(<code>event</code>, <code>...args</code>): <code>boolean</code></p>"},{"location":"reference/classes/appium_support.mjpeg.MJpegStream/#parameters_20","title":"Parameters","text":"Name Type <code>event</code> <code>string</code> | <code>symbol</code> <code>...args</code> <code>any</code>[]"},{"location":"reference/classes/appium_support.mjpeg.MJpegStream/#returns_22","title":"Returns","text":"<p><code>boolean</code></p>"},{"location":"reference/classes/appium_support.mjpeg.MJpegStream/#inherited-from_35","title":"Inherited from","text":"<p>Writable.emit</p>"},{"location":"reference/classes/appium_support.mjpeg.MJpegStream/#defined-in_46","title":"Defined in","text":"<p>node_modules/@types/node/ts4.8/stream.d.ts:785</p>"},{"location":"reference/classes/appium_support.mjpeg.MJpegStream/#end","title":"end","text":"<p>\u25b8 end(<code>cb?</code>): <code>MJpegStream</code></p> <p>Calling the <code>writable.end()</code> method signals that no more data will be written to the <code>Writable</code>. The optional <code>chunk</code> and <code>encoding</code> arguments allow one final additional chunk of data to be written immediately before closing the stream.</p> <p>Calling the write method after calling end will raise an error.</p> <pre><code>// Write 'hello, ' and then end with 'world!'.\nconst fs = require('fs');\nconst file = fs.createWriteStream('example.txt');\nfile.write('hello, ');\nfile.end('world!');\n// Writing more now is not allowed!\n</code></pre> <p><code>Since</code></p> <p>v0.9.4</p>"},{"location":"reference/classes/appium_support.mjpeg.MJpegStream/#parameters_21","title":"Parameters","text":"Name Type <code>cb?</code> () =&gt; <code>void</code>"},{"location":"reference/classes/appium_support.mjpeg.MJpegStream/#returns_23","title":"Returns","text":"<p><code>MJpegStream</code></p>"},{"location":"reference/classes/appium_support.mjpeg.MJpegStream/#inherited-from_36","title":"Inherited from","text":"<p>Writable.end</p>"},{"location":"reference/classes/appium_support.mjpeg.MJpegStream/#defined-in_47","title":"Defined in","text":"<p>node_modules/@types/node/ts4.8/stream.d.ts:693</p> <p>\u25b8 end(<code>chunk</code>, <code>cb?</code>): <code>MJpegStream</code></p>"},{"location":"reference/classes/appium_support.mjpeg.MJpegStream/#parameters_22","title":"Parameters","text":"Name Type <code>chunk</code> <code>any</code> <code>cb?</code> () =&gt; <code>void</code>"},{"location":"reference/classes/appium_support.mjpeg.MJpegStream/#returns_24","title":"Returns","text":"<p><code>MJpegStream</code></p>"},{"location":"reference/classes/appium_support.mjpeg.MJpegStream/#inherited-from_37","title":"Inherited from","text":"<p>Writable.end</p>"},{"location":"reference/classes/appium_support.mjpeg.MJpegStream/#defined-in_48","title":"Defined in","text":"<p>node_modules/@types/node/ts4.8/stream.d.ts:694</p> <p>\u25b8 end(<code>chunk</code>, <code>encoding</code>, <code>cb?</code>): <code>MJpegStream</code></p>"},{"location":"reference/classes/appium_support.mjpeg.MJpegStream/#parameters_23","title":"Parameters","text":"Name Type <code>chunk</code> <code>any</code> <code>encoding</code> <code>BufferEncoding</code> <code>cb?</code> () =&gt; <code>void</code>"},{"location":"reference/classes/appium_support.mjpeg.MJpegStream/#returns_25","title":"Returns","text":"<p><code>MJpegStream</code></p>"},{"location":"reference/classes/appium_support.mjpeg.MJpegStream/#inherited-from_38","title":"Inherited from","text":"<p>Writable.end</p>"},{"location":"reference/classes/appium_support.mjpeg.MJpegStream/#defined-in_49","title":"Defined in","text":"<p>node_modules/@types/node/ts4.8/stream.d.ts:695</p>"},{"location":"reference/classes/appium_support.mjpeg.MJpegStream/#eventnames","title":"eventNames","text":"<p>\u25b8 eventNames(): (<code>string</code> | <code>symbol</code>)[]</p> <p>Returns an array listing the events for which the emitter has registered listeners. The values in the array are strings or <code>Symbol</code>s.</p> <pre><code>const EventEmitter = require('events');\nconst myEE = new EventEmitter();\nmyEE.on('foo', () =&gt; {});\nmyEE.on('bar', () =&gt; {});\nconst sym = Symbol('symbol');\nmyEE.on(sym, () =&gt; {});\nconsole.log(myEE.eventNames());\n// Prints: [ 'foo', 'bar', Symbol(symbol) ]\n</code></pre> <p><code>Since</code></p> <p>v6.0.0</p>"},{"location":"reference/classes/appium_support.mjpeg.MJpegStream/#returns_26","title":"Returns","text":"<p>(<code>string</code> | <code>symbol</code>)[]</p>"},{"location":"reference/classes/appium_support.mjpeg.MJpegStream/#inherited-from_39","title":"Inherited from","text":"<p>Writable.eventNames</p>"},{"location":"reference/classes/appium_support.mjpeg.MJpegStream/#defined-in_50","title":"Defined in","text":"<p>node_modules/@types/node/ts4.8/events.d.ts:669</p>"},{"location":"reference/classes/appium_support.mjpeg.MJpegStream/#getmaxlisteners","title":"getMaxListeners","text":"<p>\u25b8 getMaxListeners(): <code>number</code></p> <p>Returns the current max listener value for the <code>EventEmitter</code> which is either set by <code>emitter.setMaxListeners(n)</code> or defaults to defaultMaxListeners.</p> <p><code>Since</code></p> <p>v1.0.0</p>"},{"location":"reference/classes/appium_support.mjpeg.MJpegStream/#returns_27","title":"Returns","text":"<p><code>number</code></p>"},{"location":"reference/classes/appium_support.mjpeg.MJpegStream/#inherited-from_40","title":"Inherited from","text":"<p>Writable.getMaxListeners</p>"},{"location":"reference/classes/appium_support.mjpeg.MJpegStream/#defined-in_51","title":"Defined in","text":"<p>node_modules/@types/node/ts4.8/events.d.ts:526</p>"},{"location":"reference/classes/appium_support.mjpeg.MJpegStream/#lastchunkpng","title":"lastChunkPNG","text":"<p>\u25b8 lastChunkPNG(): <code>Promise</code>&lt;<code>null</code> | <code>Buffer</code>&gt;</p> <p>Get the PNG version of the JPEG buffer</p>"},{"location":"reference/classes/appium_support.mjpeg.MJpegStream/#returns_28","title":"Returns","text":"<p><code>Promise</code>&lt;<code>null</code> | <code>Buffer</code>&gt;</p> <p>PNG image data or <code>null</code> if no PNG image can be parsed</p>"},{"location":"reference/classes/appium_support.mjpeg.MJpegStream/#defined-in_52","title":"Defined in","text":"<p>packages/support/lib/mjpeg.js:73</p>"},{"location":"reference/classes/appium_support.mjpeg.MJpegStream/#lastchunkpngbase64","title":"lastChunkPNGBase64","text":"<p>\u25b8 lastChunkPNGBase64(): <code>Promise</code>&lt;<code>null</code> | <code>string</code>&gt;</p> <p>Get the base64-encoded version of the PNG</p>"},{"location":"reference/classes/appium_support.mjpeg.MJpegStream/#returns_29","title":"Returns","text":"<p><code>Promise</code>&lt;<code>null</code> | <code>string</code>&gt;</p> <p>base64-encoded PNG image data or <code>null</code> if no image can be parsed</p>"},{"location":"reference/classes/appium_support.mjpeg.MJpegStream/#defined-in_53","title":"Defined in","text":"<p>packages/support/lib/mjpeg.js:93</p>"},{"location":"reference/classes/appium_support.mjpeg.MJpegStream/#listenercount","title":"listenerCount","text":"<p>\u25b8 listenerCount(<code>eventName</code>): <code>number</code></p> <p>Returns the number of listeners listening to the event named <code>eventName</code>.</p> <p><code>Since</code></p> <p>v3.2.0</p>"},{"location":"reference/classes/appium_support.mjpeg.MJpegStream/#parameters_24","title":"Parameters","text":"Name Type Description <code>eventName</code> <code>string</code> | <code>symbol</code> The name of the event being listened for"},{"location":"reference/classes/appium_support.mjpeg.MJpegStream/#returns_30","title":"Returns","text":"<p><code>number</code></p>"},{"location":"reference/classes/appium_support.mjpeg.MJpegStream/#inherited-from_41","title":"Inherited from","text":"<p>Writable.listenerCount</p>"},{"location":"reference/classes/appium_support.mjpeg.MJpegStream/#defined-in_54","title":"Defined in","text":"<p>node_modules/@types/node/ts4.8/events.d.ts:616</p>"},{"location":"reference/classes/appium_support.mjpeg.MJpegStream/#listeners","title":"listeners","text":"<p>\u25b8 listeners(<code>eventName</code>): <code>Function</code>[]</p> <p>Returns a copy of the array of listeners for the event named <code>eventName</code>.</p> <pre><code>server.on('connection', (stream) =&gt; {\nconsole.log('someone connected!');\n});\nconsole.log(util.inspect(server.listeners('connection')));\n// Prints: [ [Function] ]\n</code></pre> <p><code>Since</code></p> <p>v0.1.26</p>"},{"location":"reference/classes/appium_support.mjpeg.MJpegStream/#parameters_25","title":"Parameters","text":"Name Type <code>eventName</code> <code>string</code> | <code>symbol</code>"},{"location":"reference/classes/appium_support.mjpeg.MJpegStream/#returns_31","title":"Returns","text":"<p><code>Function</code>[]</p>"},{"location":"reference/classes/appium_support.mjpeg.MJpegStream/#inherited-from_42","title":"Inherited from","text":"<p>Writable.listeners</p>"},{"location":"reference/classes/appium_support.mjpeg.MJpegStream/#defined-in_55","title":"Defined in","text":"<p>node_modules/@types/node/ts4.8/events.d.ts:539</p>"},{"location":"reference/classes/appium_support.mjpeg.MJpegStream/#off","title":"off","text":"<p>\u25b8 off(<code>eventName</code>, <code>listener</code>): <code>MJpegStream</code></p> <p>Alias for <code>emitter.removeListener()</code>.</p> <p><code>Since</code></p> <p>v10.0.0</p>"},{"location":"reference/classes/appium_support.mjpeg.MJpegStream/#parameters_26","title":"Parameters","text":"Name Type <code>eventName</code> <code>string</code> | <code>symbol</code> <code>listener</code> (...<code>args</code>: <code>any</code>[]) =&gt; <code>void</code>"},{"location":"reference/classes/appium_support.mjpeg.MJpegStream/#returns_32","title":"Returns","text":"<p><code>MJpegStream</code></p>"},{"location":"reference/classes/appium_support.mjpeg.MJpegStream/#inherited-from_43","title":"Inherited from","text":"<p>Writable.off</p>"},{"location":"reference/classes/appium_support.mjpeg.MJpegStream/#defined-in_56","title":"Defined in","text":"<p>node_modules/@types/node/ts4.8/events.d.ts:499</p>"},{"location":"reference/classes/appium_support.mjpeg.MJpegStream/#on","title":"on","text":"<p>\u25b8 on(<code>event</code>, <code>listener</code>): <code>MJpegStream</code></p>"},{"location":"reference/classes/appium_support.mjpeg.MJpegStream/#parameters_27","title":"Parameters","text":"Name Type <code>event</code> <code>\"close\"</code> <code>listener</code> () =&gt; <code>void</code>"},{"location":"reference/classes/appium_support.mjpeg.MJpegStream/#returns_33","title":"Returns","text":"<p><code>MJpegStream</code></p>"},{"location":"reference/classes/appium_support.mjpeg.MJpegStream/#inherited-from_44","title":"Inherited from","text":"<p>Writable.on</p>"},{"location":"reference/classes/appium_support.mjpeg.MJpegStream/#defined-in_57","title":"Defined in","text":"<p>node_modules/@types/node/ts4.8/stream.d.ts:786</p> <p>\u25b8 on(<code>event</code>, <code>listener</code>): <code>MJpegStream</code></p>"},{"location":"reference/classes/appium_support.mjpeg.MJpegStream/#parameters_28","title":"Parameters","text":"Name Type <code>event</code> <code>\"drain\"</code> <code>listener</code> () =&gt; <code>void</code>"},{"location":"reference/classes/appium_support.mjpeg.MJpegStream/#returns_34","title":"Returns","text":"<p><code>MJpegStream</code></p>"},{"location":"reference/classes/appium_support.mjpeg.MJpegStream/#inherited-from_45","title":"Inherited from","text":"<p>Writable.on</p>"},{"location":"reference/classes/appium_support.mjpeg.MJpegStream/#defined-in_58","title":"Defined in","text":"<p>node_modules/@types/node/ts4.8/stream.d.ts:787</p> <p>\u25b8 on(<code>event</code>, <code>listener</code>): <code>MJpegStream</code></p>"},{"location":"reference/classes/appium_support.mjpeg.MJpegStream/#parameters_29","title":"Parameters","text":"Name Type <code>event</code> <code>\"error\"</code> <code>listener</code> (<code>err</code>: <code>Error</code>) =&gt; <code>void</code>"},{"location":"reference/classes/appium_support.mjpeg.MJpegStream/#returns_35","title":"Returns","text":"<p><code>MJpegStream</code></p>"},{"location":"reference/classes/appium_support.mjpeg.MJpegStream/#inherited-from_46","title":"Inherited from","text":"<p>Writable.on</p>"},{"location":"reference/classes/appium_support.mjpeg.MJpegStream/#defined-in_59","title":"Defined in","text":"<p>node_modules/@types/node/ts4.8/stream.d.ts:788</p> <p>\u25b8 on(<code>event</code>, <code>listener</code>): <code>MJpegStream</code></p>"},{"location":"reference/classes/appium_support.mjpeg.MJpegStream/#parameters_30","title":"Parameters","text":"Name Type <code>event</code> <code>\"finish\"</code> <code>listener</code> () =&gt; <code>void</code>"},{"location":"reference/classes/appium_support.mjpeg.MJpegStream/#returns_36","title":"Returns","text":"<p><code>MJpegStream</code></p>"},{"location":"reference/classes/appium_support.mjpeg.MJpegStream/#inherited-from_47","title":"Inherited from","text":"<p>Writable.on</p>"},{"location":"reference/classes/appium_support.mjpeg.MJpegStream/#defined-in_60","title":"Defined in","text":"<p>node_modules/@types/node/ts4.8/stream.d.ts:789</p> <p>\u25b8 on(<code>event</code>, <code>listener</code>): <code>MJpegStream</code></p>"},{"location":"reference/classes/appium_support.mjpeg.MJpegStream/#parameters_31","title":"Parameters","text":"Name Type <code>event</code> <code>\"pipe\"</code> <code>listener</code> (<code>src</code>: <code>Readable</code>) =&gt; <code>void</code>"},{"location":"reference/classes/appium_support.mjpeg.MJpegStream/#returns_37","title":"Returns","text":"<p><code>MJpegStream</code></p>"},{"location":"reference/classes/appium_support.mjpeg.MJpegStream/#inherited-from_48","title":"Inherited from","text":"<p>Writable.on</p>"},{"location":"reference/classes/appium_support.mjpeg.MJpegStream/#defined-in_61","title":"Defined in","text":"<p>node_modules/@types/node/ts4.8/stream.d.ts:790</p> <p>\u25b8 on(<code>event</code>, <code>listener</code>): <code>MJpegStream</code></p>"},{"location":"reference/classes/appium_support.mjpeg.MJpegStream/#parameters_32","title":"Parameters","text":"Name Type <code>event</code> <code>\"unpipe\"</code> <code>listener</code> (<code>src</code>: <code>Readable</code>) =&gt; <code>void</code>"},{"location":"reference/classes/appium_support.mjpeg.MJpegStream/#returns_38","title":"Returns","text":"<p><code>MJpegStream</code></p>"},{"location":"reference/classes/appium_support.mjpeg.MJpegStream/#inherited-from_49","title":"Inherited from","text":"<p>Writable.on</p>"},{"location":"reference/classes/appium_support.mjpeg.MJpegStream/#defined-in_62","title":"Defined in","text":"<p>node_modules/@types/node/ts4.8/stream.d.ts:791</p> <p>\u25b8 on(<code>event</code>, <code>listener</code>): <code>MJpegStream</code></p>"},{"location":"reference/classes/appium_support.mjpeg.MJpegStream/#parameters_33","title":"Parameters","text":"Name Type <code>event</code> <code>string</code> | <code>symbol</code> <code>listener</code> (...<code>args</code>: <code>any</code>[]) =&gt; <code>void</code>"},{"location":"reference/classes/appium_support.mjpeg.MJpegStream/#returns_39","title":"Returns","text":"<p><code>MJpegStream</code></p>"},{"location":"reference/classes/appium_support.mjpeg.MJpegStream/#inherited-from_50","title":"Inherited from","text":"<p>Writable.on</p>"},{"location":"reference/classes/appium_support.mjpeg.MJpegStream/#defined-in_63","title":"Defined in","text":"<p>node_modules/@types/node/ts4.8/stream.d.ts:792</p>"},{"location":"reference/classes/appium_support.mjpeg.MJpegStream/#once","title":"once","text":"<p>\u25b8 once(<code>event</code>, <code>listener</code>): <code>MJpegStream</code></p>"},{"location":"reference/classes/appium_support.mjpeg.MJpegStream/#parameters_34","title":"Parameters","text":"Name Type <code>event</code> <code>\"close\"</code> <code>listener</code> () =&gt; <code>void</code>"},{"location":"reference/classes/appium_support.mjpeg.MJpegStream/#returns_40","title":"Returns","text":"<p><code>MJpegStream</code></p>"},{"location":"reference/classes/appium_support.mjpeg.MJpegStream/#inherited-from_51","title":"Inherited from","text":"<p>Writable.once</p>"},{"location":"reference/classes/appium_support.mjpeg.MJpegStream/#defined-in_64","title":"Defined in","text":"<p>node_modules/@types/node/ts4.8/stream.d.ts:793</p> <p>\u25b8 once(<code>event</code>, <code>listener</code>): <code>MJpegStream</code></p>"},{"location":"reference/classes/appium_support.mjpeg.MJpegStream/#parameters_35","title":"Parameters","text":"Name Type <code>event</code> <code>\"drain\"</code> <code>listener</code> () =&gt; <code>void</code>"},{"location":"reference/classes/appium_support.mjpeg.MJpegStream/#returns_41","title":"Returns","text":"<p><code>MJpegStream</code></p>"},{"location":"reference/classes/appium_support.mjpeg.MJpegStream/#inherited-from_52","title":"Inherited from","text":"<p>Writable.once</p>"},{"location":"reference/classes/appium_support.mjpeg.MJpegStream/#defined-in_65","title":"Defined in","text":"<p>node_modules/@types/node/ts4.8/stream.d.ts:794</p> <p>\u25b8 once(<code>event</code>, <code>listener</code>): <code>MJpegStream</code></p>"},{"location":"reference/classes/appium_support.mjpeg.MJpegStream/#parameters_36","title":"Parameters","text":"Name Type <code>event</code> <code>\"error\"</code> <code>listener</code> (<code>err</code>: <code>Error</code>) =&gt; <code>void</code>"},{"location":"reference/classes/appium_support.mjpeg.MJpegStream/#returns_42","title":"Returns","text":"<p><code>MJpegStream</code></p>"},{"location":"reference/classes/appium_support.mjpeg.MJpegStream/#inherited-from_53","title":"Inherited from","text":"<p>Writable.once</p>"},{"location":"reference/classes/appium_support.mjpeg.MJpegStream/#defined-in_66","title":"Defined in","text":"<p>node_modules/@types/node/ts4.8/stream.d.ts:795</p> <p>\u25b8 once(<code>event</code>, <code>listener</code>): <code>MJpegStream</code></p>"},{"location":"reference/classes/appium_support.mjpeg.MJpegStream/#parameters_37","title":"Parameters","text":"Name Type <code>event</code> <code>\"finish\"</code> <code>listener</code> () =&gt; <code>void</code>"},{"location":"reference/classes/appium_support.mjpeg.MJpegStream/#returns_43","title":"Returns","text":"<p><code>MJpegStream</code></p>"},{"location":"reference/classes/appium_support.mjpeg.MJpegStream/#inherited-from_54","title":"Inherited from","text":"<p>Writable.once</p>"},{"location":"reference/classes/appium_support.mjpeg.MJpegStream/#defined-in_67","title":"Defined in","text":"<p>node_modules/@types/node/ts4.8/stream.d.ts:796</p> <p>\u25b8 once(<code>event</code>, <code>listener</code>): <code>MJpegStream</code></p>"},{"location":"reference/classes/appium_support.mjpeg.MJpegStream/#parameters_38","title":"Parameters","text":"Name Type <code>event</code> <code>\"pipe\"</code> <code>listener</code> (<code>src</code>: <code>Readable</code>) =&gt; <code>void</code>"},{"location":"reference/classes/appium_support.mjpeg.MJpegStream/#returns_44","title":"Returns","text":"<p><code>MJpegStream</code></p>"},{"location":"reference/classes/appium_support.mjpeg.MJpegStream/#inherited-from_55","title":"Inherited from","text":"<p>Writable.once</p>"},{"location":"reference/classes/appium_support.mjpeg.MJpegStream/#defined-in_68","title":"Defined in","text":"<p>node_modules/@types/node/ts4.8/stream.d.ts:797</p> <p>\u25b8 once(<code>event</code>, <code>listener</code>): <code>MJpegStream</code></p>"},{"location":"reference/classes/appium_support.mjpeg.MJpegStream/#parameters_39","title":"Parameters","text":"Name Type <code>event</code> <code>\"unpipe\"</code> <code>listener</code> (<code>src</code>: <code>Readable</code>) =&gt; <code>void</code>"},{"location":"reference/classes/appium_support.mjpeg.MJpegStream/#returns_45","title":"Returns","text":"<p><code>MJpegStream</code></p>"},{"location":"reference/classes/appium_support.mjpeg.MJpegStream/#inherited-from_56","title":"Inherited from","text":"<p>Writable.once</p>"},{"location":"reference/classes/appium_support.mjpeg.MJpegStream/#defined-in_69","title":"Defined in","text":"<p>node_modules/@types/node/ts4.8/stream.d.ts:798</p> <p>\u25b8 once(<code>event</code>, <code>listener</code>): <code>MJpegStream</code></p>"},{"location":"reference/classes/appium_support.mjpeg.MJpegStream/#parameters_40","title":"Parameters","text":"Name Type <code>event</code> <code>string</code> | <code>symbol</code> <code>listener</code> (...<code>args</code>: <code>any</code>[]) =&gt; <code>void</code>"},{"location":"reference/classes/appium_support.mjpeg.MJpegStream/#returns_46","title":"Returns","text":"<p><code>MJpegStream</code></p>"},{"location":"reference/classes/appium_support.mjpeg.MJpegStream/#inherited-from_57","title":"Inherited from","text":"<p>Writable.once</p>"},{"location":"reference/classes/appium_support.mjpeg.MJpegStream/#defined-in_70","title":"Defined in","text":"<p>node_modules/@types/node/ts4.8/stream.d.ts:799</p>"},{"location":"reference/classes/appium_support.mjpeg.MJpegStream/#pipe","title":"pipe","text":"<p>\u25b8 pipe&lt;<code>T</code>&gt;(<code>destination</code>, <code>options?</code>): <code>T</code></p>"},{"location":"reference/classes/appium_support.mjpeg.MJpegStream/#type-parameters","title":"Type parameters","text":"Name Type <code>T</code> extends <code>WritableStream</code>&lt;<code>T</code>&gt;"},{"location":"reference/classes/appium_support.mjpeg.MJpegStream/#parameters_41","title":"Parameters","text":"Name Type <code>destination</code> <code>T</code> <code>options?</code> <code>Object</code> <code>options.end?</code> <code>boolean</code>"},{"location":"reference/classes/appium_support.mjpeg.MJpegStream/#returns_47","title":"Returns","text":"<p><code>T</code></p>"},{"location":"reference/classes/appium_support.mjpeg.MJpegStream/#inherited-from_58","title":"Inherited from","text":"<p>Writable.pipe</p>"},{"location":"reference/classes/appium_support.mjpeg.MJpegStream/#defined-in_71","title":"Defined in","text":"<p>node_modules/@types/node/ts4.8/stream.d.ts:26</p>"},{"location":"reference/classes/appium_support.mjpeg.MJpegStream/#prependlistener","title":"prependListener","text":"<p>\u25b8 prependListener(<code>event</code>, <code>listener</code>): <code>MJpegStream</code></p>"},{"location":"reference/classes/appium_support.mjpeg.MJpegStream/#parameters_42","title":"Parameters","text":"Name Type <code>event</code> <code>\"close\"</code> <code>listener</code> () =&gt; <code>void</code>"},{"location":"reference/classes/appium_support.mjpeg.MJpegStream/#returns_48","title":"Returns","text":"<p><code>MJpegStream</code></p>"},{"location":"reference/classes/appium_support.mjpeg.MJpegStream/#inherited-from_59","title":"Inherited from","text":"<p>Writable.prependListener</p>"},{"location":"reference/classes/appium_support.mjpeg.MJpegStream/#defined-in_72","title":"Defined in","text":"<p>node_modules/@types/node/ts4.8/stream.d.ts:800</p> <p>\u25b8 prependListener(<code>event</code>, <code>listener</code>): <code>MJpegStream</code></p>"},{"location":"reference/classes/appium_support.mjpeg.MJpegStream/#parameters_43","title":"Parameters","text":"Name Type <code>event</code> <code>\"drain\"</code> <code>listener</code> () =&gt; <code>void</code>"},{"location":"reference/classes/appium_support.mjpeg.MJpegStream/#returns_49","title":"Returns","text":"<p><code>MJpegStream</code></p>"},{"location":"reference/classes/appium_support.mjpeg.MJpegStream/#inherited-from_60","title":"Inherited from","text":"<p>Writable.prependListener</p>"},{"location":"reference/classes/appium_support.mjpeg.MJpegStream/#defined-in_73","title":"Defined in","text":"<p>node_modules/@types/node/ts4.8/stream.d.ts:801</p> <p>\u25b8 prependListener(<code>event</code>, <code>listener</code>): <code>MJpegStream</code></p>"},{"location":"reference/classes/appium_support.mjpeg.MJpegStream/#parameters_44","title":"Parameters","text":"Name Type <code>event</code> <code>\"error\"</code> <code>listener</code> (<code>err</code>: <code>Error</code>) =&gt; <code>void</code>"},{"location":"reference/classes/appium_support.mjpeg.MJpegStream/#returns_50","title":"Returns","text":"<p><code>MJpegStream</code></p>"},{"location":"reference/classes/appium_support.mjpeg.MJpegStream/#inherited-from_61","title":"Inherited from","text":"<p>Writable.prependListener</p>"},{"location":"reference/classes/appium_support.mjpeg.MJpegStream/#defined-in_74","title":"Defined in","text":"<p>node_modules/@types/node/ts4.8/stream.d.ts:802</p> <p>\u25b8 prependListener(<code>event</code>, <code>listener</code>): <code>MJpegStream</code></p>"},{"location":"reference/classes/appium_support.mjpeg.MJpegStream/#parameters_45","title":"Parameters","text":"Name Type <code>event</code> <code>\"finish\"</code> <code>listener</code> () =&gt; <code>void</code>"},{"location":"reference/classes/appium_support.mjpeg.MJpegStream/#returns_51","title":"Returns","text":"<p><code>MJpegStream</code></p>"},{"location":"reference/classes/appium_support.mjpeg.MJpegStream/#inherited-from_62","title":"Inherited from","text":"<p>Writable.prependListener</p>"},{"location":"reference/classes/appium_support.mjpeg.MJpegStream/#defined-in_75","title":"Defined in","text":"<p>node_modules/@types/node/ts4.8/stream.d.ts:803</p> <p>\u25b8 prependListener(<code>event</code>, <code>listener</code>): <code>MJpegStream</code></p>"},{"location":"reference/classes/appium_support.mjpeg.MJpegStream/#parameters_46","title":"Parameters","text":"Name Type <code>event</code> <code>\"pipe\"</code> <code>listener</code> (<code>src</code>: <code>Readable</code>) =&gt; <code>void</code>"},{"location":"reference/classes/appium_support.mjpeg.MJpegStream/#returns_52","title":"Returns","text":"<p><code>MJpegStream</code></p>"},{"location":"reference/classes/appium_support.mjpeg.MJpegStream/#inherited-from_63","title":"Inherited from","text":"<p>Writable.prependListener</p>"},{"location":"reference/classes/appium_support.mjpeg.MJpegStream/#defined-in_76","title":"Defined in","text":"<p>node_modules/@types/node/ts4.8/stream.d.ts:804</p> <p>\u25b8 prependListener(<code>event</code>, <code>listener</code>): <code>MJpegStream</code></p>"},{"location":"reference/classes/appium_support.mjpeg.MJpegStream/#parameters_47","title":"Parameters","text":"Name Type <code>event</code> <code>\"unpipe\"</code> <code>listener</code> (<code>src</code>: <code>Readable</code>) =&gt; <code>void</code>"},{"location":"reference/classes/appium_support.mjpeg.MJpegStream/#returns_53","title":"Returns","text":"<p><code>MJpegStream</code></p>"},{"location":"reference/classes/appium_support.mjpeg.MJpegStream/#inherited-from_64","title":"Inherited from","text":"<p>Writable.prependListener</p>"},{"location":"reference/classes/appium_support.mjpeg.MJpegStream/#defined-in_77","title":"Defined in","text":"<p>node_modules/@types/node/ts4.8/stream.d.ts:805</p> <p>\u25b8 prependListener(<code>event</code>, <code>listener</code>): <code>MJpegStream</code></p>"},{"location":"reference/classes/appium_support.mjpeg.MJpegStream/#parameters_48","title":"Parameters","text":"Name Type <code>event</code> <code>string</code> | <code>symbol</code> <code>listener</code> (...<code>args</code>: <code>any</code>[]) =&gt; <code>void</code>"},{"location":"reference/classes/appium_support.mjpeg.MJpegStream/#returns_54","title":"Returns","text":"<p><code>MJpegStream</code></p>"},{"location":"reference/classes/appium_support.mjpeg.MJpegStream/#inherited-from_65","title":"Inherited from","text":"<p>Writable.prependListener</p>"},{"location":"reference/classes/appium_support.mjpeg.MJpegStream/#defined-in_78","title":"Defined in","text":"<p>node_modules/@types/node/ts4.8/stream.d.ts:806</p>"},{"location":"reference/classes/appium_support.mjpeg.MJpegStream/#prependoncelistener","title":"prependOnceListener","text":"<p>\u25b8 prependOnceListener(<code>event</code>, <code>listener</code>): <code>MJpegStream</code></p>"},{"location":"reference/classes/appium_support.mjpeg.MJpegStream/#parameters_49","title":"Parameters","text":"Name Type <code>event</code> <code>\"close\"</code> <code>listener</code> () =&gt; <code>void</code>"},{"location":"reference/classes/appium_support.mjpeg.MJpegStream/#returns_55","title":"Returns","text":"<p><code>MJpegStream</code></p>"},{"location":"reference/classes/appium_support.mjpeg.MJpegStream/#inherited-from_66","title":"Inherited from","text":"<p>Writable.prependOnceListener</p>"},{"location":"reference/classes/appium_support.mjpeg.MJpegStream/#defined-in_79","title":"Defined in","text":"<p>node_modules/@types/node/ts4.8/stream.d.ts:807</p> <p>\u25b8 prependOnceListener(<code>event</code>, <code>listener</code>): <code>MJpegStream</code></p>"},{"location":"reference/classes/appium_support.mjpeg.MJpegStream/#parameters_50","title":"Parameters","text":"Name Type <code>event</code> <code>\"drain\"</code> <code>listener</code> () =&gt; <code>void</code>"},{"location":"reference/classes/appium_support.mjpeg.MJpegStream/#returns_56","title":"Returns","text":"<p><code>MJpegStream</code></p>"},{"location":"reference/classes/appium_support.mjpeg.MJpegStream/#inherited-from_67","title":"Inherited from","text":"<p>Writable.prependOnceListener</p>"},{"location":"reference/classes/appium_support.mjpeg.MJpegStream/#defined-in_80","title":"Defined in","text":"<p>node_modules/@types/node/ts4.8/stream.d.ts:808</p> <p>\u25b8 prependOnceListener(<code>event</code>, <code>listener</code>): <code>MJpegStream</code></p>"},{"location":"reference/classes/appium_support.mjpeg.MJpegStream/#parameters_51","title":"Parameters","text":"Name Type <code>event</code> <code>\"error\"</code> <code>listener</code> (<code>err</code>: <code>Error</code>) =&gt; <code>void</code>"},{"location":"reference/classes/appium_support.mjpeg.MJpegStream/#returns_57","title":"Returns","text":"<p><code>MJpegStream</code></p>"},{"location":"reference/classes/appium_support.mjpeg.MJpegStream/#inherited-from_68","title":"Inherited from","text":"<p>Writable.prependOnceListener</p>"},{"location":"reference/classes/appium_support.mjpeg.MJpegStream/#defined-in_81","title":"Defined in","text":"<p>node_modules/@types/node/ts4.8/stream.d.ts:809</p> <p>\u25b8 prependOnceListener(<code>event</code>, <code>listener</code>): <code>MJpegStream</code></p>"},{"location":"reference/classes/appium_support.mjpeg.MJpegStream/#parameters_52","title":"Parameters","text":"Name Type <code>event</code> <code>\"finish\"</code> <code>listener</code> () =&gt; <code>void</code>"},{"location":"reference/classes/appium_support.mjpeg.MJpegStream/#returns_58","title":"Returns","text":"<p><code>MJpegStream</code></p>"},{"location":"reference/classes/appium_support.mjpeg.MJpegStream/#inherited-from_69","title":"Inherited from","text":"<p>Writable.prependOnceListener</p>"},{"location":"reference/classes/appium_support.mjpeg.MJpegStream/#defined-in_82","title":"Defined in","text":"<p>node_modules/@types/node/ts4.8/stream.d.ts:810</p> <p>\u25b8 prependOnceListener(<code>event</code>, <code>listener</code>): <code>MJpegStream</code></p>"},{"location":"reference/classes/appium_support.mjpeg.MJpegStream/#parameters_53","title":"Parameters","text":"Name Type <code>event</code> <code>\"pipe\"</code> <code>listener</code> (<code>src</code>: <code>Readable</code>) =&gt; <code>void</code>"},{"location":"reference/classes/appium_support.mjpeg.MJpegStream/#returns_59","title":"Returns","text":"<p><code>MJpegStream</code></p>"},{"location":"reference/classes/appium_support.mjpeg.MJpegStream/#inherited-from_70","title":"Inherited from","text":"<p>Writable.prependOnceListener</p>"},{"location":"reference/classes/appium_support.mjpeg.MJpegStream/#defined-in_83","title":"Defined in","text":"<p>node_modules/@types/node/ts4.8/stream.d.ts:811</p> <p>\u25b8 prependOnceListener(<code>event</code>, <code>listener</code>): <code>MJpegStream</code></p>"},{"location":"reference/classes/appium_support.mjpeg.MJpegStream/#parameters_54","title":"Parameters","text":"Name Type <code>event</code> <code>\"unpipe\"</code> <code>listener</code> (<code>src</code>: <code>Readable</code>) =&gt; <code>void</code>"},{"location":"reference/classes/appium_support.mjpeg.MJpegStream/#returns_60","title":"Returns","text":"<p><code>MJpegStream</code></p>"},{"location":"reference/classes/appium_support.mjpeg.MJpegStream/#inherited-from_71","title":"Inherited from","text":"<p>Writable.prependOnceListener</p>"},{"location":"reference/classes/appium_support.mjpeg.MJpegStream/#defined-in_84","title":"Defined in","text":"<p>node_modules/@types/node/ts4.8/stream.d.ts:812</p> <p>\u25b8 prependOnceListener(<code>event</code>, <code>listener</code>): <code>MJpegStream</code></p>"},{"location":"reference/classes/appium_support.mjpeg.MJpegStream/#parameters_55","title":"Parameters","text":"Name Type <code>event</code> <code>string</code> | <code>symbol</code> <code>listener</code> (...<code>args</code>: <code>any</code>[]) =&gt; <code>void</code>"},{"location":"reference/classes/appium_support.mjpeg.MJpegStream/#returns_61","title":"Returns","text":"<p><code>MJpegStream</code></p>"},{"location":"reference/classes/appium_support.mjpeg.MJpegStream/#inherited-from_72","title":"Inherited from","text":"<p>Writable.prependOnceListener</p>"},{"location":"reference/classes/appium_support.mjpeg.MJpegStream/#defined-in_85","title":"Defined in","text":"<p>node_modules/@types/node/ts4.8/stream.d.ts:813</p>"},{"location":"reference/classes/appium_support.mjpeg.MJpegStream/#rawlisteners","title":"rawListeners","text":"<p>\u25b8 rawListeners(<code>eventName</code>): <code>Function</code>[]</p> <p>Returns a copy of the array of listeners for the event named <code>eventName</code>, including any wrappers (such as those created by <code>.once()</code>).</p> <pre><code>const emitter = new EventEmitter();\nemitter.once('log', () =&gt; console.log('log once'));\n// Returns a new Array with a function `onceWrapper` which has a property\n// `listener` which contains the original listener bound above\nconst listeners = emitter.rawListeners('log');\nconst logFnWrapper = listeners[0];\n// Logs \"log once\" to the console and does not unbind the `once` event\nlogFnWrapper.listener();\n// Logs \"log once\" to the console and removes the listener\nlogFnWrapper();\nemitter.on('log', () =&gt; console.log('log persistently'));\n// Will return a new Array with a single function bound by `.on()` above\nconst newListeners = emitter.rawListeners('log');\n// Logs \"log persistently\" twice\nnewListeners[0]();\nemitter.emit('log');\n</code></pre> <p><code>Since</code></p> <p>v9.4.0</p>"},{"location":"reference/classes/appium_support.mjpeg.MJpegStream/#parameters_56","title":"Parameters","text":"Name Type <code>eventName</code> <code>string</code> | <code>symbol</code>"},{"location":"reference/classes/appium_support.mjpeg.MJpegStream/#returns_62","title":"Returns","text":"<p><code>Function</code>[]</p>"},{"location":"reference/classes/appium_support.mjpeg.MJpegStream/#inherited-from_73","title":"Inherited from","text":"<p>Writable.rawListeners</p>"},{"location":"reference/classes/appium_support.mjpeg.MJpegStream/#defined-in_86","title":"Defined in","text":"<p>node_modules/@types/node/ts4.8/events.d.ts:569</p>"},{"location":"reference/classes/appium_support.mjpeg.MJpegStream/#removealllisteners","title":"removeAllListeners","text":"<p>\u25b8 removeAllListeners(<code>event?</code>): <code>MJpegStream</code></p> <p>Removes all listeners, or those of the specified <code>eventName</code>.</p> <p>It is bad practice to remove listeners added elsewhere in the code, particularly when the <code>EventEmitter</code> instance was created by some other component or module (e.g. sockets or file streams).</p> <p>Returns a reference to the <code>EventEmitter</code>, so that calls can be chained.</p> <p><code>Since</code></p> <p>v0.1.26</p>"},{"location":"reference/classes/appium_support.mjpeg.MJpegStream/#parameters_57","title":"Parameters","text":"Name Type <code>event?</code> <code>string</code> | <code>symbol</code>"},{"location":"reference/classes/appium_support.mjpeg.MJpegStream/#returns_63","title":"Returns","text":"<p><code>MJpegStream</code></p>"},{"location":"reference/classes/appium_support.mjpeg.MJpegStream/#inherited-from_74","title":"Inherited from","text":"<p>Writable.removeAllListeners</p>"},{"location":"reference/classes/appium_support.mjpeg.MJpegStream/#defined-in_87","title":"Defined in","text":"<p>node_modules/@types/node/ts4.8/events.d.ts:510</p>"},{"location":"reference/classes/appium_support.mjpeg.MJpegStream/#removelistener","title":"removeListener","text":"<p>\u25b8 removeListener(<code>event</code>, <code>listener</code>): <code>MJpegStream</code></p>"},{"location":"reference/classes/appium_support.mjpeg.MJpegStream/#parameters_58","title":"Parameters","text":"Name Type <code>event</code> <code>\"close\"</code> <code>listener</code> () =&gt; <code>void</code>"},{"location":"reference/classes/appium_support.mjpeg.MJpegStream/#returns_64","title":"Returns","text":"<p><code>MJpegStream</code></p>"},{"location":"reference/classes/appium_support.mjpeg.MJpegStream/#inherited-from_75","title":"Inherited from","text":"<p>Writable.removeListener</p>"},{"location":"reference/classes/appium_support.mjpeg.MJpegStream/#defined-in_88","title":"Defined in","text":"<p>node_modules/@types/node/ts4.8/stream.d.ts:814</p> <p>\u25b8 removeListener(<code>event</code>, <code>listener</code>): <code>MJpegStream</code></p>"},{"location":"reference/classes/appium_support.mjpeg.MJpegStream/#parameters_59","title":"Parameters","text":"Name Type <code>event</code> <code>\"drain\"</code> <code>listener</code> () =&gt; <code>void</code>"},{"location":"reference/classes/appium_support.mjpeg.MJpegStream/#returns_65","title":"Returns","text":"<p><code>MJpegStream</code></p>"},{"location":"reference/classes/appium_support.mjpeg.MJpegStream/#inherited-from_76","title":"Inherited from","text":"<p>Writable.removeListener</p>"},{"location":"reference/classes/appium_support.mjpeg.MJpegStream/#defined-in_89","title":"Defined in","text":"<p>node_modules/@types/node/ts4.8/stream.d.ts:815</p> <p>\u25b8 removeListener(<code>event</code>, <code>listener</code>): <code>MJpegStream</code></p>"},{"location":"reference/classes/appium_support.mjpeg.MJpegStream/#parameters_60","title":"Parameters","text":"Name Type <code>event</code> <code>\"error\"</code> <code>listener</code> (<code>err</code>: <code>Error</code>) =&gt; <code>void</code>"},{"location":"reference/classes/appium_support.mjpeg.MJpegStream/#returns_66","title":"Returns","text":"<p><code>MJpegStream</code></p>"},{"location":"reference/classes/appium_support.mjpeg.MJpegStream/#inherited-from_77","title":"Inherited from","text":"<p>Writable.removeListener</p>"},{"location":"reference/classes/appium_support.mjpeg.MJpegStream/#defined-in_90","title":"Defined in","text":"<p>node_modules/@types/node/ts4.8/stream.d.ts:816</p> <p>\u25b8 removeListener(<code>event</code>, <code>listener</code>): <code>MJpegStream</code></p>"},{"location":"reference/classes/appium_support.mjpeg.MJpegStream/#parameters_61","title":"Parameters","text":"Name Type <code>event</code> <code>\"finish\"</code> <code>listener</code> () =&gt; <code>void</code>"},{"location":"reference/classes/appium_support.mjpeg.MJpegStream/#returns_67","title":"Returns","text":"<p><code>MJpegStream</code></p>"},{"location":"reference/classes/appium_support.mjpeg.MJpegStream/#inherited-from_78","title":"Inherited from","text":"<p>Writable.removeListener</p>"},{"location":"reference/classes/appium_support.mjpeg.MJpegStream/#defined-in_91","title":"Defined in","text":"<p>node_modules/@types/node/ts4.8/stream.d.ts:817</p> <p>\u25b8 removeListener(<code>event</code>, <code>listener</code>): <code>MJpegStream</code></p>"},{"location":"reference/classes/appium_support.mjpeg.MJpegStream/#parameters_62","title":"Parameters","text":"Name Type <code>event</code> <code>\"pipe\"</code> <code>listener</code> (<code>src</code>: <code>Readable</code>) =&gt; <code>void</code>"},{"location":"reference/classes/appium_support.mjpeg.MJpegStream/#returns_68","title":"Returns","text":"<p><code>MJpegStream</code></p>"},{"location":"reference/classes/appium_support.mjpeg.MJpegStream/#inherited-from_79","title":"Inherited from","text":"<p>Writable.removeListener</p>"},{"location":"reference/classes/appium_support.mjpeg.MJpegStream/#defined-in_92","title":"Defined in","text":"<p>node_modules/@types/node/ts4.8/stream.d.ts:818</p> <p>\u25b8 removeListener(<code>event</code>, <code>listener</code>): <code>MJpegStream</code></p>"},{"location":"reference/classes/appium_support.mjpeg.MJpegStream/#parameters_63","title":"Parameters","text":"Name Type <code>event</code> <code>\"unpipe\"</code> <code>listener</code> (<code>src</code>: <code>Readable</code>) =&gt; <code>void</code>"},{"location":"reference/classes/appium_support.mjpeg.MJpegStream/#returns_69","title":"Returns","text":"<p><code>MJpegStream</code></p>"},{"location":"reference/classes/appium_support.mjpeg.MJpegStream/#inherited-from_80","title":"Inherited from","text":"<p>Writable.removeListener</p>"},{"location":"reference/classes/appium_support.mjpeg.MJpegStream/#defined-in_93","title":"Defined in","text":"<p>node_modules/@types/node/ts4.8/stream.d.ts:819</p> <p>\u25b8 removeListener(<code>event</code>, <code>listener</code>): <code>MJpegStream</code></p>"},{"location":"reference/classes/appium_support.mjpeg.MJpegStream/#parameters_64","title":"Parameters","text":"Name Type <code>event</code> <code>string</code> | <code>symbol</code> <code>listener</code> (...<code>args</code>: <code>any</code>[]) =&gt; <code>void</code>"},{"location":"reference/classes/appium_support.mjpeg.MJpegStream/#returns_70","title":"Returns","text":"<p><code>MJpegStream</code></p>"},{"location":"reference/classes/appium_support.mjpeg.MJpegStream/#inherited-from_81","title":"Inherited from","text":"<p>Writable.removeListener</p>"},{"location":"reference/classes/appium_support.mjpeg.MJpegStream/#defined-in_94","title":"Defined in","text":"<p>node_modules/@types/node/ts4.8/stream.d.ts:820</p>"},{"location":"reference/classes/appium_support.mjpeg.MJpegStream/#setdefaultencoding","title":"setDefaultEncoding","text":"<p>\u25b8 setDefaultEncoding(<code>encoding</code>): <code>MJpegStream</code></p> <p>The <code>writable.setDefaultEncoding()</code> method sets the default <code>encoding</code> for a <code>Writable</code> stream.</p> <p><code>Since</code></p> <p>v0.11.15</p>"},{"location":"reference/classes/appium_support.mjpeg.MJpegStream/#parameters_65","title":"Parameters","text":"Name Type Description <code>encoding</code> <code>BufferEncoding</code> The new default encoding"},{"location":"reference/classes/appium_support.mjpeg.MJpegStream/#returns_71","title":"Returns","text":"<p><code>MJpegStream</code></p>"},{"location":"reference/classes/appium_support.mjpeg.MJpegStream/#inherited-from_82","title":"Inherited from","text":"<p>Writable.setDefaultEncoding</p>"},{"location":"reference/classes/appium_support.mjpeg.MJpegStream/#defined-in_95","title":"Defined in","text":"<p>node_modules/@types/node/ts4.8/stream.d.ts:670</p>"},{"location":"reference/classes/appium_support.mjpeg.MJpegStream/#setmaxlisteners","title":"setMaxListeners","text":"<p>\u25b8 setMaxListeners(<code>n</code>): <code>MJpegStream</code></p> <p>By default <code>EventEmitter</code>s will print a warning if more than <code>10</code> listeners are added for a particular event. This is a useful default that helps finding memory leaks. The <code>emitter.setMaxListeners()</code> method allows the limit to be modified for this specific <code>EventEmitter</code> instance. The value can be set to<code>Infinity</code> (or <code>0</code>) to indicate an unlimited number of listeners.</p> <p>Returns a reference to the <code>EventEmitter</code>, so that calls can be chained.</p> <p><code>Since</code></p> <p>v0.3.5</p>"},{"location":"reference/classes/appium_support.mjpeg.MJpegStream/#parameters_66","title":"Parameters","text":"Name Type <code>n</code> <code>number</code>"},{"location":"reference/classes/appium_support.mjpeg.MJpegStream/#returns_72","title":"Returns","text":"<p><code>MJpegStream</code></p>"},{"location":"reference/classes/appium_support.mjpeg.MJpegStream/#inherited-from_83","title":"Inherited from","text":"<p>Writable.setMaxListeners</p>"},{"location":"reference/classes/appium_support.mjpeg.MJpegStream/#defined-in_96","title":"Defined in","text":"<p>node_modules/@types/node/ts4.8/events.d.ts:520</p>"},{"location":"reference/classes/appium_support.mjpeg.MJpegStream/#start","title":"start","text":"<p>\u25b8 start(<code>serverTimeout?</code>): <code>Promise</code>&lt;<code>void</code>&gt;</p> <p>Start reading the MJpeg stream and storing the last image</p>"},{"location":"reference/classes/appium_support.mjpeg.MJpegStream/#parameters_67","title":"Parameters","text":"Name Type Default value <code>serverTimeout</code> <code>number</code> <code>MJPEG_SERVER_TIMEOUT_MS</code>"},{"location":"reference/classes/appium_support.mjpeg.MJpegStream/#returns_73","title":"Returns","text":"<p><code>Promise</code>&lt;<code>void</code>&gt;</p>"},{"location":"reference/classes/appium_support.mjpeg.MJpegStream/#defined-in_97","title":"Defined in","text":"<p>packages/support/lib/mjpeg.js:113</p>"},{"location":"reference/classes/appium_support.mjpeg.MJpegStream/#stop","title":"stop","text":"<p>\u25b8 stop(): <code>void</code></p> <p>Stop reading the MJpeg stream. Ensure we disconnect all the pipes and stop the HTTP request itself. Then reset the state.</p>"},{"location":"reference/classes/appium_support.mjpeg.MJpegStream/#returns_74","title":"Returns","text":"<p><code>void</code></p>"},{"location":"reference/classes/appium_support.mjpeg.MJpegStream/#defined-in_98","title":"Defined in","text":"<p>packages/support/lib/mjpeg.js:175</p>"},{"location":"reference/classes/appium_support.mjpeg.MJpegStream/#uncork","title":"uncork","text":"<p>\u25b8 uncork(): <code>void</code></p> <p>The <code>writable.uncork()</code> method flushes all data buffered since cork was called.</p> <p>When using <code>writable.cork()</code> and <code>writable.uncork()</code> to manage the buffering of writes to a stream, defer calls to <code>writable.uncork()</code> using<code>process.nextTick()</code>. Doing so allows batching of all<code>writable.write()</code> calls that occur within a given Node.js event loop phase.</p> <pre><code>stream.cork();\nstream.write('some ');\nstream.write('data ');\nprocess.nextTick(() =&gt; stream.uncork());\n</code></pre> <p>If the <code>writable.cork()</code> method is called multiple times on a stream, the same number of calls to <code>writable.uncork()</code> must be called to flush the buffered data.</p> <pre><code>stream.cork();\nstream.write('some ');\nstream.cork();\nstream.write('data ');\nprocess.nextTick(() =&gt; {\nstream.uncork();\n// The data will not be flushed until uncork() is called a second time.\nstream.uncork();\n});\n</code></pre> <p>See also: <code>writable.cork()</code>.</p> <p><code>Since</code></p> <p>v0.11.2</p>"},{"location":"reference/classes/appium_support.mjpeg.MJpegStream/#returns_75","title":"Returns","text":"<p><code>void</code></p>"},{"location":"reference/classes/appium_support.mjpeg.MJpegStream/#inherited-from_84","title":"Inherited from","text":"<p>Writable.uncork</p>"},{"location":"reference/classes/appium_support.mjpeg.MJpegStream/#defined-in_99","title":"Defined in","text":"<p>node_modules/@types/node/ts4.8/stream.d.ts:744</p>"},{"location":"reference/classes/appium_support.mjpeg.MJpegStream/#write","title":"write","text":"<p>\u25b8 write(<code>data</code>): <code>boolean</code></p> <p>Override the Writable write() method in order to save the last image and log the number of images we have received</p>"},{"location":"reference/classes/appium_support.mjpeg.MJpegStream/#parameters_68","title":"Parameters","text":"Name Type Description <code>data</code> <code>Buffer</code> binary data streamed from the MJpeg consumer"},{"location":"reference/classes/appium_support.mjpeg.MJpegStream/#returns_76","title":"Returns","text":"<p><code>boolean</code></p>"},{"location":"reference/classes/appium_support.mjpeg.MJpegStream/#overrides_1","title":"Overrides","text":"<p>Writable.write</p>"},{"location":"reference/classes/appium_support.mjpeg.MJpegStream/#defined-in_100","title":"Defined in","text":"<p>packages/support/lib/mjpeg.js:192</p>"},{"location":"reference/classes/appium_support.mjpeg.MJpegStream/#fromweb","title":"fromWeb","text":"<p>\u25b8 <code>Static</code> fromWeb(<code>writableStream</code>, <code>options?</code>): <code>Writable</code></p> <p>A utility method for creating a <code>Writable</code> from a web <code>WritableStream</code>.</p> <p><code>Since</code></p> <p>v17.0.0</p>"},{"location":"reference/classes/appium_support.mjpeg.MJpegStream/#parameters_69","title":"Parameters","text":"Name Type <code>writableStream</code> <code>WritableStream</code>&lt;<code>any</code>&gt; <code>options?</code> <code>Pick</code>&lt;<code>WritableOptions</code>, <code>\"signal\"</code> | <code>\"decodeStrings\"</code> | <code>\"highWaterMark\"</code> | <code>\"objectMode\"</code>&gt;"},{"location":"reference/classes/appium_support.mjpeg.MJpegStream/#returns_77","title":"Returns","text":"<p><code>Writable</code></p>"},{"location":"reference/classes/appium_support.mjpeg.MJpegStream/#inherited-from_85","title":"Inherited from","text":"<p>Writable.fromWeb</p>"},{"location":"reference/classes/appium_support.mjpeg.MJpegStream/#defined-in_101","title":"Defined in","text":"<p>node_modules/@types/node/ts4.8/stream.d.ts:528</p>"},{"location":"reference/classes/appium_support.mjpeg.MJpegStream/#geteventlisteners","title":"getEventListeners","text":"<p>\u25b8 <code>Static</code> getEventListeners(<code>emitter</code>, <code>name</code>): <code>Function</code>[]</p> <p>Returns a copy of the array of listeners for the event named <code>eventName</code>.</p> <p>For <code>EventEmitter</code>s this behaves exactly the same as calling <code>.listeners</code> on the emitter.</p> <p>For <code>EventTarget</code>s this is the only way to get the event listeners for the event target. This is useful for debugging and diagnostic purposes.</p> <pre><code>const { getEventListeners, EventEmitter } = require('events');\n{\nconst ee = new EventEmitter();\nconst listener = () =&gt; console.log('Events are fun');\nee.on('foo', listener);\ngetEventListeners(ee, 'foo'); // [listener]\n}\n{\nconst et = new EventTarget();\nconst listener = () =&gt; console.log('Events are fun');\net.addEventListener('foo', listener);\ngetEventListeners(et, 'foo'); // [listener]\n}\n</code></pre> <p><code>Since</code></p> <p>v15.2.0, v14.17.0</p>"},{"location":"reference/classes/appium_support.mjpeg.MJpegStream/#parameters_70","title":"Parameters","text":"Name Type <code>emitter</code> <code>EventEmitter</code> | <code>_DOMEventTarget</code> <code>name</code> <code>string</code> | <code>symbol</code>"},{"location":"reference/classes/appium_support.mjpeg.MJpegStream/#returns_78","title":"Returns","text":"<p><code>Function</code>[]</p>"},{"location":"reference/classes/appium_support.mjpeg.MJpegStream/#inherited-from_86","title":"Inherited from","text":"<p>Writable.getEventListeners</p>"},{"location":"reference/classes/appium_support.mjpeg.MJpegStream/#defined-in_102","title":"Defined in","text":"<p>node_modules/@types/node/ts4.8/events.d.ts:299</p>"},{"location":"reference/classes/appium_support.mjpeg.MJpegStream/#listenercount_1","title":"listenerCount","text":"<p>\u25b8 <code>Static</code> listenerCount(<code>emitter</code>, <code>eventName</code>): <code>number</code></p> <p>A class method that returns the number of listeners for the given <code>eventName</code>registered on the given <code>emitter</code>.</p> <pre><code>const { EventEmitter, listenerCount } = require('events');\nconst myEmitter = new EventEmitter();\nmyEmitter.on('event', () =&gt; {});\nmyEmitter.on('event', () =&gt; {});\nconsole.log(listenerCount(myEmitter, 'event'));\n// Prints: 2\n</code></pre> <p><code>Since</code></p> <p>v0.9.12</p> <p><code>Deprecated</code></p> <p>Since v3.2.0 - Use <code>listenerCount</code> instead.</p>"},{"location":"reference/classes/appium_support.mjpeg.MJpegStream/#parameters_71","title":"Parameters","text":"Name Type Description <code>emitter</code> <code>EventEmitter</code> The emitter to query <code>eventName</code> <code>string</code> | <code>symbol</code> The event name"},{"location":"reference/classes/appium_support.mjpeg.MJpegStream/#returns_79","title":"Returns","text":"<p><code>number</code></p>"},{"location":"reference/classes/appium_support.mjpeg.MJpegStream/#inherited-from_87","title":"Inherited from","text":"<p>Writable.listenerCount</p>"},{"location":"reference/classes/appium_support.mjpeg.MJpegStream/#defined-in_103","title":"Defined in","text":"<p>node_modules/@types/node/ts4.8/events.d.ts:271</p>"},{"location":"reference/classes/appium_support.mjpeg.MJpegStream/#on_1","title":"on","text":"<p>\u25b8 <code>Static</code> on(<code>emitter</code>, <code>eventName</code>, <code>options?</code>): <code>AsyncIterableIterator</code>&lt;<code>any</code>&gt;</p> <pre><code>const { on, EventEmitter } = require('events');\n(async () =&gt; {\nconst ee = new EventEmitter();\n// Emit later on\nprocess.nextTick(() =&gt; {\nee.emit('foo', 'bar');\nee.emit('foo', 42);\n});\nfor await (const event of on(ee, 'foo')) {\n// The execution of this inner block is synchronous and it\n// processes one event at a time (even with await). Do not use\n// if concurrent execution is required.\nconsole.log(event); // prints ['bar'] [42]\n}\n// Unreachable here\n})();\n</code></pre> <p>Returns an <code>AsyncIterator</code> that iterates <code>eventName</code> events. It will throw if the <code>EventEmitter</code> emits <code>'error'</code>. It removes all listeners when exiting the loop. The <code>value</code> returned by each iteration is an array composed of the emitted event arguments.</p> <p>An <code>AbortSignal</code> can be used to cancel waiting on events:</p> <pre><code>const { on, EventEmitter } = require('events');\nconst ac = new AbortController();\n(async () =&gt; {\nconst ee = new EventEmitter();\n// Emit later on\nprocess.nextTick(() =&gt; {\nee.emit('foo', 'bar');\nee.emit('foo', 42);\n});\nfor await (const event of on(ee, 'foo', { signal: ac.signal })) {\n// The execution of this inner block is synchronous and it\n// processes one event at a time (even with await). Do not use\n// if concurrent execution is required.\nconsole.log(event); // prints ['bar'] [42]\n}\n// Unreachable here\n})();\nprocess.nextTick(() =&gt; ac.abort());\n</code></pre> <p><code>Since</code></p> <p>v13.6.0, v12.16.0</p>"},{"location":"reference/classes/appium_support.mjpeg.MJpegStream/#parameters_72","title":"Parameters","text":"Name Type Description <code>emitter</code> <code>EventEmitter</code> - <code>eventName</code> <code>string</code> The name of the event being listened for <code>options?</code> <code>StaticEventEmitterOptions</code> -"},{"location":"reference/classes/appium_support.mjpeg.MJpegStream/#returns_80","title":"Returns","text":"<p><code>AsyncIterableIterator</code>&lt;<code>any</code>&gt;</p> <p>that iterates <code>eventName</code> events emitted by the <code>emitter</code></p>"},{"location":"reference/classes/appium_support.mjpeg.MJpegStream/#inherited-from_88","title":"Inherited from","text":"<p>Writable.on</p>"},{"location":"reference/classes/appium_support.mjpeg.MJpegStream/#defined-in_104","title":"Defined in","text":"<p>node_modules/@types/node/ts4.8/events.d.ts:254</p>"},{"location":"reference/classes/appium_support.mjpeg.MJpegStream/#once_1","title":"once","text":"<p>\u25b8 <code>Static</code> once(<code>emitter</code>, <code>eventName</code>, <code>options?</code>): <code>Promise</code>&lt;<code>any</code>[]&gt;</p> <p>Creates a <code>Promise</code> that is fulfilled when the <code>EventEmitter</code> emits the given event or that is rejected if the <code>EventEmitter</code> emits <code>'error'</code> while waiting. The <code>Promise</code> will resolve with an array of all the arguments emitted to the given event.</p> <p>This method is intentionally generic and works with the web platform EventTarget interface, which has no special<code>'error'</code> event semantics and does not listen to the <code>'error'</code> event.</p> <pre><code>const { once, EventEmitter } = require('events');\nasync function run() {\nconst ee = new EventEmitter();\nprocess.nextTick(() =&gt; {\nee.emit('myevent', 42);\n});\nconst [value] = await once(ee, 'myevent');\nconsole.log(value);\nconst err = new Error('kaboom');\nprocess.nextTick(() =&gt; {\nee.emit('error', err);\n});\ntry {\nawait once(ee, 'myevent');\n} catch (err) {\nconsole.log('error happened', err);\n}\n}\nrun();\n</code></pre> <p>The special handling of the <code>'error'</code> event is only used when <code>events.once()</code>is used to wait for another event. If <code>events.once()</code> is used to wait for the '<code>error'</code> event itself, then it is treated as any other kind of event without special handling:</p> <pre><code>const { EventEmitter, once } = require('events');\nconst ee = new EventEmitter();\nonce(ee, 'error')\n.then(([err]) =&gt; console.log('ok', err.message))\n.catch((err) =&gt; console.log('error', err.message));\nee.emit('error', new Error('boom'));\n// Prints: ok boom\n</code></pre> <p>An <code>AbortSignal</code> can be used to cancel waiting for the event:</p> <pre><code>const { EventEmitter, once } = require('events');\nconst ee = new EventEmitter();\nconst ac = new AbortController();\nasync function foo(emitter, event, signal) {\ntry {\nawait once(emitter, event, { signal });\nconsole.log('event emitted!');\n} catch (error) {\nif (error.name === 'AbortError') {\nconsole.error('Waiting for the event was canceled!');\n} else {\nconsole.error('There was an error', error.message);\n}\n}\n}\nfoo(ee, 'foo', ac.signal);\nac.abort(); // Abort waiting for the event\nee.emit('foo'); // Prints: Waiting for the event was canceled!\n</code></pre> <p><code>Since</code></p> <p>v11.13.0, v10.16.0</p>"},{"location":"reference/classes/appium_support.mjpeg.MJpegStream/#parameters_73","title":"Parameters","text":"Name Type <code>emitter</code> <code>_NodeEventTarget</code> <code>eventName</code> <code>string</code> | <code>symbol</code> <code>options?</code> <code>StaticEventEmitterOptions</code>"},{"location":"reference/classes/appium_support.mjpeg.MJpegStream/#returns_81","title":"Returns","text":"<p><code>Promise</code>&lt;<code>any</code>[]&gt;</p>"},{"location":"reference/classes/appium_support.mjpeg.MJpegStream/#inherited-from_89","title":"Inherited from","text":"<p>Writable.once</p>"},{"location":"reference/classes/appium_support.mjpeg.MJpegStream/#defined-in_105","title":"Defined in","text":"<p>node_modules/@types/node/ts4.8/events.d.ts:194</p> <p>\u25b8 <code>Static</code> once(<code>emitter</code>, <code>eventName</code>, <code>options?</code>): <code>Promise</code>&lt;<code>any</code>[]&gt;</p>"},{"location":"reference/classes/appium_support.mjpeg.MJpegStream/#parameters_74","title":"Parameters","text":"Name Type <code>emitter</code> <code>_DOMEventTarget</code> <code>eventName</code> <code>string</code> <code>options?</code> <code>StaticEventEmitterOptions</code>"},{"location":"reference/classes/appium_support.mjpeg.MJpegStream/#returns_82","title":"Returns","text":"<p><code>Promise</code>&lt;<code>any</code>[]&gt;</p>"},{"location":"reference/classes/appium_support.mjpeg.MJpegStream/#inherited-from_90","title":"Inherited from","text":"<p>Writable.once</p>"},{"location":"reference/classes/appium_support.mjpeg.MJpegStream/#defined-in_106","title":"Defined in","text":"<p>node_modules/@types/node/ts4.8/events.d.ts:195</p>"},{"location":"reference/classes/appium_support.mjpeg.MJpegStream/#setmaxlisteners_1","title":"setMaxListeners","text":"<p>\u25b8 <code>Static</code> setMaxListeners(<code>n?</code>, <code>...eventTargets</code>): <code>void</code></p> <pre><code>const {\nsetMaxListeners,\nEventEmitter\n} = require('events');\nconst target = new EventTarget();\nconst emitter = new EventEmitter();\nsetMaxListeners(5, target, emitter);\n</code></pre> <p><code>Since</code></p> <p>v15.4.0</p>"},{"location":"reference/classes/appium_support.mjpeg.MJpegStream/#parameters_75","title":"Parameters","text":"Name Type Description <code>n?</code> <code>number</code> A non-negative number. The maximum number of listeners per <code>EventTarget</code> event. <code>...eventTargets</code> (<code>EventEmitter</code> | <code>_DOMEventTarget</code>)[] -"},{"location":"reference/classes/appium_support.mjpeg.MJpegStream/#returns_83","title":"Returns","text":"<p><code>void</code></p>"},{"location":"reference/classes/appium_support.mjpeg.MJpegStream/#inherited-from_91","title":"Inherited from","text":"<p>Writable.setMaxListeners</p>"},{"location":"reference/classes/appium_support.mjpeg.MJpegStream/#defined-in_107","title":"Defined in","text":"<p>node_modules/@types/node/ts4.8/events.d.ts:317</p>"},{"location":"reference/classes/appium_support.mjpeg.MJpegStream/#toweb","title":"toWeb","text":"<p>\u25b8 <code>Static</code> toWeb(<code>streamWritable</code>): <code>WritableStream</code>&lt;<code>any</code>&gt;</p> <p>A utility method for creating a web <code>WritableStream</code> from a <code>Writable</code>.</p> <p><code>Since</code></p> <p>v17.0.0</p>"},{"location":"reference/classes/appium_support.mjpeg.MJpegStream/#parameters_76","title":"Parameters","text":"Name Type <code>streamWritable</code> <code>Writable</code>"},{"location":"reference/classes/appium_support.mjpeg.MJpegStream/#returns_84","title":"Returns","text":"<p><code>WritableStream</code>&lt;<code>any</code>&gt;</p>"},{"location":"reference/classes/appium_support.mjpeg.MJpegStream/#inherited-from_92","title":"Inherited from","text":"<p>Writable.toWeb</p>"},{"location":"reference/classes/appium_support.mjpeg.MJpegStream/#defined-in_108","title":"Defined in","text":"<p>node_modules/@types/node/ts4.8/stream.d.ts:534</p>"},{"location":"reference/classes/appium_support.timing.Duration/","title":"Class: Duration","text":"<p>@appium/support.timing.Duration</p> <p>Class representing a duration, encapsulating the number and units.</p>"},{"location":"reference/classes/appium_support.timing.Duration/#table-of-contents","title":"Table of contents","text":""},{"location":"reference/classes/appium_support.timing.Duration/#constructors","title":"Constructors","text":"<ul> <li>constructor</li> </ul>"},{"location":"reference/classes/appium_support.timing.Duration/#properties","title":"Properties","text":"<ul> <li>_nanos</li> </ul>"},{"location":"reference/classes/appium_support.timing.Duration/#accessors","title":"Accessors","text":"<ul> <li>asMilliSeconds</li> <li>asNanoSeconds</li> <li>asSeconds</li> <li>nanos</li> </ul>"},{"location":"reference/classes/appium_support.timing.Duration/#methods","title":"Methods","text":"<ul> <li>toString</li> </ul>"},{"location":"reference/classes/appium_support.timing.Duration/#constructors_1","title":"Constructors","text":""},{"location":"reference/classes/appium_support.timing.Duration/#constructor","title":"constructor","text":"<p>\u2022 new Duration(<code>nanos</code>)</p>"},{"location":"reference/classes/appium_support.timing.Duration/#parameters","title":"Parameters","text":"Name Type <code>nanos</code> <code>any</code>"},{"location":"reference/classes/appium_support.timing.Duration/#defined-in","title":"Defined in","text":"<p>packages/support/lib/timing.js:10</p>"},{"location":"reference/classes/appium_support.timing.Duration/#properties_1","title":"Properties","text":""},{"location":"reference/classes/appium_support.timing.Duration/#_nanos","title":"_nanos","text":"<p>\u2022 _nanos: <code>any</code></p>"},{"location":"reference/classes/appium_support.timing.Duration/#defined-in_1","title":"Defined in","text":"<p>packages/support/lib/timing.js:11</p>"},{"location":"reference/classes/appium_support.timing.Duration/#accessors_1","title":"Accessors","text":""},{"location":"reference/classes/appium_support.timing.Duration/#asmilliseconds","title":"asMilliSeconds","text":"<p>\u2022 <code>get</code> asMilliSeconds(): <code>number</code></p> <p>Get the duration converted into milliseconds</p>"},{"location":"reference/classes/appium_support.timing.Duration/#returns","title":"Returns","text":"<p><code>number</code></p> <p>The duration as milliseconds</p>"},{"location":"reference/classes/appium_support.timing.Duration/#defined-in_2","title":"Defined in","text":"<p>packages/support/lib/timing.js:32</p>"},{"location":"reference/classes/appium_support.timing.Duration/#asnanoseconds","title":"asNanoSeconds","text":"<p>\u2022 <code>get</code> asNanoSeconds(): <code>number</code></p> <p>Get the duration as nanoseconds</p>"},{"location":"reference/classes/appium_support.timing.Duration/#returns_1","title":"Returns","text":"<p><code>number</code></p> <p>The duration as nanoseconds</p>"},{"location":"reference/classes/appium_support.timing.Duration/#defined-in_3","title":"Defined in","text":"<p>packages/support/lib/timing.js:23</p>"},{"location":"reference/classes/appium_support.timing.Duration/#asseconds","title":"asSeconds","text":"<p>\u2022 <code>get</code> asSeconds(): <code>number</code></p> <p>Get the duration converted into seconds</p>"},{"location":"reference/classes/appium_support.timing.Duration/#returns_2","title":"Returns","text":"<p><code>number</code></p> <p>The duration fas seconds</p>"},{"location":"reference/classes/appium_support.timing.Duration/#defined-in_4","title":"Defined in","text":"<p>packages/support/lib/timing.js:41</p>"},{"location":"reference/classes/appium_support.timing.Duration/#nanos","title":"nanos","text":"<p>\u2022 <code>get</code> nanos(): <code>any</code></p>"},{"location":"reference/classes/appium_support.timing.Duration/#returns_3","title":"Returns","text":"<p><code>any</code></p>"},{"location":"reference/classes/appium_support.timing.Duration/#defined-in_5","title":"Defined in","text":"<p>packages/support/lib/timing.js:14</p>"},{"location":"reference/classes/appium_support.timing.Duration/#methods_1","title":"Methods","text":""},{"location":"reference/classes/appium_support.timing.Duration/#tostring","title":"toString","text":"<p>\u25b8 toString(): <code>string</code></p>"},{"location":"reference/classes/appium_support.timing.Duration/#returns_4","title":"Returns","text":"<p><code>string</code></p>"},{"location":"reference/classes/appium_support.timing.Duration/#defined-in_6","title":"Defined in","text":"<p>packages/support/lib/timing.js:45</p>"},{"location":"reference/classes/appium_support.timing.Timer/","title":"Class: Timer","text":"<p>@appium/support.timing.Timer</p>"},{"location":"reference/classes/appium_support.timing.Timer/#table-of-contents","title":"Table of contents","text":""},{"location":"reference/classes/appium_support.timing.Timer/#constructors","title":"Constructors","text":"<ul> <li>constructor</li> </ul>"},{"location":"reference/classes/appium_support.timing.Timer/#properties","title":"Properties","text":"<ul> <li>_startTime</li> </ul>"},{"location":"reference/classes/appium_support.timing.Timer/#accessors","title":"Accessors","text":"<ul> <li>startTime</li> </ul>"},{"location":"reference/classes/appium_support.timing.Timer/#methods","title":"Methods","text":"<ul> <li>getDuration</li> <li>start</li> <li>toString</li> </ul>"},{"location":"reference/classes/appium_support.timing.Timer/#constructors_1","title":"Constructors","text":""},{"location":"reference/classes/appium_support.timing.Timer/#constructor","title":"constructor","text":"<p>\u2022 new Timer()</p> <p>Creates a timer</p>"},{"location":"reference/classes/appium_support.timing.Timer/#defined-in","title":"Defined in","text":"<p>packages/support/lib/timing.js:55</p>"},{"location":"reference/classes/appium_support.timing.Timer/#properties_1","title":"Properties","text":""},{"location":"reference/classes/appium_support.timing.Timer/#_starttime","title":"_startTime","text":"<p>\u2022 _startTime: <code>null</code> | <code>bigint</code> | [<code>number</code>, <code>number</code>]</p>"},{"location":"reference/classes/appium_support.timing.Timer/#defined-in_1","title":"Defined in","text":"<p>packages/support/lib/timing.js:56</p> <p>packages/support/lib/timing.js:73</p>"},{"location":"reference/classes/appium_support.timing.Timer/#accessors_1","title":"Accessors","text":""},{"location":"reference/classes/appium_support.timing.Timer/#starttime","title":"startTime","text":"<p>\u2022 <code>get</code> startTime(): <code>null</code> | <code>bigint</code> | [<code>number</code>, <code>number</code>]</p>"},{"location":"reference/classes/appium_support.timing.Timer/#returns","title":"Returns","text":"<p><code>null</code> | <code>bigint</code> | [<code>number</code>, <code>number</code>]</p>"},{"location":"reference/classes/appium_support.timing.Timer/#defined-in_2","title":"Defined in","text":"<p>packages/support/lib/timing.js:59</p>"},{"location":"reference/classes/appium_support.timing.Timer/#methods_1","title":"Methods","text":""},{"location":"reference/classes/appium_support.timing.Timer/#getduration","title":"getDuration","text":"<p>\u25b8 getDuration(): <code>Duration</code></p> <p>Get the duration since the timer was started</p>"},{"location":"reference/classes/appium_support.timing.Timer/#returns_1","title":"Returns","text":"<p><code>Duration</code></p> <p>the duration</p>"},{"location":"reference/classes/appium_support.timing.Timer/#defined-in_3","title":"Defined in","text":"<p>packages/support/lib/timing.js:84</p>"},{"location":"reference/classes/appium_support.timing.Timer/#start","title":"start","text":"<p>\u25b8 start(): <code>Timer</code></p> <p>Start the timer</p>"},{"location":"reference/classes/appium_support.timing.Timer/#returns_2","title":"Returns","text":"<p><code>Timer</code></p> <p>The current instance, for chaining</p>"},{"location":"reference/classes/appium_support.timing.Timer/#defined-in_4","title":"Defined in","text":"<p>packages/support/lib/timing.js:68</p>"},{"location":"reference/classes/appium_support.timing.Timer/#tostring","title":"toString","text":"<p>\u25b8 toString(): <code>string</code></p>"},{"location":"reference/classes/appium_support.timing.Timer/#returns_3","title":"Returns","text":"<p><code>string</code></p>"},{"location":"reference/classes/appium_support.timing.Timer/#defined-in_5","title":"Defined in","text":"<p>packages/support/lib/timing.js:106</p>"},{"location":"reference/classes/appium_typedoc_plugin_appium.AppiumPluginLogger/","title":"Class: AppiumPluginLogger","text":"<p>@appium/typedoc-plugin-appium.AppiumPluginLogger</p>"},{"location":"reference/classes/appium_typedoc_plugin_appium.AppiumPluginLogger/#hierarchy","title":"Hierarchy","text":"<ul> <li><code>Logger</code></li> </ul> <p>\u21b3 <code>AppiumPluginLogger</code></p>"},{"location":"reference/classes/appium_typedoc_plugin_appium.AppiumPluginLogger/#table-of-contents","title":"Table of contents","text":""},{"location":"reference/classes/appium_typedoc_plugin_appium.AppiumPluginLogger/#constructors","title":"Constructors","text":"<ul> <li>constructor</li> </ul>"},{"location":"reference/classes/appium_typedoc_plugin_appium.AppiumPluginLogger/#properties","title":"Properties","text":"<ul> <li>#logThroughParent</li> <li>#parent</li> <li>errorCount</li> <li>level</li> <li>ns</li> <li>warningCount</li> <li>createChildLogger</li> </ul>"},{"location":"reference/classes/appium_typedoc_plugin_appium.AppiumPluginLogger/#methods","title":"Methods","text":"<ul> <li>#formatMessage</li> <li>#log</li> <li>#logThrough</li> <li>addContext</li> <li>createChildLogger</li> <li>deprecated</li> <li>diagnostic</li> <li>diagnostics</li> <li>error</li> <li>hasErrors</li> <li>hasWarnings</li> <li>info</li> <li>log</li> <li>resetErrors</li> <li>resetWarnings</li> <li>verbose</li> <li>warn</li> </ul>"},{"location":"reference/classes/appium_typedoc_plugin_appium.AppiumPluginLogger/#constructors_1","title":"Constructors","text":""},{"location":"reference/classes/appium_typedoc_plugin_appium.AppiumPluginLogger/#constructor","title":"constructor","text":"<p>\u2022 new AppiumPluginLogger(<code>logger</code>, <code>ns</code>, <code>logThroughParent?</code>)</p>"},{"location":"reference/classes/appium_typedoc_plugin_appium.AppiumPluginLogger/#parameters","title":"Parameters","text":"Name Type <code>logger</code> <code>Logger</code> <code>ns</code> <code>string</code> <code>logThroughParent?</code> <code>AppiumPluginParentLogger</code>"},{"location":"reference/classes/appium_typedoc_plugin_appium.AppiumPluginLogger/#overrides","title":"Overrides","text":"<p>Logger.constructor</p>"},{"location":"reference/classes/appium_typedoc_plugin_appium.AppiumPluginLogger/#defined-in","title":"Defined in","text":"<p>packages/typedoc-plugin-appium/lib/logger.ts:43</p>"},{"location":"reference/classes/appium_typedoc_plugin_appium.AppiumPluginLogger/#properties_1","title":"Properties","text":""},{"location":"reference/classes/appium_typedoc_plugin_appium.AppiumPluginLogger/#logthroughparent","title":"#logThroughParent","text":"<p>\u2022 <code>Private</code> <code>Optional</code> <code>Readonly</code> #logThroughParent: <code>AppiumPluginParentLogger</code></p> <p>Function provided by <code>AppiumPluginLogger</code> parent loggers to log through them.</p>"},{"location":"reference/classes/appium_typedoc_plugin_appium.AppiumPluginLogger/#defined-in_1","title":"Defined in","text":"<p>packages/typedoc-plugin-appium/lib/logger.ts:32</p>"},{"location":"reference/classes/appium_typedoc_plugin_appium.AppiumPluginLogger/#parent","title":"#parent","text":"<p>\u2022 <code>Private</code> <code>Readonly</code> #parent: <code>Logger</code></p> <p>Parent logger</p>"},{"location":"reference/classes/appium_typedoc_plugin_appium.AppiumPluginLogger/#defined-in_2","title":"Defined in","text":"<p>packages/typedoc-plugin-appium/lib/logger.ts:36</p>"},{"location":"reference/classes/appium_typedoc_plugin_appium.AppiumPluginLogger/#errorcount","title":"errorCount","text":"<p>\u2022 errorCount: <code>number</code></p> <p>How many error messages have been logged?</p>"},{"location":"reference/classes/appium_typedoc_plugin_appium.AppiumPluginLogger/#inherited-from","title":"Inherited from","text":"<p>Logger.errorCount</p>"},{"location":"reference/classes/appium_typedoc_plugin_appium.AppiumPluginLogger/#defined-in_3","title":"Defined in","text":"<p>node_modules/typedoc/dist/lib/utils/loggers.d.ts:22</p>"},{"location":"reference/classes/appium_typedoc_plugin_appium.AppiumPluginLogger/#level","title":"level","text":"<p>\u2022 level: <code>LogLevel</code></p> <p>The minimum logging level to print.</p>"},{"location":"reference/classes/appium_typedoc_plugin_appium.AppiumPluginLogger/#inherited-from_1","title":"Inherited from","text":"<p>Logger.level</p>"},{"location":"reference/classes/appium_typedoc_plugin_appium.AppiumPluginLogger/#defined-in_4","title":"Defined in","text":"<p>node_modules/typedoc/dist/lib/utils/loggers.d.ts:32</p>"},{"location":"reference/classes/appium_typedoc_plugin_appium.AppiumPluginLogger/#ns","title":"ns","text":"<p>\u2022 <code>Readonly</code> ns: <code>string</code></p> <p>Namespace to prepend to log messages</p>"},{"location":"reference/classes/appium_typedoc_plugin_appium.AppiumPluginLogger/#defined-in_5","title":"Defined in","text":"<p>packages/typedoc-plugin-appium/lib/logger.ts:41</p>"},{"location":"reference/classes/appium_typedoc_plugin_appium.AppiumPluginLogger/#warningcount","title":"warningCount","text":"<p>\u2022 warningCount: <code>number</code></p> <p>How many warning messages have been logged?</p>"},{"location":"reference/classes/appium_typedoc_plugin_appium.AppiumPluginLogger/#inherited-from_2","title":"Inherited from","text":"<p>Logger.warningCount</p>"},{"location":"reference/classes/appium_typedoc_plugin_appium.AppiumPluginLogger/#defined-in_6","title":"Defined in","text":"<p>node_modules/typedoc/dist/lib/utils/loggers.d.ts:26</p>"},{"location":"reference/classes/appium_typedoc_plugin_appium.AppiumPluginLogger/#createchildlogger","title":"createChildLogger","text":"<p>\u25aa <code>Static</code> createChildLogger: (<code>parent</code>: <code>AppiumPluginLogger</code>, <code>ns</code>: <code>string</code>) =&gt; <code>AppiumPluginLogger</code> &amp; <code>MemoizedFunction</code></p> <p>Creates or retrieves a child logger for the given namespace</p> <p><code>Param</code></p> <p>Parent logger</p> <p><code>Param</code></p> <p>Namespace</p>"},{"location":"reference/classes/appium_typedoc_plugin_appium.AppiumPluginLogger/#defined-in_7","title":"Defined in","text":"<p>packages/typedoc-plugin-appium/lib/logger.ts:57</p>"},{"location":"reference/classes/appium_typedoc_plugin_appium.AppiumPluginLogger/#methods_1","title":"Methods","text":""},{"location":"reference/classes/appium_typedoc_plugin_appium.AppiumPluginLogger/#formatmessage","title":"#formatMessage","text":"<p>\u25b8 <code>Private</code> #formatMessage(<code>ns</code>, <code>message</code>, <code>...args</code>): <code>string</code></p> <p>Format the given message.</p> <p>Uses the <code>util.format</code> function to format the message.</p>"},{"location":"reference/classes/appium_typedoc_plugin_appium.AppiumPluginLogger/#parameters_1","title":"Parameters","text":"Name Type Description <code>ns</code> <code>string</code> Namespace <code>message</code> <code>string</code> The message to format. <code>...args</code> <code>any</code>[] -"},{"location":"reference/classes/appium_typedoc_plugin_appium.AppiumPluginLogger/#returns","title":"Returns","text":"<p><code>string</code></p> <p>the formatted message;</p>"},{"location":"reference/classes/appium_typedoc_plugin_appium.AppiumPluginLogger/#defined-in_8","title":"Defined in","text":"<p>packages/typedoc-plugin-appium/lib/logger.ts:137</p>"},{"location":"reference/classes/appium_typedoc_plugin_appium.AppiumPluginLogger/#log","title":"#log","text":"<p>\u25b8 <code>Private</code> #log(<code>level</code>, <code>text</code>, <code>...args</code>): <code>void</code></p> <p>Print a log message.</p>"},{"location":"reference/classes/appium_typedoc_plugin_appium.AppiumPluginLogger/#parameters_2","title":"Parameters","text":"Name Type Description <code>level</code> <code>LogLevel</code> The urgency of the log message. <code>text</code> <code>string</code> The message itself. <code>...args</code> <code>any</code>[] -"},{"location":"reference/classes/appium_typedoc_plugin_appium.AppiumPluginLogger/#returns_1","title":"Returns","text":"<p><code>void</code></p>"},{"location":"reference/classes/appium_typedoc_plugin_appium.AppiumPluginLogger/#defined-in_9","title":"Defined in","text":"<p>packages/typedoc-plugin-appium/lib/logger.ts:147</p>"},{"location":"reference/classes/appium_typedoc_plugin_appium.AppiumPluginLogger/#logthrough","title":"#logThrough","text":"<p>\u25b8 <code>Private</code> #logThrough(<code>level</code>, <code>ns</code>, <code>message</code>, <code>...args</code>): <code>void</code></p> <p>Pass a log message to the parent.</p>"},{"location":"reference/classes/appium_typedoc_plugin_appium.AppiumPluginLogger/#parameters_3","title":"Parameters","text":"Name Type Description <code>level</code> <code>LogLevel</code> The urgency of the log message. <code>ns</code> <code>string</code> - <code>message</code> <code>string</code> The message itself. <code>...args</code> <code>any</code>[] -"},{"location":"reference/classes/appium_typedoc_plugin_appium.AppiumPluginLogger/#returns_2","title":"Returns","text":"<p><code>void</code></p>"},{"location":"reference/classes/appium_typedoc_plugin_appium.AppiumPluginLogger/#defined-in_10","title":"Defined in","text":"<p>packages/typedoc-plugin-appium/lib/logger.ts:160</p>"},{"location":"reference/classes/appium_typedoc_plugin_appium.AppiumPluginLogger/#addcontext","title":"addContext","text":"<p>\u25b8 <code>Protected</code> addContext(<code>message</code>, <code>_level</code>, <code>..._args</code>): <code>string</code></p>"},{"location":"reference/classes/appium_typedoc_plugin_appium.AppiumPluginLogger/#parameters_4","title":"Parameters","text":"Name Type <code>message</code> <code>string</code> <code>_level</code> <code>LogLevel</code> <code>..._args</code> [Node?] | [<code>number</code>, <code>MinimalSourceFile</code>]"},{"location":"reference/classes/appium_typedoc_plugin_appium.AppiumPluginLogger/#returns_3","title":"Returns","text":"<p><code>string</code></p>"},{"location":"reference/classes/appium_typedoc_plugin_appium.AppiumPluginLogger/#inherited-from_3","title":"Inherited from","text":"<p>Logger.addContext</p>"},{"location":"reference/classes/appium_typedoc_plugin_appium.AppiumPluginLogger/#defined-in_11","title":"Defined in","text":"<p>node_modules/typedoc/dist/lib/utils/loggers.d.ts:95</p>"},{"location":"reference/classes/appium_typedoc_plugin_appium.AppiumPluginLogger/#createchildlogger_1","title":"createChildLogger","text":"<p>\u25b8 createChildLogger(<code>ns</code>): <code>AppiumPluginLogger</code></p> <p>Create a new AppiumPluginLogger for the given context.</p>"},{"location":"reference/classes/appium_typedoc_plugin_appium.AppiumPluginLogger/#parameters_5","title":"Parameters","text":"Name Type Description <code>ns</code> <code>string</code> New sub-namespace; will be appended to the current namespace."},{"location":"reference/classes/appium_typedoc_plugin_appium.AppiumPluginLogger/#returns_4","title":"Returns","text":"<p><code>AppiumPluginLogger</code></p> <p>the new logger.</p>"},{"location":"reference/classes/appium_typedoc_plugin_appium.AppiumPluginLogger/#defined-in_12","title":"Defined in","text":"<p>packages/typedoc-plugin-appium/lib/logger.ts:76</p>"},{"location":"reference/classes/appium_typedoc_plugin_appium.AppiumPluginLogger/#deprecated","title":"deprecated","text":"<p>\u25b8 deprecated(<code>text</code>, <code>addStack?</code>): <code>void</code></p>"},{"location":"reference/classes/appium_typedoc_plugin_appium.AppiumPluginLogger/#parameters_6","title":"Parameters","text":"Name Type <code>text</code> <code>string</code> <code>addStack?</code> <code>boolean</code>"},{"location":"reference/classes/appium_typedoc_plugin_appium.AppiumPluginLogger/#returns_5","title":"Returns","text":"<p><code>void</code></p>"},{"location":"reference/classes/appium_typedoc_plugin_appium.AppiumPluginLogger/#inherited-from_4","title":"Inherited from","text":"<p>Logger.deprecated</p>"},{"location":"reference/classes/appium_typedoc_plugin_appium.AppiumPluginLogger/#defined-in_13","title":"Defined in","text":"<p>node_modules/typedoc/dist/lib/utils/loggers.d.ts:75</p>"},{"location":"reference/classes/appium_typedoc_plugin_appium.AppiumPluginLogger/#diagnostic","title":"diagnostic","text":"<p>\u25b8 diagnostic(<code>diagnostic</code>): <code>void</code></p> <p>Print the given TypeScript log message.</p>"},{"location":"reference/classes/appium_typedoc_plugin_appium.AppiumPluginLogger/#parameters_7","title":"Parameters","text":"Name Type Description <code>diagnostic</code> <code>Diagnostic</code> The TypeScript message that should be logged."},{"location":"reference/classes/appium_typedoc_plugin_appium.AppiumPluginLogger/#returns_6","title":"Returns","text":"<p><code>void</code></p>"},{"location":"reference/classes/appium_typedoc_plugin_appium.AppiumPluginLogger/#inherited-from_5","title":"Inherited from","text":"<p>Logger.diagnostic</p>"},{"location":"reference/classes/appium_typedoc_plugin_appium.AppiumPluginLogger/#defined-in_14","title":"Defined in","text":"<p>node_modules/typedoc/dist/lib/utils/loggers.d.ts:94</p>"},{"location":"reference/classes/appium_typedoc_plugin_appium.AppiumPluginLogger/#diagnostics","title":"diagnostics","text":"<p>\u25b8 diagnostics(<code>diagnostics</code>): <code>void</code></p> <p>Print the given TypeScript log messages.</p>"},{"location":"reference/classes/appium_typedoc_plugin_appium.AppiumPluginLogger/#parameters_8","title":"Parameters","text":"Name Type Description <code>diagnostics</code> readonly <code>Diagnostic</code>[] The TypeScript messages that should be logged."},{"location":"reference/classes/appium_typedoc_plugin_appium.AppiumPluginLogger/#returns_7","title":"Returns","text":"<p><code>void</code></p>"},{"location":"reference/classes/appium_typedoc_plugin_appium.AppiumPluginLogger/#inherited-from_6","title":"Inherited from","text":"<p>Logger.diagnostics</p>"},{"location":"reference/classes/appium_typedoc_plugin_appium.AppiumPluginLogger/#defined-in_15","title":"Defined in","text":"<p>node_modules/typedoc/dist/lib/utils/loggers.d.ts:88</p>"},{"location":"reference/classes/appium_typedoc_plugin_appium.AppiumPluginLogger/#error","title":"error","text":"<p>\u25b8 error(<code>text</code>, <code>...args</code>): <code>void</code></p> <p>Log the given error message.</p>"},{"location":"reference/classes/appium_typedoc_plugin_appium.AppiumPluginLogger/#parameters_9","title":"Parameters","text":"Name Type Description <code>text</code> <code>string</code> The error that should be logged. <code>...args</code> <code>any</code>[] -"},{"location":"reference/classes/appium_typedoc_plugin_appium.AppiumPluginLogger/#returns_8","title":"Returns","text":"<p><code>void</code></p>"},{"location":"reference/classes/appium_typedoc_plugin_appium.AppiumPluginLogger/#overrides_1","title":"Overrides","text":"<p>Logger.error</p>"},{"location":"reference/classes/appium_typedoc_plugin_appium.AppiumPluginLogger/#defined-in_16","title":"Defined in","text":"<p>packages/typedoc-plugin-appium/lib/logger.ts:85</p>"},{"location":"reference/classes/appium_typedoc_plugin_appium.AppiumPluginLogger/#haserrors","title":"hasErrors","text":"<p>\u25b8 hasErrors(): <code>boolean</code></p> <p>Has an error been raised through the log method?</p>"},{"location":"reference/classes/appium_typedoc_plugin_appium.AppiumPluginLogger/#returns_9","title":"Returns","text":"<p><code>boolean</code></p>"},{"location":"reference/classes/appium_typedoc_plugin_appium.AppiumPluginLogger/#inherited-from_7","title":"Inherited from","text":"<p>Logger.hasErrors</p>"},{"location":"reference/classes/appium_typedoc_plugin_appium.AppiumPluginLogger/#defined-in_17","title":"Defined in","text":"<p>node_modules/typedoc/dist/lib/utils/loggers.d.ts:36</p>"},{"location":"reference/classes/appium_typedoc_plugin_appium.AppiumPluginLogger/#haswarnings","title":"hasWarnings","text":"<p>\u25b8 hasWarnings(): <code>boolean</code></p> <p>Has a warning been raised through the log method?</p>"},{"location":"reference/classes/appium_typedoc_plugin_appium.AppiumPluginLogger/#returns_10","title":"Returns","text":"<p><code>boolean</code></p>"},{"location":"reference/classes/appium_typedoc_plugin_appium.AppiumPluginLogger/#inherited-from_8","title":"Inherited from","text":"<p>Logger.hasWarnings</p>"},{"location":"reference/classes/appium_typedoc_plugin_appium.AppiumPluginLogger/#defined-in_18","title":"Defined in","text":"<p>node_modules/typedoc/dist/lib/utils/loggers.d.ts:40</p>"},{"location":"reference/classes/appium_typedoc_plugin_appium.AppiumPluginLogger/#info","title":"info","text":"<p>\u25b8 info(<code>text</code>, <code>...args</code>): <code>void</code></p> <p>Log the given info message.</p>"},{"location":"reference/classes/appium_typedoc_plugin_appium.AppiumPluginLogger/#parameters_10","title":"Parameters","text":"Name Type Description <code>text</code> <code>string</code> The message that should be logged. <code>...args</code> <code>any</code>[] -"},{"location":"reference/classes/appium_typedoc_plugin_appium.AppiumPluginLogger/#returns_11","title":"Returns","text":"<p><code>void</code></p>"},{"location":"reference/classes/appium_typedoc_plugin_appium.AppiumPluginLogger/#overrides_2","title":"Overrides","text":"<p>Logger.info</p>"},{"location":"reference/classes/appium_typedoc_plugin_appium.AppiumPluginLogger/#defined-in_19","title":"Defined in","text":"<p>packages/typedoc-plugin-appium/lib/logger.ts:94</p>"},{"location":"reference/classes/appium_typedoc_plugin_appium.AppiumPluginLogger/#log_1","title":"log","text":"<p>\u25b8 log(<code>text</code>, <code>level</code>): <code>void</code></p> <p>Print a log message.</p> <p>Does not support <code>printf</code>-style syntax for compatibility with Logger.</p>"},{"location":"reference/classes/appium_typedoc_plugin_appium.AppiumPluginLogger/#parameters_11","title":"Parameters","text":"Name Type Description <code>text</code> <code>string</code> The message itself. <code>level</code> <code>LogLevel</code> The urgency of the log message."},{"location":"reference/classes/appium_typedoc_plugin_appium.AppiumPluginLogger/#returns_12","title":"Returns","text":"<p><code>void</code></p>"},{"location":"reference/classes/appium_typedoc_plugin_appium.AppiumPluginLogger/#overrides_3","title":"Overrides","text":"<p>Logger.log</p>"},{"location":"reference/classes/appium_typedoc_plugin_appium.AppiumPluginLogger/#defined-in_20","title":"Defined in","text":"<p>packages/typedoc-plugin-appium/lib/logger.ts:106</p>"},{"location":"reference/classes/appium_typedoc_plugin_appium.AppiumPluginLogger/#reseterrors","title":"resetErrors","text":"<p>\u25b8 resetErrors(): <code>void</code></p> <p>Reset the error counter.</p>"},{"location":"reference/classes/appium_typedoc_plugin_appium.AppiumPluginLogger/#returns_13","title":"Returns","text":"<p><code>void</code></p>"},{"location":"reference/classes/appium_typedoc_plugin_appium.AppiumPluginLogger/#inherited-from_9","title":"Inherited from","text":"<p>Logger.resetErrors</p>"},{"location":"reference/classes/appium_typedoc_plugin_appium.AppiumPluginLogger/#defined-in_21","title":"Defined in","text":"<p>node_modules/typedoc/dist/lib/utils/loggers.d.ts:44</p>"},{"location":"reference/classes/appium_typedoc_plugin_appium.AppiumPluginLogger/#resetwarnings","title":"resetWarnings","text":"<p>\u25b8 resetWarnings(): <code>void</code></p> <p>Reset the warning counter.</p>"},{"location":"reference/classes/appium_typedoc_plugin_appium.AppiumPluginLogger/#returns_14","title":"Returns","text":"<p><code>void</code></p>"},{"location":"reference/classes/appium_typedoc_plugin_appium.AppiumPluginLogger/#inherited-from_10","title":"Inherited from","text":"<p>Logger.resetWarnings</p>"},{"location":"reference/classes/appium_typedoc_plugin_appium.AppiumPluginLogger/#defined-in_22","title":"Defined in","text":"<p>node_modules/typedoc/dist/lib/utils/loggers.d.ts:48</p>"},{"location":"reference/classes/appium_typedoc_plugin_appium.AppiumPluginLogger/#verbose","title":"verbose","text":"<p>\u25b8 verbose(<code>text</code>, <code>...args</code>): <code>void</code></p> <p>Log the given verbose message.</p>"},{"location":"reference/classes/appium_typedoc_plugin_appium.AppiumPluginLogger/#parameters_12","title":"Parameters","text":"Name Type Description <code>text</code> <code>string</code> The message that should be logged. <code>...args</code> <code>any</code> -"},{"location":"reference/classes/appium_typedoc_plugin_appium.AppiumPluginLogger/#returns_15","title":"Returns","text":"<p><code>void</code></p>"},{"location":"reference/classes/appium_typedoc_plugin_appium.AppiumPluginLogger/#overrides_4","title":"Overrides","text":"<p>Logger.verbose</p>"},{"location":"reference/classes/appium_typedoc_plugin_appium.AppiumPluginLogger/#defined-in_23","title":"Defined in","text":"<p>packages/typedoc-plugin-appium/lib/logger.ts:115</p>"},{"location":"reference/classes/appium_typedoc_plugin_appium.AppiumPluginLogger/#warn","title":"warn","text":"<p>\u25b8 warn(<code>text</code>, <code>...args</code>): <code>void</code></p> <p>Log the given warning message.</p>"},{"location":"reference/classes/appium_typedoc_plugin_appium.AppiumPluginLogger/#parameters_13","title":"Parameters","text":"Name Type Description <code>text</code> <code>string</code> The warning that should be logged. <code>...args</code> <code>any</code>[] -"},{"location":"reference/classes/appium_typedoc_plugin_appium.AppiumPluginLogger/#returns_16","title":"Returns","text":"<p><code>void</code></p>"},{"location":"reference/classes/appium_typedoc_plugin_appium.AppiumPluginLogger/#overrides_5","title":"Overrides","text":"<p>Logger.warn</p>"},{"location":"reference/classes/appium_typedoc_plugin_appium.AppiumPluginLogger/#defined-in_24","title":"Defined in","text":"<p>packages/typedoc-plugin-appium/lib/logger.ts:124</p>"},{"location":"reference/classes/appium_typedoc_plugin_appium.AppiumPluginOptionsReader/","title":"Class: AppiumPluginOptionsReader","text":"<p>@appium/typedoc-plugin-appium.AppiumPluginOptionsReader</p> <p>This befouls the options.</p> <p>It can do what has been undone and undo what has been done. It can make real your dreams... or nightmares.</p>"},{"location":"reference/classes/appium_typedoc_plugin_appium.AppiumPluginOptionsReader/#implements","title":"Implements","text":"<ul> <li><code>OptionsReader</code></li> </ul>"},{"location":"reference/classes/appium_typedoc_plugin_appium.AppiumPluginOptionsReader/#table-of-contents","title":"Table of contents","text":""},{"location":"reference/classes/appium_typedoc_plugin_appium.AppiumPluginOptionsReader/#constructors","title":"Constructors","text":"<ul> <li>constructor</li> </ul>"},{"location":"reference/classes/appium_typedoc_plugin_appium.AppiumPluginOptionsReader/#properties","title":"Properties","text":"<ul> <li>#log</li> <li>name</li> <li>priority</li> </ul>"},{"location":"reference/classes/appium_typedoc_plugin_appium.AppiumPluginOptionsReader/#methods","title":"Methods","text":"<ul> <li>#configureEntryPointStrategy</li> <li>#configureEntryPoints</li> <li>#configureTheme</li> <li>read</li> </ul>"},{"location":"reference/classes/appium_typedoc_plugin_appium.AppiumPluginOptionsReader/#constructors_1","title":"Constructors","text":""},{"location":"reference/classes/appium_typedoc_plugin_appium.AppiumPluginOptionsReader/#constructor","title":"constructor","text":"<p>\u2022 new AppiumPluginOptionsReader(<code>logger</code>)</p>"},{"location":"reference/classes/appium_typedoc_plugin_appium.AppiumPluginOptionsReader/#parameters","title":"Parameters","text":"Name Type <code>logger</code> <code>AppiumPluginLogger</code>"},{"location":"reference/classes/appium_typedoc_plugin_appium.AppiumPluginOptionsReader/#defined-in","title":"Defined in","text":"<p>packages/typedoc-plugin-appium/lib/options/reader.ts:40</p>"},{"location":"reference/classes/appium_typedoc_plugin_appium.AppiumPluginOptionsReader/#properties_1","title":"Properties","text":""},{"location":"reference/classes/appium_typedoc_plugin_appium.AppiumPluginOptionsReader/#log","title":"#log","text":"<p>\u2022 <code>Private</code> <code>Readonly</code> #log: <code>AppiumPluginLogger</code></p>"},{"location":"reference/classes/appium_typedoc_plugin_appium.AppiumPluginOptionsReader/#defined-in_1","title":"Defined in","text":"<p>packages/typedoc-plugin-appium/lib/options/reader.ts:29</p>"},{"location":"reference/classes/appium_typedoc_plugin_appium.AppiumPluginOptionsReader/#name","title":"name","text":"<p>\u2022 <code>Readonly</code> name: <code>\"naughty-appium-options-reader\"</code></p> <p>I don't know the point of <code>name</code>, but the interface requires it, so here.</p>"},{"location":"reference/classes/appium_typedoc_plugin_appium.AppiumPluginOptionsReader/#implementation-of","title":"Implementation of","text":"<p>OptionsReader.name</p>"},{"location":"reference/classes/appium_typedoc_plugin_appium.AppiumPluginOptionsReader/#defined-in_2","title":"Defined in","text":"<p>packages/typedoc-plugin-appium/lib/options/reader.ts:34</p>"},{"location":"reference/classes/appium_typedoc_plugin_appium.AppiumPluginOptionsReader/#priority","title":"priority","text":"<p>\u2022 <code>Readonly</code> priority: <code>2000</code></p> <p>This needs to be higher than the value in <code>MarkdownOptionsReader</code>.</p>"},{"location":"reference/classes/appium_typedoc_plugin_appium.AppiumPluginOptionsReader/#implementation-of_1","title":"Implementation of","text":"<p>OptionsReader.priority</p>"},{"location":"reference/classes/appium_typedoc_plugin_appium.AppiumPluginOptionsReader/#defined-in_3","title":"Defined in","text":"<p>packages/typedoc-plugin-appium/lib/options/reader.ts:38</p>"},{"location":"reference/classes/appium_typedoc_plugin_appium.AppiumPluginOptionsReader/#methods_1","title":"Methods","text":""},{"location":"reference/classes/appium_typedoc_plugin_appium.AppiumPluginOptionsReader/#configureentrypointstrategy","title":"#configureEntryPointStrategy","text":"<p>\u25b8 <code>Private</code> #configureEntryPointStrategy(<code>container</code>): <code>void</code></p> <p>Forces the <code>entryPointStrategy</code> option to be EntryPointStrategy.Packages</p>"},{"location":"reference/classes/appium_typedoc_plugin_appium.AppiumPluginOptionsReader/#parameters_1","title":"Parameters","text":"Name Type Description <code>container</code> <code>Options</code> Options"},{"location":"reference/classes/appium_typedoc_plugin_appium.AppiumPluginOptionsReader/#returns","title":"Returns","text":"<p><code>void</code></p>"},{"location":"reference/classes/appium_typedoc_plugin_appium.AppiumPluginOptionsReader/#defined-in_4","title":"Defined in","text":"<p>packages/typedoc-plugin-appium/lib/options/reader.ts:58</p>"},{"location":"reference/classes/appium_typedoc_plugin_appium.AppiumPluginOptionsReader/#configureentrypoints","title":"#configureEntryPoints","text":"<p>\u25b8 <code>Private</code> #configureEntryPoints(<code>container</code>): <code>void</code></p> <p>Adds required packages to the <code>entryPoints</code> option.</p> <p>If the <code>entryPoints</code> option already contains something that looks like a REQUIRED_PACKAGES required package, then it is validated via <code>require.resolve</code>. If this fails, it is replaced with the proper package path.</p> <p>If a required package cannot be resolved, an error occurs</p>"},{"location":"reference/classes/appium_typedoc_plugin_appium.AppiumPluginOptionsReader/#parameters_2","title":"Parameters","text":"Name Type Description <code>container</code> <code>Options</code> Options"},{"location":"reference/classes/appium_typedoc_plugin_appium.AppiumPluginOptionsReader/#returns_1","title":"Returns","text":"<p><code>void</code></p>"},{"location":"reference/classes/appium_typedoc_plugin_appium.AppiumPluginOptionsReader/#defined-in_5","title":"Defined in","text":"<p>packages/typedoc-plugin-appium/lib/options/reader.ts:76</p>"},{"location":"reference/classes/appium_typedoc_plugin_appium.AppiumPluginOptionsReader/#configuretheme","title":"#configureTheme","text":"<p>\u25b8 <code>Private</code> #configureTheme(<code>container</code>): <code>void</code></p> <p>Forces the theme to be <code>THEME_NAME</code></p>"},{"location":"reference/classes/appium_typedoc_plugin_appium.AppiumPluginOptionsReader/#parameters_3","title":"Parameters","text":"Name Type Description <code>container</code> <code>Options</code> Options"},{"location":"reference/classes/appium_typedoc_plugin_appium.AppiumPluginOptionsReader/#returns_2","title":"Returns","text":"<p><code>void</code></p>"},{"location":"reference/classes/appium_typedoc_plugin_appium.AppiumPluginOptionsReader/#defined-in_6","title":"Defined in","text":"<p>packages/typedoc-plugin-appium/lib/options/reader.ts:118</p>"},{"location":"reference/classes/appium_typedoc_plugin_appium.AppiumPluginOptionsReader/#read","title":"read","text":"<p>\u25b8 read(<code>container</code>): <code>void</code></p> <p>Calls various private methods to override option values or provide defaults.</p>"},{"location":"reference/classes/appium_typedoc_plugin_appium.AppiumPluginOptionsReader/#parameters_4","title":"Parameters","text":"Name Type Description <code>container</code> <code>Options</code> Options container"},{"location":"reference/classes/appium_typedoc_plugin_appium.AppiumPluginOptionsReader/#returns_3","title":"Returns","text":"<p><code>void</code></p>"},{"location":"reference/classes/appium_typedoc_plugin_appium.AppiumPluginOptionsReader/#implementation-of_2","title":"Implementation of","text":"<p>OptionsReader.read</p>"},{"location":"reference/classes/appium_typedoc_plugin_appium.AppiumPluginOptionsReader/#defined-in_7","title":"Defined in","text":"<p>packages/typedoc-plugin-appium/lib/options/reader.ts:48</p>"},{"location":"reference/classes/appium_typedoc_plugin_appium.AppiumTheme/","title":"Class: AppiumTheme","text":"<p>@appium/typedoc-plugin-appium.AppiumTheme</p> <p>This theme uses everything from <code>MarkdownTheme</code> and adds a new section for commands.</p>"},{"location":"reference/classes/appium_typedoc_plugin_appium.AppiumTheme/#hierarchy","title":"Hierarchy","text":"<ul> <li><code>MarkdownTheme</code></li> </ul> <p>\u21b3 <code>AppiumTheme</code></p>"},{"location":"reference/classes/appium_typedoc_plugin_appium.AppiumTheme/#table-of-contents","title":"Table of contents","text":""},{"location":"reference/classes/appium_typedoc_plugin_appium.AppiumTheme/#constructors","title":"Constructors","text":"<ul> <li>constructor</li> </ul>"},{"location":"reference/classes/appium_typedoc_plugin_appium.AppiumTheme/#properties","title":"Properties","text":"<ul> <li>#extensionTemplateRenderer</li> <li>#log</li> <li>#opts</li> <li>allReflectionsHaveOwnDocument</li> <li>anchorMap</li> <li>componentName</li> <li>entryDocument</li> <li>entryPoints</li> <li>filenameSeparator</li> <li>hideBreadcrumbs</li> <li>hideInPageTOC</li> <li>hideMembersSymbol</li> <li>hidePageTitle</li> <li>includes</li> <li>indexTitle</li> <li>location</li> <li>mediaDirectory</li> <li>namedAnchors</li> <li>objectLiteralTypeDeclarationStyle</li> <li>out</li> <li>preserveAnchorCasing</li> <li>project</li> <li>publicPath</li> <li>readme</li> <li>reflection</li> <li>URL_PREFIX</li> </ul>"},{"location":"reference/classes/appium_typedoc_plugin_appium.AppiumTheme/#accessors","title":"Accessors","text":"<ul> <li>_listenId</li> <li>application</li> <li>globalsFile</li> <li>mappings</li> <li>owner</li> </ul>"},{"location":"reference/classes/appium_typedoc_plugin_appium.AppiumTheme/#methods","title":"Methods","text":"<ul> <li>#createTemplateRenderer</li> <li>applyAnchorUrl</li> <li>bubble</li> <li>buildUrls</li> <li>getIndexTemplate</li> <li>getNavigation</li> <li>getOption</li> <li>getReflectionMemberTemplate</li> <li>getReflectionTemplate</li> <li>getRelativeUrl</li> <li>getUrl</li> <li>getUrls</li> <li>initialize</li> <li>listenTo</li> <li>listenToOnce</li> <li>off</li> <li>on</li> <li>onBeginPage</li> <li>onBeginRenderer</li> <li>once</li> <li>render</li> <li>stopListening</li> <li>toAnchorRef</li> <li>toUrl</li> <li>trigger</li> </ul>"},{"location":"reference/classes/appium_typedoc_plugin_appium.AppiumTheme/#constructors_1","title":"Constructors","text":""},{"location":"reference/classes/appium_typedoc_plugin_appium.AppiumTheme/#constructor","title":"constructor","text":"<p>\u2022 new AppiumTheme(<code>renderer</code>)</p> <p>Creates template renderers and registers all Handlebars helpers.</p> <p><code>Todo</code></p> <p>Use declaration merging to add an instance of <code>AppiumPluginLogger</code> to <code>Application</code>, which we can then reference here.</p>"},{"location":"reference/classes/appium_typedoc_plugin_appium.AppiumTheme/#parameters","title":"Parameters","text":"Name Type Description <code>renderer</code> <code>Renderer</code> TypeDoc renderer"},{"location":"reference/classes/appium_typedoc_plugin_appium.AppiumTheme/#overrides","title":"Overrides","text":"<p>MarkdownTheme.constructor</p>"},{"location":"reference/classes/appium_typedoc_plugin_appium.AppiumTheme/#defined-in","title":"Defined in","text":"<p>packages/typedoc-plugin-appium/lib/theme/index.ts:39</p>"},{"location":"reference/classes/appium_typedoc_plugin_appium.AppiumTheme/#properties_1","title":"Properties","text":""},{"location":"reference/classes/appium_typedoc_plugin_appium.AppiumTheme/#extensiontemplaterenderer","title":"#extensionTemplateRenderer","text":"<p>\u2022 <code>Private</code> #extensionTemplateRenderer: <code>TemplateRenderer</code></p> <p>A template renderer for <code>CommandReflection</code>s</p>"},{"location":"reference/classes/appium_typedoc_plugin_appium.AppiumTheme/#defined-in_1","title":"Defined in","text":"<p>packages/typedoc-plugin-appium/lib/theme/index.ts:21</p>"},{"location":"reference/classes/appium_typedoc_plugin_appium.AppiumTheme/#log","title":"#log","text":"<p>\u2022 <code>Private</code> #log: <code>AppiumPluginLogger</code></p> <p>Custom logger.  This is not the same as the one created by the plugin loader.</p>"},{"location":"reference/classes/appium_typedoc_plugin_appium.AppiumTheme/#defined-in_2","title":"Defined in","text":"<p>packages/typedoc-plugin-appium/lib/theme/index.ts:25</p>"},{"location":"reference/classes/appium_typedoc_plugin_appium.AppiumTheme/#opts","title":"#opts","text":"<p>\u2022 <code>Private</code> #opts: <code>AppiumPluginOptions</code></p> <p>Options specific to this plugin</p>"},{"location":"reference/classes/appium_typedoc_plugin_appium.AppiumTheme/#defined-in_3","title":"Defined in","text":"<p>packages/typedoc-plugin-appium/lib/theme/index.ts:30</p>"},{"location":"reference/classes/appium_typedoc_plugin_appium.AppiumTheme/#allreflectionshaveowndocument","title":"allReflectionsHaveOwnDocument","text":"<p>\u2022 allReflectionsHaveOwnDocument: <code>boolean</code></p>"},{"location":"reference/classes/appium_typedoc_plugin_appium.AppiumTheme/#inherited-from","title":"Inherited from","text":"<p>MarkdownTheme.allReflectionsHaveOwnDocument</p>"},{"location":"reference/classes/appium_typedoc_plugin_appium.AppiumTheme/#defined-in_4","title":"Defined in","text":"<p>node_modules/typedoc-plugin-markdown/dist/theme.d.ts:5</p>"},{"location":"reference/classes/appium_typedoc_plugin_appium.AppiumTheme/#anchormap","title":"anchorMap","text":"<p>\u2022 anchorMap: <code>Record</code>&lt;<code>string</code>, <code>string</code>[]&gt;</p>"},{"location":"reference/classes/appium_typedoc_plugin_appium.AppiumTheme/#inherited-from_1","title":"Inherited from","text":"<p>MarkdownTheme.anchorMap</p>"},{"location":"reference/classes/appium_typedoc_plugin_appium.AppiumTheme/#defined-in_5","title":"Defined in","text":"<p>node_modules/typedoc-plugin-markdown/dist/theme.d.ts:25</p>"},{"location":"reference/classes/appium_typedoc_plugin_appium.AppiumTheme/#componentname","title":"componentName","text":"<p>\u2022 componentName: <code>string</code></p> <p>The name of this component as set by the</p> <p><code>Component</code></p> <p>decorator.</p>"},{"location":"reference/classes/appium_typedoc_plugin_appium.AppiumTheme/#inherited-from_2","title":"Inherited from","text":"<p>MarkdownTheme.componentName</p>"},{"location":"reference/classes/appium_typedoc_plugin_appium.AppiumTheme/#defined-in_6","title":"Defined in","text":"<p>node_modules/typedoc/dist/lib/utils/component.d.ts:48</p>"},{"location":"reference/classes/appium_typedoc_plugin_appium.AppiumTheme/#entrydocument","title":"entryDocument","text":"<p>\u2022 entryDocument: <code>string</code></p>"},{"location":"reference/classes/appium_typedoc_plugin_appium.AppiumTheme/#inherited-from_3","title":"Inherited from","text":"<p>MarkdownTheme.entryDocument</p>"},{"location":"reference/classes/appium_typedoc_plugin_appium.AppiumTheme/#defined-in_7","title":"Defined in","text":"<p>node_modules/typedoc-plugin-markdown/dist/theme.d.ts:6</p>"},{"location":"reference/classes/appium_typedoc_plugin_appium.AppiumTheme/#entrypoints","title":"entryPoints","text":"<p>\u2022 entryPoints: <code>string</code>[]</p>"},{"location":"reference/classes/appium_typedoc_plugin_appium.AppiumTheme/#inherited-from_4","title":"Inherited from","text":"<p>MarkdownTheme.entryPoints</p>"},{"location":"reference/classes/appium_typedoc_plugin_appium.AppiumTheme/#defined-in_8","title":"Defined in","text":"<p>node_modules/typedoc-plugin-markdown/dist/theme.d.ts:7</p>"},{"location":"reference/classes/appium_typedoc_plugin_appium.AppiumTheme/#filenameseparator","title":"filenameSeparator","text":"<p>\u2022 filenameSeparator: <code>string</code></p>"},{"location":"reference/classes/appium_typedoc_plugin_appium.AppiumTheme/#inherited-from_5","title":"Inherited from","text":"<p>MarkdownTheme.filenameSeparator</p>"},{"location":"reference/classes/appium_typedoc_plugin_appium.AppiumTheme/#defined-in_9","title":"Defined in","text":"<p>node_modules/typedoc-plugin-markdown/dist/theme.d.ts:8</p>"},{"location":"reference/classes/appium_typedoc_plugin_appium.AppiumTheme/#hidebreadcrumbs","title":"hideBreadcrumbs","text":"<p>\u2022 hideBreadcrumbs: <code>boolean</code></p>"},{"location":"reference/classes/appium_typedoc_plugin_appium.AppiumTheme/#inherited-from_6","title":"Inherited from","text":"<p>MarkdownTheme.hideBreadcrumbs</p>"},{"location":"reference/classes/appium_typedoc_plugin_appium.AppiumTheme/#defined-in_10","title":"Defined in","text":"<p>node_modules/typedoc-plugin-markdown/dist/theme.d.ts:9</p>"},{"location":"reference/classes/appium_typedoc_plugin_appium.AppiumTheme/#hideinpagetoc","title":"hideInPageTOC","text":"<p>\u2022 hideInPageTOC: <code>boolean</code></p>"},{"location":"reference/classes/appium_typedoc_plugin_appium.AppiumTheme/#inherited-from_7","title":"Inherited from","text":"<p>MarkdownTheme.hideInPageTOC</p>"},{"location":"reference/classes/appium_typedoc_plugin_appium.AppiumTheme/#defined-in_11","title":"Defined in","text":"<p>node_modules/typedoc-plugin-markdown/dist/theme.d.ts:10</p>"},{"location":"reference/classes/appium_typedoc_plugin_appium.AppiumTheme/#hidememberssymbol","title":"hideMembersSymbol","text":"<p>\u2022 hideMembersSymbol: <code>boolean</code></p>"},{"location":"reference/classes/appium_typedoc_plugin_appium.AppiumTheme/#inherited-from_8","title":"Inherited from","text":"<p>MarkdownTheme.hideMembersSymbol</p>"},{"location":"reference/classes/appium_typedoc_plugin_appium.AppiumTheme/#defined-in_12","title":"Defined in","text":"<p>node_modules/typedoc-plugin-markdown/dist/theme.d.ts:12</p>"},{"location":"reference/classes/appium_typedoc_plugin_appium.AppiumTheme/#hidepagetitle","title":"hidePageTitle","text":"<p>\u2022 hidePageTitle: <code>boolean</code></p>"},{"location":"reference/classes/appium_typedoc_plugin_appium.AppiumTheme/#inherited-from_9","title":"Inherited from","text":"<p>MarkdownTheme.hidePageTitle</p>"},{"location":"reference/classes/appium_typedoc_plugin_appium.AppiumTheme/#defined-in_13","title":"Defined in","text":"<p>node_modules/typedoc-plugin-markdown/dist/theme.d.ts:11</p>"},{"location":"reference/classes/appium_typedoc_plugin_appium.AppiumTheme/#includes","title":"includes","text":"<p>\u2022 includes: <code>string</code></p>"},{"location":"reference/classes/appium_typedoc_plugin_appium.AppiumTheme/#inherited-from_10","title":"Inherited from","text":"<p>MarkdownTheme.includes</p>"},{"location":"reference/classes/appium_typedoc_plugin_appium.AppiumTheme/#defined-in_14","title":"Defined in","text":"<p>node_modules/typedoc-plugin-markdown/dist/theme.d.ts:13</p>"},{"location":"reference/classes/appium_typedoc_plugin_appium.AppiumTheme/#indextitle","title":"indexTitle","text":"<p>\u2022 indexTitle: <code>string</code></p>"},{"location":"reference/classes/appium_typedoc_plugin_appium.AppiumTheme/#inherited-from_11","title":"Inherited from","text":"<p>MarkdownTheme.indexTitle</p>"},{"location":"reference/classes/appium_typedoc_plugin_appium.AppiumTheme/#defined-in_15","title":"Defined in","text":"<p>node_modules/typedoc-plugin-markdown/dist/theme.d.ts:14</p>"},{"location":"reference/classes/appium_typedoc_plugin_appium.AppiumTheme/#location","title":"location","text":"<p>\u2022 location: <code>string</code></p>"},{"location":"reference/classes/appium_typedoc_plugin_appium.AppiumTheme/#inherited-from_12","title":"Inherited from","text":"<p>MarkdownTheme.location</p>"},{"location":"reference/classes/appium_typedoc_plugin_appium.AppiumTheme/#defined-in_16","title":"Defined in","text":"<p>node_modules/typedoc-plugin-markdown/dist/theme.d.ts:24</p>"},{"location":"reference/classes/appium_typedoc_plugin_appium.AppiumTheme/#mediadirectory","title":"mediaDirectory","text":"<p>\u2022 mediaDirectory: <code>string</code></p>"},{"location":"reference/classes/appium_typedoc_plugin_appium.AppiumTheme/#inherited-from_13","title":"Inherited from","text":"<p>MarkdownTheme.mediaDirectory</p>"},{"location":"reference/classes/appium_typedoc_plugin_appium.AppiumTheme/#defined-in_17","title":"Defined in","text":"<p>node_modules/typedoc-plugin-markdown/dist/theme.d.ts:15</p>"},{"location":"reference/classes/appium_typedoc_plugin_appium.AppiumTheme/#namedanchors","title":"namedAnchors","text":"<p>\u2022 namedAnchors: <code>boolean</code></p>"},{"location":"reference/classes/appium_typedoc_plugin_appium.AppiumTheme/#inherited-from_14","title":"Inherited from","text":"<p>MarkdownTheme.namedAnchors</p>"},{"location":"reference/classes/appium_typedoc_plugin_appium.AppiumTheme/#defined-in_18","title":"Defined in","text":"<p>node_modules/typedoc-plugin-markdown/dist/theme.d.ts:16</p>"},{"location":"reference/classes/appium_typedoc_plugin_appium.AppiumTheme/#objectliteraltypedeclarationstyle","title":"objectLiteralTypeDeclarationStyle","text":"<p>\u2022 objectLiteralTypeDeclarationStyle: <code>ObjectLiteralDeclarationStyle</code></p>"},{"location":"reference/classes/appium_typedoc_plugin_appium.AppiumTheme/#inherited-from_15","title":"Inherited from","text":"<p>MarkdownTheme.objectLiteralTypeDeclarationStyle</p>"},{"location":"reference/classes/appium_typedoc_plugin_appium.AppiumTheme/#defined-in_19","title":"Defined in","text":"<p>node_modules/typedoc-plugin-markdown/dist/theme.d.ts:21</p>"},{"location":"reference/classes/appium_typedoc_plugin_appium.AppiumTheme/#out","title":"out","text":"<p>\u2022 out: <code>string</code></p>"},{"location":"reference/classes/appium_typedoc_plugin_appium.AppiumTheme/#inherited-from_16","title":"Inherited from","text":"<p>MarkdownTheme.out</p>"},{"location":"reference/classes/appium_typedoc_plugin_appium.AppiumTheme/#defined-in_20","title":"Defined in","text":"<p>node_modules/typedoc-plugin-markdown/dist/theme.d.ts:18</p>"},{"location":"reference/classes/appium_typedoc_plugin_appium.AppiumTheme/#preserveanchorcasing","title":"preserveAnchorCasing","text":"<p>\u2022 preserveAnchorCasing: <code>boolean</code></p>"},{"location":"reference/classes/appium_typedoc_plugin_appium.AppiumTheme/#inherited-from_17","title":"Inherited from","text":"<p>MarkdownTheme.preserveAnchorCasing</p>"},{"location":"reference/classes/appium_typedoc_plugin_appium.AppiumTheme/#defined-in_21","title":"Defined in","text":"<p>node_modules/typedoc-plugin-markdown/dist/theme.d.ts:20</p>"},{"location":"reference/classes/appium_typedoc_plugin_appium.AppiumTheme/#project","title":"project","text":"<p>\u2022 <code>Optional</code> project: <code>ProjectReflection</code></p>"},{"location":"reference/classes/appium_typedoc_plugin_appium.AppiumTheme/#inherited-from_18","title":"Inherited from","text":"<p>MarkdownTheme.project</p>"},{"location":"reference/classes/appium_typedoc_plugin_appium.AppiumTheme/#defined-in_22","title":"Defined in","text":"<p>node_modules/typedoc-plugin-markdown/dist/theme.d.ts:22</p>"},{"location":"reference/classes/appium_typedoc_plugin_appium.AppiumTheme/#publicpath","title":"publicPath","text":"<p>\u2022 publicPath: <code>string</code></p>"},{"location":"reference/classes/appium_typedoc_plugin_appium.AppiumTheme/#inherited-from_19","title":"Inherited from","text":"<p>MarkdownTheme.publicPath</p>"},{"location":"reference/classes/appium_typedoc_plugin_appium.AppiumTheme/#defined-in_23","title":"Defined in","text":"<p>node_modules/typedoc-plugin-markdown/dist/theme.d.ts:19</p>"},{"location":"reference/classes/appium_typedoc_plugin_appium.AppiumTheme/#readme","title":"readme","text":"<p>\u2022 readme: <code>string</code></p>"},{"location":"reference/classes/appium_typedoc_plugin_appium.AppiumTheme/#inherited-from_20","title":"Inherited from","text":"<p>MarkdownTheme.readme</p>"},{"location":"reference/classes/appium_typedoc_plugin_appium.AppiumTheme/#defined-in_24","title":"Defined in","text":"<p>node_modules/typedoc-plugin-markdown/dist/theme.d.ts:17</p>"},{"location":"reference/classes/appium_typedoc_plugin_appium.AppiumTheme/#reflection","title":"reflection","text":"<p>\u2022 <code>Optional</code> reflection: <code>DeclarationReflection</code></p>"},{"location":"reference/classes/appium_typedoc_plugin_appium.AppiumTheme/#inherited-from_21","title":"Inherited from","text":"<p>MarkdownTheme.reflection</p>"},{"location":"reference/classes/appium_typedoc_plugin_appium.AppiumTheme/#defined-in_25","title":"Defined in","text":"<p>node_modules/typedoc-plugin-markdown/dist/theme.d.ts:23</p>"},{"location":"reference/classes/appium_typedoc_plugin_appium.AppiumTheme/#url_prefix","title":"URL_PREFIX","text":"<p>\u25aa <code>Static</code> URL_PREFIX: <code>RegExp</code></p>"},{"location":"reference/classes/appium_typedoc_plugin_appium.AppiumTheme/#inherited-from_22","title":"Inherited from","text":"<p>MarkdownTheme.URL_PREFIX</p>"},{"location":"reference/classes/appium_typedoc_plugin_appium.AppiumTheme/#defined-in_26","title":"Defined in","text":"<p>node_modules/typedoc-plugin-markdown/dist/theme.d.ts:26</p>"},{"location":"reference/classes/appium_typedoc_plugin_appium.AppiumTheme/#accessors_1","title":"Accessors","text":""},{"location":"reference/classes/appium_typedoc_plugin_appium.AppiumTheme/#_listenid","title":"_listenId","text":"<p>\u2022 <code>Private</code> <code>get</code> _listenId(): <code>any</code></p> <p>A unique id that identifies this instance.</p>"},{"location":"reference/classes/appium_typedoc_plugin_appium.AppiumTheme/#returns","title":"Returns","text":"<p><code>any</code></p>"},{"location":"reference/classes/appium_typedoc_plugin_appium.AppiumTheme/#inherited-from_23","title":"Inherited from","text":"<p>MarkdownTheme._listenId</p>"},{"location":"reference/classes/appium_typedoc_plugin_appium.AppiumTheme/#defined-in_27","title":"Defined in","text":"<p>node_modules/typedoc/dist/lib/utils/events.d.ts:70</p>"},{"location":"reference/classes/appium_typedoc_plugin_appium.AppiumTheme/#application","title":"application","text":"<p>\u2022 <code>get</code> application(): <code>Application</code></p> <p>Return the application / root component instance.</p>"},{"location":"reference/classes/appium_typedoc_plugin_appium.AppiumTheme/#returns_1","title":"Returns","text":"<p><code>Application</code></p>"},{"location":"reference/classes/appium_typedoc_plugin_appium.AppiumTheme/#inherited-from_24","title":"Inherited from","text":"<p>MarkdownTheme.application</p>"},{"location":"reference/classes/appium_typedoc_plugin_appium.AppiumTheme/#defined-in_28","title":"Defined in","text":"<p>node_modules/typedoc/dist/lib/utils/component.d.ts:61</p>"},{"location":"reference/classes/appium_typedoc_plugin_appium.AppiumTheme/#globalsfile","title":"globalsFile","text":"<p>\u2022 <code>get</code> globalsFile(): <code>string</code></p>"},{"location":"reference/classes/appium_typedoc_plugin_appium.AppiumTheme/#returns_2","title":"Returns","text":"<p><code>string</code></p>"},{"location":"reference/classes/appium_typedoc_plugin_appium.AppiumTheme/#inherited-from_25","title":"Inherited from","text":"<p>MarkdownTheme.globalsFile</p>"},{"location":"reference/classes/appium_typedoc_plugin_appium.AppiumTheme/#defined-in_29","title":"Defined in","text":"<p>node_modules/typedoc-plugin-markdown/dist/theme.d.ts:49</p>"},{"location":"reference/classes/appium_typedoc_plugin_appium.AppiumTheme/#mappings","title":"mappings","text":"<p>\u2022 <code>get</code> mappings(): <code>TemplateMapping</code>[]</p> <p>A lookup of ReflectionKinds to templates.  It also controls in which directory the output files live.</p> <p>This is part of MarkdownTheme and adds a new template.</p> <p>If <code>isLeaf</code> is <code>false</code>, the model gets its own document.</p>"},{"location":"reference/classes/appium_typedoc_plugin_appium.AppiumTheme/#returns_3","title":"Returns","text":"<p><code>TemplateMapping</code>[]</p>"},{"location":"reference/classes/appium_typedoc_plugin_appium.AppiumTheme/#overrides_1","title":"Overrides","text":"<p>MarkdownTheme.mappings</p>"},{"location":"reference/classes/appium_typedoc_plugin_appium.AppiumTheme/#defined-in_30","title":"Defined in","text":"<p>packages/typedoc-plugin-appium/lib/theme/index.ts:69</p>"},{"location":"reference/classes/appium_typedoc_plugin_appium.AppiumTheme/#owner","title":"owner","text":"<p>\u2022 <code>get</code> owner(): <code>O</code></p> <p>Return the owner of this component.</p>"},{"location":"reference/classes/appium_typedoc_plugin_appium.AppiumTheme/#returns_4","title":"Returns","text":"<p><code>O</code></p>"},{"location":"reference/classes/appium_typedoc_plugin_appium.AppiumTheme/#inherited-from_26","title":"Inherited from","text":"<p>MarkdownTheme.owner</p>"},{"location":"reference/classes/appium_typedoc_plugin_appium.AppiumTheme/#defined-in_31","title":"Defined in","text":"<p>node_modules/typedoc/dist/lib/utils/component.d.ts:65</p>"},{"location":"reference/classes/appium_typedoc_plugin_appium.AppiumTheme/#methods_1","title":"Methods","text":""},{"location":"reference/classes/appium_typedoc_plugin_appium.AppiumTheme/#createtemplaterenderer","title":"#createTemplateRenderer","text":"<p>\u25b8 <code>Private</code> #createTemplateRenderer(<code>template</code>): <code>TemplateRenderer</code></p> <p>Given a <code>AppiumThemeTemplate</code> return a function which will render the template given some data.</p>"},{"location":"reference/classes/appium_typedoc_plugin_appium.AppiumTheme/#parameters_1","title":"Parameters","text":"Name Type Description <code>template</code> <code>Extension</code> Template to render"},{"location":"reference/classes/appium_typedoc_plugin_appium.AppiumTheme/#returns_5","title":"Returns","text":"<p><code>TemplateRenderer</code></p> <p>Rendering function</p>"},{"location":"reference/classes/appium_typedoc_plugin_appium.AppiumTheme/#defined-in_32","title":"Defined in","text":"<p>packages/typedoc-plugin-appium/lib/theme/index.ts:87</p>"},{"location":"reference/classes/appium_typedoc_plugin_appium.AppiumTheme/#applyanchorurl","title":"applyAnchorUrl","text":"<p>\u25b8 applyAnchorUrl(<code>reflection</code>, <code>container</code>, <code>isSymbol?</code>): <code>void</code></p>"},{"location":"reference/classes/appium_typedoc_plugin_appium.AppiumTheme/#parameters_2","title":"Parameters","text":"Name Type <code>reflection</code> <code>Reflection</code> <code>container</code> <code>Reflection</code> <code>isSymbol?</code> <code>boolean</code>"},{"location":"reference/classes/appium_typedoc_plugin_appium.AppiumTheme/#returns_6","title":"Returns","text":"<p><code>void</code></p>"},{"location":"reference/classes/appium_typedoc_plugin_appium.AppiumTheme/#inherited-from_27","title":"Inherited from","text":"<p>MarkdownTheme.applyAnchorUrl</p>"},{"location":"reference/classes/appium_typedoc_plugin_appium.AppiumTheme/#defined-in_33","title":"Defined in","text":"<p>node_modules/typedoc-plugin-markdown/dist/theme.d.ts:34</p>"},{"location":"reference/classes/appium_typedoc_plugin_appium.AppiumTheme/#bubble","title":"bubble","text":"<p>\u25b8 <code>Protected</code> bubble(<code>name</code>, <code>...args</code>): <code>AppiumTheme</code></p>"},{"location":"reference/classes/appium_typedoc_plugin_appium.AppiumTheme/#parameters_3","title":"Parameters","text":"Name Type <code>name</code> <code>string</code> | <code>Event</code> | <code>EventMap</code> <code>...args</code> <code>any</code>[]"},{"location":"reference/classes/appium_typedoc_plugin_appium.AppiumTheme/#returns_7","title":"Returns","text":"<p><code>AppiumTheme</code></p>"},{"location":"reference/classes/appium_typedoc_plugin_appium.AppiumTheme/#inherited-from_28","title":"Inherited from","text":"<p>MarkdownTheme.bubble</p>"},{"location":"reference/classes/appium_typedoc_plugin_appium.AppiumTheme/#defined-in_34","title":"Defined in","text":"<p>node_modules/typedoc/dist/lib/utils/component.d.ts:57</p>"},{"location":"reference/classes/appium_typedoc_plugin_appium.AppiumTheme/#buildurls","title":"buildUrls","text":"<p>\u25b8 buildUrls(<code>reflection</code>, <code>urls</code>): <code>UrlMapping</code>&lt;<code>any</code>&gt;[]</p>"},{"location":"reference/classes/appium_typedoc_plugin_appium.AppiumTheme/#parameters_4","title":"Parameters","text":"Name Type <code>reflection</code> <code>DeclarationReflection</code> <code>urls</code> <code>UrlMapping</code>&lt;<code>any</code>&gt;[]"},{"location":"reference/classes/appium_typedoc_plugin_appium.AppiumTheme/#returns_8","title":"Returns","text":"<p><code>UrlMapping</code>&lt;<code>any</code>&gt;[]</p>"},{"location":"reference/classes/appium_typedoc_plugin_appium.AppiumTheme/#inherited-from_29","title":"Inherited from","text":"<p>MarkdownTheme.buildUrls</p>"},{"location":"reference/classes/appium_typedoc_plugin_appium.AppiumTheme/#defined-in_35","title":"Defined in","text":"<p>node_modules/typedoc-plugin-markdown/dist/theme.d.ts:31</p>"},{"location":"reference/classes/appium_typedoc_plugin_appium.AppiumTheme/#getindextemplate","title":"getIndexTemplate","text":"<p>\u25b8 getIndexTemplate(): (<code>pageEvent</code>: <code>PageEvent</code>&lt;<code>ContainerReflection</code>&gt;) =&gt; <code>string</code></p>"},{"location":"reference/classes/appium_typedoc_plugin_appium.AppiumTheme/#returns_9","title":"Returns","text":"<p><code>fn</code></p> <p>\u25b8 (<code>pageEvent</code>): <code>string</code></p>"},{"location":"reference/classes/appium_typedoc_plugin_appium.AppiumTheme/#parameters_5","title":"Parameters","text":"Name Type <code>pageEvent</code> <code>PageEvent</code>&lt;<code>ContainerReflection</code>&gt;"},{"location":"reference/classes/appium_typedoc_plugin_appium.AppiumTheme/#returns_10","title":"Returns","text":"<p><code>string</code></p>"},{"location":"reference/classes/appium_typedoc_plugin_appium.AppiumTheme/#inherited-from_30","title":"Inherited from","text":"<p>MarkdownTheme.getIndexTemplate</p>"},{"location":"reference/classes/appium_typedoc_plugin_appium.AppiumTheme/#defined-in_36","title":"Defined in","text":"<p>node_modules/typedoc-plugin-markdown/dist/theme.d.ts:39</p>"},{"location":"reference/classes/appium_typedoc_plugin_appium.AppiumTheme/#getnavigation","title":"getNavigation","text":"<p>\u25b8 getNavigation(<code>project</code>): <code>NavigationItem</code></p>"},{"location":"reference/classes/appium_typedoc_plugin_appium.AppiumTheme/#parameters_6","title":"Parameters","text":"Name Type <code>project</code> <code>ProjectReflection</code>"},{"location":"reference/classes/appium_typedoc_plugin_appium.AppiumTheme/#returns_11","title":"Returns","text":"<p><code>NavigationItem</code></p>"},{"location":"reference/classes/appium_typedoc_plugin_appium.AppiumTheme/#inherited-from_31","title":"Inherited from","text":"<p>MarkdownTheme.getNavigation</p>"},{"location":"reference/classes/appium_typedoc_plugin_appium.AppiumTheme/#defined-in_37","title":"Defined in","text":"<p>node_modules/typedoc-plugin-markdown/dist/theme.d.ts:40</p>"},{"location":"reference/classes/appium_typedoc_plugin_appium.AppiumTheme/#getoption","title":"getOption","text":"<p>\u25b8 getOption(<code>key</code>): <code>unknown</code></p>"},{"location":"reference/classes/appium_typedoc_plugin_appium.AppiumTheme/#parameters_7","title":"Parameters","text":"Name Type <code>key</code> <code>string</code>"},{"location":"reference/classes/appium_typedoc_plugin_appium.AppiumTheme/#returns_12","title":"Returns","text":"<p><code>unknown</code></p>"},{"location":"reference/classes/appium_typedoc_plugin_appium.AppiumTheme/#inherited-from_32","title":"Inherited from","text":"<p>MarkdownTheme.getOption</p>"},{"location":"reference/classes/appium_typedoc_plugin_appium.AppiumTheme/#defined-in_38","title":"Defined in","text":"<p>node_modules/typedoc-plugin-markdown/dist/theme.d.ts:29</p>"},{"location":"reference/classes/appium_typedoc_plugin_appium.AppiumTheme/#getreflectionmembertemplate","title":"getReflectionMemberTemplate","text":"<p>\u25b8 getReflectionMemberTemplate(): (<code>pageEvent</code>: <code>PageEvent</code>&lt;<code>ContainerReflection</code>&gt;) =&gt; <code>string</code></p>"},{"location":"reference/classes/appium_typedoc_plugin_appium.AppiumTheme/#returns_13","title":"Returns","text":"<p><code>fn</code></p> <p>\u25b8 (<code>pageEvent</code>): <code>string</code></p>"},{"location":"reference/classes/appium_typedoc_plugin_appium.AppiumTheme/#parameters_8","title":"Parameters","text":"Name Type <code>pageEvent</code> <code>PageEvent</code>&lt;<code>ContainerReflection</code>&gt;"},{"location":"reference/classes/appium_typedoc_plugin_appium.AppiumTheme/#returns_14","title":"Returns","text":"<p><code>string</code></p>"},{"location":"reference/classes/appium_typedoc_plugin_appium.AppiumTheme/#inherited-from_33","title":"Inherited from","text":"<p>MarkdownTheme.getReflectionMemberTemplate</p>"},{"location":"reference/classes/appium_typedoc_plugin_appium.AppiumTheme/#defined-in_39","title":"Defined in","text":"<p>node_modules/typedoc-plugin-markdown/dist/theme.d.ts:38</p>"},{"location":"reference/classes/appium_typedoc_plugin_appium.AppiumTheme/#getreflectiontemplate","title":"getReflectionTemplate","text":"<p>\u25b8 getReflectionTemplate(): (<code>pageEvent</code>: <code>PageEvent</code>&lt;<code>ContainerReflection</code>&gt;) =&gt; <code>string</code></p>"},{"location":"reference/classes/appium_typedoc_plugin_appium.AppiumTheme/#returns_15","title":"Returns","text":"<p><code>fn</code></p> <p>\u25b8 (<code>pageEvent</code>): <code>string</code></p>"},{"location":"reference/classes/appium_typedoc_plugin_appium.AppiumTheme/#parameters_9","title":"Parameters","text":"Name Type <code>pageEvent</code> <code>PageEvent</code>&lt;<code>ContainerReflection</code>&gt;"},{"location":"reference/classes/appium_typedoc_plugin_appium.AppiumTheme/#returns_16","title":"Returns","text":"<p><code>string</code></p>"},{"location":"reference/classes/appium_typedoc_plugin_appium.AppiumTheme/#inherited-from_34","title":"Inherited from","text":"<p>MarkdownTheme.getReflectionTemplate</p>"},{"location":"reference/classes/appium_typedoc_plugin_appium.AppiumTheme/#defined-in_40","title":"Defined in","text":"<p>node_modules/typedoc-plugin-markdown/dist/theme.d.ts:37</p>"},{"location":"reference/classes/appium_typedoc_plugin_appium.AppiumTheme/#getrelativeurl","title":"getRelativeUrl","text":"<p>\u25b8 getRelativeUrl(<code>absolute</code>): <code>string</code></p>"},{"location":"reference/classes/appium_typedoc_plugin_appium.AppiumTheme/#parameters_10","title":"Parameters","text":"Name Type <code>absolute</code> <code>string</code>"},{"location":"reference/classes/appium_typedoc_plugin_appium.AppiumTheme/#returns_17","title":"Returns","text":"<p><code>string</code></p>"},{"location":"reference/classes/appium_typedoc_plugin_appium.AppiumTheme/#inherited-from_35","title":"Inherited from","text":"<p>MarkdownTheme.getRelativeUrl</p>"},{"location":"reference/classes/appium_typedoc_plugin_appium.AppiumTheme/#defined-in_41","title":"Defined in","text":"<p>node_modules/typedoc-plugin-markdown/dist/theme.d.ts:36</p>"},{"location":"reference/classes/appium_typedoc_plugin_appium.AppiumTheme/#geturl","title":"getUrl","text":"<p>\u25b8 getUrl(<code>reflection</code>, <code>relative?</code>): <code>string</code></p>"},{"location":"reference/classes/appium_typedoc_plugin_appium.AppiumTheme/#parameters_11","title":"Parameters","text":"Name Type <code>reflection</code> <code>Reflection</code> <code>relative?</code> <code>Reflection</code>"},{"location":"reference/classes/appium_typedoc_plugin_appium.AppiumTheme/#returns_18","title":"Returns","text":"<p><code>string</code></p>"},{"location":"reference/classes/appium_typedoc_plugin_appium.AppiumTheme/#inherited-from_36","title":"Inherited from","text":"<p>MarkdownTheme.getUrl</p>"},{"location":"reference/classes/appium_typedoc_plugin_appium.AppiumTheme/#defined-in_42","title":"Defined in","text":"<p>node_modules/typedoc-plugin-markdown/dist/theme.d.ts:33</p>"},{"location":"reference/classes/appium_typedoc_plugin_appium.AppiumTheme/#geturls","title":"getUrls","text":"<p>\u25b8 getUrls(<code>project</code>): <code>UrlMapping</code>&lt;<code>any</code>&gt;[]</p>"},{"location":"reference/classes/appium_typedoc_plugin_appium.AppiumTheme/#parameters_12","title":"Parameters","text":"Name Type <code>project</code> <code>ProjectReflection</code>"},{"location":"reference/classes/appium_typedoc_plugin_appium.AppiumTheme/#returns_19","title":"Returns","text":"<p><code>UrlMapping</code>&lt;<code>any</code>&gt;[]</p>"},{"location":"reference/classes/appium_typedoc_plugin_appium.AppiumTheme/#inherited-from_37","title":"Inherited from","text":"<p>MarkdownTheme.getUrls</p>"},{"location":"reference/classes/appium_typedoc_plugin_appium.AppiumTheme/#defined-in_43","title":"Defined in","text":"<p>node_modules/typedoc-plugin-markdown/dist/theme.d.ts:30</p>"},{"location":"reference/classes/appium_typedoc_plugin_appium.AppiumTheme/#initialize","title":"initialize","text":"<p>\u25b8 <code>Protected</code> initialize(): <code>void</code></p> <p>Initialize this component.</p>"},{"location":"reference/classes/appium_typedoc_plugin_appium.AppiumTheme/#returns_20","title":"Returns","text":"<p><code>void</code></p>"},{"location":"reference/classes/appium_typedoc_plugin_appium.AppiumTheme/#inherited-from_38","title":"Inherited from","text":"<p>MarkdownTheme.initialize</p>"},{"location":"reference/classes/appium_typedoc_plugin_appium.AppiumTheme/#defined-in_44","title":"Defined in","text":"<p>node_modules/typedoc/dist/lib/utils/component.d.ts:56</p>"},{"location":"reference/classes/appium_typedoc_plugin_appium.AppiumTheme/#listento","title":"listenTo","text":"<p>\u25b8 listenTo(<code>obj</code>, <code>name</code>, <code>callback?</code>, <code>priority?</code>): <code>AppiumTheme</code></p> <p>Inversion-of-control versions of <code>on</code>. Tell this object to listen to an event in another object... keeping track of what it's listening to for easier unbinding later.</p>"},{"location":"reference/classes/appium_typedoc_plugin_appium.AppiumTheme/#parameters_13","title":"Parameters","text":"Name Type <code>obj</code> <code>EventDispatcher</code> <code>name</code> <code>string</code> | <code>EventMap</code> <code>callback?</code> <code>EventCallback</code> <code>priority?</code> <code>number</code>"},{"location":"reference/classes/appium_typedoc_plugin_appium.AppiumTheme/#returns_21","title":"Returns","text":"<p><code>AppiumTheme</code></p>"},{"location":"reference/classes/appium_typedoc_plugin_appium.AppiumTheme/#inherited-from_39","title":"Inherited from","text":"<p>MarkdownTheme.listenTo</p>"},{"location":"reference/classes/appium_typedoc_plugin_appium.AppiumTheme/#defined-in_45","title":"Defined in","text":"<p>node_modules/typedoc/dist/lib/utils/events.d.ts:105</p>"},{"location":"reference/classes/appium_typedoc_plugin_appium.AppiumTheme/#listentoonce","title":"listenToOnce","text":"<p>\u25b8 listenToOnce(<code>obj</code>, <code>eventMap</code>): <code>AppiumTheme</code></p> <p>Inversion-of-control versions of <code>once</code>.</p>"},{"location":"reference/classes/appium_typedoc_plugin_appium.AppiumTheme/#parameters_14","title":"Parameters","text":"Name Type <code>obj</code> <code>EventDispatcher</code> <code>eventMap</code> <code>EventMap</code>"},{"location":"reference/classes/appium_typedoc_plugin_appium.AppiumTheme/#returns_22","title":"Returns","text":"<p><code>AppiumTheme</code></p>"},{"location":"reference/classes/appium_typedoc_plugin_appium.AppiumTheme/#inherited-from_40","title":"Inherited from","text":"<p>MarkdownTheme.listenToOnce</p>"},{"location":"reference/classes/appium_typedoc_plugin_appium.AppiumTheme/#defined-in_46","title":"Defined in","text":"<p>node_modules/typedoc/dist/lib/utils/events.d.ts:109</p> <p>\u25b8 listenToOnce(<code>obj</code>, <code>name</code>, <code>callback</code>, <code>priority?</code>): <code>AppiumTheme</code></p>"},{"location":"reference/classes/appium_typedoc_plugin_appium.AppiumTheme/#parameters_15","title":"Parameters","text":"Name Type <code>obj</code> <code>EventDispatcher</code> <code>name</code> <code>string</code> <code>callback</code> <code>EventCallback</code> <code>priority?</code> <code>number</code>"},{"location":"reference/classes/appium_typedoc_plugin_appium.AppiumTheme/#returns_23","title":"Returns","text":"<p><code>AppiumTheme</code></p>"},{"location":"reference/classes/appium_typedoc_plugin_appium.AppiumTheme/#inherited-from_41","title":"Inherited from","text":"<p>MarkdownTheme.listenToOnce</p>"},{"location":"reference/classes/appium_typedoc_plugin_appium.AppiumTheme/#defined-in_47","title":"Defined in","text":"<p>node_modules/typedoc/dist/lib/utils/events.d.ts:110</p>"},{"location":"reference/classes/appium_typedoc_plugin_appium.AppiumTheme/#off","title":"off","text":"<p>\u25b8 off(): <code>AppiumTheme</code></p> <p>Remove one or many callbacks. If <code>context</code> is null, removes all callbacks with that function. If <code>callback</code> is null, removes all callbacks for the event. If <code>name</code> is null, removes all bound callbacks for all events.</p>"},{"location":"reference/classes/appium_typedoc_plugin_appium.AppiumTheme/#returns_24","title":"Returns","text":"<p><code>AppiumTheme</code></p>"},{"location":"reference/classes/appium_typedoc_plugin_appium.AppiumTheme/#inherited-from_42","title":"Inherited from","text":"<p>MarkdownTheme.off</p>"},{"location":"reference/classes/appium_typedoc_plugin_appium.AppiumTheme/#defined-in_48","title":"Defined in","text":"<p>node_modules/typedoc/dist/lib/utils/events.d.ts:97</p> <p>\u25b8 off(<code>eventMap</code>, <code>context?</code>): <code>AppiumTheme</code></p>"},{"location":"reference/classes/appium_typedoc_plugin_appium.AppiumTheme/#parameters_16","title":"Parameters","text":"Name Type <code>eventMap</code> <code>undefined</code> | <code>EventMap</code> <code>context?</code> <code>any</code>"},{"location":"reference/classes/appium_typedoc_plugin_appium.AppiumTheme/#returns_25","title":"Returns","text":"<p><code>AppiumTheme</code></p>"},{"location":"reference/classes/appium_typedoc_plugin_appium.AppiumTheme/#inherited-from_43","title":"Inherited from","text":"<p>MarkdownTheme.off</p>"},{"location":"reference/classes/appium_typedoc_plugin_appium.AppiumTheme/#defined-in_49","title":"Defined in","text":"<p>node_modules/typedoc/dist/lib/utils/events.d.ts:98</p> <p>\u25b8 off(<code>name</code>, <code>callback?</code>, <code>context?</code>): <code>AppiumTheme</code></p>"},{"location":"reference/classes/appium_typedoc_plugin_appium.AppiumTheme/#parameters_17","title":"Parameters","text":"Name Type <code>name</code> <code>undefined</code> | <code>string</code> <code>callback?</code> <code>EventCallback</code> <code>context?</code> <code>any</code>"},{"location":"reference/classes/appium_typedoc_plugin_appium.AppiumTheme/#returns_26","title":"Returns","text":"<p><code>AppiumTheme</code></p>"},{"location":"reference/classes/appium_typedoc_plugin_appium.AppiumTheme/#inherited-from_44","title":"Inherited from","text":"<p>MarkdownTheme.off</p>"},{"location":"reference/classes/appium_typedoc_plugin_appium.AppiumTheme/#defined-in_50","title":"Defined in","text":"<p>node_modules/typedoc/dist/lib/utils/events.d.ts:99</p>"},{"location":"reference/classes/appium_typedoc_plugin_appium.AppiumTheme/#on","title":"on","text":"<p>\u25b8 on(<code>eventMap</code>, <code>context?</code>): <code>AppiumTheme</code></p> <p>Bind an event to a <code>callback</code> function. Passing <code>\"all\"</code> will bind the callback to all events fired.</p>"},{"location":"reference/classes/appium_typedoc_plugin_appium.AppiumTheme/#parameters_18","title":"Parameters","text":"Name Type <code>eventMap</code> <code>EventMap</code> <code>context?</code> <code>any</code>"},{"location":"reference/classes/appium_typedoc_plugin_appium.AppiumTheme/#returns_27","title":"Returns","text":"<p><code>AppiumTheme</code></p>"},{"location":"reference/classes/appium_typedoc_plugin_appium.AppiumTheme/#inherited-from_45","title":"Inherited from","text":"<p>MarkdownTheme.on</p>"},{"location":"reference/classes/appium_typedoc_plugin_appium.AppiumTheme/#defined-in_51","title":"Defined in","text":"<p>node_modules/typedoc/dist/lib/utils/events.d.ts:76</p> <p>\u25b8 on(<code>eventMap</code>, <code>callback?</code>, <code>context?</code>, <code>priority?</code>): <code>AppiumTheme</code></p>"},{"location":"reference/classes/appium_typedoc_plugin_appium.AppiumTheme/#parameters_19","title":"Parameters","text":"Name Type <code>eventMap</code> <code>EventMap</code> <code>callback?</code> <code>EventCallback</code> <code>context?</code> <code>any</code> <code>priority?</code> <code>number</code>"},{"location":"reference/classes/appium_typedoc_plugin_appium.AppiumTheme/#returns_28","title":"Returns","text":"<p><code>AppiumTheme</code></p>"},{"location":"reference/classes/appium_typedoc_plugin_appium.AppiumTheme/#inherited-from_46","title":"Inherited from","text":"<p>MarkdownTheme.on</p>"},{"location":"reference/classes/appium_typedoc_plugin_appium.AppiumTheme/#defined-in_52","title":"Defined in","text":"<p>node_modules/typedoc/dist/lib/utils/events.d.ts:77</p> <p>\u25b8 on(<code>name</code>, <code>callback</code>, <code>context?</code>, <code>priority?</code>): <code>AppiumTheme</code></p>"},{"location":"reference/classes/appium_typedoc_plugin_appium.AppiumTheme/#parameters_20","title":"Parameters","text":"Name Type <code>name</code> <code>string</code> <code>callback</code> <code>EventCallback</code> <code>context?</code> <code>any</code> <code>priority?</code> <code>number</code>"},{"location":"reference/classes/appium_typedoc_plugin_appium.AppiumTheme/#returns_29","title":"Returns","text":"<p><code>AppiumTheme</code></p>"},{"location":"reference/classes/appium_typedoc_plugin_appium.AppiumTheme/#inherited-from_47","title":"Inherited from","text":"<p>MarkdownTheme.on</p>"},{"location":"reference/classes/appium_typedoc_plugin_appium.AppiumTheme/#defined-in_53","title":"Defined in","text":"<p>node_modules/typedoc/dist/lib/utils/events.d.ts:78</p>"},{"location":"reference/classes/appium_typedoc_plugin_appium.AppiumTheme/#onbeginpage","title":"onBeginPage","text":"<p>\u25b8 <code>Protected</code> onBeginPage(<code>page</code>): <code>void</code></p>"},{"location":"reference/classes/appium_typedoc_plugin_appium.AppiumTheme/#parameters_21","title":"Parameters","text":"Name Type <code>page</code> <code>PageEvent</code>&lt;<code>unknown</code>&gt;"},{"location":"reference/classes/appium_typedoc_plugin_appium.AppiumTheme/#returns_30","title":"Returns","text":"<p><code>void</code></p>"},{"location":"reference/classes/appium_typedoc_plugin_appium.AppiumTheme/#inherited-from_48","title":"Inherited from","text":"<p>MarkdownTheme.onBeginPage</p>"},{"location":"reference/classes/appium_typedoc_plugin_appium.AppiumTheme/#defined-in_54","title":"Defined in","text":"<p>node_modules/typedoc-plugin-markdown/dist/theme.d.ts:48</p>"},{"location":"reference/classes/appium_typedoc_plugin_appium.AppiumTheme/#onbeginrenderer","title":"onBeginRenderer","text":"<p>\u25b8 <code>Protected</code> onBeginRenderer(<code>event</code>): <code>void</code></p>"},{"location":"reference/classes/appium_typedoc_plugin_appium.AppiumTheme/#parameters_22","title":"Parameters","text":"Name Type <code>event</code> <code>RendererEvent</code>"},{"location":"reference/classes/appium_typedoc_plugin_appium.AppiumTheme/#returns_31","title":"Returns","text":"<p><code>void</code></p>"},{"location":"reference/classes/appium_typedoc_plugin_appium.AppiumTheme/#inherited-from_49","title":"Inherited from","text":"<p>MarkdownTheme.onBeginRenderer</p>"},{"location":"reference/classes/appium_typedoc_plugin_appium.AppiumTheme/#defined-in_55","title":"Defined in","text":"<p>node_modules/typedoc-plugin-markdown/dist/theme.d.ts:47</p>"},{"location":"reference/classes/appium_typedoc_plugin_appium.AppiumTheme/#once","title":"once","text":"<p>\u25b8 once(<code>eventMap</code>, <code>context?</code>): <code>AppiumTheme</code></p> <p>Bind an event to only be triggered a single time. After the first time the callback is invoked, its listener will be removed. If multiple events are passed in using the space-separated syntax, the handler will fire once for each event, not once for a combination of all events.</p>"},{"location":"reference/classes/appium_typedoc_plugin_appium.AppiumTheme/#parameters_23","title":"Parameters","text":"Name Type <code>eventMap</code> <code>EventMap</code> <code>context?</code> <code>any</code>"},{"location":"reference/classes/appium_typedoc_plugin_appium.AppiumTheme/#returns_32","title":"Returns","text":"<p><code>AppiumTheme</code></p>"},{"location":"reference/classes/appium_typedoc_plugin_appium.AppiumTheme/#inherited-from_50","title":"Inherited from","text":"<p>MarkdownTheme.once</p>"},{"location":"reference/classes/appium_typedoc_plugin_appium.AppiumTheme/#defined-in_56","title":"Defined in","text":"<p>node_modules/typedoc/dist/lib/utils/events.d.ts:89</p> <p>\u25b8 once(<code>name</code>, <code>callback</code>, <code>context?</code>, <code>priority?</code>): <code>AppiumTheme</code></p>"},{"location":"reference/classes/appium_typedoc_plugin_appium.AppiumTheme/#parameters_24","title":"Parameters","text":"Name Type <code>name</code> <code>string</code> <code>callback</code> <code>EventCallback</code> <code>context?</code> <code>any</code> <code>priority?</code> <code>any</code>"},{"location":"reference/classes/appium_typedoc_plugin_appium.AppiumTheme/#returns_33","title":"Returns","text":"<p><code>AppiumTheme</code></p>"},{"location":"reference/classes/appium_typedoc_plugin_appium.AppiumTheme/#inherited-from_51","title":"Inherited from","text":"<p>MarkdownTheme.once</p>"},{"location":"reference/classes/appium_typedoc_plugin_appium.AppiumTheme/#defined-in_57","title":"Defined in","text":"<p>node_modules/typedoc/dist/lib/utils/events.d.ts:90</p>"},{"location":"reference/classes/appium_typedoc_plugin_appium.AppiumTheme/#render","title":"render","text":"<p>\u25b8 render(<code>page</code>): <code>string</code></p>"},{"location":"reference/classes/appium_typedoc_plugin_appium.AppiumTheme/#parameters_25","title":"Parameters","text":"Name Type <code>page</code> <code>PageEvent</code>&lt;<code>Reflection</code>&gt;"},{"location":"reference/classes/appium_typedoc_plugin_appium.AppiumTheme/#returns_34","title":"Returns","text":"<p><code>string</code></p>"},{"location":"reference/classes/appium_typedoc_plugin_appium.AppiumTheme/#inherited-from_52","title":"Inherited from","text":"<p>MarkdownTheme.render</p>"},{"location":"reference/classes/appium_typedoc_plugin_appium.AppiumTheme/#defined-in_58","title":"Defined in","text":"<p>node_modules/typedoc-plugin-markdown/dist/theme.d.ts:28</p>"},{"location":"reference/classes/appium_typedoc_plugin_appium.AppiumTheme/#stoplistening","title":"stopListening","text":"<p>\u25b8 stopListening(<code>obj?</code>, <code>name?</code>, <code>callback?</code>): <code>AppiumTheme</code></p> <p>Tell this object to stop listening to either specific events ... or to every object it's currently listening to.</p>"},{"location":"reference/classes/appium_typedoc_plugin_appium.AppiumTheme/#parameters_26","title":"Parameters","text":"Name Type <code>obj?</code> <code>EventDispatcher</code> <code>name?</code> <code>string</code> | <code>EventMap</code> <code>callback?</code> <code>EventCallback</code>"},{"location":"reference/classes/appium_typedoc_plugin_appium.AppiumTheme/#returns_35","title":"Returns","text":"<p><code>AppiumTheme</code></p>"},{"location":"reference/classes/appium_typedoc_plugin_appium.AppiumTheme/#inherited-from_53","title":"Inherited from","text":"<p>MarkdownTheme.stopListening</p>"},{"location":"reference/classes/appium_typedoc_plugin_appium.AppiumTheme/#defined-in_59","title":"Defined in","text":"<p>node_modules/typedoc/dist/lib/utils/events.d.ts:115</p>"},{"location":"reference/classes/appium_typedoc_plugin_appium.AppiumTheme/#toanchorref","title":"toAnchorRef","text":"<p>\u25b8 toAnchorRef(<code>reflectionId</code>): <code>string</code></p>"},{"location":"reference/classes/appium_typedoc_plugin_appium.AppiumTheme/#parameters_27","title":"Parameters","text":"Name Type <code>reflectionId</code> <code>string</code>"},{"location":"reference/classes/appium_typedoc_plugin_appium.AppiumTheme/#returns_36","title":"Returns","text":"<p><code>string</code></p>"},{"location":"reference/classes/appium_typedoc_plugin_appium.AppiumTheme/#inherited-from_54","title":"Inherited from","text":"<p>MarkdownTheme.toAnchorRef</p>"},{"location":"reference/classes/appium_typedoc_plugin_appium.AppiumTheme/#defined-in_60","title":"Defined in","text":"<p>node_modules/typedoc-plugin-markdown/dist/theme.d.ts:35</p>"},{"location":"reference/classes/appium_typedoc_plugin_appium.AppiumTheme/#tourl","title":"toUrl","text":"<p>\u25b8 toUrl(<code>mapping</code>, <code>reflection</code>): <code>string</code></p>"},{"location":"reference/classes/appium_typedoc_plugin_appium.AppiumTheme/#parameters_28","title":"Parameters","text":"Name Type <code>mapping</code> <code>any</code> <code>reflection</code> <code>DeclarationReflection</code>"},{"location":"reference/classes/appium_typedoc_plugin_appium.AppiumTheme/#returns_37","title":"Returns","text":"<p><code>string</code></p>"},{"location":"reference/classes/appium_typedoc_plugin_appium.AppiumTheme/#inherited-from_55","title":"Inherited from","text":"<p>MarkdownTheme.toUrl</p>"},{"location":"reference/classes/appium_typedoc_plugin_appium.AppiumTheme/#defined-in_61","title":"Defined in","text":"<p>node_modules/typedoc-plugin-markdown/dist/theme.d.ts:32</p>"},{"location":"reference/classes/appium_typedoc_plugin_appium.AppiumTheme/#trigger","title":"trigger","text":"<p>\u25b8 trigger(<code>name</code>, <code>...args</code>): <code>AppiumTheme</code></p> <p>Trigger one or many events, firing all bound callbacks. Callbacks are passed the same arguments as <code>trigger</code> is, apart from the event name (unless you're listening on <code>\"all\"</code>, which will cause your callback to receive the true name of the event as the first argument).</p>"},{"location":"reference/classes/appium_typedoc_plugin_appium.AppiumTheme/#parameters_29","title":"Parameters","text":"Name Type <code>name</code> <code>string</code> | <code>Event</code> | <code>EventMap</code> <code>...args</code> <code>any</code>[]"},{"location":"reference/classes/appium_typedoc_plugin_appium.AppiumTheme/#returns_38","title":"Returns","text":"<p><code>AppiumTheme</code></p>"},{"location":"reference/classes/appium_typedoc_plugin_appium.AppiumTheme/#inherited-from_56","title":"Inherited from","text":"<p>MarkdownTheme.trigger</p>"},{"location":"reference/classes/appium_typedoc_plugin_appium.AppiumTheme/#defined-in_62","title":"Defined in","text":"<p>node_modules/typedoc/dist/lib/utils/events.d.ts:122</p>"},{"location":"reference/classes/appium_universal_xml_plugin-1.UniversalXMLPlugin/","title":"Class: UniversalXMLPlugin","text":"<p>@appium/universal-xml-plugin.UniversalXMLPlugin</p>"},{"location":"reference/classes/appium_universal_xml_plugin-1.UniversalXMLPlugin/#hierarchy","title":"Hierarchy","text":"<ul> <li><code>\"/Users/jlipps/Code/gh/appium/appium/packages/appium/plugin\"</code></li> </ul> <p>\u21b3 <code>UniversalXMLPlugin</code></p>"},{"location":"reference/classes/appium_universal_xml_plugin-1.UniversalXMLPlugin/#table-of-contents","title":"Table of contents","text":""},{"location":"reference/classes/appium_universal_xml_plugin-1.UniversalXMLPlugin/#constructors","title":"Constructors","text":"<ul> <li>constructor</li> </ul>"},{"location":"reference/classes/appium_universal_xml_plugin-1.UniversalXMLPlugin/#properties","title":"Properties","text":"<ul> <li>commands</li> </ul>"},{"location":"reference/classes/appium_universal_xml_plugin-1.UniversalXMLPlugin/#methods","title":"Methods","text":"<ul> <li>_find</li> <li>findElement</li> <li>findElements</li> <li>getPageSource</li> </ul>"},{"location":"reference/classes/appium_universal_xml_plugin-1.UniversalXMLPlugin/#constructors_1","title":"Constructors","text":""},{"location":"reference/classes/appium_universal_xml_plugin-1.UniversalXMLPlugin/#constructor","title":"constructor","text":"<p>\u2022 new UniversalXMLPlugin()</p>"},{"location":"reference/classes/appium_universal_xml_plugin-1.UniversalXMLPlugin/#inherited-from","title":"Inherited from","text":"<p>BasePlugin.constructor</p>"},{"location":"reference/classes/appium_universal_xml_plugin-1.UniversalXMLPlugin/#properties_1","title":"Properties","text":""},{"location":"reference/classes/appium_universal_xml_plugin-1.UniversalXMLPlugin/#commands","title":"commands","text":"<p>\u2022 commands: <code>string</code>[]</p>"},{"location":"reference/classes/appium_universal_xml_plugin-1.UniversalXMLPlugin/#defined-in","title":"Defined in","text":"<p>packages/universal-xml-plugin/lib/plugin.js:10</p>"},{"location":"reference/classes/appium_universal_xml_plugin-1.UniversalXMLPlugin/#methods_1","title":"Methods","text":""},{"location":"reference/classes/appium_universal_xml_plugin-1.UniversalXMLPlugin/#_find","title":"_find","text":"<p>\u25b8 _find(<code>multiple</code>, <code>next</code>, <code>driver</code>, <code>strategy</code>, <code>selector</code>): <code>Promise</code>&lt;<code>any</code>&gt;</p>"},{"location":"reference/classes/appium_universal_xml_plugin-1.UniversalXMLPlugin/#parameters","title":"Parameters","text":"Name Type <code>multiple</code> <code>any</code> <code>next</code> <code>any</code> <code>driver</code> <code>any</code> <code>strategy</code> <code>any</code> <code>selector</code> <code>any</code>"},{"location":"reference/classes/appium_universal_xml_plugin-1.UniversalXMLPlugin/#returns","title":"Returns","text":"<p><code>Promise</code>&lt;<code>any</code>&gt;</p>"},{"location":"reference/classes/appium_universal_xml_plugin-1.UniversalXMLPlugin/#defined-in_1","title":"Defined in","text":"<p>packages/universal-xml-plugin/lib/plugin.js:56</p>"},{"location":"reference/classes/appium_universal_xml_plugin-1.UniversalXMLPlugin/#findelement","title":"findElement","text":"<p>\u25b8 findElement(<code>...args</code>): <code>Promise</code>&lt;<code>any</code>&gt;</p>"},{"location":"reference/classes/appium_universal_xml_plugin-1.UniversalXMLPlugin/#parameters_1","title":"Parameters","text":"Name Type <code>...args</code> <code>any</code>[]"},{"location":"reference/classes/appium_universal_xml_plugin-1.UniversalXMLPlugin/#returns_1","title":"Returns","text":"<p><code>Promise</code>&lt;<code>any</code>&gt;</p>"},{"location":"reference/classes/appium_universal_xml_plugin-1.UniversalXMLPlugin/#defined-in_2","title":"Defined in","text":"<p>packages/universal-xml-plugin/lib/plugin.js:48</p>"},{"location":"reference/classes/appium_universal_xml_plugin-1.UniversalXMLPlugin/#findelements","title":"findElements","text":"<p>\u25b8 findElements(<code>...args</code>): <code>Promise</code>&lt;<code>any</code>&gt;</p>"},{"location":"reference/classes/appium_universal_xml_plugin-1.UniversalXMLPlugin/#parameters_2","title":"Parameters","text":"Name Type <code>...args</code> <code>any</code>[]"},{"location":"reference/classes/appium_universal_xml_plugin-1.UniversalXMLPlugin/#returns_2","title":"Returns","text":"<p><code>Promise</code>&lt;<code>any</code>&gt;</p>"},{"location":"reference/classes/appium_universal_xml_plugin-1.UniversalXMLPlugin/#defined-in_3","title":"Defined in","text":"<p>packages/universal-xml-plugin/lib/plugin.js:52</p>"},{"location":"reference/classes/appium_universal_xml_plugin-1.UniversalXMLPlugin/#getpagesource","title":"getPageSource","text":"<p>\u25b8 getPageSource(<code>next</code>, <code>driver</code>, <code>sessId</code>, <code>addIndexPath?</code>): <code>Promise</code>&lt;<code>any</code>&gt;</p>"},{"location":"reference/classes/appium_universal_xml_plugin-1.UniversalXMLPlugin/#parameters_3","title":"Parameters","text":"Name Type Default value <code>next</code> <code>any</code> <code>undefined</code> <code>driver</code> <code>any</code> <code>undefined</code> <code>sessId</code> <code>any</code> <code>undefined</code> <code>addIndexPath</code> <code>boolean</code> <code>false</code>"},{"location":"reference/classes/appium_universal_xml_plugin-1.UniversalXMLPlugin/#returns_3","title":"Returns","text":"<p><code>Promise</code>&lt;<code>any</code>&gt;</p>"},{"location":"reference/classes/appium_universal_xml_plugin-1.UniversalXMLPlugin/#defined-in_4","title":"Defined in","text":"<p>packages/universal-xml-plugin/lib/plugin.js:18</p>"},{"location":"reference/commands/appium_base_driver-1._appium_base_driver/","title":"Driver: @appium/base-driver","text":""},{"location":"reference/commands/appium_base_driver-1._appium_base_driver/#commands","title":"Commands","text":""},{"location":"reference/commands/appium_base_driver-1._appium_base_driver/#post-session","title":"<code>POST</code> <code>/session</code>","text":"<p>Historically the first two arguments were reserved for JSONWP capabilities. Appium 2 has dropped the support of these, so now we only accept capability objects in W3C format and thus allow any of the three arguments to represent the latter.</p> <p><code>Param</code></p> <p><code>See</code></p> <p>https://w3c.github.io/webdriver/#new-session</p> <p><code>Remarks</code></p> <p>The shape of this method is strange because it used to support both JSONWP and W3C capabilities. This will likely change in the future to simplify.</p>"},{"location":"reference/commands/appium_base_driver-1._appium_base_driver/#parameters","title":"Parameters","text":"Name Type <code>desiredCapabilities?</code> <code>W3CCapabilities</code>&lt;<code>any</code>, <code>void</code>&gt; <code>requiredCapabilities?</code> <code>W3CCapabilities</code>&lt;<code>any</code>, <code>void</code>&gt; <code>capabilities?</code> <code>W3CCapabilities</code>&lt;<code>any</code>, <code>void</code>&gt;"},{"location":"reference/commands/appium_base_driver-1._appium_base_driver/#response","title":"Response","text":"<p>[<code>string</code>, <code>Partial</code>&lt;<code>ConstraintsToCaps</code>&lt;<code>any</code>&gt; &amp; <code>void</code>&gt;]</p>"},{"location":"reference/commands/appium_base_driver-1._appium_base_driver/#get-sessionsessionid","title":"<code>GET</code> <code>/session/:sessionId</code>","text":"<p>Get the data for the current session</p>"},{"location":"reference/commands/appium_base_driver-1._appium_base_driver/#response_1","title":"Response","text":"<p><code>SingularSessionData</code>&lt;typeof <code>BASE_DESIRED_CAP_CONSTRAINTS</code>, <code>void</code>&gt;</p> <p>A session data object</p>"},{"location":"reference/commands/appium_base_driver-1._appium_base_driver/#delete-sessionsessionid","title":"<code>DELETE</code> <code>/session/:sessionId</code>","text":"<p>Get the data for the current session</p>"},{"location":"reference/commands/appium_base_driver-1._appium_base_driver/#response_2","title":"Response","text":"<p><code>SingularSessionData</code>&lt;typeof <code>BASE_DESIRED_CAP_CONSTRAINTS</code>, <code>void</code>&gt;</p> <p>A session data object</p>"},{"location":"reference/commands/appium_base_driver-1._appium_base_driver/#post-sessionsessionidappiumappreset","title":"<code>POST</code> <code>/session/:sessionId/appium/app/reset</code>","text":"<p>Reset the current session (run the delete session and create session subroutines)</p> <p><code>Deprecated</code></p> <p>Use explicit session management commands instead</p>"},{"location":"reference/commands/appium_base_driver-1._appium_base_driver/#response_3","title":"Response","text":"<p><code>void</code></p>"},{"location":"reference/commands/appium_base_driver-1._appium_base_driver/#post-sessionsessionidappiumevents","title":"<code>POST</code> <code>/session/:sessionId/appium/events</code>","text":"<p>Get a list of events that have occurred in the current session</p> <p><code>Param</code></p> <p>filter the returned events by including one or more types</p>"},{"location":"reference/commands/appium_base_driver-1._appium_base_driver/#parameters_1","title":"Parameters","text":"Name Type <code>type?</code> <code>string</code> | <code>string</code>[]"},{"location":"reference/commands/appium_base_driver-1._appium_base_driver/#response_4","title":"Response","text":"<p><code>EventHistory</code> | <code>Record</code>&lt;<code>string</code>, <code>number</code>&gt;</p> <p>The event history for the session</p>"},{"location":"reference/commands/appium_base_driver-1._appium_base_driver/#post-sessionsessionidappiumlog_event","title":"<code>POST</code> <code>/session/:sessionId/appium/log_event</code>","text":"<p>Add a custom-named event to the Appium event log</p> <p><code>Param</code></p> <p>the name of the vendor or tool the event belongs to, to namespace the event</p>"},{"location":"reference/commands/appium_base_driver-1._appium_base_driver/#parameters_2","title":"Parameters","text":"Name Type <code>vendor</code> <code>string</code> <code>event</code> <code>string</code>"},{"location":"reference/commands/appium_base_driver-1._appium_base_driver/#response_5","title":"Response","text":"<p><code>void</code></p>"},{"location":"reference/commands/appium_base_driver-1._appium_base_driver/#post-sessionsessionidappiumsettings","title":"<code>POST</code> <code>/session/:sessionId/appium/settings</code>","text":"<p>Get the current settings for the session</p>"},{"location":"reference/commands/appium_base_driver-1._appium_base_driver/#required-parameters","title":"Required Parameters","text":"<ul> <li><code>settings</code></li> </ul>"},{"location":"reference/commands/appium_base_driver-1._appium_base_driver/#response_6","title":"Response","text":"<p><code>StringRecord</code></p> <p>The settings object</p>"},{"location":"reference/commands/appium_base_driver-1._appium_base_driver/#get-sessionsessionidappiumsettings","title":"<code>GET</code> <code>/session/:sessionId/appium/settings</code>","text":"<p>Get the current settings for the session</p>"},{"location":"reference/commands/appium_base_driver-1._appium_base_driver/#response_7","title":"Response","text":"<p><code>StringRecord</code></p> <p>The settings object</p>"},{"location":"reference/commands/appium_base_driver-1._appium_base_driver/#post-sessionsessionidelement","title":"<code>POST</code> <code>/session/:sessionId/element</code>","text":"<p>Find a UI element given a locator strategy and a selector, erroring if it can't be found</p> <p><code>See</code></p> <p>https://w3c.github.io/webdriver/#find-element</p> <p><code>Param</code></p> <p>the locator strategy</p>"},{"location":"reference/commands/appium_base_driver-1._appium_base_driver/#parameters_3","title":"Parameters","text":"Name Type <code>using</code> <code>string</code> <code>value</code> <code>string</code>"},{"location":"reference/commands/appium_base_driver-1._appium_base_driver/#response_8","title":"Response","text":"<p><code>Element</code></p> <p>The element object encoding the element id which can be used in element-related commands</p>"},{"location":"reference/commands/appium_base_driver-1._appium_base_driver/#post-sessionsessionidelementelementidelement","title":"<code>POST</code> <code>/session/:sessionId/element/:elementId/element</code>","text":"<p>Find a UI element given a locator strategy and a selector, erroring if it can't be found. Only look for elements among the set of descendants of a given element</p> <p><code>See</code></p> <p>https://w3c.github.io/webdriver/#find-element-from-element</p> <p><code>Param</code></p> <p>the locator strategy</p>"},{"location":"reference/commands/appium_base_driver-1._appium_base_driver/#parameters_4","title":"Parameters","text":"Name Type <code>using</code> <code>string</code> <code>value</code> <code>string</code>"},{"location":"reference/commands/appium_base_driver-1._appium_base_driver/#response_9","title":"Response","text":"<p><code>Element</code></p> <p>The element object encoding the element id which can be used in element-related commands</p>"},{"location":"reference/commands/appium_base_driver-1._appium_base_driver/#post-sessionsessionidelementelementidelements","title":"<code>POST</code> <code>/session/:sessionId/element/:elementId/elements</code>","text":"<p>Find a a list of all UI elements matching a given a locator strategy and a selector. Only look for elements among the set of descendants of a given element</p> <p><code>See</code></p> <p>https://w3c.github.io/webdriver/#find-elements-from-element</p> <p><code>Param</code></p> <p>the locator strategy</p>"},{"location":"reference/commands/appium_base_driver-1._appium_base_driver/#parameters_5","title":"Parameters","text":"Name Type <code>using</code> <code>string</code> <code>value</code> <code>string</code>"},{"location":"reference/commands/appium_base_driver-1._appium_base_driver/#response_10","title":"Response","text":"<p><code>Element</code>[]</p> <p>A possibly-empty list of element objects</p>"},{"location":"reference/commands/appium_base_driver-1._appium_base_driver/#post-sessionsessionidelements","title":"<code>POST</code> <code>/session/:sessionId/elements</code>","text":"<p>Find a a list of all UI elements matching a given a locator strategy and a selector</p> <p><code>See</code></p> <p>https://w3c.github.io/webdriver/#find-elements</p> <p><code>Param</code></p> <p>the locator strategy</p>"},{"location":"reference/commands/appium_base_driver-1._appium_base_driver/#parameters_6","title":"Parameters","text":"Name Type <code>using</code> <code>string</code> <code>value</code> <code>string</code>"},{"location":"reference/commands/appium_base_driver-1._appium_base_driver/#response_11","title":"Response","text":"<p><code>Element</code>[]</p> <p>A possibly-empty list of element objects</p>"},{"location":"reference/commands/appium_base_driver-1._appium_base_driver/#post-sessionsessionidlog","title":"<code>POST</code> <code>/session/:sessionId/log</code>","text":"<p>Get the log for a given log type.</p> <p><code>Param</code></p> <p>Name/key of log type as defined in ILogCommands.supportedLogTypes.</p>"},{"location":"reference/commands/appium_base_driver-1._appium_base_driver/#parameters_7","title":"Parameters","text":"Name Type <code>type</code> <code>string</code>"},{"location":"reference/commands/appium_base_driver-1._appium_base_driver/#response_12","title":"Response","text":"<p><code>unknown</code>[]</p>"},{"location":"reference/commands/appium_base_driver-1._appium_base_driver/#get-sessionsessionidlogtypes","title":"<code>GET</code> <code>/session/:sessionId/log/types</code>","text":"<p>Get available log types as a list of strings</p>"},{"location":"reference/commands/appium_base_driver-1._appium_base_driver/#response_13","title":"Response","text":"<p><code>string</code>[]</p>"},{"location":"reference/commands/appium_base_driver-1._appium_base_driver/#post-sessionsessionidselog","title":"<code>POST</code> <code>/session/:sessionId/se/log</code>","text":"<p>Get the log for a given log type.</p> <p><code>Param</code></p> <p>Name/key of log type as defined in ILogCommands.supportedLogTypes.</p>"},{"location":"reference/commands/appium_base_driver-1._appium_base_driver/#parameters_8","title":"Parameters","text":"Name Type <code>type</code> <code>string</code>"},{"location":"reference/commands/appium_base_driver-1._appium_base_driver/#response_14","title":"Response","text":"<p><code>unknown</code>[]</p>"},{"location":"reference/commands/appium_base_driver-1._appium_base_driver/#get-sessionsessionidselogtypes","title":"<code>GET</code> <code>/session/:sessionId/se/log/types</code>","text":"<p>Get available log types as a list of strings</p>"},{"location":"reference/commands/appium_base_driver-1._appium_base_driver/#response_15","title":"Response","text":"<p><code>string</code>[]</p>"},{"location":"reference/commands/appium_base_driver-1._appium_base_driver/#post-sessionsessionidshadowshadowidelement","title":"<code>POST</code> <code>/session/:sessionId/shadow/:shadowId/element</code>","text":"<p>Find an element from a shadow root</p> <p><code>See</code></p> <p>https://w3c.github.io/webdriver/#find-element-from-shadow-root</p> <p><code>Param</code></p> <p>the locator strategy</p>"},{"location":"reference/commands/appium_base_driver-1._appium_base_driver/#parameters_9","title":"Parameters","text":"Name Type <code>using</code> <code>string</code> <code>value</code> <code>string</code>"},{"location":"reference/commands/appium_base_driver-1._appium_base_driver/#response_16","title":"Response","text":"<p><code>Element</code></p> <p>The element inside the shadow root matching the selector</p>"},{"location":"reference/commands/appium_base_driver-1._appium_base_driver/#post-sessionsessionidshadowshadowidelements","title":"<code>POST</code> <code>/session/:sessionId/shadow/:shadowId/elements</code>","text":"<p>Find elements from a shadow root</p> <p><code>See</code></p> <p>https://w3c.github.io/webdriver/#find-element-from-shadow-root</p> <p><code>Param</code></p> <p>the locator strategy</p>"},{"location":"reference/commands/appium_base_driver-1._appium_base_driver/#parameters_10","title":"Parameters","text":"Name Type <code>using</code> <code>string</code> <code>value</code> <code>string</code>"},{"location":"reference/commands/appium_base_driver-1._appium_base_driver/#response_17","title":"Response","text":"<p><code>Element</code>[]</p> <p>A possibly empty list of elements inside the shadow root matching the selector</p>"},{"location":"reference/commands/appium_base_driver-1._appium_base_driver/#get-sessionsessionidsource","title":"<code>GET</code> <code>/session/:sessionId/source</code>","text":"<p>Get the current page/app source as HTML/XML</p> <p><code>See</code></p> <p>https://w3c.github.io/webdriver/#get-page-source</p>"},{"location":"reference/commands/appium_base_driver-1._appium_base_driver/#response_18","title":"Response","text":"<p><code>string</code></p> <p>The UI hierarchy in a platform-appropriate format (e.g., HTML for a web page)</p>"},{"location":"reference/commands/appium_base_driver-1._appium_base_driver/#get-sessionsessionidtimeouts","title":"<code>GET</code> <code>/session/:sessionId/timeouts</code>","text":"<p>Get the current timeouts</p> <p><code>See</code></p> <p>https://w3c.github.io/webdriver/#get-timeouts</p>"},{"location":"reference/commands/appium_base_driver-1._appium_base_driver/#response_19","title":"Response","text":"<p><code>Record</code>&lt;<code>string</code>, <code>number</code>&gt;</p> <p>A map of timeout names to ms values</p>"},{"location":"reference/commands/appium_base_driver-1._appium_base_driver/#post-sessionsessionidtimeouts","title":"<code>POST</code> <code>/session/:sessionId/timeouts</code>","text":"<p>Get the current timeouts</p> <p><code>See</code></p> <p>https://w3c.github.io/webdriver/#get-timeouts</p>"},{"location":"reference/commands/appium_base_driver-1._appium_base_driver/#optional-parameters","title":"Optional Parameters","text":"<ul> <li><code>type</code></li> <li><code>ms</code></li> <li><code>script</code></li> <li><code>pageLoad</code></li> <li><code>implicit</code></li> </ul>"},{"location":"reference/commands/appium_base_driver-1._appium_base_driver/#response_20","title":"Response","text":"<p><code>Record</code>&lt;<code>string</code>, <code>number</code>&gt;</p> <p>A map of timeout names to ms values</p>"},{"location":"reference/commands/appium_base_driver-1._appium_base_driver/#post-sessionsessionidtimeoutsimplicit_wait","title":"<code>POST</code> <code>/session/:sessionId/timeouts/implicit_wait</code>","text":"<p>Set the implicit wait timeout</p> <p><code>Param</code></p> <p>the timeout in ms</p> <p><code>Deprecated</code></p> <p>Use <code>timeouts</code> instead</p>"},{"location":"reference/commands/appium_base_driver-1._appium_base_driver/#parameters_11","title":"Parameters","text":"Name Type <code>ms</code> <code>string</code> | <code>number</code>"},{"location":"reference/commands/appium_base_driver-1._appium_base_driver/#response_21","title":"Response","text":"<p><code>void</code></p>"},{"location":"reference/commands/appium_base_driver-1._appium_base_driver/#get-sessions","title":"<code>GET</code> <code>/sessions</code>","text":"<p>Get data for all sessions running on an Appium server</p>"},{"location":"reference/commands/appium_base_driver-1._appium_base_driver/#response_22","title":"Response","text":"<p><code>MultiSessionData</code>&lt;typeof <code>BASE_DESIRED_CAP_CONSTRAINTS</code>, <code>void</code>&gt;[]</p> <p>A list of session data objects</p>"},{"location":"reference/commands/appium_base_driver-1._appium_base_driver/#get-status","title":"<code>GET</code> <code>/status</code>","text":"<p><code>Summary</code></p> <p>Retrieve the server's current status.</p> <p><code>Description</code></p> <p>Returns information about whether a remote end is in a state in which it can create new sessions and can additionally include arbitrary meta information that is specific to the implementation.</p> <p>The readiness state is represented by the ready property of the body, which is false if an attempt to create a session at the current time would fail. However, the value true does not guarantee that a New Session command will succeed.</p> <p>Implementations may optionally include additional meta information as part of the body, but the top-level properties ready and message are reserved and must not be overwritten.</p>"},{"location":"reference/commands/appium_base_driver-1._appium_base_driver/#examples","title":"Examples","text":""},{"location":"reference/commands/appium_base_driver-1._appium_base_driver/#javascript","title":"JavaScript","text":"<pre><code>// webdriver.io example\nawait driver.status();\n</code></pre>"},{"location":"reference/commands/appium_base_driver-1._appium_base_driver/#python","title":"Python","text":"<pre><code>driver.get_status()\n</code></pre>"},{"location":"reference/commands/appium_base_driver-1._appium_base_driver/#java","title":"Java","text":"<pre><code>driver.getStatus();\n</code></pre>"},{"location":"reference/commands/appium_base_driver-1._appium_base_driver/#ruby","title":"Ruby","text":"<pre><code># ruby_lib example\nremote_status\n# ruby_lib_core example\n@driver.remote_status\n</code></pre>"},{"location":"reference/commands/appium_base_driver-1._appium_base_driver/#response_23","title":"Response","text":"<p><code>Object</code></p>"},{"location":"reference/commands/appium_execute_driver_plugin-1._appium_execute_driver_plugin/","title":"Driver: @appium/execute-driver-plugin","text":""},{"location":"reference/commands/appium_execute_driver_plugin-1._appium_execute_driver_plugin/#command","title":"Command","text":""},{"location":"reference/commands/appium_execute_driver_plugin-1._appium_execute_driver_plugin/#post-sessionsessionidappiumexecute_driver","title":"<code>POST</code> <code>/session/:sessionId/appium/execute_driver</code>","text":"<p>This method takes a string which is executed as javascript in the context of a new nodejs VM, and which has available a webdriverio driver object, having already been attached to the currently running session.</p> <p><code>Param</code></p> <p>standard behaviour for executeDriverScript</p> <p><code>Throws</code></p>"},{"location":"reference/commands/appium_execute_driver_plugin-1._appium_execute_driver_plugin/#parameters","title":"Parameters","text":"Name Type Default value <code>script</code> <code>string</code> <code>undefined</code> <code>type?</code> <code>string</code> <code>'webdriverio'</code> <code>timeout?</code> <code>number</code> <code>DEFAULT_SCRIPT_TIMEOUT_MS</code>"},{"location":"reference/commands/appium_execute_driver_plugin-1._appium_execute_driver_plugin/#response","title":"Response","text":"<p><code>any</code></p> <ul> <li>a JSONifiable object representing the return value of the script</li> </ul>"},{"location":"reference/commands/appium_fake_driver-1._appium_fake_driver/","title":"Driver: @appium/fake-driver","text":""},{"location":"reference/commands/appium_fake_driver-1._appium_fake_driver/#commands","title":"Commands","text":""},{"location":"reference/commands/appium_fake_driver-1._appium_fake_driver/#post-session","title":"<code>POST</code> <code>/session</code>","text":"<p>Comment for <code>createSession</code> in <code>FakeDriver</code></p> <p><code>Param</code></p> <p>W3C Capabilities</p> <p><code>See</code></p> <p>https://w3c.github.io/webdriver/#new-session</p> <p><code>Remarks</code></p> <p>The shape of this method is strange because it used to support both JSONWP and W3C capabilities. This will likely change in the future to simplify.</p>"},{"location":"reference/commands/appium_fake_driver-1._appium_fake_driver/#parameters","title":"Parameters","text":"Name Type <code>desiredCapabilities?</code> <code>W3CFakeDriverCaps</code> <code>requiredCapabilities?</code> <code>W3CFakeDriverCaps</code> <code>capabilities?</code> <code>W3CFakeDriverCaps</code>"},{"location":"reference/commands/appium_fake_driver-1._appium_fake_driver/#response","title":"Response","text":"<p>[<code>string</code>, <code>Partial</code>&lt;<code>ConstraintsToCaps</code>&lt;typeof <code>BASE_DESIRED_CAP_CONSTRAINTS</code> &amp; { <code>app</code>: { <code>isString</code>: <code>true</code> = true; <code>presence</code>: <code>true</code> = true } ; <code>uniqueApp</code>: { <code>isBoolean</code>: <code>true</code> = true }  }&gt; &amp; <code>void</code>&gt;]</p> <p>Session ID and normalized capabilities</p>"},{"location":"reference/commands/appium_fake_driver-1._appium_fake_driver/#get-sessionsessionid","title":"<code>GET</code> <code>/session/:sessionId</code>","text":"<p>Get the data for the current session</p>"},{"location":"reference/commands/appium_fake_driver-1._appium_fake_driver/#response_1","title":"Response","text":"<p><code>SingularSessionData</code>&lt;typeof <code>BASE_DESIRED_CAP_CONSTRAINTS</code>, <code>void</code>&gt;</p> <p>A session data object</p>"},{"location":"reference/commands/appium_fake_driver-1._appium_fake_driver/#delete-sessionsessionid","title":"<code>DELETE</code> <code>/session/:sessionId</code>","text":"<p>Get the data for the current session</p>"},{"location":"reference/commands/appium_fake_driver-1._appium_fake_driver/#response_2","title":"Response","text":"<p><code>SingularSessionData</code>&lt;typeof <code>BASE_DESIRED_CAP_CONSTRAINTS</code>, <code>void</code>&gt;</p> <p>A session data object</p>"},{"location":"reference/commands/appium_fake_driver-1._appium_fake_driver/#post-sessionsessionidaccept_alert","title":"<code>POST</code> <code>/session/:sessionId/accept_alert</code>","text":"<p>Accept a simple dialog/alert</p> <p><code>See</code></p> <p>https://w3c.github.io/webdriver/#accept-alert</p>"},{"location":"reference/commands/appium_fake_driver-1._appium_fake_driver/#post-sessionsessionidactions","title":"<code>POST</code> <code>/session/:sessionId/actions</code>","text":"<p>Release all keys or buttons that are currently pressed</p> <p><code>See</code></p> <p>https://w3c.github.io/webdriver/#release-actions</p>"},{"location":"reference/commands/appium_fake_driver-1._appium_fake_driver/#required-parameters","title":"Required Parameters","text":"<ul> <li><code>actions</code></li> </ul>"},{"location":"reference/commands/appium_fake_driver-1._appium_fake_driver/#delete-sessionsessionidactions","title":"<code>DELETE</code> <code>/session/:sessionId/actions</code>","text":"<p>Release all keys or buttons that are currently pressed</p> <p><code>See</code></p> <p>https://w3c.github.io/webdriver/#release-actions</p>"},{"location":"reference/commands/appium_fake_driver-1._appium_fake_driver/#post-sessionsessionidalertaccept","title":"<code>POST</code> <code>/session/:sessionId/alert/accept</code>","text":"<p>Accept a simple dialog/alert</p> <p><code>See</code></p> <p>https://w3c.github.io/webdriver/#accept-alert</p>"},{"location":"reference/commands/appium_fake_driver-1._appium_fake_driver/#post-sessionsessionidalertdismiss","title":"<code>POST</code> <code>/session/:sessionId/alert/dismiss</code>","text":"<p>Dismiss a simple dialog/alert</p> <p><code>See</code></p> <p>https://w3c.github.io/webdriver/#dismiss-alert</p>"},{"location":"reference/commands/appium_fake_driver-1._appium_fake_driver/#get-sessionsessionidalerttext","title":"<code>GET</code> <code>/session/:sessionId/alert/text</code>","text":"<p>Set the text field of an alert prompt</p> <p><code>See</code></p> <p>https://w3c.github.io/webdriver/#send-alert-text</p> <p><code>Param</code></p> <p>the text to send to the prompt</p>"},{"location":"reference/commands/appium_fake_driver-1._appium_fake_driver/#post-sessionsessionidalerttext","title":"<code>POST</code> <code>/session/:sessionId/alert/text</code>","text":"<p>Set the text field of an alert prompt</p> <p><code>See</code></p> <p>https://w3c.github.io/webdriver/#send-alert-text</p> <p><code>Param</code></p> <p>the text to send to the prompt</p>"},{"location":"reference/commands/appium_fake_driver-1._appium_fake_driver/#get-sessionsessionidalert_text","title":"<code>GET</code> <code>/session/:sessionId/alert_text</code>","text":"<p>Set the text field of an alert prompt</p> <p><code>See</code></p> <p>https://w3c.github.io/webdriver/#send-alert-text</p> <p><code>Param</code></p> <p>the text to send to the prompt</p>"},{"location":"reference/commands/appium_fake_driver-1._appium_fake_driver/#post-sessionsessionidalert_text","title":"<code>POST</code> <code>/session/:sessionId/alert_text</code>","text":"<p>Set the text field of an alert prompt</p> <p><code>See</code></p> <p>https://w3c.github.io/webdriver/#send-alert-text</p> <p><code>Param</code></p> <p>the text to send to the prompt</p>"},{"location":"reference/commands/appium_fake_driver-1._appium_fake_driver/#post-sessionsessionidappiumappreset","title":"<code>POST</code> <code>/session/:sessionId/appium/app/reset</code>","text":"<p>Reset the current session (run the delete session and create session subroutines)</p> <p><code>Deprecated</code></p> <p>Use explicit session management commands instead</p>"},{"location":"reference/commands/appium_fake_driver-1._appium_fake_driver/#response_3","title":"Response","text":"<p><code>void</code></p>"},{"location":"reference/commands/appium_fake_driver-1._appium_fake_driver/#post-sessionsessionidappiumdeviceshake","title":"<code>POST</code> <code>/session/:sessionId/appium/device/shake</code>","text":"<p>Shake the device</p> <p><code>Deprecated</code></p>"},{"location":"reference/commands/appium_fake_driver-1._appium_fake_driver/#post-sessionsessionidappiumevents","title":"<code>POST</code> <code>/session/:sessionId/appium/events</code>","text":"<p>Get a list of events that have occurred in the current session</p> <p><code>Param</code></p> <p>filter the returned events by including one or more types</p>"},{"location":"reference/commands/appium_fake_driver-1._appium_fake_driver/#parameters_1","title":"Parameters","text":"Name Type <code>type?</code> <code>string</code> | <code>string</code>[]"},{"location":"reference/commands/appium_fake_driver-1._appium_fake_driver/#response_4","title":"Response","text":"<p><code>EventHistory</code> | <code>Record</code>&lt;<code>string</code>, <code>number</code>&gt;</p> <p>The event history for the session</p>"},{"location":"reference/commands/appium_fake_driver-1._appium_fake_driver/#post-sessionsessionidappiumlog_event","title":"<code>POST</code> <code>/session/:sessionId/appium/log_event</code>","text":"<p>Add a custom-named event to the Appium event log</p> <p><code>Param</code></p> <p>the name of the vendor or tool the event belongs to, to namespace the event</p>"},{"location":"reference/commands/appium_fake_driver-1._appium_fake_driver/#parameters_2","title":"Parameters","text":"Name Type <code>vendor</code> <code>string</code> <code>event</code> <code>string</code>"},{"location":"reference/commands/appium_fake_driver-1._appium_fake_driver/#response_5","title":"Response","text":"<p><code>void</code></p>"},{"location":"reference/commands/appium_fake_driver-1._appium_fake_driver/#post-sessionsessionidappiumsettings","title":"<code>POST</code> <code>/session/:sessionId/appium/settings</code>","text":"<p>Get the current settings for the session</p>"},{"location":"reference/commands/appium_fake_driver-1._appium_fake_driver/#required-parameters_1","title":"Required Parameters","text":"<ul> <li><code>settings</code></li> </ul>"},{"location":"reference/commands/appium_fake_driver-1._appium_fake_driver/#response_6","title":"Response","text":"<p><code>StringRecord</code></p> <p>The settings object</p>"},{"location":"reference/commands/appium_fake_driver-1._appium_fake_driver/#get-sessionsessionidappiumsettings","title":"<code>GET</code> <code>/session/:sessionId/appium/settings</code>","text":"<p>Get the current settings for the session</p>"},{"location":"reference/commands/appium_fake_driver-1._appium_fake_driver/#response_7","title":"Response","text":"<p><code>StringRecord</code></p> <p>The settings object</p>"},{"location":"reference/commands/appium_fake_driver-1._appium_fake_driver/#get-sessionsessionidcontext","title":"<code>GET</code> <code>/session/:sessionId/context</code>","text":"<p>Switch to a context by name</p> <p><code>See</code></p> <p>https://github.com/SeleniumHQ/mobile-spec/blob/master/spec-draft.md#webviews-and-other-contexts</p> <p><code>Param</code></p> <p>the context name</p>"},{"location":"reference/commands/appium_fake_driver-1._appium_fake_driver/#post-sessionsessionidcontext","title":"<code>POST</code> <code>/session/:sessionId/context</code>","text":"<p>Switch to a context by name</p> <p><code>See</code></p> <p>https://github.com/SeleniumHQ/mobile-spec/blob/master/spec-draft.md#webviews-and-other-contexts</p> <p><code>Param</code></p> <p>the context name</p>"},{"location":"reference/commands/appium_fake_driver-1._appium_fake_driver/#required-parameters_2","title":"Required Parameters","text":"<ul> <li><code>name</code></li> </ul>"},{"location":"reference/commands/appium_fake_driver-1._appium_fake_driver/#get-sessionsessionidcontexts","title":"<code>GET</code> <code>/session/:sessionId/contexts</code>","text":"<p>Get the list of available contexts</p> <p><code>See</code></p> <p>https://github.com/SeleniumHQ/mobile-spec/blob/master/spec-draft.md#webviews-and-other-contexts</p>"},{"location":"reference/commands/appium_fake_driver-1._appium_fake_driver/#post-sessionsessioniddeprecated","title":"<code>POST</code> <code>/session/:sessionId/deprecated</code>","text":"<p>This is a command that exists just to be an example of a deprecated command</p>"},{"location":"reference/commands/appium_fake_driver-1._appium_fake_driver/#response_8","title":"Response","text":"<p><code>void</code></p>"},{"location":"reference/commands/appium_fake_driver-1._appium_fake_driver/#post-sessionsessioniddismiss_alert","title":"<code>POST</code> <code>/session/:sessionId/dismiss_alert</code>","text":"<p>Dismiss a simple dialog/alert</p> <p><code>See</code></p> <p>https://w3c.github.io/webdriver/#dismiss-alert</p>"},{"location":"reference/commands/appium_fake_driver-1._appium_fake_driver/#post-sessionsessioniddoubleclick","title":"<code>POST</code> <code>/session/:sessionId/doubleclick</code>","text":"<p>Double-click the current mouse location</p> <p><code>Deprecated</code></p> <p>Use the Actions API instead</p>"},{"location":"reference/commands/appium_fake_driver-1._appium_fake_driver/#post-sessionsessionidelement","title":"<code>POST</code> <code>/session/:sessionId/element</code>","text":"<p>Find a UI element given a locator strategy and a selector, erroring if it can't be found</p> <p><code>See</code></p> <p>https://w3c.github.io/webdriver/#find-element</p> <p><code>Param</code></p> <p>the locator strategy</p>"},{"location":"reference/commands/appium_fake_driver-1._appium_fake_driver/#required-parameters_3","title":"Required Parameters","text":"<ul> <li><code>using</code></li> <li><code>value</code></li> </ul>"},{"location":"reference/commands/appium_fake_driver-1._appium_fake_driver/#get-sessionsessionidelementelementidattributename","title":"<code>GET</code> <code>/session/:sessionId/element/:elementId/attribute/:name</code>","text":"<p>Retrieve the value of an element's attribute</p> <p><code>See</code></p> <p>https://w3c.github.io/webdriver/#get-element-attribute</p> <p><code>Param</code></p> <p>the attribute name</p>"},{"location":"reference/commands/appium_fake_driver-1._appium_fake_driver/#post-sessionsessionidelementelementidclear","title":"<code>POST</code> <code>/session/:sessionId/element/:elementId/clear</code>","text":"<p>Clear the text/value of an editable element</p> <p><code>See</code></p> <p>https://w3c.github.io/webdriver/#element-clear</p> <p><code>Param</code></p> <p>the id of the element</p>"},{"location":"reference/commands/appium_fake_driver-1._appium_fake_driver/#post-sessionsessionidelementelementidclick","title":"<code>POST</code> <code>/session/:sessionId/element/:elementId/click</code>","text":"<p>Click/tap an element</p> <p><code>See</code></p> <p>https://w3c.github.io/webdriver/#element-click</p> <p><code>Param</code></p> <p>the id of the element</p>"},{"location":"reference/commands/appium_fake_driver-1._appium_fake_driver/#get-sessionsessionidelementelementidcsspropertyname","title":"<code>GET</code> <code>/session/:sessionId/element/:elementId/css/:propertyName</code>","text":"<p>Retrieve the value of a CSS property of an element</p> <p><code>See</code></p> <p>https://w3c.github.io/webdriver/#get-element-css-value</p> <p><code>Param</code></p> <p>the CSS property name</p>"},{"location":"reference/commands/appium_fake_driver-1._appium_fake_driver/#get-sessionsessionidelementelementiddisplayed","title":"<code>GET</code> <code>/session/:sessionId/element/:elementId/displayed</code>","text":"<p>Determine whether an element is displayed</p> <p><code>See</code></p> <p>https://w3c.github.io/webdriver/#element-displayedness</p> <p><code>Param</code></p> <p>the id of the element</p>"},{"location":"reference/commands/appium_fake_driver-1._appium_fake_driver/#post-sessionsessionidelementelementidelement","title":"<code>POST</code> <code>/session/:sessionId/element/:elementId/element</code>","text":"<p>Find a UI element given a locator strategy and a selector, erroring if it can't be found. Only look for elements among the set of descendants of a given element</p> <p><code>See</code></p> <p>https://w3c.github.io/webdriver/#find-element-from-element</p> <p><code>Param</code></p> <p>the locator strategy</p>"},{"location":"reference/commands/appium_fake_driver-1._appium_fake_driver/#required-parameters_4","title":"Required Parameters","text":"<ul> <li><code>using</code></li> <li><code>value</code></li> </ul>"},{"location":"reference/commands/appium_fake_driver-1._appium_fake_driver/#post-sessionsessionidelementelementidelements","title":"<code>POST</code> <code>/session/:sessionId/element/:elementId/elements</code>","text":"<p>Find a a list of all UI elements matching a given a locator strategy and a selector. Only look for elements among the set of descendants of a given element</p> <p><code>See</code></p> <p>https://w3c.github.io/webdriver/#find-elements-from-element</p> <p><code>Param</code></p> <p>the locator strategy</p>"},{"location":"reference/commands/appium_fake_driver-1._appium_fake_driver/#required-parameters_5","title":"Required Parameters","text":"<ul> <li><code>using</code></li> <li><code>value</code></li> </ul>"},{"location":"reference/commands/appium_fake_driver-1._appium_fake_driver/#get-sessionsessionidelementelementidenabled","title":"<code>GET</code> <code>/session/:sessionId/element/:elementId/enabled</code>","text":"<p>Determine whether an element is enabled</p> <p><code>See</code></p> <p>https://w3c.github.io/webdriver/#is-element-enabled</p> <p><code>Param</code></p> <p>the id of the element</p>"},{"location":"reference/commands/appium_fake_driver-1._appium_fake_driver/#get-sessionsessionidelementelementidlocation","title":"<code>GET</code> <code>/session/:sessionId/element/:elementId/location</code>","text":"<p>Get the position of an element on screen</p> <p><code>Param</code></p> <p>the element ID</p> <p><code>Deprecated</code></p> <p>Use getElementRect instead</p>"},{"location":"reference/commands/appium_fake_driver-1._appium_fake_driver/#get-sessionsessionidelementelementidlocation_in_view","title":"<code>GET</code> <code>/session/:sessionId/element/:elementId/location_in_view</code>","text":"<p>Get the position of an element on screen within a certain other view</p> <p><code>Param</code></p> <p>the element ID</p> <p><code>Deprecated</code></p> <p>Use getElementRect instead</p>"},{"location":"reference/commands/appium_fake_driver-1._appium_fake_driver/#get-sessionsessionidelementelementidname","title":"<code>GET</code> <code>/session/:sessionId/element/:elementId/name</code>","text":"<p>Get the tag name of an element</p> <p><code>See</code></p> <p>https://w3c.github.io/webdriver/#get-element-tag-name</p> <p><code>Param</code></p> <p>the id of the element</p>"},{"location":"reference/commands/appium_fake_driver-1._appium_fake_driver/#get-sessionsessionidelementelementidselected","title":"<code>GET</code> <code>/session/:sessionId/element/:elementId/selected</code>","text":"<p>Determine if the reference element is selected or not</p> <p><code>See</code></p> <p>https://w3c.github.io/webdriver/#is-element-selected</p> <p><code>Param</code></p> <p>the id of the element</p>"},{"location":"reference/commands/appium_fake_driver-1._appium_fake_driver/#get-sessionsessionidelementelementidtext","title":"<code>GET</code> <code>/session/:sessionId/element/:elementId/text</code>","text":"<p>Get the text of an element as rendered</p> <p><code>See</code></p> <p>https://w3c.github.io/webdriver/#get-element-text</p> <p><code>Param</code></p> <p>the id of the element</p>"},{"location":"reference/commands/appium_fake_driver-1._appium_fake_driver/#post-sessionsessionidelementelementidvalue","title":"<code>POST</code> <code>/session/:sessionId/element/:elementId/value</code>","text":"<p>Send keystrokes to an element (or otherwise set its value)</p> <p><code>See</code></p> <p>https://w3c.github.io/webdriver/#element-send-keys</p> <p><code>Param</code></p> <p>the text to send to the element</p>"},{"location":"reference/commands/appium_fake_driver-1._appium_fake_driver/#optional-parameters","title":"Optional Parameters","text":"<ul> <li><code>value</code></li> <li><code>text</code></li> </ul>"},{"location":"reference/commands/appium_fake_driver-1._appium_fake_driver/#post-sessionsessionidelements","title":"<code>POST</code> <code>/session/:sessionId/elements</code>","text":"<p>Find a a list of all UI elements matching a given a locator strategy and a selector</p> <p><code>See</code></p> <p>https://w3c.github.io/webdriver/#find-elements</p> <p><code>Param</code></p> <p>the locator strategy</p>"},{"location":"reference/commands/appium_fake_driver-1._appium_fake_driver/#required-parameters_6","title":"Required Parameters","text":"<ul> <li><code>using</code></li> <li><code>value</code></li> </ul>"},{"location":"reference/commands/appium_fake_driver-1._appium_fake_driver/#post-sessionsessionidexecute","title":"<code>POST</code> <code>/session/:sessionId/execute</code>","text":"<p>Execute JavaScript (or some other kind of script) in the browser/app context</p> <p><code>See</code></p> <p>https://w3c.github.io/webdriver/#execute-script</p> <p><code>Param</code></p> <p>the string to be evaluated as the script, which will be made the body of an anonymous function in the case of JS</p>"},{"location":"reference/commands/appium_fake_driver-1._appium_fake_driver/#required-parameters_7","title":"Required Parameters","text":"<ul> <li><code>script</code></li> <li><code>args</code></li> </ul>"},{"location":"reference/commands/appium_fake_driver-1._appium_fake_driver/#post-sessionsessionidexecutesync","title":"<code>POST</code> <code>/session/:sessionId/execute/sync</code>","text":"<p>Execute JavaScript (or some other kind of script) in the browser/app context</p> <p><code>See</code></p> <p>https://w3c.github.io/webdriver/#execute-script</p> <p><code>Param</code></p> <p>the string to be evaluated as the script, which will be made the body of an anonymous function in the case of JS</p>"},{"location":"reference/commands/appium_fake_driver-1._appium_fake_driver/#required-parameters_8","title":"Required Parameters","text":"<ul> <li><code>script</code></li> <li><code>args</code></li> </ul>"},{"location":"reference/commands/appium_fake_driver-1._appium_fake_driver/#get-sessionsessionidfakedriver","title":"<code>GET</code> <code>/session/:sessionId/fakedriver</code>","text":""},{"location":"reference/commands/appium_fake_driver-1._appium_fake_driver/#response_9","title":"Response","text":"<p><code>any</code></p>"},{"location":"reference/commands/appium_fake_driver-1._appium_fake_driver/#post-sessionsessionidfakedriver","title":"<code>POST</code> <code>/session/:sessionId/fakedriver</code>","text":"<p>Sets a fake thing</p> <p><code>Param</code></p>"},{"location":"reference/commands/appium_fake_driver-1._appium_fake_driver/#parameters_3","title":"Parameters","text":"Name Type <code>thing</code> <code>any</code>"},{"location":"reference/commands/appium_fake_driver-1._appium_fake_driver/#response_10","title":"Response","text":"<p><code>null</code></p>"},{"location":"reference/commands/appium_fake_driver-1._appium_fake_driver/#get-sessionsessionidfakedriverargs","title":"<code>GET</code> <code>/session/:sessionId/fakedriverargs</code>","text":"<p>Get the driver args that were sent in via the CLI</p>"},{"location":"reference/commands/appium_fake_driver-1._appium_fake_driver/#response_11","title":"Response","text":"<p><code>StringRecord</code> &amp; <code>ServerArgs</code></p>"},{"location":"reference/commands/appium_fake_driver-1._appium_fake_driver/#post-sessionsessionidframe","title":"<code>POST</code> <code>/session/:sessionId/frame</code>","text":"<p>Switch the current browsing context to a frame</p> <p><code>See</code></p> <p>https://w3c.github.io/webdriver/#switch-to-frame</p> <p><code>Param</code></p> <p>the frame id, index, or <code>null</code> (indicating the top-level context)</p>"},{"location":"reference/commands/appium_fake_driver-1._appium_fake_driver/#required-parameters_9","title":"Required Parameters","text":"<ul> <li><code>id</code></li> </ul>"},{"location":"reference/commands/appium_fake_driver-1._appium_fake_driver/#post-sessionsessionidkeys","title":"<code>POST</code> <code>/session/:sessionId/keys</code>","text":"<p>Send keys to the app</p> <p><code>Param</code></p> <p>the array of keys to send</p> <p><code>Deprecated</code></p> <p>Use the W3C send keys method instead</p>"},{"location":"reference/commands/appium_fake_driver-1._appium_fake_driver/#required-parameters_10","title":"Required Parameters","text":"<ul> <li><code>value</code></li> </ul>"},{"location":"reference/commands/appium_fake_driver-1._appium_fake_driver/#get-sessionsessionidlocation","title":"<code>GET</code> <code>/session/:sessionId/location</code>","text":"<p>Get the virtual or real geographical location of a device</p>"},{"location":"reference/commands/appium_fake_driver-1._appium_fake_driver/#post-sessionsessionidlocation","title":"<code>POST</code> <code>/session/:sessionId/location</code>","text":"<p>Get the virtual or real geographical location of a device</p>"},{"location":"reference/commands/appium_fake_driver-1._appium_fake_driver/#required-parameters_11","title":"Required Parameters","text":"<ul> <li><code>location</code></li> </ul>"},{"location":"reference/commands/appium_fake_driver-1._appium_fake_driver/#post-sessionsessionidlog","title":"<code>POST</code> <code>/session/:sessionId/log</code>","text":"<p>Get the log for a given log type.</p> <p><code>Param</code></p> <p>Name/key of log type as defined in ILogCommands.supportedLogTypes.</p>"},{"location":"reference/commands/appium_fake_driver-1._appium_fake_driver/#required-parameters_12","title":"Required Parameters","text":"<ul> <li><code>type</code></li> </ul>"},{"location":"reference/commands/appium_fake_driver-1._appium_fake_driver/#get-sessionsessionidlogtypes","title":"<code>GET</code> <code>/session/:sessionId/log/types</code>","text":"<p>Get available log types as a list of strings</p>"},{"location":"reference/commands/appium_fake_driver-1._appium_fake_driver/#response_12","title":"Response","text":"<p><code>string</code>[]</p>"},{"location":"reference/commands/appium_fake_driver-1._appium_fake_driver/#get-sessionsessionidorientation","title":"<code>GET</code> <code>/session/:sessionId/orientation</code>","text":"<p>Set the device orientation</p> <p><code>Param</code></p> <p>the orientation string</p>"},{"location":"reference/commands/appium_fake_driver-1._appium_fake_driver/#post-sessionsessionidorientation","title":"<code>POST</code> <code>/session/:sessionId/orientation</code>","text":"<p>Set the device orientation</p> <p><code>Param</code></p> <p>the orientation string</p>"},{"location":"reference/commands/appium_fake_driver-1._appium_fake_driver/#required-parameters_13","title":"Required Parameters","text":"<ul> <li><code>orientation</code></li> </ul>"},{"location":"reference/commands/appium_fake_driver-1._appium_fake_driver/#get-sessionsessionidscreenshot","title":"<code>GET</code> <code>/session/:sessionId/screenshot</code>","text":"<p>Get a screenshot of the current document as rendered</p> <p><code>See</code></p> <p>https://w3c.github.io/webdriver/#take-screenshot</p>"},{"location":"reference/commands/appium_fake_driver-1._appium_fake_driver/#post-sessionsessionidselog","title":"<code>POST</code> <code>/session/:sessionId/se/log</code>","text":"<p>Get the log for a given log type.</p> <p><code>Param</code></p> <p>Name/key of log type as defined in ILogCommands.supportedLogTypes.</p>"},{"location":"reference/commands/appium_fake_driver-1._appium_fake_driver/#required-parameters_14","title":"Required Parameters","text":"<ul> <li><code>type</code></li> </ul>"},{"location":"reference/commands/appium_fake_driver-1._appium_fake_driver/#get-sessionsessionidselogtypes","title":"<code>GET</code> <code>/session/:sessionId/se/log/types</code>","text":"<p>Get available log types as a list of strings</p>"},{"location":"reference/commands/appium_fake_driver-1._appium_fake_driver/#response_13","title":"Response","text":"<p><code>string</code>[]</p>"},{"location":"reference/commands/appium_fake_driver-1._appium_fake_driver/#post-sessionsessionidshadowshadowidelement","title":"<code>POST</code> <code>/session/:sessionId/shadow/:shadowId/element</code>","text":"<p>Find an element from a shadow root</p> <p><code>See</code></p> <p>https://w3c.github.io/webdriver/#find-element-from-shadow-root</p> <p><code>Param</code></p> <p>the locator strategy</p>"},{"location":"reference/commands/appium_fake_driver-1._appium_fake_driver/#parameters_4","title":"Parameters","text":"Name Type <code>using</code> <code>string</code> <code>value</code> <code>string</code>"},{"location":"reference/commands/appium_fake_driver-1._appium_fake_driver/#response_14","title":"Response","text":"<p><code>Element</code></p> <p>The element inside the shadow root matching the selector</p>"},{"location":"reference/commands/appium_fake_driver-1._appium_fake_driver/#post-sessionsessionidshadowshadowidelements","title":"<code>POST</code> <code>/session/:sessionId/shadow/:shadowId/elements</code>","text":"<p>Find elements from a shadow root</p> <p><code>See</code></p> <p>https://w3c.github.io/webdriver/#find-element-from-shadow-root</p> <p><code>Param</code></p> <p>the locator strategy</p>"},{"location":"reference/commands/appium_fake_driver-1._appium_fake_driver/#parameters_5","title":"Parameters","text":"Name Type <code>using</code> <code>string</code> <code>value</code> <code>string</code>"},{"location":"reference/commands/appium_fake_driver-1._appium_fake_driver/#response_15","title":"Response","text":"<p><code>Element</code>[]</p> <p>A possibly empty list of elements inside the shadow root matching the selector</p>"},{"location":"reference/commands/appium_fake_driver-1._appium_fake_driver/#get-sessionsessionidsource","title":"<code>GET</code> <code>/session/:sessionId/source</code>","text":"<p>Get the current page/app source as HTML/XML</p> <p><code>See</code></p> <p>https://w3c.github.io/webdriver/#get-page-source</p>"},{"location":"reference/commands/appium_fake_driver-1._appium_fake_driver/#get-sessionsessionidtimeouts","title":"<code>GET</code> <code>/session/:sessionId/timeouts</code>","text":"<p>Get the current timeouts</p> <p><code>See</code></p> <p>https://w3c.github.io/webdriver/#get-timeouts</p>"},{"location":"reference/commands/appium_fake_driver-1._appium_fake_driver/#response_16","title":"Response","text":"<p><code>Record</code>&lt;<code>string</code>, <code>number</code>&gt;</p> <p>A map of timeout names to ms values</p>"},{"location":"reference/commands/appium_fake_driver-1._appium_fake_driver/#post-sessionsessionidtimeouts","title":"<code>POST</code> <code>/session/:sessionId/timeouts</code>","text":"<p>Get the current timeouts</p> <p><code>See</code></p> <p>https://w3c.github.io/webdriver/#get-timeouts</p>"},{"location":"reference/commands/appium_fake_driver-1._appium_fake_driver/#optional-parameters_1","title":"Optional Parameters","text":"<ul> <li><code>type</code></li> <li><code>ms</code></li> <li><code>script</code></li> <li><code>pageLoad</code></li> <li><code>implicit</code></li> </ul>"},{"location":"reference/commands/appium_fake_driver-1._appium_fake_driver/#response_17","title":"Response","text":"<p><code>Record</code>&lt;<code>string</code>, <code>number</code>&gt;</p> <p>A map of timeout names to ms values</p>"},{"location":"reference/commands/appium_fake_driver-1._appium_fake_driver/#post-sessionsessionidtimeoutsimplicit_wait","title":"<code>POST</code> <code>/session/:sessionId/timeouts/implicit_wait</code>","text":"<p>Set the implicit wait timeout</p> <p><code>Param</code></p> <p>the timeout in ms</p> <p><code>Deprecated</code></p> <p>Use <code>timeouts</code> instead</p>"},{"location":"reference/commands/appium_fake_driver-1._appium_fake_driver/#parameters_6","title":"Parameters","text":"Name Type <code>ms</code> <code>string</code> | <code>number</code>"},{"location":"reference/commands/appium_fake_driver-1._appium_fake_driver/#response_18","title":"Response","text":"<p><code>void</code></p>"},{"location":"reference/commands/appium_fake_driver-1._appium_fake_driver/#get-sessionsessionidtitle","title":"<code>GET</code> <code>/session/:sessionId/title</code>","text":"<p>GENERAL *</p> <p><code>See</code></p> <p>https://w3c.github.io/webdriver/#get-title</p>"},{"location":"reference/commands/appium_fake_driver-1._appium_fake_driver/#examples","title":"Examples","text":""},{"location":"reference/commands/appium_fake_driver-1._appium_fake_driver/#javascript","title":"JavaScript","text":"<pre><code>await driver.getTitle()\n</code></pre>"},{"location":"reference/commands/appium_fake_driver-1._appium_fake_driver/#python","title":"Python","text":"<pre><code>driver.title\n</code></pre>"},{"location":"reference/commands/appium_fake_driver-1._appium_fake_driver/#java","title":"Java","text":"<pre><code>driver.getTitle();\n</code></pre>"},{"location":"reference/commands/appium_fake_driver-1._appium_fake_driver/#post-sessionsessionidtouchclick","title":"<code>POST</code> <code>/session/:sessionId/touch/click</code>","text":"<p>Click/tap an element</p> <p><code>See</code></p> <p>https://w3c.github.io/webdriver/#element-click</p> <p><code>Param</code></p> <p>the id of the element</p>"},{"location":"reference/commands/appium_fake_driver-1._appium_fake_driver/#required-parameters_15","title":"Required Parameters","text":"<ul> <li><code>element</code></li> </ul>"},{"location":"reference/commands/appium_fake_driver-1._appium_fake_driver/#get-sessionsessionidwindowwindowhandlesize","title":"<code>GET</code> <code>/session/:sessionId/window/:windowhandle/size</code>","text":"<p>Get the window size</p> <p><code>Deprecated</code></p> <p>Use getWindowRect instead</p>"},{"location":"reference/commands/appium_fake_driver-1._appium_fake_driver/#get-sessionsessionidwindowrect","title":"<code>GET</code> <code>/session/:sessionId/window/rect</code>","text":"<p>Get the size and position of the current window</p> <p><code>See</code></p> <p>https://w3c.github.io/webdriver/#get-window-rect</p>"},{"location":"reference/commands/appium_fake_driver-1._appium_fake_driver/#post-sessionsessionidwindowrect","title":"<code>POST</code> <code>/session/:sessionId/window/rect</code>","text":"<p>Get the size and position of the current window</p> <p><code>See</code></p> <p>https://w3c.github.io/webdriver/#get-window-rect</p>"},{"location":"reference/commands/appium_fake_driver-1._appium_fake_driver/#required-parameters_16","title":"Required Parameters","text":"<ul> <li><code>x</code></li> <li><code>y</code></li> <li><code>width</code></li> <li><code>height</code></li> </ul>"},{"location":"reference/commands/appium_fake_driver-1._appium_fake_driver/#get-sessions","title":"<code>GET</code> <code>/sessions</code>","text":"<p>Get data for all sessions running on an Appium server</p>"},{"location":"reference/commands/appium_fake_driver-1._appium_fake_driver/#response_19","title":"Response","text":"<p><code>MultiSessionData</code>&lt;typeof <code>BASE_DESIRED_CAP_CONSTRAINTS</code>, <code>void</code>&gt;[]</p> <p>A list of session data objects</p>"},{"location":"reference/commands/appium_fake_driver-1._appium_fake_driver/#get-status","title":"<code>GET</code> <code>/status</code>","text":"<p><code>Summary</code></p> <p>Retrieve the server's current status.</p> <p><code>Description</code></p> <p>Returns information about whether a remote end is in a state in which it can create new sessions and can additionally include arbitrary meta information that is specific to the implementation.</p> <p>The readiness state is represented by the ready property of the body, which is false if an attempt to create a session at the current time would fail. However, the value true does not guarantee that a New Session command will succeed.</p> <p>Implementations may optionally include additional meta information as part of the body, but the top-level properties ready and message are reserved and must not be overwritten.</p>"},{"location":"reference/commands/appium_fake_driver-1._appium_fake_driver/#examples_1","title":"Examples","text":""},{"location":"reference/commands/appium_fake_driver-1._appium_fake_driver/#javascript_1","title":"JavaScript","text":"<pre><code>// webdriver.io example\nawait driver.status();\n</code></pre>"},{"location":"reference/commands/appium_fake_driver-1._appium_fake_driver/#python_1","title":"Python","text":"<pre><code>driver.get_status()\n</code></pre>"},{"location":"reference/commands/appium_fake_driver-1._appium_fake_driver/#java_1","title":"Java","text":"<pre><code>driver.getStatus();\n</code></pre>"},{"location":"reference/commands/appium_fake_driver-1._appium_fake_driver/#ruby","title":"Ruby","text":"<pre><code># ruby_lib example\nremote_status\n# ruby_lib_core example\n@driver.remote_status\n</code></pre>"},{"location":"reference/commands/appium_fake_driver-1._appium_fake_driver/#response_20","title":"Response","text":"<p><code>Object</code></p>"},{"location":"reference/commands/appium_fake_driver-1._appium_fake_driver/#execute-methods","title":"Execute Methods","text":""},{"location":"reference/commands/appium_fake_driver-1._appium_fake_driver/#script-fake-addition","title":"Script: <code>fake: addition</code>","text":""},{"location":"reference/commands/appium_fake_driver-1._appium_fake_driver/#route","title":"Route","text":"<p><code>POST /session/:sessionId/execute</code></p>"},{"location":"reference/commands/appium_fake_driver-1._appium_fake_driver/#script-fake-getdeprecatedcommandscalled","title":"Script: <code>fake: getDeprecatedCommandsCalled</code>","text":"<p>This is a command that will return a list of deprecated command names called</p>"},{"location":"reference/commands/appium_fake_driver-1._appium_fake_driver/#route_1","title":"Route","text":"<p><code>POST /session/:sessionId/execute</code></p>"},{"location":"reference/commands/appium_fake_driver-1._appium_fake_driver/#script-fake-getthing","title":"Script: <code>fake: getThing</code>","text":"<p>Gets a thing (a fake thing)</p>"},{"location":"reference/commands/appium_fake_driver-1._appium_fake_driver/#route_2","title":"Route","text":"<p><code>POST /session/:sessionId/execute</code></p>"},{"location":"reference/commands/appium_fake_driver-1._appium_fake_driver/#script-fake-setthing","title":"Script: <code>fake: setThing</code>","text":"<p>Set the 'thing' value (so that it can be retrieved later)</p> <p><code>Param</code></p>"},{"location":"reference/commands/appium_fake_driver-1._appium_fake_driver/#route_3","title":"Route","text":"<p><code>POST /session/:sessionId/execute</code></p>"},{"location":"reference/commands/appium_images_plugin-1._appium_images_plugin/","title":"Plugin: @appium/images-plugin","text":""},{"location":"reference/commands/appium_images_plugin-1._appium_images_plugin/#commands","title":"Commands","text":""},{"location":"reference/commands/appium_images_plugin-1._appium_images_plugin/#post-sessionsessionidappiumcompare_images","title":"<code>POST</code> <code>/session/:sessionId/appium/compare_images</code>","text":""},{"location":"reference/commands/appium_images_plugin-1._appium_images_plugin/#parameters","title":"Parameters","text":"Name Type <code>mode</code> <code>any</code>[]"},{"location":"reference/commands/appium_images_plugin-1._appium_images_plugin/#response","title":"Response","text":"<p><code>any</code></p>"},{"location":"reference/commands/appium_images_plugin-1._appium_images_plugin/#post-sessionsessionidelement","title":"<code>POST</code> <code>/session/:sessionId/element</code>","text":"<p>Find a UI element given a locator strategy and a selector, erroring if it can't be found</p> <p><code>See</code></p> <p>https://w3c.github.io/webdriver/#find-element</p> <p><code>Param</code></p> <p>the locator strategy</p>"},{"location":"reference/commands/appium_images_plugin-1._appium_images_plugin/#parameters_1","title":"Parameters","text":"Name Type <code>using</code> <code>any</code> <code>value</code> <code>any</code>"},{"location":"reference/commands/appium_images_plugin-1._appium_images_plugin/#response_1","title":"Response","text":"<p><code>any</code></p>"},{"location":"reference/commands/appium_images_plugin-1._appium_images_plugin/#post-sessionsessionidelements","title":"<code>POST</code> <code>/session/:sessionId/elements</code>","text":"<p>Find a a list of all UI elements matching a given a locator strategy and a selector</p> <p><code>See</code></p> <p>https://w3c.github.io/webdriver/#find-elements</p> <p><code>Param</code></p> <p>the locator strategy</p>"},{"location":"reference/commands/appium_images_plugin-1._appium_images_plugin/#parameters_2","title":"Parameters","text":"Name Type <code>using</code> <code>any</code> <code>value</code> <code>any</code>"},{"location":"reference/commands/appium_images_plugin-1._appium_images_plugin/#response_2","title":"Response","text":"<p><code>any</code></p>"},{"location":"reference/commands/appium_relaxed_caps_plugin-1._appium_relaxed_caps_plugin/","title":"Plugin: @appium/relaxed-caps-plugin","text":""},{"location":"reference/commands/appium_relaxed_caps_plugin-1._appium_relaxed_caps_plugin/#command","title":"Command","text":""},{"location":"reference/commands/appium_relaxed_caps_plugin-1._appium_relaxed_caps_plugin/#post-session","title":"<code>POST</code> <code>/session</code>","text":"<p>Start a new automation session</p> <p><code>See</code></p> <p>https://w3c.github.io/webdriver/#new-session</p> <p><code>Remarks</code></p> <p>The shape of this method is strange because it used to support both JSONWP and W3C capabilities. This will likely change in the future to simplify.</p> <p><code>Param</code></p> <p>the new session capabilities</p>"},{"location":"reference/commands/appium_relaxed_caps_plugin-1._appium_relaxed_caps_plugin/#parameters","title":"Parameters","text":"Name Type <code>desiredCapabilities?</code> <code>any</code> <code>requiredCapabilities?</code> <code>any</code> <code>capabilities?</code> <code>any</code>"},{"location":"reference/commands/appium_relaxed_caps_plugin-1._appium_relaxed_caps_plugin/#response","title":"Response","text":"<p><code>any</code></p>"},{"location":"reference/commands/appium_universal_xml_plugin-1._appium_universal_xml_plugin/","title":"Plugin: @appium/universal-xml-plugin","text":""},{"location":"reference/commands/appium_universal_xml_plugin-1._appium_universal_xml_plugin/#commands","title":"Commands","text":""},{"location":"reference/commands/appium_universal_xml_plugin-1._appium_universal_xml_plugin/#post-sessionsessionidelement","title":"<code>POST</code> <code>/session/:sessionId/element</code>","text":"<p>Find a UI element given a locator strategy and a selector, erroring if it can't be found</p> <p><code>See</code></p> <p>https://w3c.github.io/webdriver/#find-element</p> <p><code>Param</code></p> <p>the locator strategy</p>"},{"location":"reference/commands/appium_universal_xml_plugin-1._appium_universal_xml_plugin/#parameters","title":"Parameters","text":"Name Type <code>using</code> <code>any</code>[]"},{"location":"reference/commands/appium_universal_xml_plugin-1._appium_universal_xml_plugin/#response","title":"Response","text":"<p><code>any</code></p>"},{"location":"reference/commands/appium_universal_xml_plugin-1._appium_universal_xml_plugin/#post-sessionsessionidelements","title":"<code>POST</code> <code>/session/:sessionId/elements</code>","text":"<p>Find a a list of all UI elements matching a given a locator strategy and a selector</p> <p><code>See</code></p> <p>https://w3c.github.io/webdriver/#find-elements</p> <p><code>Param</code></p> <p>the locator strategy</p>"},{"location":"reference/commands/appium_universal_xml_plugin-1._appium_universal_xml_plugin/#parameters_1","title":"Parameters","text":"Name Type <code>using</code> <code>any</code>[]"},{"location":"reference/commands/appium_universal_xml_plugin-1._appium_universal_xml_plugin/#response_1","title":"Response","text":"<p><code>any</code></p>"},{"location":"reference/commands/appium_universal_xml_plugin-1._appium_universal_xml_plugin/#get-sessionsessionidsource","title":"<code>GET</code> <code>/session/:sessionId/source</code>","text":"<p>Get the current page/app source as HTML/XML</p> <p><code>See</code></p> <p>https://w3c.github.io/webdriver/#get-page-source</p>"},{"location":"reference/commands/appium_universal_xml_plugin-1._appium_universal_xml_plugin/#response_2","title":"Response","text":"<p><code>any</code></p>"},{"location":"reference/enums/appium_typedoc_plugin_appium.AppiumThemeTemplate/","title":"Enumeration: AppiumThemeTemplate","text":"<p>@appium/typedoc-plugin-appium.AppiumThemeTemplate</p> <p>Enum of all available templates</p>"},{"location":"reference/enums/appium_typedoc_plugin_appium.AppiumThemeTemplate/#table-of-contents","title":"Table of contents","text":""},{"location":"reference/enums/appium_typedoc_plugin_appium.AppiumThemeTemplate/#enumeration-members","title":"Enumeration Members","text":"<ul> <li>Extension</li> </ul>"},{"location":"reference/enums/appium_typedoc_plugin_appium.AppiumThemeTemplate/#enumeration-members_1","title":"Enumeration Members","text":""},{"location":"reference/enums/appium_typedoc_plugin_appium.AppiumThemeTemplate/#extension","title":"Extension","text":"<p>\u2022 Extension = <code>\"extension.hbs\"</code></p> <p>Template to render a list of commands</p>"},{"location":"reference/enums/appium_typedoc_plugin_appium.AppiumThemeTemplate/#defined-in","title":"Defined in","text":"<p>packages/typedoc-plugin-appium/lib/theme/template.ts:41</p>"},{"location":"reference/enums/appium_types.Key/","title":"Enumeration: Key","text":"<p>@appium/types.Key</p>"},{"location":"reference/enums/appium_types.Key/#table-of-contents","title":"Table of contents","text":""},{"location":"reference/enums/appium_types.Key/#enumeration-members","title":"Enumeration Members","text":"<ul> <li>ADD</li> <li>ALT</li> <li>BACKSPACE</li> <li>CANCEL</li> <li>CLEAR</li> <li>CONTROL</li> <li>DECIMAL</li> <li>DELETE</li> <li>DIVIDE</li> <li>DOWN</li> <li>END</li> <li>ENTER</li> <li>EQUALS</li> <li>ESCAPE</li> <li>F1</li> <li>F10</li> <li>F11</li> <li>F12</li> <li>F2</li> <li>F3</li> <li>F4</li> <li>F5</li> <li>F6</li> <li>F7</li> <li>F8</li> <li>F9</li> <li>HELP</li> <li>HOME</li> <li>INSERT</li> <li>LEFT</li> <li>META</li> <li>MULTIPLY</li> <li>NULL</li> <li>NUMPAD0</li> <li>NUMPAD1</li> <li>NUMPAD2</li> <li>NUMPAD3</li> <li>NUMPAD4</li> <li>NUMPAD5</li> <li>NUMPAD6</li> <li>NUMPAD7</li> <li>NUMPAD8</li> <li>NUMPAD9</li> <li>PAGE_DOWN</li> <li>PAGE_UP</li> <li>PAUSE</li> <li>RETURN</li> <li>RIGHT</li> <li>R_ALT</li> <li>R_ARROWDOWN</li> <li>R_ARROWLEFT</li> <li>R_ARROWRIGHT</li> <li>R_ARROWUP</li> <li>R_CONTROL</li> <li>R_DELETE</li> <li>R_END</li> <li>R_HOME</li> <li>R_INSERT</li> <li>R_META</li> <li>R_PAGEDOWN</li> <li>R_PAGEUP</li> <li>R_SHIFT</li> <li>SEMICOLON</li> <li>SEPARATOR</li> <li>SHIFT</li> <li>SPACE</li> <li>SUBTRACT</li> <li>TAB</li> <li>UP</li> <li>ZENKAKUHANKAKU</li> </ul>"},{"location":"reference/enums/appium_types.Key/#enumeration-members_1","title":"Enumeration Members","text":""},{"location":"reference/enums/appium_types.Key/#add","title":"ADD","text":"<p>\u2022 ADD = <code>\"\ue025\"</code></p>"},{"location":"reference/enums/appium_types.Key/#defined-in","title":"Defined in","text":"<p>packages/types/lib/action.ts:165</p>"},{"location":"reference/enums/appium_types.Key/#alt","title":"ALT","text":"<p>\u2022 ALT = <code>\"\ue00a\"</code></p>"},{"location":"reference/enums/appium_types.Key/#defined-in_1","title":"Defined in","text":"<p>packages/types/lib/action.ts:138</p>"},{"location":"reference/enums/appium_types.Key/#backspace","title":"BACKSPACE","text":"<p>\u2022 BACKSPACE = <code>\"\ue003\"</code></p>"},{"location":"reference/enums/appium_types.Key/#defined-in_2","title":"Defined in","text":"<p>packages/types/lib/action.ts:131</p>"},{"location":"reference/enums/appium_types.Key/#cancel","title":"CANCEL","text":"<p>\u2022 CANCEL = <code>\"\ue001\"</code></p>"},{"location":"reference/enums/appium_types.Key/#defined-in_3","title":"Defined in","text":"<p>packages/types/lib/action.ts:129</p>"},{"location":"reference/enums/appium_types.Key/#clear","title":"CLEAR","text":"<p>\u2022 CLEAR = <code>\"\ue005\"</code></p>"},{"location":"reference/enums/appium_types.Key/#defined-in_4","title":"Defined in","text":"<p>packages/types/lib/action.ts:133</p>"},{"location":"reference/enums/appium_types.Key/#control","title":"CONTROL","text":"<p>\u2022 CONTROL = <code>\"\ue009\"</code></p>"},{"location":"reference/enums/appium_types.Key/#defined-in_5","title":"Defined in","text":"<p>packages/types/lib/action.ts:137</p>"},{"location":"reference/enums/appium_types.Key/#decimal","title":"DECIMAL","text":"<p>\u2022 DECIMAL = <code>\"\ue028\"</code></p>"},{"location":"reference/enums/appium_types.Key/#defined-in_6","title":"Defined in","text":"<p>packages/types/lib/action.ts:168</p>"},{"location":"reference/enums/appium_types.Key/#delete","title":"DELETE","text":"<p>\u2022 DELETE = <code>\"\ue017\"</code></p>"},{"location":"reference/enums/appium_types.Key/#defined-in_7","title":"Defined in","text":"<p>packages/types/lib/action.ts:151</p>"},{"location":"reference/enums/appium_types.Key/#divide","title":"DIVIDE","text":"<p>\u2022 DIVIDE = <code>\"\ue029\"</code></p>"},{"location":"reference/enums/appium_types.Key/#defined-in_8","title":"Defined in","text":"<p>packages/types/lib/action.ts:169</p>"},{"location":"reference/enums/appium_types.Key/#down","title":"DOWN","text":"<p>\u2022 DOWN = <code>\"\ue015\"</code></p>"},{"location":"reference/enums/appium_types.Key/#defined-in_9","title":"Defined in","text":"<p>packages/types/lib/action.ts:149</p>"},{"location":"reference/enums/appium_types.Key/#end","title":"END","text":"<p>\u2022 END = <code>\"\ue010\"</code></p>"},{"location":"reference/enums/appium_types.Key/#defined-in_10","title":"Defined in","text":"<p>packages/types/lib/action.ts:144</p>"},{"location":"reference/enums/appium_types.Key/#enter","title":"ENTER","text":"<p>\u2022 ENTER = <code>\"\ue007\"</code></p>"},{"location":"reference/enums/appium_types.Key/#defined-in_11","title":"Defined in","text":"<p>packages/types/lib/action.ts:135</p>"},{"location":"reference/enums/appium_types.Key/#equals","title":"EQUALS","text":"<p>\u2022 EQUALS = <code>\"\ue019\"</code></p>"},{"location":"reference/enums/appium_types.Key/#defined-in_12","title":"Defined in","text":"<p>packages/types/lib/action.ts:153</p>"},{"location":"reference/enums/appium_types.Key/#escape","title":"ESCAPE","text":"<p>\u2022 ESCAPE = <code>\"\ue00c\"</code></p>"},{"location":"reference/enums/appium_types.Key/#defined-in_13","title":"Defined in","text":"<p>packages/types/lib/action.ts:140</p>"},{"location":"reference/enums/appium_types.Key/#f1","title":"F1","text":"<p>\u2022 F1 = <code>\"\ue031\"</code></p>"},{"location":"reference/enums/appium_types.Key/#defined-in_14","title":"Defined in","text":"<p>packages/types/lib/action.ts:170</p>"},{"location":"reference/enums/appium_types.Key/#f10","title":"F10","text":"<p>\u2022 F10 = <code>\"\ue03a\"</code></p>"},{"location":"reference/enums/appium_types.Key/#defined-in_15","title":"Defined in","text":"<p>packages/types/lib/action.ts:179</p>"},{"location":"reference/enums/appium_types.Key/#f11","title":"F11","text":"<p>\u2022 F11 = <code>\"\ue03b\"</code></p>"},{"location":"reference/enums/appium_types.Key/#defined-in_16","title":"Defined in","text":"<p>packages/types/lib/action.ts:180</p>"},{"location":"reference/enums/appium_types.Key/#f12","title":"F12","text":"<p>\u2022 F12 = <code>\"\ue03c\"</code></p>"},{"location":"reference/enums/appium_types.Key/#defined-in_17","title":"Defined in","text":"<p>packages/types/lib/action.ts:181</p>"},{"location":"reference/enums/appium_types.Key/#f2","title":"F2","text":"<p>\u2022 F2 = <code>\"\ue032\"</code></p>"},{"location":"reference/enums/appium_types.Key/#defined-in_18","title":"Defined in","text":"<p>packages/types/lib/action.ts:171</p>"},{"location":"reference/enums/appium_types.Key/#f3","title":"F3","text":"<p>\u2022 F3 = <code>\"\ue033\"</code></p>"},{"location":"reference/enums/appium_types.Key/#defined-in_19","title":"Defined in","text":"<p>packages/types/lib/action.ts:172</p>"},{"location":"reference/enums/appium_types.Key/#f4","title":"F4","text":"<p>\u2022 F4 = <code>\"\ue034\"</code></p>"},{"location":"reference/enums/appium_types.Key/#defined-in_20","title":"Defined in","text":"<p>packages/types/lib/action.ts:173</p>"},{"location":"reference/enums/appium_types.Key/#f5","title":"F5","text":"<p>\u2022 F5 = <code>\"\ue035\"</code></p>"},{"location":"reference/enums/appium_types.Key/#defined-in_21","title":"Defined in","text":"<p>packages/types/lib/action.ts:174</p>"},{"location":"reference/enums/appium_types.Key/#f6","title":"F6","text":"<p>\u2022 F6 = <code>\"\ue036\"</code></p>"},{"location":"reference/enums/appium_types.Key/#defined-in_22","title":"Defined in","text":"<p>packages/types/lib/action.ts:175</p>"},{"location":"reference/enums/appium_types.Key/#f7","title":"F7","text":"<p>\u2022 F7 = <code>\"\ue037\"</code></p>"},{"location":"reference/enums/appium_types.Key/#defined-in_23","title":"Defined in","text":"<p>packages/types/lib/action.ts:176</p>"},{"location":"reference/enums/appium_types.Key/#f8","title":"F8","text":"<p>\u2022 F8 = <code>\"\ue038\"</code></p>"},{"location":"reference/enums/appium_types.Key/#defined-in_24","title":"Defined in","text":"<p>packages/types/lib/action.ts:177</p>"},{"location":"reference/enums/appium_types.Key/#f9","title":"F9","text":"<p>\u2022 F9 = <code>\"\ue039\"</code></p>"},{"location":"reference/enums/appium_types.Key/#defined-in_25","title":"Defined in","text":"<p>packages/types/lib/action.ts:178</p>"},{"location":"reference/enums/appium_types.Key/#help","title":"HELP","text":"<p>\u2022 HELP = <code>\"\ue002\"</code></p>"},{"location":"reference/enums/appium_types.Key/#defined-in_26","title":"Defined in","text":"<p>packages/types/lib/action.ts:130</p>"},{"location":"reference/enums/appium_types.Key/#home","title":"HOME","text":"<p>\u2022 HOME = <code>\"\ue011\"</code></p>"},{"location":"reference/enums/appium_types.Key/#defined-in_27","title":"Defined in","text":"<p>packages/types/lib/action.ts:145</p>"},{"location":"reference/enums/appium_types.Key/#insert","title":"INSERT","text":"<p>\u2022 INSERT = <code>\"\ue016\"</code></p>"},{"location":"reference/enums/appium_types.Key/#defined-in_28","title":"Defined in","text":"<p>packages/types/lib/action.ts:150</p>"},{"location":"reference/enums/appium_types.Key/#left","title":"LEFT","text":"<p>\u2022 LEFT = <code>\"\ue012\"</code></p>"},{"location":"reference/enums/appium_types.Key/#defined-in_29","title":"Defined in","text":"<p>packages/types/lib/action.ts:146</p>"},{"location":"reference/enums/appium_types.Key/#meta","title":"META","text":"<p>\u2022 META = <code>\"\ue03d\"</code></p>"},{"location":"reference/enums/appium_types.Key/#defined-in_30","title":"Defined in","text":"<p>packages/types/lib/action.ts:182</p>"},{"location":"reference/enums/appium_types.Key/#multiply","title":"MULTIPLY","text":"<p>\u2022 MULTIPLY = <code>\"\ue024\"</code></p>"},{"location":"reference/enums/appium_types.Key/#defined-in_31","title":"Defined in","text":"<p>packages/types/lib/action.ts:164</p>"},{"location":"reference/enums/appium_types.Key/#null","title":"NULL","text":"<p>\u2022 NULL = <code>\"\ue000\"</code></p>"},{"location":"reference/enums/appium_types.Key/#defined-in_32","title":"Defined in","text":"<p>packages/types/lib/action.ts:128</p>"},{"location":"reference/enums/appium_types.Key/#numpad0","title":"NUMPAD0","text":"<p>\u2022 NUMPAD0 = <code>\"\ue01a\"</code></p>"},{"location":"reference/enums/appium_types.Key/#defined-in_33","title":"Defined in","text":"<p>packages/types/lib/action.ts:154</p>"},{"location":"reference/enums/appium_types.Key/#numpad1","title":"NUMPAD1","text":"<p>\u2022 NUMPAD1 = <code>\"\ue01b\"</code></p>"},{"location":"reference/enums/appium_types.Key/#defined-in_34","title":"Defined in","text":"<p>packages/types/lib/action.ts:155</p>"},{"location":"reference/enums/appium_types.Key/#numpad2","title":"NUMPAD2","text":"<p>\u2022 NUMPAD2 = <code>\"\ue01c\"</code></p>"},{"location":"reference/enums/appium_types.Key/#defined-in_35","title":"Defined in","text":"<p>packages/types/lib/action.ts:156</p>"},{"location":"reference/enums/appium_types.Key/#numpad3","title":"NUMPAD3","text":"<p>\u2022 NUMPAD3 = <code>\"\ue01d\"</code></p>"},{"location":"reference/enums/appium_types.Key/#defined-in_36","title":"Defined in","text":"<p>packages/types/lib/action.ts:157</p>"},{"location":"reference/enums/appium_types.Key/#numpad4","title":"NUMPAD4","text":"<p>\u2022 NUMPAD4 = <code>\"\ue01e\"</code></p>"},{"location":"reference/enums/appium_types.Key/#defined-in_37","title":"Defined in","text":"<p>packages/types/lib/action.ts:158</p>"},{"location":"reference/enums/appium_types.Key/#numpad5","title":"NUMPAD5","text":"<p>\u2022 NUMPAD5 = <code>\"\ue01f\"</code></p>"},{"location":"reference/enums/appium_types.Key/#defined-in_38","title":"Defined in","text":"<p>packages/types/lib/action.ts:159</p>"},{"location":"reference/enums/appium_types.Key/#numpad6","title":"NUMPAD6","text":"<p>\u2022 NUMPAD6 = <code>\"\ue020\"</code></p>"},{"location":"reference/enums/appium_types.Key/#defined-in_39","title":"Defined in","text":"<p>packages/types/lib/action.ts:160</p>"},{"location":"reference/enums/appium_types.Key/#numpad7","title":"NUMPAD7","text":"<p>\u2022 NUMPAD7 = <code>\"\ue021\"</code></p>"},{"location":"reference/enums/appium_types.Key/#defined-in_40","title":"Defined in","text":"<p>packages/types/lib/action.ts:161</p>"},{"location":"reference/enums/appium_types.Key/#numpad8","title":"NUMPAD8","text":"<p>\u2022 NUMPAD8 = <code>\"\ue022\"</code></p>"},{"location":"reference/enums/appium_types.Key/#defined-in_41","title":"Defined in","text":"<p>packages/types/lib/action.ts:162</p>"},{"location":"reference/enums/appium_types.Key/#numpad9","title":"NUMPAD9","text":"<p>\u2022 NUMPAD9 = <code>\"\ue023\"</code></p>"},{"location":"reference/enums/appium_types.Key/#defined-in_42","title":"Defined in","text":"<p>packages/types/lib/action.ts:163</p>"},{"location":"reference/enums/appium_types.Key/#page_down","title":"PAGE_DOWN","text":"<p>\u2022 PAGE_DOWN = <code>\"\ue00f\"</code></p>"},{"location":"reference/enums/appium_types.Key/#defined-in_43","title":"Defined in","text":"<p>packages/types/lib/action.ts:143</p>"},{"location":"reference/enums/appium_types.Key/#page_up","title":"PAGE_UP","text":"<p>\u2022 PAGE_UP = <code>\"\ue00e\"</code></p>"},{"location":"reference/enums/appium_types.Key/#defined-in_44","title":"Defined in","text":"<p>packages/types/lib/action.ts:142</p>"},{"location":"reference/enums/appium_types.Key/#pause","title":"PAUSE","text":"<p>\u2022 PAUSE = <code>\"\ue00b\"</code></p>"},{"location":"reference/enums/appium_types.Key/#defined-in_45","title":"Defined in","text":"<p>packages/types/lib/action.ts:139</p>"},{"location":"reference/enums/appium_types.Key/#return","title":"RETURN","text":"<p>\u2022 RETURN = <code>\"\ue006\"</code></p>"},{"location":"reference/enums/appium_types.Key/#defined-in_46","title":"Defined in","text":"<p>packages/types/lib/action.ts:134</p>"},{"location":"reference/enums/appium_types.Key/#right","title":"RIGHT","text":"<p>\u2022 RIGHT = <code>\"\ue014\"</code></p>"},{"location":"reference/enums/appium_types.Key/#defined-in_47","title":"Defined in","text":"<p>packages/types/lib/action.ts:148</p>"},{"location":"reference/enums/appium_types.Key/#r_alt","title":"R_ALT","text":"<p>\u2022 R_ALT = <code>\"\ue052\"</code></p>"},{"location":"reference/enums/appium_types.Key/#defined-in_48","title":"Defined in","text":"<p>packages/types/lib/action.ts:186</p>"},{"location":"reference/enums/appium_types.Key/#r_arrowdown","title":"R_ARROWDOWN","text":"<p>\u2022 R_ARROWDOWN = <code>\"\ue05b\"</code></p>"},{"location":"reference/enums/appium_types.Key/#defined-in_49","title":"Defined in","text":"<p>packages/types/lib/action.ts:195</p>"},{"location":"reference/enums/appium_types.Key/#r_arrowleft","title":"R_ARROWLEFT","text":"<p>\u2022 R_ARROWLEFT = <code>\"\ue058\"</code></p>"},{"location":"reference/enums/appium_types.Key/#defined-in_50","title":"Defined in","text":"<p>packages/types/lib/action.ts:192</p>"},{"location":"reference/enums/appium_types.Key/#r_arrowright","title":"R_ARROWRIGHT","text":"<p>\u2022 R_ARROWRIGHT = <code>\"\ue05a\"</code></p>"},{"location":"reference/enums/appium_types.Key/#defined-in_51","title":"Defined in","text":"<p>packages/types/lib/action.ts:194</p>"},{"location":"reference/enums/appium_types.Key/#r_arrowup","title":"R_ARROWUP","text":"<p>\u2022 R_ARROWUP = <code>\"\ue059\"</code></p>"},{"location":"reference/enums/appium_types.Key/#defined-in_52","title":"Defined in","text":"<p>packages/types/lib/action.ts:193</p>"},{"location":"reference/enums/appium_types.Key/#r_control","title":"R_CONTROL","text":"<p>\u2022 R_CONTROL = <code>\"\ue051\"</code></p>"},{"location":"reference/enums/appium_types.Key/#defined-in_53","title":"Defined in","text":"<p>packages/types/lib/action.ts:185</p>"},{"location":"reference/enums/appium_types.Key/#r_delete","title":"R_DELETE","text":"<p>\u2022 R_DELETE = <code>\"\ue05d\"</code></p>"},{"location":"reference/enums/appium_types.Key/#defined-in_54","title":"Defined in","text":"<p>packages/types/lib/action.ts:197</p>"},{"location":"reference/enums/appium_types.Key/#r_end","title":"R_END","text":"<p>\u2022 R_END = <code>\"\ue056\"</code></p>"},{"location":"reference/enums/appium_types.Key/#defined-in_55","title":"Defined in","text":"<p>packages/types/lib/action.ts:190</p>"},{"location":"reference/enums/appium_types.Key/#r_home","title":"R_HOME","text":"<p>\u2022 R_HOME = <code>\"\ue057\"</code></p>"},{"location":"reference/enums/appium_types.Key/#defined-in_56","title":"Defined in","text":"<p>packages/types/lib/action.ts:191</p>"},{"location":"reference/enums/appium_types.Key/#r_insert","title":"R_INSERT","text":"<p>\u2022 R_INSERT = <code>\"\ue05c\"</code></p>"},{"location":"reference/enums/appium_types.Key/#defined-in_57","title":"Defined in","text":"<p>packages/types/lib/action.ts:196</p>"},{"location":"reference/enums/appium_types.Key/#r_meta","title":"R_META","text":"<p>\u2022 R_META = <code>\"\ue053\"</code></p>"},{"location":"reference/enums/appium_types.Key/#defined-in_58","title":"Defined in","text":"<p>packages/types/lib/action.ts:187</p>"},{"location":"reference/enums/appium_types.Key/#r_pagedown","title":"R_PAGEDOWN","text":"<p>\u2022 R_PAGEDOWN = <code>\"\ue055\"</code></p>"},{"location":"reference/enums/appium_types.Key/#defined-in_59","title":"Defined in","text":"<p>packages/types/lib/action.ts:189</p>"},{"location":"reference/enums/appium_types.Key/#r_pageup","title":"R_PAGEUP","text":"<p>\u2022 R_PAGEUP = <code>\"\ue054\"</code></p>"},{"location":"reference/enums/appium_types.Key/#defined-in_60","title":"Defined in","text":"<p>packages/types/lib/action.ts:188</p>"},{"location":"reference/enums/appium_types.Key/#r_shift","title":"R_SHIFT","text":"<p>\u2022 R_SHIFT = <code>\"\ue050\"</code></p>"},{"location":"reference/enums/appium_types.Key/#defined-in_61","title":"Defined in","text":"<p>packages/types/lib/action.ts:184</p>"},{"location":"reference/enums/appium_types.Key/#semicolon","title":"SEMICOLON","text":"<p>\u2022 SEMICOLON = <code>\"\ue018\"</code></p>"},{"location":"reference/enums/appium_types.Key/#defined-in_62","title":"Defined in","text":"<p>packages/types/lib/action.ts:152</p>"},{"location":"reference/enums/appium_types.Key/#separator","title":"SEPARATOR","text":"<p>\u2022 SEPARATOR = <code>\"\ue026\"</code></p>"},{"location":"reference/enums/appium_types.Key/#defined-in_63","title":"Defined in","text":"<p>packages/types/lib/action.ts:166</p>"},{"location":"reference/enums/appium_types.Key/#shift","title":"SHIFT","text":"<p>\u2022 SHIFT = <code>\"\ue008\"</code></p>"},{"location":"reference/enums/appium_types.Key/#defined-in_64","title":"Defined in","text":"<p>packages/types/lib/action.ts:136</p>"},{"location":"reference/enums/appium_types.Key/#space","title":"SPACE","text":"<p>\u2022 SPACE = <code>\"\ue00d\"</code></p>"},{"location":"reference/enums/appium_types.Key/#defined-in_65","title":"Defined in","text":"<p>packages/types/lib/action.ts:141</p>"},{"location":"reference/enums/appium_types.Key/#subtract","title":"SUBTRACT","text":"<p>\u2022 SUBTRACT = <code>\"\ue027\"</code></p>"},{"location":"reference/enums/appium_types.Key/#defined-in_66","title":"Defined in","text":"<p>packages/types/lib/action.ts:167</p>"},{"location":"reference/enums/appium_types.Key/#tab","title":"TAB","text":"<p>\u2022 TAB = <code>\"\ue004\"</code></p>"},{"location":"reference/enums/appium_types.Key/#defined-in_67","title":"Defined in","text":"<p>packages/types/lib/action.ts:132</p>"},{"location":"reference/enums/appium_types.Key/#up","title":"UP","text":"<p>\u2022 UP = <code>\"\ue013\"</code></p>"},{"location":"reference/enums/appium_types.Key/#defined-in_68","title":"Defined in","text":"<p>packages/types/lib/action.ts:147</p>"},{"location":"reference/enums/appium_types.Key/#zenkakuhankaku","title":"ZENKAKUHANKAKU","text":"<p>\u2022 ZENKAKUHANKAKU = <code>\"\ue040\"</code></p>"},{"location":"reference/enums/appium_types.Key/#defined-in_69","title":"Defined in","text":"<p>packages/types/lib/action.ts:183</p>"},{"location":"reference/interfaces/appium.ServerInitData/","title":"Interface: ServerInitData&lt;&gt;","text":"<p>appium.ServerInitData</p>"},{"location":"reference/interfaces/appium.ServerInitData/#table-of-contents","title":"Table of contents","text":""},{"location":"reference/interfaces/appium.ServerInitData/#properties","title":"Properties","text":"<ul> <li>appiumDriver</li> <li>parsedArgs</li> </ul>"},{"location":"reference/interfaces/appium.ServerInitData/#properties_1","title":"Properties","text":""},{"location":"reference/interfaces/appium.ServerInitData/#appiumdriver","title":"appiumDriver","text":"<p>\u2022 appiumDriver: <code>AppiumDriver</code></p> <p>The Appium driver</p>"},{"location":"reference/interfaces/appium.ServerInitData/#defined-in","title":"Defined in","text":"<p>packages/appium/lib/main.js:417</p>"},{"location":"reference/interfaces/appium.ServerInitData/#parsedargs","title":"parsedArgs","text":"<p>\u2022 parsedArgs: <code>ParsedArgs</code>&lt;<code>\"server\"</code>, <code>void</code>&gt;</p> <p>The parsed arguments</p>"},{"location":"reference/interfaces/appium.ServerInitData/#defined-in_1","title":"Defined in","text":"<p>packages/appium/lib/main.js:418</p>"},{"location":"reference/interfaces/appium_base_driver-1.ServerOpts/","title":"Interface: ServerOpts&lt;&gt;","text":"<p>@appium/base-driver.ServerOpts</p>"},{"location":"reference/interfaces/appium_base_driver-1.ServerOpts/#table-of-contents","title":"Table of contents","text":""},{"location":"reference/interfaces/appium_base_driver-1.ServerOpts/#properties","title":"Properties","text":"<ul> <li>allowCors</li> <li>basePath</li> <li>cliArgs</li> <li>extraMethodMap</li> <li>hostname</li> <li>keepAliveTimeout</li> <li>port</li> <li>routeConfiguringFunction</li> <li>serverUpdaters</li> </ul>"},{"location":"reference/interfaces/appium_base_driver-1.ServerOpts/#properties_1","title":"Properties","text":""},{"location":"reference/interfaces/appium_base_driver-1.ServerOpts/#allowcors","title":"allowCors","text":"<p>\u2022 allowCors: <code>undefined</code> | <code>boolean</code></p>"},{"location":"reference/interfaces/appium_base_driver-1.ServerOpts/#defined-in","title":"Defined in","text":"<p>packages/base-driver/lib/express/server.js:301</p>"},{"location":"reference/interfaces/appium_base_driver-1.ServerOpts/#basepath","title":"basePath","text":"<p>\u2022 basePath: <code>undefined</code> | <code>string</code></p>"},{"location":"reference/interfaces/appium_base_driver-1.ServerOpts/#defined-in_1","title":"Defined in","text":"<p>packages/base-driver/lib/express/server.js:302</p>"},{"location":"reference/interfaces/appium_base_driver-1.ServerOpts/#cliargs","title":"cliArgs","text":"<p>\u2022 cliArgs: <code>undefined</code> | <code>ServerArgs</code></p>"},{"location":"reference/interfaces/appium_base_driver-1.ServerOpts/#defined-in_2","title":"Defined in","text":"<p>packages/base-driver/lib/express/server.js:299</p>"},{"location":"reference/interfaces/appium_base_driver-1.ServerOpts/#extramethodmap","title":"extraMethodMap","text":"<p>\u2022 extraMethodMap: <code>undefined</code> | <code>Readonly</code>&lt;<code>Record</code>&lt;<code>string</code>, { <code>DELETE?</code>: <code>MethodDef</code>&lt;<code>ExternalDriver</code>&lt;typeof <code>BASE_DESIRED_CAP_CONSTRAINTS</code>&gt;&gt; ; <code>GET?</code>: <code>MethodDef</code>&lt;<code>ExternalDriver</code>&lt;typeof <code>BASE_DESIRED_CAP_CONSTRAINTS</code>&gt;&gt; ; <code>POST?</code>: <code>MethodDef</code>&lt;<code>ExternalDriver</code>&lt;typeof <code>BASE_DESIRED_CAP_CONSTRAINTS</code>&gt;&gt;  }&gt;&gt;</p>"},{"location":"reference/interfaces/appium_base_driver-1.ServerOpts/#defined-in_3","title":"Defined in","text":"<p>packages/base-driver/lib/express/server.js:303</p>"},{"location":"reference/interfaces/appium_base_driver-1.ServerOpts/#hostname","title":"hostname","text":"<p>\u2022 hostname: <code>undefined</code> | <code>string</code></p>"},{"location":"reference/interfaces/appium_base_driver-1.ServerOpts/#defined-in_4","title":"Defined in","text":"<p>packages/base-driver/lib/express/server.js:300</p>"},{"location":"reference/interfaces/appium_base_driver-1.ServerOpts/#keepalivetimeout","title":"keepAliveTimeout","text":"<p>\u2022 keepAliveTimeout: <code>undefined</code> | <code>number</code></p>"},{"location":"reference/interfaces/appium_base_driver-1.ServerOpts/#defined-in_5","title":"Defined in","text":"<p>packages/base-driver/lib/express/server.js:305</p>"},{"location":"reference/interfaces/appium_base_driver-1.ServerOpts/#port","title":"port","text":"<p>\u2022 port: <code>number</code></p>"},{"location":"reference/interfaces/appium_base_driver-1.ServerOpts/#defined-in_6","title":"Defined in","text":"<p>packages/base-driver/lib/express/server.js:298</p>"},{"location":"reference/interfaces/appium_base_driver-1.ServerOpts/#routeconfiguringfunction","title":"routeConfiguringFunction","text":"<p>\u2022 routeConfiguringFunction: <code>RouteConfiguringFunction</code></p>"},{"location":"reference/interfaces/appium_base_driver-1.ServerOpts/#defined-in_7","title":"Defined in","text":"<p>packages/base-driver/lib/express/server.js:297</p>"},{"location":"reference/interfaces/appium_base_driver-1.ServerOpts/#serverupdaters","title":"serverUpdaters","text":"<p>\u2022 serverUpdaters: <code>undefined</code> | <code>UpdateServerCallback</code>[]</p>"},{"location":"reference/interfaces/appium_base_driver-1.ServerOpts/#defined-in_8","title":"Defined in","text":"<p>packages/base-driver/lib/express/server.js:304</p>"},{"location":"reference/interfaces/appium_base_plugin.Plugin/","title":"Interface: Plugin","text":"<p>@appium/base-plugin.Plugin</p> <p>An instance of a \"plugin\" extension.</p> <p>Likewise, the <code>prototype</code> of a <code>Plugin</code> class.</p>"},{"location":"reference/interfaces/appium_base_plugin.Plugin/#table-of-contents","title":"Table of contents","text":""},{"location":"reference/interfaces/appium_base_plugin.Plugin/#properties","title":"Properties","text":"<ul> <li>cliArgs</li> <li>handle</li> <li>logger</li> <li>name</li> <li>onUnexpectedShutdown</li> </ul>"},{"location":"reference/interfaces/appium_base_plugin.Plugin/#properties_1","title":"Properties","text":""},{"location":"reference/interfaces/appium_base_plugin.Plugin/#cliargs","title":"cliArgs","text":"<p>\u2022 cliArgs: <code>Record</code>&lt;<code>string</code>, <code>any</code>&gt;</p> <p>CLI args for this plugin (if any are accepted and provided).</p>"},{"location":"reference/interfaces/appium_base_plugin.Plugin/#defined-in","title":"Defined in","text":"<p>packages/types/build/lib/plugin.d.ts:42</p>"},{"location":"reference/interfaces/appium_base_plugin.Plugin/#handle","title":"handle","text":"<p>\u2022 <code>Optional</code> handle: <code>PluginCommand</code>&lt;<code>ExternalDriver</code>&lt;typeof <code>BASE_DESIRED_CAP_CONSTRAINTS</code>&gt;, [cmdName: string, ...args: any[]], <code>void</code>&gt;</p> <p>Handle an Appium command, optionally running and using or throwing away the value of the original Appium behavior (or the behavior of the next plugin in a plugin chain).</p>"},{"location":"reference/interfaces/appium_base_plugin.Plugin/#defined-in_1","title":"Defined in","text":"<p>packages/types/build/lib/plugin.d.ts:51</p>"},{"location":"reference/interfaces/appium_base_plugin.Plugin/#logger","title":"logger","text":"<p>\u2022 logger: <code>AppiumLogger</code></p> <p>A logger with prefix identifying the plugin</p>"},{"location":"reference/interfaces/appium_base_plugin.Plugin/#defined-in_2","title":"Defined in","text":"<p>packages/types/build/lib/plugin.d.ts:38</p>"},{"location":"reference/interfaces/appium_base_plugin.Plugin/#name","title":"name","text":"<p>\u2022 name: <code>string</code></p> <p>Name of the plugin.  Derived from the metadata.</p>"},{"location":"reference/interfaces/appium_base_plugin.Plugin/#defined-in_3","title":"Defined in","text":"<p>packages/types/build/lib/plugin.d.ts:34</p>"},{"location":"reference/interfaces/appium_base_plugin.Plugin/#onunexpectedshutdown","title":"onUnexpectedShutdown","text":"<p>\u2022 <code>Optional</code> onUnexpectedShutdown: (<code>driver</code>: <code>ExternalDriver</code>\u0002klzzwxh:0028\u0003\\&gt;, <code>cause</code>: <code>string</code> \\| <code>Error</code>) =&gt; <code>Promise</code>&lt;<code>void</code>&gt;"},{"location":"reference/interfaces/appium_base_plugin.Plugin/#type-declaration","title":"Type declaration","text":"<p>\u25b8 (<code>driver</code>, <code>cause</code>): <code>Promise</code>&lt;<code>void</code>&gt;</p> <p>Listener for unexpected server shutdown, which allows a plugin to do cleanup or take custom actions.</p>"},{"location":"reference/interfaces/appium_base_plugin.Plugin/#parameters","title":"Parameters","text":"Name Type <code>driver</code> <code>ExternalDriver</code>&lt;typeof <code>BASE_DESIRED_CAP_CONSTRAINTS</code>&gt; <code>cause</code> <code>string</code> | <code>Error</code>"},{"location":"reference/interfaces/appium_base_plugin.Plugin/#returns","title":"Returns","text":"<p><code>Promise</code>&lt;<code>void</code>&gt;</p>"},{"location":"reference/interfaces/appium_base_plugin.Plugin/#defined-in_4","title":"Defined in","text":"<p>packages/types/build/lib/plugin.d.ts:46</p>"},{"location":"reference/interfaces/appium_support.console.ConsoleOpts/","title":"Interface: ConsoleOpts&lt;&gt;","text":"<p>@appium/support.console.ConsoleOpts</p>"},{"location":"reference/interfaces/appium_support.console.ConsoleOpts/#table-of-contents","title":"Table of contents","text":""},{"location":"reference/interfaces/appium_support.console.ConsoleOpts/#properties","title":"Properties","text":"<ul> <li>jsonMode</li> <li>useColor</li> <li>useSymbols</li> </ul>"},{"location":"reference/interfaces/appium_support.console.ConsoleOpts/#properties_1","title":"Properties","text":""},{"location":"reference/interfaces/appium_support.console.ConsoleOpts/#jsonmode","title":"jsonMode","text":"<p>\u2022 jsonMode: <code>undefined</code> | <code>boolean</code></p> <p>If truthy, supress all output except JSON (use <code>json</code>), which writes to <code>STDOUT</code>.</p>"},{"location":"reference/interfaces/appium_support.console.ConsoleOpts/#defined-in","title":"Defined in","text":"<p>packages/support/lib/console.js:166</p>"},{"location":"reference/interfaces/appium_support.console.ConsoleOpts/#usecolor","title":"useColor","text":"<p>\u2022 useColor: <code>undefined</code> | <code>boolean</code></p> <p>If falsy, do not use color output. If truthy, forces color output. By default, checks terminal/TTY for support via pkg <code>supports-color</code>. Ignored if <code>useSymbols</code> is <code>false</code>.</p>"},{"location":"reference/interfaces/appium_support.console.ConsoleOpts/#defined-in_1","title":"Defined in","text":"<p>packages/support/lib/console.js:168</p>"},{"location":"reference/interfaces/appium_support.console.ConsoleOpts/#usesymbols","title":"useSymbols","text":"<p>\u2022 useSymbols: <code>undefined</code> | <code>boolean</code></p> <p>If falsy, do not use fancy symbols.</p>"},{"location":"reference/interfaces/appium_support.console.ConsoleOpts/#defined-in_2","title":"Defined in","text":"<p>packages/support/lib/console.js:167</p>"},{"location":"reference/interfaces/appium_support.imageUtil.Region/","title":"Interface: Region&lt;&gt;","text":"<p>@appium/support.imageUtil.Region</p>"},{"location":"reference/interfaces/appium_support.imageUtil.Region/#table-of-contents","title":"Table of contents","text":""},{"location":"reference/interfaces/appium_support.imageUtil.Region/#properties","title":"Properties","text":"<ul> <li>height</li> <li>left</li> <li>top</li> <li>width</li> </ul>"},{"location":"reference/interfaces/appium_support.imageUtil.Region/#properties_1","title":"Properties","text":""},{"location":"reference/interfaces/appium_support.imageUtil.Region/#height","title":"height","text":"<p>\u2022 height: <code>number</code></p>"},{"location":"reference/interfaces/appium_support.imageUtil.Region/#defined-in","title":"Defined in","text":"<p>packages/support/lib/image-util.js:173</p>"},{"location":"reference/interfaces/appium_support.imageUtil.Region/#left","title":"left","text":"<p>\u2022 left: <code>number</code></p>"},{"location":"reference/interfaces/appium_support.imageUtil.Region/#defined-in_1","title":"Defined in","text":"<p>packages/support/lib/image-util.js:170</p>"},{"location":"reference/interfaces/appium_support.imageUtil.Region/#top","title":"top","text":"<p>\u2022 top: <code>number</code></p>"},{"location":"reference/interfaces/appium_support.imageUtil.Region/#defined-in_2","title":"Defined in","text":"<p>packages/support/lib/image-util.js:171</p>"},{"location":"reference/interfaces/appium_support.imageUtil.Region/#width","title":"width","text":"<p>\u2022 width: <code>number</code></p>"},{"location":"reference/interfaces/appium_support.imageUtil.Region/#defined-in_3","title":"Defined in","text":"<p>packages/support/lib/image-util.js:172</p>"},{"location":"reference/interfaces/appium_support.logger.AppiumLogger/","title":"Interface: AppiumLogger","text":"<p>@appium/support.logger.AppiumLogger</p> <p>Describes the <code>npmlog</code>-based internal logger.</p> <p><code>See</code></p> <p>https://npm.im/npmlog</p>"},{"location":"reference/interfaces/appium_support.logger.AppiumLogger/#table-of-contents","title":"Table of contents","text":""},{"location":"reference/interfaces/appium_support.logger.AppiumLogger/#properties","title":"Properties","text":"<ul> <li>level</li> <li>levels</li> <li>prefix</li> </ul>"},{"location":"reference/interfaces/appium_support.logger.AppiumLogger/#methods","title":"Methods","text":"<ul> <li>debug</li> <li>error</li> <li>errorAndThrow</li> <li>http</li> <li>info</li> <li>silly</li> <li>unwrap</li> <li>verbose</li> <li>warn</li> </ul>"},{"location":"reference/interfaces/appium_support.logger.AppiumLogger/#properties_1","title":"Properties","text":""},{"location":"reference/interfaces/appium_support.logger.AppiumLogger/#level","title":"level","text":"<p>\u2022 level: <code>AppiumLoggerLevel</code></p>"},{"location":"reference/interfaces/appium_support.logger.AppiumLogger/#defined-in","title":"Defined in","text":"<p>packages/types/build/lib/index.d.ts:46</p>"},{"location":"reference/interfaces/appium_support.logger.AppiumLogger/#levels","title":"levels","text":"<p>\u2022 levels: <code>AppiumLoggerLevel</code>[]</p>"},{"location":"reference/interfaces/appium_support.logger.AppiumLogger/#defined-in_1","title":"Defined in","text":"<p>packages/types/build/lib/index.d.ts:47</p>"},{"location":"reference/interfaces/appium_support.logger.AppiumLogger/#prefix","title":"prefix","text":"<p>\u2022 <code>Optional</code> prefix: <code>AppiumLoggerPrefix</code></p> <p>Log prefix, if applicable.</p>"},{"location":"reference/interfaces/appium_support.logger.AppiumLogger/#defined-in_2","title":"Defined in","text":"<p>packages/types/build/lib/index.d.ts:51</p>"},{"location":"reference/interfaces/appium_support.logger.AppiumLogger/#methods_1","title":"Methods","text":""},{"location":"reference/interfaces/appium_support.logger.AppiumLogger/#debug","title":"debug","text":"<p>\u25b8 debug(<code>...args</code>): <code>void</code></p>"},{"location":"reference/interfaces/appium_support.logger.AppiumLogger/#parameters","title":"Parameters","text":"Name Type <code>...args</code> <code>any</code>[]"},{"location":"reference/interfaces/appium_support.logger.AppiumLogger/#returns","title":"Returns","text":"<p><code>void</code></p>"},{"location":"reference/interfaces/appium_support.logger.AppiumLogger/#defined-in_3","title":"Defined in","text":"<p>packages/types/build/lib/index.d.ts:52</p>"},{"location":"reference/interfaces/appium_support.logger.AppiumLogger/#error","title":"error","text":"<p>\u25b8 error(<code>...args</code>): <code>void</code></p>"},{"location":"reference/interfaces/appium_support.logger.AppiumLogger/#parameters_1","title":"Parameters","text":"Name Type <code>...args</code> <code>any</code>[]"},{"location":"reference/interfaces/appium_support.logger.AppiumLogger/#returns_1","title":"Returns","text":"<p><code>void</code></p>"},{"location":"reference/interfaces/appium_support.logger.AppiumLogger/#defined-in_4","title":"Defined in","text":"<p>packages/types/build/lib/index.d.ts:55</p>"},{"location":"reference/interfaces/appium_support.logger.AppiumLogger/#errorandthrow","title":"errorAndThrow","text":"<p>\u25b8 errorAndThrow(<code>...args</code>): <code>never</code></p>"},{"location":"reference/interfaces/appium_support.logger.AppiumLogger/#parameters_2","title":"Parameters","text":"Name Type <code>...args</code> <code>any</code>[]"},{"location":"reference/interfaces/appium_support.logger.AppiumLogger/#returns_2","title":"Returns","text":"<p><code>never</code></p>"},{"location":"reference/interfaces/appium_support.logger.AppiumLogger/#defined-in_5","title":"Defined in","text":"<p>packages/types/build/lib/index.d.ts:59</p>"},{"location":"reference/interfaces/appium_support.logger.AppiumLogger/#http","title":"http","text":"<p>\u25b8 http(<code>...args</code>): <code>void</code></p>"},{"location":"reference/interfaces/appium_support.logger.AppiumLogger/#parameters_3","title":"Parameters","text":"Name Type <code>...args</code> <code>any</code>[]"},{"location":"reference/interfaces/appium_support.logger.AppiumLogger/#returns_3","title":"Returns","text":"<p><code>void</code></p>"},{"location":"reference/interfaces/appium_support.logger.AppiumLogger/#defined-in_6","title":"Defined in","text":"<p>packages/types/build/lib/index.d.ts:58</p>"},{"location":"reference/interfaces/appium_support.logger.AppiumLogger/#info","title":"info","text":"<p>\u25b8 info(<code>...args</code>): <code>void</code></p>"},{"location":"reference/interfaces/appium_support.logger.AppiumLogger/#parameters_4","title":"Parameters","text":"Name Type <code>...args</code> <code>any</code>[]"},{"location":"reference/interfaces/appium_support.logger.AppiumLogger/#returns_4","title":"Returns","text":"<p><code>void</code></p>"},{"location":"reference/interfaces/appium_support.logger.AppiumLogger/#defined-in_7","title":"Defined in","text":"<p>packages/types/build/lib/index.d.ts:53</p>"},{"location":"reference/interfaces/appium_support.logger.AppiumLogger/#silly","title":"silly","text":"<p>\u25b8 silly(<code>...args</code>): <code>void</code></p>"},{"location":"reference/interfaces/appium_support.logger.AppiumLogger/#parameters_5","title":"Parameters","text":"Name Type <code>...args</code> <code>any</code>[]"},{"location":"reference/interfaces/appium_support.logger.AppiumLogger/#returns_5","title":"Returns","text":"<p><code>void</code></p>"},{"location":"reference/interfaces/appium_support.logger.AppiumLogger/#defined-in_8","title":"Defined in","text":"<p>packages/types/build/lib/index.d.ts:57</p>"},{"location":"reference/interfaces/appium_support.logger.AppiumLogger/#unwrap","title":"unwrap","text":"<p>\u25b8 unwrap(): <code>Logger</code></p> <p>Returns the underlying <code>npmlog</code> Logger.</p>"},{"location":"reference/interfaces/appium_support.logger.AppiumLogger/#returns_6","title":"Returns","text":"<p><code>Logger</code></p>"},{"location":"reference/interfaces/appium_support.logger.AppiumLogger/#defined-in_9","title":"Defined in","text":"<p>packages/types/build/lib/index.d.ts:45</p>"},{"location":"reference/interfaces/appium_support.logger.AppiumLogger/#verbose","title":"verbose","text":"<p>\u25b8 verbose(<code>...args</code>): <code>void</code></p>"},{"location":"reference/interfaces/appium_support.logger.AppiumLogger/#parameters_6","title":"Parameters","text":"Name Type <code>...args</code> <code>any</code>[]"},{"location":"reference/interfaces/appium_support.logger.AppiumLogger/#returns_7","title":"Returns","text":"<p><code>void</code></p>"},{"location":"reference/interfaces/appium_support.logger.AppiumLogger/#defined-in_10","title":"Defined in","text":"<p>packages/types/build/lib/index.d.ts:56</p>"},{"location":"reference/interfaces/appium_support.logger.AppiumLogger/#warn","title":"warn","text":"<p>\u25b8 warn(<code>...args</code>): <code>void</code></p>"},{"location":"reference/interfaces/appium_support.logger.AppiumLogger/#parameters_7","title":"Parameters","text":"Name Type <code>...args</code> <code>any</code>[]"},{"location":"reference/interfaces/appium_support.logger.AppiumLogger/#returns_8","title":"Returns","text":"<p><code>void</code></p>"},{"location":"reference/interfaces/appium_support.logger.AppiumLogger/#defined-in_11","title":"Defined in","text":"<p>packages/types/build/lib/index.d.ts:54</p>"},{"location":"reference/interfaces/appium_support.logger.LoadResult/","title":"Interface: LoadResult&lt;&gt;","text":"<p>@appium/support.logger.LoadResult</p>"},{"location":"reference/interfaces/appium_support.logger.LoadResult/#table-of-contents","title":"Table of contents","text":""},{"location":"reference/interfaces/appium_support.logger.LoadResult/#properties","title":"Properties","text":"<ul> <li>issues</li> <li>rules</li> </ul>"},{"location":"reference/interfaces/appium_support.logger.LoadResult/#properties_1","title":"Properties","text":""},{"location":"reference/interfaces/appium_support.logger.LoadResult/#issues","title":"issues","text":"<p>\u2022 issues: <code>string</code>[]</p> <p>The list of rule parsing issues (one item per rule). Rules with issues are skipped. An empty list is returned if no parsing issues exist.</p>"},{"location":"reference/interfaces/appium_support.logger.LoadResult/#defined-in","title":"Defined in","text":"<p>packages/support/lib/logging.js:128</p>"},{"location":"reference/interfaces/appium_support.logger.LoadResult/#rules","title":"rules","text":"<p>\u2022 rules: <code>SecureValuePreprocessingRule</code>[]</p> <p>The list of successfully loaded replacement rules. The list could be empty if no rules were loaded.</p>"},{"location":"reference/interfaces/appium_support.logger.LoadResult/#defined-in_1","title":"Defined in","text":"<p>packages/support/lib/logging.js:130</p>"},{"location":"reference/interfaces/appium_support.net.AuthCredentials/","title":"Interface: AuthCredentials&lt;&gt;","text":"<p>@appium/support.net.AuthCredentials</p>"},{"location":"reference/interfaces/appium_support.net.AuthCredentials/#table-of-contents","title":"Table of contents","text":""},{"location":"reference/interfaces/appium_support.net.AuthCredentials/#properties","title":"Properties","text":"<ul> <li>pass</li> <li>user</li> </ul>"},{"location":"reference/interfaces/appium_support.net.AuthCredentials/#properties_1","title":"Properties","text":""},{"location":"reference/interfaces/appium_support.net.AuthCredentials/#pass","title":"pass","text":"<p>\u2022 pass: <code>string</code></p> <p>Non-empty password</p>"},{"location":"reference/interfaces/appium_support.net.AuthCredentials/#defined-in","title":"Defined in","text":"<p>packages/support/lib/net.js:312</p>"},{"location":"reference/interfaces/appium_support.net.AuthCredentials/#user","title":"user","text":"<p>\u2022 user: <code>string</code></p> <p>Non-empty user name</p>"},{"location":"reference/interfaces/appium_support.net.AuthCredentials/#defined-in_1","title":"Defined in","text":"<p>packages/support/lib/net.js:311</p>"},{"location":"reference/interfaces/appium_support.net.DownloadOptions/","title":"Interface: DownloadOptions&lt;&gt;","text":"<p>@appium/support.net.DownloadOptions</p>"},{"location":"reference/interfaces/appium_support.net.DownloadOptions/#table-of-contents","title":"Table of contents","text":""},{"location":"reference/interfaces/appium_support.net.DownloadOptions/#properties","title":"Properties","text":"<ul> <li>headers</li> <li>timeout</li> </ul>"},{"location":"reference/interfaces/appium_support.net.DownloadOptions/#properties_1","title":"Properties","text":""},{"location":"reference/interfaces/appium_support.net.DownloadOptions/#headers","title":"headers","text":"<p>\u2022 headers: <code>undefined</code> | <code>Record</code>&lt;<code>string</code>, <code>any</code>&gt;</p> <p>Request headers mapping</p>"},{"location":"reference/interfaces/appium_support.net.DownloadOptions/#defined-in","title":"Defined in","text":"<p>packages/support/lib/net.js:305</p>"},{"location":"reference/interfaces/appium_support.net.DownloadOptions/#timeout","title":"timeout","text":"<p>\u2022 timeout: <code>undefined</code> | <code>number</code></p> <p>The actual request timeout in milliseconds; defaults to DEFAULT_TIMEOUT_MS</p>"},{"location":"reference/interfaces/appium_support.net.DownloadOptions/#defined-in_1","title":"Defined in","text":"<p>packages/support/lib/net.js:304</p>"},{"location":"reference/interfaces/appium_support.net.HttpUploadOptions/","title":"Interface: HttpUploadOptions&lt;&gt;","text":"<p>@appium/support.net.HttpUploadOptions</p>"},{"location":"reference/interfaces/appium_support.net.HttpUploadOptions/#table-of-contents","title":"Table of contents","text":""},{"location":"reference/interfaces/appium_support.net.HttpUploadOptions/#properties","title":"Properties","text":"<ul> <li>fileFieldName</li> <li>formFields</li> <li>headers</li> <li>method</li> <li>timeout</li> </ul>"},{"location":"reference/interfaces/appium_support.net.HttpUploadOptions/#properties_1","title":"Properties","text":""},{"location":"reference/interfaces/appium_support.net.HttpUploadOptions/#filefieldname","title":"fileFieldName","text":"<p>\u2022 fileFieldName: <code>undefined</code> | <code>string</code></p> <p>The name of the form field containing the file content to be uploaded. Any falsy value make the request to use non-multipart upload</p>"},{"location":"reference/interfaces/appium_support.net.HttpUploadOptions/#defined-in","title":"Defined in","text":"<p>packages/support/lib/net.js:331</p>"},{"location":"reference/interfaces/appium_support.net.HttpUploadOptions/#formfields","title":"formFields","text":"<p>\u2022 formFields: <code>undefined</code> | <code>Record</code>&lt;<code>string</code>, <code>any</code>&gt;</p> <p>The additional form fields to be included into the upload request. This property is only considered if <code>fileFieldName</code> is set</p>"},{"location":"reference/interfaces/appium_support.net.HttpUploadOptions/#defined-in_1","title":"Defined in","text":"<p>packages/support/lib/net.js:333</p>"},{"location":"reference/interfaces/appium_support.net.HttpUploadOptions/#headers","title":"headers","text":"<p>\u2022 headers: <code>Record</code>&lt;<code>string</code>, <code>any</code>&gt;</p> <p>Additional request headers mapping</p>"},{"location":"reference/interfaces/appium_support.net.HttpUploadOptions/#defined-in_2","title":"Defined in","text":"<p>packages/support/lib/net.js:328</p>"},{"location":"reference/interfaces/appium_support.net.HttpUploadOptions/#method","title":"method","text":"<p>\u2022 method: <code>undefined</code> | <code>Method</code></p> <p>The HTTP method used for file upload</p>"},{"location":"reference/interfaces/appium_support.net.HttpUploadOptions/#defined-in_3","title":"Defined in","text":"<p>packages/support/lib/net.js:329</p>"},{"location":"reference/interfaces/appium_support.net.HttpUploadOptions/#timeout","title":"timeout","text":"<p>\u2022 timeout: <code>undefined</code> | <code>number</code></p> <p>The actual request timeout in milliseconds; defaults to DEFAULT_TIMEOUT_MS</p>"},{"location":"reference/interfaces/appium_support.net.HttpUploadOptions/#defined-in_4","title":"Defined in","text":"<p>packages/support/lib/net.js:330</p>"},{"location":"reference/interfaces/appium_support.net.NetOptions/","title":"Interface: NetOptions&lt;&gt;","text":"<p>@appium/support.net.NetOptions</p>"},{"location":"reference/interfaces/appium_support.net.NetOptions/#table-of-contents","title":"Table of contents","text":""},{"location":"reference/interfaces/appium_support.net.NetOptions/#properties","title":"Properties","text":"<ul> <li>auth</li> <li>isMetered</li> </ul>"},{"location":"reference/interfaces/appium_support.net.NetOptions/#properties_1","title":"Properties","text":""},{"location":"reference/interfaces/appium_support.net.NetOptions/#auth","title":"auth","text":"<p>\u2022 auth: <code>undefined</code> | <code>AuthCredentials</code></p> <p>Authentication credentials</p>"},{"location":"reference/interfaces/appium_support.net.NetOptions/#defined-in","title":"Defined in","text":"<p>packages/support/lib/net.js:298</p>"},{"location":"reference/interfaces/appium_support.net.NetOptions/#ismetered","title":"isMetered","text":"<p>\u2022 isMetered: <code>undefined</code> | <code>boolean</code></p> <p>Whether to log the actual download performance (e.g. timings and speed)</p>"},{"location":"reference/interfaces/appium_support.net.NetOptions/#defined-in_1","title":"Defined in","text":"<p>packages/support/lib/net.js:296</p>"},{"location":"reference/interfaces/appium_support.net.NotHttpUploadOptions/","title":"Interface: NotHttpUploadOptions&lt;&gt;","text":"<p>@appium/support.net.NotHttpUploadOptions</p>"},{"location":"reference/interfaces/appium_support.net.NotHttpUploadOptions/#table-of-contents","title":"Table of contents","text":""},{"location":"reference/interfaces/appium_support.net.NotHttpUploadOptions/#properties","title":"Properties","text":"<ul> <li>fileFieldName</li> <li>formFields</li> <li>headers</li> <li>method</li> <li>timeout</li> </ul>"},{"location":"reference/interfaces/appium_support.net.NotHttpUploadOptions/#properties_1","title":"Properties","text":""},{"location":"reference/interfaces/appium_support.net.NotHttpUploadOptions/#filefieldname","title":"fileFieldName","text":"<p>\u2022 fileFieldName: <code>never</code></p>"},{"location":"reference/interfaces/appium_support.net.NotHttpUploadOptions/#defined-in","title":"Defined in","text":"<p>packages/support/lib/net.js:321</p>"},{"location":"reference/interfaces/appium_support.net.NotHttpUploadOptions/#formfields","title":"formFields","text":"<p>\u2022 formFields: <code>never</code></p>"},{"location":"reference/interfaces/appium_support.net.NotHttpUploadOptions/#defined-in_1","title":"Defined in","text":"<p>packages/support/lib/net.js:322</p>"},{"location":"reference/interfaces/appium_support.net.NotHttpUploadOptions/#headers","title":"headers","text":"<p>\u2022 headers: <code>never</code></p>"},{"location":"reference/interfaces/appium_support.net.NotHttpUploadOptions/#defined-in_2","title":"Defined in","text":"<p>packages/support/lib/net.js:318</p>"},{"location":"reference/interfaces/appium_support.net.NotHttpUploadOptions/#method","title":"method","text":"<p>\u2022 method: <code>never</code></p>"},{"location":"reference/interfaces/appium_support.net.NotHttpUploadOptions/#defined-in_3","title":"Defined in","text":"<p>packages/support/lib/net.js:319</p>"},{"location":"reference/interfaces/appium_support.net.NotHttpUploadOptions/#timeout","title":"timeout","text":"<p>\u2022 timeout: <code>never</code></p>"},{"location":"reference/interfaces/appium_support.net.NotHttpUploadOptions/#defined-in_4","title":"Defined in","text":"<p>packages/support/lib/net.js:320</p>"},{"location":"reference/interfaces/appium_support.tempDir.Affixes/","title":"Interface: Affixes&lt;&gt;","text":"<p>@appium/support.tempDir.Affixes</p>"},{"location":"reference/interfaces/appium_support.tempDir.Affixes/#table-of-contents","title":"Table of contents","text":""},{"location":"reference/interfaces/appium_support.tempDir.Affixes/#properties","title":"Properties","text":"<ul> <li>prefix</li> <li>suffix</li> </ul>"},{"location":"reference/interfaces/appium_support.tempDir.Affixes/#properties_1","title":"Properties","text":""},{"location":"reference/interfaces/appium_support.tempDir.Affixes/#prefix","title":"prefix","text":"<p>\u2022 prefix: <code>undefined</code> | <code>string</code></p> <p>prefix of the temp directory name</p>"},{"location":"reference/interfaces/appium_support.tempDir.Affixes/#defined-in","title":"Defined in","text":"<p>packages/support/lib/tempdir.js:41</p>"},{"location":"reference/interfaces/appium_support.tempDir.Affixes/#suffix","title":"suffix","text":"<p>\u2022 suffix: <code>undefined</code> | <code>string</code></p> <p>suffix of the temp directory name</p>"},{"location":"reference/interfaces/appium_support.tempDir.Affixes/#defined-in_1","title":"Defined in","text":"<p>packages/support/lib/tempdir.js:42</p>"},{"location":"reference/interfaces/appium_support.tempDir.OpenedAffixes/","title":"Interface: OpenedAffixes&lt;&gt;","text":"<p>@appium/support.tempDir.OpenedAffixes</p>"},{"location":"reference/interfaces/appium_support.tempDir.OpenedAffixes/#table-of-contents","title":"Table of contents","text":""},{"location":"reference/interfaces/appium_support.tempDir.OpenedAffixes/#properties","title":"Properties","text":"<ul> <li>fd</li> <li>path</li> </ul>"},{"location":"reference/interfaces/appium_support.tempDir.OpenedAffixes/#properties_1","title":"Properties","text":""},{"location":"reference/interfaces/appium_support.tempDir.OpenedAffixes/#fd","title":"fd","text":"<p>\u2022 fd: <code>number</code></p> <p>The file descriptor opened</p>"},{"location":"reference/interfaces/appium_support.tempDir.OpenedAffixes/#defined-in","title":"Defined in","text":"<p>packages/support/lib/tempdir.js:63</p>"},{"location":"reference/interfaces/appium_support.tempDir.OpenedAffixes/#path","title":"path","text":"<p>\u2022 path: <code>string</code></p> <p>The path to file</p>"},{"location":"reference/interfaces/appium_support.tempDir.OpenedAffixes/#defined-in_1","title":"Defined in","text":"<p>packages/support/lib/tempdir.js:62</p>"},{"location":"reference/interfaces/appium_support.util.EncodingOptions/","title":"Interface: EncodingOptions&lt;&gt;","text":"<p>@appium/support.util.EncodingOptions</p>"},{"location":"reference/interfaces/appium_support.util.EncodingOptions/#table-of-contents","title":"Table of contents","text":""},{"location":"reference/interfaces/appium_support.util.EncodingOptions/#properties","title":"Properties","text":"<ul> <li>maxSize</li> </ul>"},{"location":"reference/interfaces/appium_support.util.EncodingOptions/#properties_1","title":"Properties","text":""},{"location":"reference/interfaces/appium_support.util.EncodingOptions/#maxsize","title":"maxSize","text":"<p>\u2022 maxSize: <code>undefined</code> | <code>number</code></p> <p>The maximum size of the resulting buffer in bytes. This is set to 1GB by default, because Appium limits the maximum HTTP body size to 1GB. Also, the NodeJS heap size must be enough to keep the resulting object (usually this size is limited to 1.4 GB)</p>"},{"location":"reference/interfaces/appium_support.util.EncodingOptions/#defined-in","title":"Defined in","text":"<p>packages/support/lib/util.js:395</p>"},{"location":"reference/interfaces/appium_support.util.LockFileOptions/","title":"Interface: LockFileOptions&lt;&gt;","text":"<p>@appium/support.util.LockFileOptions</p>"},{"location":"reference/interfaces/appium_support.util.LockFileOptions/#table-of-contents","title":"Table of contents","text":""},{"location":"reference/interfaces/appium_support.util.LockFileOptions/#properties","title":"Properties","text":"<ul> <li>timeout</li> <li>tryRecovery</li> </ul>"},{"location":"reference/interfaces/appium_support.util.LockFileOptions/#properties_1","title":"Properties","text":""},{"location":"reference/interfaces/appium_support.util.LockFileOptions/#timeout","title":"timeout","text":"<p>\u2022 timeout: <code>undefined</code> | <code>number</code></p> <p>The max time in seconds to wait for the lock</p>"},{"location":"reference/interfaces/appium_support.util.LockFileOptions/#defined-in","title":"Defined in","text":"<p>packages/support/lib/util.js:464</p>"},{"location":"reference/interfaces/appium_support.util.LockFileOptions/#tryrecovery","title":"tryRecovery","text":"<p>\u2022 tryRecovery: <code>undefined</code> | <code>boolean</code></p> <p>Whether to try lock recovery if the first attempt to acquire it timed out.</p>"},{"location":"reference/interfaces/appium_support.util.LockFileOptions/#defined-in_1","title":"Defined in","text":"<p>packages/support/lib/util.js:465</p>"},{"location":"reference/interfaces/appium_support.util.PluralizeOptions/","title":"Interface: PluralizeOptions&lt;&gt;","text":"<p>@appium/support.util.PluralizeOptions</p>"},{"location":"reference/interfaces/appium_support.util.PluralizeOptions/#table-of-contents","title":"Table of contents","text":""},{"location":"reference/interfaces/appium_support.util.PluralizeOptions/#properties","title":"Properties","text":"<ul> <li>inclusive</li> </ul>"},{"location":"reference/interfaces/appium_support.util.PluralizeOptions/#properties_1","title":"Properties","text":""},{"location":"reference/interfaces/appium_support.util.PluralizeOptions/#inclusive","title":"inclusive","text":"<p>\u2022 inclusive: <code>undefined</code> | <code>boolean</code></p> <p>Whether to prefix with the number (e.g., 3 ducks)</p>"},{"location":"reference/interfaces/appium_support.util.PluralizeOptions/#defined-in","title":"Defined in","text":"<p>packages/support/lib/util.js:369</p>"},{"location":"reference/interfaces/appium_support.zip.ExtractAllOptions/","title":"Interface: ExtractAllOptions&lt;&gt;","text":"<p>@appium/support.zip.ExtractAllOptions</p>"},{"location":"reference/interfaces/appium_support.zip.ExtractAllOptions/#table-of-contents","title":"Table of contents","text":""},{"location":"reference/interfaces/appium_support.zip.ExtractAllOptions/#properties","title":"Properties","text":"<ul> <li>fileNamesEncoding</li> <li>useSystemUnzip</li> </ul>"},{"location":"reference/interfaces/appium_support.zip.ExtractAllOptions/#properties_1","title":"Properties","text":""},{"location":"reference/interfaces/appium_support.zip.ExtractAllOptions/#filenamesencoding","title":"fileNamesEncoding","text":"<p>\u2022 fileNamesEncoding: <code>undefined</code> | <code>string</code></p> <p>The encoding to use for extracted file names. For ZIP archives created on MacOS it is usually expected to be <code>utf8</code>. By default it is autodetected based on the entry metadata and is only needed to be set explicitly if the particular archive does not comply to the standards, which leads to corrupted file names after extraction. Only applicable if system unzip binary is NOT being used.</p>"},{"location":"reference/interfaces/appium_support.zip.ExtractAllOptions/#defined-in","title":"Defined in","text":"<p>packages/support/lib/zip.js:179</p>"},{"location":"reference/interfaces/appium_support.zip.ExtractAllOptions/#usesystemunzip","title":"useSystemUnzip","text":"<p>\u2022 useSystemUnzip: <code>undefined</code> | <code>boolean</code></p> <p>If true, attempt to use system unzip; if this fails, fallback to the JS unzip implementation.</p>"},{"location":"reference/interfaces/appium_support.zip.ExtractAllOptions/#defined-in_1","title":"Defined in","text":"<p>packages/support/lib/zip.js:184</p>"},{"location":"reference/interfaces/appium_support.zip.ZipCompressionOptions/","title":"Interface: ZipCompressionOptions&lt;&gt;","text":"<p>@appium/support.zip.ZipCompressionOptions</p>"},{"location":"reference/interfaces/appium_support.zip.ZipCompressionOptions/#table-of-contents","title":"Table of contents","text":""},{"location":"reference/interfaces/appium_support.zip.ZipCompressionOptions/#properties","title":"Properties","text":"<ul> <li>level</li> </ul>"},{"location":"reference/interfaces/appium_support.zip.ZipCompressionOptions/#properties_1","title":"Properties","text":""},{"location":"reference/interfaces/appium_support.zip.ZipCompressionOptions/#level","title":"level","text":"<p>\u2022 level: <code>number</code></p> <p>[9] - Compression level in range 0..9 (greater numbers mean better compression, but longer processing time)</p>"},{"location":"reference/interfaces/appium_support.zip.ZipCompressionOptions/#defined-in","title":"Defined in","text":"<p>packages/support/lib/zip.js:482</p>"},{"location":"reference/interfaces/appium_support.zip.ZipEntry/","title":"Interface: ZipEntry&lt;&gt;","text":"<p>@appium/support.zip.ZipEntry</p>"},{"location":"reference/interfaces/appium_support.zip.ZipEntry/#table-of-contents","title":"Table of contents","text":""},{"location":"reference/interfaces/appium_support.zip.ZipEntry/#properties","title":"Properties","text":"<ul> <li>entry</li> <li>extractEntryTo</li> </ul>"},{"location":"reference/interfaces/appium_support.zip.ZipEntry/#properties_1","title":"Properties","text":""},{"location":"reference/interfaces/appium_support.zip.ZipEntry/#entry","title":"entry","text":"<p>\u2022 entry: <code>Entry</code></p> <p>The actual entry instance</p>"},{"location":"reference/interfaces/appium_support.zip.ZipEntry/#defined-in","title":"Defined in","text":"<p>packages/support/lib/zip.js:298</p>"},{"location":"reference/interfaces/appium_support.zip.ZipEntry/#extractentryto","title":"extractEntryTo","text":"<p>\u2022 extractEntryTo: <code>Function</code></p> <p>An async function, which accepts one parameter. This parameter contains the destination folder path to which this function is going to extract the entry.</p>"},{"location":"reference/interfaces/appium_support.zip.ZipEntry/#defined-in_1","title":"Defined in","text":"<p>packages/support/lib/zip.js:299</p>"},{"location":"reference/interfaces/appium_support.zip.ZipOptions/","title":"Interface: ZipOptions&lt;&gt;","text":"<p>@appium/support.zip.ZipOptions</p>"},{"location":"reference/interfaces/appium_support.zip.ZipOptions/#table-of-contents","title":"Table of contents","text":""},{"location":"reference/interfaces/appium_support.zip.ZipOptions/#properties","title":"Properties","text":"<ul> <li>encodeToBase64</li> <li>isMetered</li> <li>level</li> <li>maxSize</li> </ul>"},{"location":"reference/interfaces/appium_support.zip.ZipOptions/#properties_1","title":"Properties","text":""},{"location":"reference/interfaces/appium_support.zip.ZipOptions/#encodetobase64","title":"encodeToBase64","text":"<p>\u2022 encodeToBase64: <code>boolean</code></p> <p>[false] Whether to encode the resulting archive to a base64-encoded string</p>"},{"location":"reference/interfaces/appium_support.zip.ZipOptions/#defined-in","title":"Defined in","text":"<p>packages/support/lib/zip.js:339</p>"},{"location":"reference/interfaces/appium_support.zip.ZipOptions/#ismetered","title":"isMetered","text":"<p>\u2022 isMetered: <code>boolean</code></p> <p>[true] Whether to log the actual archiver performance</p>"},{"location":"reference/interfaces/appium_support.zip.ZipOptions/#defined-in_1","title":"Defined in","text":"<p>packages/support/lib/zip.js:341</p>"},{"location":"reference/interfaces/appium_support.zip.ZipOptions/#level","title":"level","text":"<p>\u2022 level: <code>number</code></p> <p>[9] The compression level. The maximum level is 9 (the best compression, worst performance). The minimum compression level is 0 (no compression).</p>"},{"location":"reference/interfaces/appium_support.zip.ZipOptions/#defined-in_2","title":"Defined in","text":"<p>packages/support/lib/zip.js:348</p>"},{"location":"reference/interfaces/appium_support.zip.ZipOptions/#maxsize","title":"maxSize","text":"<p>\u2022 maxSize: <code>number</code></p> <p>[1073741824] The maximum size of the resulting archive in bytes. This is set to 1GB by default, because Appium limits the maximum HTTP body size to 1GB. Also, the NodeJS heap size must be enough to keep the resulting object (usually this size is limited to 1.4 GB)</p>"},{"location":"reference/interfaces/appium_support.zip.ZipOptions/#defined-in_3","title":"Defined in","text":"<p>packages/support/lib/zip.js:343</p>"},{"location":"reference/interfaces/appium_support.zip.ZipSourceOptions/","title":"Interface: ZipSourceOptions&lt;&gt;","text":"<p>@appium/support.zip.ZipSourceOptions</p>"},{"location":"reference/interfaces/appium_support.zip.ZipSourceOptions/#table-of-contents","title":"Table of contents","text":""},{"location":"reference/interfaces/appium_support.zip.ZipSourceOptions/#properties","title":"Properties","text":"<ul> <li>cwd</li> <li>ignore</li> <li>pattern</li> </ul>"},{"location":"reference/interfaces/appium_support.zip.ZipSourceOptions/#properties_1","title":"Properties","text":""},{"location":"reference/interfaces/appium_support.zip.ZipSourceOptions/#cwd","title":"cwd","text":"<p>\u2022 cwd: <code>string</code></p> <p>The source root folder (the parent folder of the destination file by default)</p>"},{"location":"reference/interfaces/appium_support.zip.ZipSourceOptions/#defined-in","title":"Defined in","text":"<p>packages/support/lib/zip.js:489</p>"},{"location":"reference/interfaces/appium_support.zip.ZipSourceOptions/#ignore","title":"ignore","text":"<p>\u2022 ignore: <code>undefined</code> | <code>string</code>[]</p> <p>The list of ignored patterns</p>"},{"location":"reference/interfaces/appium_support.zip.ZipSourceOptions/#defined-in_1","title":"Defined in","text":"<p>packages/support/lib/zip.js:491</p>"},{"location":"reference/interfaces/appium_support.zip.ZipSourceOptions/#pattern","title":"pattern","text":"<p>\u2022 pattern: <code>string</code></p> <p>['*/'] - GLOB pattern for compression</p>"},{"location":"reference/interfaces/appium_support.zip.ZipSourceOptions/#defined-in_2","title":"Defined in","text":"<p>packages/support/lib/zip.js:488</p>"},{"location":"reference/interfaces/appium_typedoc_plugin_appium.ConvertResult/","title":"Interface: ConvertResult","text":"<p>@appium/typedoc-plugin-appium.ConvertResult</p> <p>Resolved value of <code>convert</code></p>"},{"location":"reference/interfaces/appium_typedoc_plugin_appium.ConvertResult/#table-of-contents","title":"Table of contents","text":""},{"location":"reference/interfaces/appium_typedoc_plugin_appium.ConvertResult/#properties","title":"Properties","text":"<ul> <li>ctx</li> <li>extensionReflections</li> <li>projectCommands</li> </ul>"},{"location":"reference/interfaces/appium_typedoc_plugin_appium.ConvertResult/#properties_1","title":"Properties","text":""},{"location":"reference/interfaces/appium_typedoc_plugin_appium.ConvertResult/#ctx","title":"ctx","text":"<p>\u2022 ctx: <code>Context</code></p> <p>Context at time of Context.EVENT_RESOLVE_BEGIN</p>"},{"location":"reference/interfaces/appium_typedoc_plugin_appium.ConvertResult/#defined-in","title":"Defined in","text":"<p>packages/typedoc-plugin-appium/lib/index.ts:82</p>"},{"location":"reference/interfaces/appium_typedoc_plugin_appium.ConvertResult/#extensionreflections","title":"extensionReflections","text":"<p>\u2022 <code>Optional</code> extensionReflections: <code>ExtensionReflection</code>[]</p> <p>List of custom reflections created by the plugin</p>"},{"location":"reference/interfaces/appium_typedoc_plugin_appium.ConvertResult/#defined-in_1","title":"Defined in","text":"<p>packages/typedoc-plugin-appium/lib/index.ts:90</p>"},{"location":"reference/interfaces/appium_typedoc_plugin_appium.ConvertResult/#projectcommands","title":"projectCommands","text":"<p>\u2022 <code>Optional</code> projectCommands: <code>ProjectCommands</code></p> <p>Raw data structure containing everything about commands in the project</p>"},{"location":"reference/interfaces/appium_typedoc_plugin_appium.ConvertResult/#defined-in_2","title":"Defined in","text":"<p>packages/typedoc-plugin-appium/lib/index.ts:86</p>"},{"location":"reference/interfaces/appium_typedoc_plugin_appium.PostProcessResult/","title":"Interface: PostProcessResult","text":"<p>@appium/typedoc-plugin-appium.PostProcessResult</p> <p>Result of <code>postProcess</code></p>"},{"location":"reference/interfaces/appium_typedoc_plugin_appium.PostProcessResult/#table-of-contents","title":"Table of contents","text":""},{"location":"reference/interfaces/appium_typedoc_plugin_appium.PostProcessResult/#properties","title":"Properties","text":"<ul> <li>ctx</li> <li>removed</li> </ul>"},{"location":"reference/interfaces/appium_typedoc_plugin_appium.PostProcessResult/#properties_1","title":"Properties","text":""},{"location":"reference/interfaces/appium_typedoc_plugin_appium.PostProcessResult/#ctx","title":"ctx","text":"<p>\u2022 ctx: <code>Context</code></p> <p>Context at time of Context.EVENT_RESOLVE_END</p>"},{"location":"reference/interfaces/appium_typedoc_plugin_appium.PostProcessResult/#defined-in","title":"Defined in","text":"<p>packages/typedoc-plugin-appium/lib/index.ts:125</p>"},{"location":"reference/interfaces/appium_typedoc_plugin_appium.PostProcessResult/#removed","title":"removed","text":"<p>\u2022 <code>Optional</code> removed: <code>Set</code>&lt;<code>DeclarationReflection</code>&gt;</p> <p>A list of DeclarationReflection DeclarationReflections which were removed from the project, if any.</p>"},{"location":"reference/interfaces/appium_typedoc_plugin_appium.PostProcessResult/#defined-in_1","title":"Defined in","text":"<p>packages/typedoc-plugin-appium/lib/index.ts:121</p>"},{"location":"reference/interfaces/appium_types.AppiumConfiguration/","title":"Interface: AppiumConfiguration","text":"<p>@appium/types.AppiumConfiguration</p> <p>A schema for Appium configuration files</p>"},{"location":"reference/interfaces/appium_types.AppiumConfiguration/#table-of-contents","title":"Table of contents","text":""},{"location":"reference/interfaces/appium_types.AppiumConfiguration/#properties","title":"Properties","text":"<ul> <li>$schema</li> <li>server</li> </ul>"},{"location":"reference/interfaces/appium_types.AppiumConfiguration/#properties_1","title":"Properties","text":""},{"location":"reference/interfaces/appium_types.AppiumConfiguration/#schema","title":"$schema","text":"<p>\u2022 <code>Optional</code> $schema: <code>string</code></p> <p>The JSON schema for this file</p>"},{"location":"reference/interfaces/appium_types.AppiumConfiguration/#defined-in","title":"Defined in","text":"<p>packages/types/lib/appium-config.ts:154</p>"},{"location":"reference/interfaces/appium_types.AppiumConfiguration/#server","title":"server","text":"<p>\u2022 <code>Optional</code> server: <code>ServerConfig</code></p>"},{"location":"reference/interfaces/appium_types.AppiumConfiguration/#defined-in_1","title":"Defined in","text":"<p>packages/types/lib/appium-config.ts:155</p>"},{"location":"reference/interfaces/appium_types.AppiumLogger/","title":"Interface: AppiumLogger","text":"<p>@appium/types.AppiumLogger</p> <p>Describes the <code>npmlog</code>-based internal logger.</p> <p><code>See</code></p> <p>https://npm.im/npmlog</p>"},{"location":"reference/interfaces/appium_types.AppiumLogger/#table-of-contents","title":"Table of contents","text":""},{"location":"reference/interfaces/appium_types.AppiumLogger/#properties","title":"Properties","text":"<ul> <li>level</li> <li>levels</li> <li>prefix</li> </ul>"},{"location":"reference/interfaces/appium_types.AppiumLogger/#methods","title":"Methods","text":"<ul> <li>debug</li> <li>error</li> <li>errorAndThrow</li> <li>http</li> <li>info</li> <li>silly</li> <li>unwrap</li> <li>verbose</li> <li>warn</li> </ul>"},{"location":"reference/interfaces/appium_types.AppiumLogger/#properties_1","title":"Properties","text":""},{"location":"reference/interfaces/appium_types.AppiumLogger/#level","title":"level","text":"<p>\u2022 level: <code>AppiumLoggerLevel</code></p>"},{"location":"reference/interfaces/appium_types.AppiumLogger/#defined-in","title":"Defined in","text":"<p>packages/types/lib/index.ts:49</p>"},{"location":"reference/interfaces/appium_types.AppiumLogger/#levels","title":"levels","text":"<p>\u2022 levels: <code>AppiumLoggerLevel</code>[]</p>"},{"location":"reference/interfaces/appium_types.AppiumLogger/#defined-in_1","title":"Defined in","text":"<p>packages/types/lib/index.ts:50</p>"},{"location":"reference/interfaces/appium_types.AppiumLogger/#prefix","title":"prefix","text":"<p>\u2022 <code>Optional</code> prefix: <code>AppiumLoggerPrefix</code></p> <p>Log prefix, if applicable.</p>"},{"location":"reference/interfaces/appium_types.AppiumLogger/#defined-in_2","title":"Defined in","text":"<p>packages/types/lib/index.ts:54</p>"},{"location":"reference/interfaces/appium_types.AppiumLogger/#methods_1","title":"Methods","text":""},{"location":"reference/interfaces/appium_types.AppiumLogger/#debug","title":"debug","text":"<p>\u25b8 debug(<code>...args</code>): <code>void</code></p>"},{"location":"reference/interfaces/appium_types.AppiumLogger/#parameters","title":"Parameters","text":"Name Type <code>...args</code> <code>any</code>[]"},{"location":"reference/interfaces/appium_types.AppiumLogger/#returns","title":"Returns","text":"<p><code>void</code></p>"},{"location":"reference/interfaces/appium_types.AppiumLogger/#defined-in_3","title":"Defined in","text":"<p>packages/types/lib/index.ts:55</p>"},{"location":"reference/interfaces/appium_types.AppiumLogger/#error","title":"error","text":"<p>\u25b8 error(<code>...args</code>): <code>void</code></p>"},{"location":"reference/interfaces/appium_types.AppiumLogger/#parameters_1","title":"Parameters","text":"Name Type <code>...args</code> <code>any</code>[]"},{"location":"reference/interfaces/appium_types.AppiumLogger/#returns_1","title":"Returns","text":"<p><code>void</code></p>"},{"location":"reference/interfaces/appium_types.AppiumLogger/#defined-in_4","title":"Defined in","text":"<p>packages/types/lib/index.ts:58</p>"},{"location":"reference/interfaces/appium_types.AppiumLogger/#errorandthrow","title":"errorAndThrow","text":"<p>\u25b8 errorAndThrow(<code>...args</code>): <code>never</code></p>"},{"location":"reference/interfaces/appium_types.AppiumLogger/#parameters_2","title":"Parameters","text":"Name Type <code>...args</code> <code>any</code>[]"},{"location":"reference/interfaces/appium_types.AppiumLogger/#returns_2","title":"Returns","text":"<p><code>never</code></p>"},{"location":"reference/interfaces/appium_types.AppiumLogger/#defined-in_5","title":"Defined in","text":"<p>packages/types/lib/index.ts:62</p>"},{"location":"reference/interfaces/appium_types.AppiumLogger/#http","title":"http","text":"<p>\u25b8 http(<code>...args</code>): <code>void</code></p>"},{"location":"reference/interfaces/appium_types.AppiumLogger/#parameters_3","title":"Parameters","text":"Name Type <code>...args</code> <code>any</code>[]"},{"location":"reference/interfaces/appium_types.AppiumLogger/#returns_3","title":"Returns","text":"<p><code>void</code></p>"},{"location":"reference/interfaces/appium_types.AppiumLogger/#defined-in_6","title":"Defined in","text":"<p>packages/types/lib/index.ts:61</p>"},{"location":"reference/interfaces/appium_types.AppiumLogger/#info","title":"info","text":"<p>\u25b8 info(<code>...args</code>): <code>void</code></p>"},{"location":"reference/interfaces/appium_types.AppiumLogger/#parameters_4","title":"Parameters","text":"Name Type <code>...args</code> <code>any</code>[]"},{"location":"reference/interfaces/appium_types.AppiumLogger/#returns_4","title":"Returns","text":"<p><code>void</code></p>"},{"location":"reference/interfaces/appium_types.AppiumLogger/#defined-in_7","title":"Defined in","text":"<p>packages/types/lib/index.ts:56</p>"},{"location":"reference/interfaces/appium_types.AppiumLogger/#silly","title":"silly","text":"<p>\u25b8 silly(<code>...args</code>): <code>void</code></p>"},{"location":"reference/interfaces/appium_types.AppiumLogger/#parameters_5","title":"Parameters","text":"Name Type <code>...args</code> <code>any</code>[]"},{"location":"reference/interfaces/appium_types.AppiumLogger/#returns_5","title":"Returns","text":"<p><code>void</code></p>"},{"location":"reference/interfaces/appium_types.AppiumLogger/#defined-in_8","title":"Defined in","text":"<p>packages/types/lib/index.ts:60</p>"},{"location":"reference/interfaces/appium_types.AppiumLogger/#unwrap","title":"unwrap","text":"<p>\u25b8 unwrap(): <code>Logger</code></p> <p>Returns the underlying <code>npmlog</code> Logger.</p>"},{"location":"reference/interfaces/appium_types.AppiumLogger/#returns_6","title":"Returns","text":"<p><code>Logger</code></p>"},{"location":"reference/interfaces/appium_types.AppiumLogger/#defined-in_9","title":"Defined in","text":"<p>packages/types/lib/index.ts:48</p>"},{"location":"reference/interfaces/appium_types.AppiumLogger/#verbose","title":"verbose","text":"<p>\u25b8 verbose(<code>...args</code>): <code>void</code></p>"},{"location":"reference/interfaces/appium_types.AppiumLogger/#parameters_6","title":"Parameters","text":"Name Type <code>...args</code> <code>any</code>[]"},{"location":"reference/interfaces/appium_types.AppiumLogger/#returns_7","title":"Returns","text":"<p><code>void</code></p>"},{"location":"reference/interfaces/appium_types.AppiumLogger/#defined-in_10","title":"Defined in","text":"<p>packages/types/lib/index.ts:59</p>"},{"location":"reference/interfaces/appium_types.AppiumLogger/#warn","title":"warn","text":"<p>\u25b8 warn(<code>...args</code>): <code>void</code></p>"},{"location":"reference/interfaces/appium_types.AppiumLogger/#parameters_7","title":"Parameters","text":"Name Type <code>...args</code> <code>any</code>[]"},{"location":"reference/interfaces/appium_types.AppiumLogger/#returns_8","title":"Returns","text":"<p><code>void</code></p>"},{"location":"reference/interfaces/appium_types.AppiumLogger/#defined-in_11","title":"Defined in","text":"<p>packages/types/lib/index.ts:57</p>"},{"location":"reference/interfaces/appium_types.AppiumServerExtension/","title":"Interface: AppiumServerExtension","text":"<p>@appium/types.AppiumServerExtension</p>"},{"location":"reference/interfaces/appium_types.AppiumServerExtension/#table-of-contents","title":"Table of contents","text":""},{"location":"reference/interfaces/appium_types.AppiumServerExtension/#properties","title":"Properties","text":"<ul> <li>webSocketsMapping</li> </ul>"},{"location":"reference/interfaces/appium_types.AppiumServerExtension/#methods","title":"Methods","text":"<ul> <li>addWebSocketHandler</li> <li>close</li> <li>getWebSocketHandlers</li> <li>removeAllWebSocketHandlers</li> <li>removeWebSocketHandler</li> </ul>"},{"location":"reference/interfaces/appium_types.AppiumServerExtension/#properties_1","title":"Properties","text":""},{"location":"reference/interfaces/appium_types.AppiumServerExtension/#websocketsmapping","title":"webSocketsMapping","text":"<p>\u2022 webSocketsMapping: <code>Record</code>&lt;<code>string</code>, <code>Server</code>&lt;<code>WebSocket</code>&gt;&gt;</p>"},{"location":"reference/interfaces/appium_types.AppiumServerExtension/#defined-in","title":"Defined in","text":"<p>packages/types/lib/index.ts:76</p>"},{"location":"reference/interfaces/appium_types.AppiumServerExtension/#methods_1","title":"Methods","text":""},{"location":"reference/interfaces/appium_types.AppiumServerExtension/#addwebsockethandler","title":"addWebSocketHandler","text":"<p>\u25b8 addWebSocketHandler(<code>handlerPathname</code>, <code>handlerServer</code>): <code>Promise</code>&lt;<code>void</code>&gt;</p>"},{"location":"reference/interfaces/appium_types.AppiumServerExtension/#parameters","title":"Parameters","text":"Name Type <code>handlerPathname</code> <code>string</code> <code>handlerServer</code> <code>Server</code>&lt;<code>WebSocket</code>&gt;"},{"location":"reference/interfaces/appium_types.AppiumServerExtension/#returns","title":"Returns","text":"<p><code>Promise</code>&lt;<code>void</code>&gt;</p>"},{"location":"reference/interfaces/appium_types.AppiumServerExtension/#defined-in_1","title":"Defined in","text":"<p>packages/types/lib/index.ts:72</p>"},{"location":"reference/interfaces/appium_types.AppiumServerExtension/#close","title":"close","text":"<p>\u25b8 close(): <code>Promise</code>&lt;<code>void</code>&gt;</p>"},{"location":"reference/interfaces/appium_types.AppiumServerExtension/#returns_1","title":"Returns","text":"<p><code>Promise</code>&lt;<code>void</code>&gt;</p>"},{"location":"reference/interfaces/appium_types.AppiumServerExtension/#defined-in_2","title":"Defined in","text":"<p>packages/types/lib/index.ts:71</p>"},{"location":"reference/interfaces/appium_types.AppiumServerExtension/#getwebsockethandlers","title":"getWebSocketHandlers","text":"<p>\u25b8 getWebSocketHandlers(<code>keysFilter</code>): <code>Promise</code>&lt;<code>Record</code>&lt;<code>string</code>, <code>Server</code>&lt;<code>WebSocket</code>&gt;&gt;&gt;</p>"},{"location":"reference/interfaces/appium_types.AppiumServerExtension/#parameters_1","title":"Parameters","text":"Name Type <code>keysFilter</code> <code>undefined</code> | <code>null</code> | <code>string</code>"},{"location":"reference/interfaces/appium_types.AppiumServerExtension/#returns_2","title":"Returns","text":"<p><code>Promise</code>&lt;<code>Record</code>&lt;<code>string</code>, <code>Server</code>&lt;<code>WebSocket</code>&gt;&gt;&gt;</p>"},{"location":"reference/interfaces/appium_types.AppiumServerExtension/#defined-in_3","title":"Defined in","text":"<p>packages/types/lib/index.ts:75</p>"},{"location":"reference/interfaces/appium_types.AppiumServerExtension/#removeallwebsockethandlers","title":"removeAllWebSocketHandlers","text":"<p>\u25b8 removeAllWebSocketHandlers(): <code>Promise</code>&lt;<code>boolean</code>&gt;</p>"},{"location":"reference/interfaces/appium_types.AppiumServerExtension/#returns_3","title":"Returns","text":"<p><code>Promise</code>&lt;<code>boolean</code>&gt;</p>"},{"location":"reference/interfaces/appium_types.AppiumServerExtension/#defined-in_4","title":"Defined in","text":"<p>packages/types/lib/index.ts:74</p>"},{"location":"reference/interfaces/appium_types.AppiumServerExtension/#removewebsockethandler","title":"removeWebSocketHandler","text":"<p>\u25b8 removeWebSocketHandler(<code>handlerPathname</code>): <code>Promise</code>&lt;<code>boolean</code>&gt;</p>"},{"location":"reference/interfaces/appium_types.AppiumServerExtension/#parameters_2","title":"Parameters","text":"Name Type <code>handlerPathname</code> <code>string</code>"},{"location":"reference/interfaces/appium_types.AppiumServerExtension/#returns_4","title":"Returns","text":"<p><code>Promise</code>&lt;<code>boolean</code>&gt;</p>"},{"location":"reference/interfaces/appium_types.AppiumServerExtension/#defined-in_5","title":"Defined in","text":"<p>packages/types/lib/index.ts:73</p>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/","title":"Interface: AppiumServerSocket","text":"<p>@appium/types.AppiumServerSocket</p>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#hierarchy","title":"Hierarchy","text":"<ul> <li><code>Socket</code></li> </ul> <p>\u21b3 <code>AppiumServerSocket</code></p>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#table-of-contents","title":"Table of contents","text":""},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#properties","title":"Properties","text":"<ul> <li>_openReqCount</li> <li>allowHalfOpen</li> <li>bufferSize</li> <li>bytesRead</li> <li>bytesWritten</li> <li>closed</li> <li>connecting</li> <li>destroyed</li> <li>errored</li> <li>localAddress</li> <li>localFamily</li> <li>localPort</li> <li>readable</li> <li>readableAborted</li> <li>readableDidRead</li> <li>readableEncoding</li> <li>readableEnded</li> <li>readableFlowing</li> <li>readableHighWaterMark</li> <li>readableLength</li> <li>readableObjectMode</li> <li>readyState</li> <li>remoteAddress</li> <li>remoteFamily</li> <li>remotePort</li> <li>timeout</li> <li>writable</li> <li>writableCorked</li> <li>writableEnded</li> <li>writableFinished</li> <li>writableHighWaterMark</li> <li>writableLength</li> <li>writableNeedDrain</li> <li>writableObjectMode</li> </ul>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#methods","title":"Methods","text":"<ul> <li>[asyncIterator]</li> <li>_construct</li> <li>_destroy</li> <li>_final</li> <li>_read</li> <li>_write</li> <li>_writev</li> <li>addListener</li> <li>address</li> <li>connect</li> <li>cork</li> <li>destroy</li> <li>emit</li> <li>end</li> <li>eventNames</li> <li>getMaxListeners</li> <li>isPaused</li> <li>listenerCount</li> <li>listeners</li> <li>off</li> <li>on</li> <li>once</li> <li>pause</li> <li>pipe</li> <li>prependListener</li> <li>prependOnceListener</li> <li>push</li> <li>rawListeners</li> <li>read</li> <li>ref</li> <li>removeAllListeners</li> <li>removeListener</li> <li>resetAndDestroy</li> <li>resume</li> <li>setDefaultEncoding</li> <li>setEncoding</li> <li>setKeepAlive</li> <li>setMaxListeners</li> <li>setNoDelay</li> <li>setTimeout</li> <li>uncork</li> <li>unpipe</li> <li>unref</li> <li>unshift</li> <li>wrap</li> <li>write</li> </ul>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#properties_1","title":"Properties","text":""},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#_openreqcount","title":"_openReqCount","text":"<p>\u2022 _openReqCount: <code>number</code></p>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#defined-in","title":"Defined in","text":"<p>packages/types/lib/index.ts:80</p>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#allowhalfopen","title":"allowHalfOpen","text":"<p>\u2022 allowHalfOpen: <code>boolean</code></p> <p>If <code>false</code> then the stream will automatically end the writable side when the readable side ends. Set initially by the <code>allowHalfOpen</code> constructor option, which defaults to <code>false</code>.</p> <p>This can be changed manually to change the half-open behavior of an existing<code>Duplex</code> stream instance, but must be changed before the <code>'end'</code> event is emitted.</p> <p><code>Since</code></p> <p>v0.9.4</p>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#inherited-from","title":"Inherited from","text":"<p>Socket.allowHalfOpen</p>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#defined-in_1","title":"Defined in","text":"<p>node_modules/@types/node/ts4.8/stream.d.ts:873</p>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#buffersize","title":"bufferSize","text":"<p>\u2022 <code>Readonly</code> bufferSize: <code>number</code></p> <p>This property shows the number of characters buffered for writing. The buffer may contain strings whose length after encoding is not yet known. So this number is only an approximation of the number of bytes in the buffer.</p> <p><code>net.Socket</code> has the property that <code>socket.write()</code> always works. This is to help users get up and running quickly. The computer cannot always keep up with the amount of data that is written to a socket. The network connection simply might be too slow. Node.js will internally queue up the data written to a socket and send it out over the wire when it is possible.</p> <p>The consequence of this internal buffering is that memory may grow. Users who experience large or growing <code>bufferSize</code> should attempt to \"throttle\" the data flows in their program with <code>socket.pause()</code> and <code>socket.resume()</code>.</p> <p><code>Since</code></p> <p>v0.3.8</p> <p><code>Deprecated</code></p> <p>Since v14.6.0 - Use <code>writableLength</code> instead.</p>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#inherited-from_1","title":"Inherited from","text":"<p>Socket.bufferSize</p>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#defined-in_2","title":"Defined in","text":"<p>node_modules/@types/node/ts4.8/net.d.ts:245</p>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#bytesread","title":"bytesRead","text":"<p>\u2022 <code>Readonly</code> bytesRead: <code>number</code></p> <p>The amount of received bytes.</p> <p><code>Since</code></p> <p>v0.5.3</p>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#inherited-from_2","title":"Inherited from","text":"<p>Socket.bytesRead</p>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#defined-in_3","title":"Defined in","text":"<p>node_modules/@types/node/ts4.8/net.d.ts:250</p>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#byteswritten","title":"bytesWritten","text":"<p>\u2022 <code>Readonly</code> bytesWritten: <code>number</code></p> <p>The amount of bytes sent.</p> <p><code>Since</code></p> <p>v0.5.3</p>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#inherited-from_3","title":"Inherited from","text":"<p>Socket.bytesWritten</p>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#defined-in_4","title":"Defined in","text":"<p>node_modules/@types/node/ts4.8/net.d.ts:255</p>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#closed","title":"closed","text":"<p>\u2022 <code>Readonly</code> closed: <code>boolean</code></p>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#inherited-from_4","title":"Inherited from","text":"<p>Socket.closed</p>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#defined-in_5","title":"Defined in","text":"<p>node_modules/@types/node/ts4.8/stream.d.ts:862</p>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#connecting","title":"connecting","text":"<p>\u2022 <code>Readonly</code> connecting: <code>boolean</code></p> <p>If <code>true</code>,<code>socket.connect(options[, connectListener])</code> was called and has not yet finished. It will stay <code>true</code> until the socket becomes connected, then it is set to <code>false</code> and the <code>'connect'</code> event is emitted. Note that the <code>socket.connect(options[, connectListener])</code> callback is a listener for the <code>'connect'</code> event.</p> <p><code>Since</code></p> <p>v6.1.0</p>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#inherited-from_5","title":"Inherited from","text":"<p>Socket.connecting</p>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#defined-in_6","title":"Defined in","text":"<p>node_modules/@types/node/ts4.8/net.d.ts:263</p>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#destroyed","title":"destroyed","text":"<p>\u2022 <code>Readonly</code> destroyed: <code>boolean</code></p> <p>See <code>writable.destroyed</code> for further details.</p>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#inherited-from_6","title":"Inherited from","text":"<p>Socket.destroyed</p>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#defined-in_7","title":"Defined in","text":"<p>node_modules/@types/node/ts4.8/net.d.ts:267</p>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#errored","title":"errored","text":"<p>\u2022 <code>Readonly</code> errored: <code>null</code> | <code>Error</code></p>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#inherited-from_7","title":"Inherited from","text":"<p>Socket.errored</p>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#defined-in_8","title":"Defined in","text":"<p>node_modules/@types/node/ts4.8/stream.d.ts:863</p>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#localaddress","title":"localAddress","text":"<p>\u2022 <code>Optional</code> <code>Readonly</code> localAddress: <code>string</code></p> <p>The string representation of the local IP address the remote client is connecting on. For example, in a server listening on <code>'0.0.0.0'</code>, if a client connects on <code>'192.168.1.1'</code>, the value of <code>socket.localAddress</code> would be<code>'192.168.1.1'</code>.</p> <p><code>Since</code></p> <p>v0.9.6</p>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#inherited-from_8","title":"Inherited from","text":"<p>Socket.localAddress</p>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#defined-in_9","title":"Defined in","text":"<p>node_modules/@types/node/ts4.8/net.d.ts:274</p>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#localfamily","title":"localFamily","text":"<p>\u2022 <code>Optional</code> <code>Readonly</code> localFamily: <code>string</code></p> <p>The string representation of the local IP family. <code>'IPv4'</code> or <code>'IPv6'</code>.</p> <p><code>Since</code></p> <p>v18.8.0</p>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#inherited-from_9","title":"Inherited from","text":"<p>Socket.localFamily</p>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#defined-in_10","title":"Defined in","text":"<p>node_modules/@types/node/ts4.8/net.d.ts:284</p>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#localport","title":"localPort","text":"<p>\u2022 <code>Optional</code> <code>Readonly</code> localPort: <code>number</code></p> <p>The numeric representation of the local port. For example, <code>80</code> or <code>21</code>.</p> <p><code>Since</code></p> <p>v0.9.6</p>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#inherited-from_10","title":"Inherited from","text":"<p>Socket.localPort</p>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#defined-in_11","title":"Defined in","text":"<p>node_modules/@types/node/ts4.8/net.d.ts:279</p>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#readable","title":"readable","text":"<p>\u2022 readable: <code>boolean</code></p> <p>Is <code>true</code> if it is safe to call <code>readable.read()</code>, which means the stream has not been destroyed or emitted <code>'error'</code> or <code>'end'</code>.</p> <p><code>Since</code></p> <p>v11.4.0</p>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#inherited-from_11","title":"Inherited from","text":"<p>Socket.readable</p>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#defined-in_12","title":"Defined in","text":"<p>node_modules/@types/node/ts4.8/stream.d.ts:85</p>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#readableaborted","title":"readableAborted","text":"<p>\u2022 <code>Readonly</code> readableAborted: <code>boolean</code></p> <p>Returns whether the stream was destroyed or errored before emitting <code>'end'</code>.</p> <p><code>Since</code></p> <p>v16.8.0</p>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#inherited-from_12","title":"Inherited from","text":"<p>Socket.readableAborted</p>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#defined-in_13","title":"Defined in","text":"<p>node_modules/@types/node/ts4.8/stream.d.ts:79</p>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#readabledidread","title":"readableDidRead","text":"<p>\u2022 <code>Readonly</code> readableDidRead: <code>boolean</code></p> <p>Returns whether <code>'data'</code> has been emitted.</p> <p><code>Since</code></p> <p>v16.7.0, v14.18.0</p>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#inherited-from_13","title":"Inherited from","text":"<p>Socket.readableDidRead</p>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#defined-in_14","title":"Defined in","text":"<p>node_modules/@types/node/ts4.8/stream.d.ts:91</p>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#readableencoding","title":"readableEncoding","text":"<p>\u2022 <code>Readonly</code> readableEncoding: <code>null</code> | <code>BufferEncoding</code></p> <p>Getter for the property <code>encoding</code> of a given <code>Readable</code> stream. The <code>encoding</code>property can be set using the <code>readable.setEncoding()</code> method.</p> <p><code>Since</code></p> <p>v12.7.0</p>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#inherited-from_14","title":"Inherited from","text":"<p>Socket.readableEncoding</p>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#defined-in_15","title":"Defined in","text":"<p>node_modules/@types/node/ts4.8/stream.d.ts:96</p>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#readableended","title":"readableEnded","text":"<p>\u2022 <code>Readonly</code> readableEnded: <code>boolean</code></p> <p>Becomes <code>true</code> when <code>'end'</code> event is emitted.</p> <p><code>Since</code></p> <p>v12.9.0</p>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#inherited-from_15","title":"Inherited from","text":"<p>Socket.readableEnded</p>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#defined-in_16","title":"Defined in","text":"<p>node_modules/@types/node/ts4.8/stream.d.ts:101</p>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#readableflowing","title":"readableFlowing","text":"<p>\u2022 <code>Readonly</code> readableFlowing: <code>null</code> | <code>boolean</code></p> <p>This property reflects the current state of a <code>Readable</code> stream as described in the <code>Three states</code> section.</p> <p><code>Since</code></p> <p>v9.4.0</p>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#inherited-from_16","title":"Inherited from","text":"<p>Socket.readableFlowing</p>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#defined-in_17","title":"Defined in","text":"<p>node_modules/@types/node/ts4.8/stream.d.ts:107</p>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#readablehighwatermark","title":"readableHighWaterMark","text":"<p>\u2022 <code>Readonly</code> readableHighWaterMark: <code>number</code></p> <p>Returns the value of <code>highWaterMark</code> passed when creating this <code>Readable</code>.</p> <p><code>Since</code></p> <p>v9.3.0</p>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#inherited-from_17","title":"Inherited from","text":"<p>Socket.readableHighWaterMark</p>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#defined-in_18","title":"Defined in","text":"<p>node_modules/@types/node/ts4.8/stream.d.ts:112</p>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#readablelength","title":"readableLength","text":"<p>\u2022 <code>Readonly</code> readableLength: <code>number</code></p> <p>This property contains the number of bytes (or objects) in the queue ready to be read. The value provides introspection data regarding the status of the <code>highWaterMark</code>.</p> <p><code>Since</code></p> <p>v9.4.0</p>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#inherited-from_18","title":"Inherited from","text":"<p>Socket.readableLength</p>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#defined-in_19","title":"Defined in","text":"<p>node_modules/@types/node/ts4.8/stream.d.ts:119</p>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#readableobjectmode","title":"readableObjectMode","text":"<p>\u2022 <code>Readonly</code> readableObjectMode: <code>boolean</code></p> <p>Getter for the property <code>objectMode</code> of a given <code>Readable</code> stream.</p> <p><code>Since</code></p> <p>v12.3.0</p>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#inherited-from_19","title":"Inherited from","text":"<p>Socket.readableObjectMode</p>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#defined-in_20","title":"Defined in","text":"<p>node_modules/@types/node/ts4.8/stream.d.ts:124</p>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#readystate","title":"readyState","text":"<p>\u2022 <code>Readonly</code> readyState: <code>SocketReadyState</code></p> <p>This property represents the state of the connection as a string.</p> <p><code>See</code></p> <p><code>Since</code></p> <p>v0.5.0</p>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#inherited-from_20","title":"Inherited from","text":"<p>Socket.readyState</p>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#defined-in_21","title":"Defined in","text":"<p>node_modules/@types/node/ts4.8/net.d.ts:290</p>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#remoteaddress","title":"remoteAddress","text":"<p>\u2022 <code>Optional</code> <code>Readonly</code> remoteAddress: <code>string</code></p> <p>The string representation of the remote IP address. For example,<code>'74.125.127.100'</code> or <code>'2001:4860:a005::68'</code>. Value may be <code>undefined</code> if the socket is destroyed (for example, if the client disconnected).</p> <p><code>Since</code></p> <p>v0.5.10</p>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#inherited-from_21","title":"Inherited from","text":"<p>Socket.remoteAddress</p>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#defined-in_22","title":"Defined in","text":"<p>node_modules/@types/node/ts4.8/net.d.ts:296</p>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#remotefamily","title":"remoteFamily","text":"<p>\u2022 <code>Optional</code> <code>Readonly</code> remoteFamily: <code>string</code></p> <p>The string representation of the remote IP family. <code>'IPv4'</code> or <code>'IPv6'</code>.</p> <p><code>Since</code></p> <p>v0.11.14</p>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#inherited-from_22","title":"Inherited from","text":"<p>Socket.remoteFamily</p>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#defined-in_23","title":"Defined in","text":"<p>node_modules/@types/node/ts4.8/net.d.ts:301</p>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#remoteport","title":"remotePort","text":"<p>\u2022 <code>Optional</code> <code>Readonly</code> remotePort: <code>number</code></p> <p>The numeric representation of the remote port. For example, <code>80</code> or <code>21</code>.</p> <p><code>Since</code></p> <p>v0.5.10</p>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#inherited-from_23","title":"Inherited from","text":"<p>Socket.remotePort</p>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#defined-in_24","title":"Defined in","text":"<p>node_modules/@types/node/ts4.8/net.d.ts:306</p>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#timeout","title":"timeout","text":"<p>\u2022 <code>Optional</code> <code>Readonly</code> timeout: <code>number</code></p> <p>The socket timeout in milliseconds as set by socket.setTimeout(). It is undefined if a timeout has not been set.</p> <p><code>Since</code></p> <p>v10.7.0</p>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#inherited-from_24","title":"Inherited from","text":"<p>Socket.timeout</p>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#defined-in_25","title":"Defined in","text":"<p>node_modules/@types/node/ts4.8/net.d.ts:311</p>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#writable","title":"writable","text":"<p>\u2022 <code>Readonly</code> writable: <code>boolean</code></p>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#inherited-from_25","title":"Inherited from","text":"<p>Socket.writable</p>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#defined-in_26","title":"Defined in","text":"<p>node_modules/@types/node/ts4.8/stream.d.ts:854</p>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#writablecorked","title":"writableCorked","text":"<p>\u2022 <code>Readonly</code> writableCorked: <code>number</code></p>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#inherited-from_26","title":"Inherited from","text":"<p>Socket.writableCorked</p>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#defined-in_27","title":"Defined in","text":"<p>node_modules/@types/node/ts4.8/stream.d.ts:860</p>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#writableended","title":"writableEnded","text":"<p>\u2022 <code>Readonly</code> writableEnded: <code>boolean</code></p>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#inherited-from_27","title":"Inherited from","text":"<p>Socket.writableEnded</p>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#defined-in_28","title":"Defined in","text":"<p>node_modules/@types/node/ts4.8/stream.d.ts:855</p>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#writablefinished","title":"writableFinished","text":"<p>\u2022 <code>Readonly</code> writableFinished: <code>boolean</code></p>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#inherited-from_28","title":"Inherited from","text":"<p>Socket.writableFinished</p>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#defined-in_29","title":"Defined in","text":"<p>node_modules/@types/node/ts4.8/stream.d.ts:856</p>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#writablehighwatermark","title":"writableHighWaterMark","text":"<p>\u2022 <code>Readonly</code> writableHighWaterMark: <code>number</code></p>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#inherited-from_29","title":"Inherited from","text":"<p>Socket.writableHighWaterMark</p>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#defined-in_30","title":"Defined in","text":"<p>node_modules/@types/node/ts4.8/stream.d.ts:857</p>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#writablelength","title":"writableLength","text":"<p>\u2022 <code>Readonly</code> writableLength: <code>number</code></p>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#inherited-from_30","title":"Inherited from","text":"<p>Socket.writableLength</p>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#defined-in_31","title":"Defined in","text":"<p>node_modules/@types/node/ts4.8/stream.d.ts:858</p>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#writableneeddrain","title":"writableNeedDrain","text":"<p>\u2022 <code>Readonly</code> writableNeedDrain: <code>boolean</code></p>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#inherited-from_31","title":"Inherited from","text":"<p>Socket.writableNeedDrain</p>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#defined-in_32","title":"Defined in","text":"<p>node_modules/@types/node/ts4.8/stream.d.ts:861</p>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#writableobjectmode","title":"writableObjectMode","text":"<p>\u2022 <code>Readonly</code> writableObjectMode: <code>boolean</code></p>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#inherited-from_32","title":"Inherited from","text":"<p>Socket.writableObjectMode</p>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#defined-in_33","title":"Defined in","text":"<p>node_modules/@types/node/ts4.8/stream.d.ts:859</p>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#methods_1","title":"Methods","text":""},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#asynciterator","title":"[asyncIterator]","text":"<p>\u25b8 [asyncIterator](): <code>AsyncIterableIterator</code>&lt;<code>any</code>&gt;</p>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#returns","title":"Returns","text":"<p><code>AsyncIterableIterator</code>&lt;<code>any</code>&gt;</p>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#inherited-from_33","title":"Inherited from","text":"<p>Socket.__@asyncIterator@33608</p>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#defined-in_34","title":"Defined in","text":"<p>node_modules/@types/node/ts4.8/stream.d.ts:503</p>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#_construct","title":"_construct","text":"<p>\u25b8 <code>Optional</code> _construct(<code>callback</code>): <code>void</code></p>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#parameters","title":"Parameters","text":"Name Type <code>callback</code> (<code>error?</code>: <code>null</code> | <code>Error</code>) =&gt; <code>void</code>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#returns_1","title":"Returns","text":"<p><code>void</code></p>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#inherited-from_34","title":"Inherited from","text":"<p>Socket._construct</p>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#defined-in_35","title":"Defined in","text":"<p>node_modules/@types/node/ts4.8/stream.d.ts:141</p>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#_destroy","title":"_destroy","text":"<p>\u25b8 _destroy(<code>error</code>, <code>callback</code>): <code>void</code></p>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#parameters_1","title":"Parameters","text":"Name Type <code>error</code> <code>null</code> | <code>Error</code> <code>callback</code> (<code>error</code>: <code>null</code> | <code>Error</code>) =&gt; <code>void</code>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#returns_2","title":"Returns","text":"<p><code>void</code></p>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#inherited-from_35","title":"Inherited from","text":"<p>Socket._destroy</p>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#defined-in_36","title":"Defined in","text":"<p>node_modules/@types/node/ts4.8/stream.d.ts:905</p>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#_final","title":"_final","text":"<p>\u25b8 _final(<code>callback</code>): <code>void</code></p>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#parameters_2","title":"Parameters","text":"Name Type <code>callback</code> (<code>error?</code>: <code>null</code> | <code>Error</code>) =&gt; <code>void</code>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#returns_3","title":"Returns","text":"<p><code>void</code></p>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#inherited-from_36","title":"Inherited from","text":"<p>Socket._final</p>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#defined-in_37","title":"Defined in","text":"<p>node_modules/@types/node/ts4.8/stream.d.ts:906</p>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#_read","title":"_read","text":"<p>\u25b8 _read(<code>size</code>): <code>void</code></p>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#parameters_3","title":"Parameters","text":"Name Type <code>size</code> <code>number</code>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#returns_4","title":"Returns","text":"<p><code>void</code></p>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#inherited-from_37","title":"Inherited from","text":"<p>Socket._read</p>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#defined-in_38","title":"Defined in","text":"<p>node_modules/@types/node/ts4.8/stream.d.ts:142</p>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#_write","title":"_write","text":"<p>\u25b8 _write(<code>chunk</code>, <code>encoding</code>, <code>callback</code>): <code>void</code></p>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#parameters_4","title":"Parameters","text":"Name Type <code>chunk</code> <code>any</code> <code>encoding</code> <code>BufferEncoding</code> <code>callback</code> (<code>error?</code>: <code>null</code> | <code>Error</code>) =&gt; <code>void</code>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#returns_5","title":"Returns","text":"<p><code>void</code></p>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#inherited-from_38","title":"Inherited from","text":"<p>Socket._write</p>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#defined-in_39","title":"Defined in","text":"<p>node_modules/@types/node/ts4.8/stream.d.ts:897</p>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#_writev","title":"_writev","text":"<p>\u25b8 <code>Optional</code> _writev(<code>chunks</code>, <code>callback</code>): <code>void</code></p>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#parameters_5","title":"Parameters","text":"Name Type <code>chunks</code> { <code>chunk</code>: <code>any</code> ; <code>encoding</code>: <code>BufferEncoding</code>  }[] <code>callback</code> (<code>error?</code>: <code>null</code> | <code>Error</code>) =&gt; <code>void</code>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#returns_6","title":"Returns","text":"<p><code>void</code></p>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#inherited-from_39","title":"Inherited from","text":"<p>Socket._writev</p>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#defined-in_40","title":"Defined in","text":"<p>node_modules/@types/node/ts4.8/stream.d.ts:898</p>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#addlistener","title":"addListener","text":"<p>\u25b8 addListener(<code>event</code>, <code>listener</code>): <code>AppiumServerSocket</code></p> <p>events.EventEmitter   1. close   2. connect   3. data   4. drain   5. end   6. error   7. lookup   8. ready   9. timeout</p>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#parameters_6","title":"Parameters","text":"Name Type <code>event</code> <code>string</code> <code>listener</code> (...<code>args</code>: <code>any</code>[]) =&gt; <code>void</code>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#returns_7","title":"Returns","text":"<p><code>AppiumServerSocket</code></p>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#inherited-from_40","title":"Inherited from","text":"<p>Socket.addListener</p>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#defined-in_41","title":"Defined in","text":"<p>node_modules/@types/node/ts4.8/net.d.ts:337</p> <p>\u25b8 addListener(<code>event</code>, <code>listener</code>): <code>AppiumServerSocket</code></p>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#parameters_7","title":"Parameters","text":"Name Type <code>event</code> <code>\"close\"</code> <code>listener</code> (<code>hadError</code>: <code>boolean</code>) =&gt; <code>void</code>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#returns_8","title":"Returns","text":"<p><code>AppiumServerSocket</code></p>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#inherited-from_41","title":"Inherited from","text":"<p>Socket.addListener</p>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#defined-in_42","title":"Defined in","text":"<p>node_modules/@types/node/ts4.8/net.d.ts:338</p> <p>\u25b8 addListener(<code>event</code>, <code>listener</code>): <code>AppiumServerSocket</code></p>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#parameters_8","title":"Parameters","text":"Name Type <code>event</code> <code>\"connect\"</code> <code>listener</code> () =&gt; <code>void</code>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#returns_9","title":"Returns","text":"<p><code>AppiumServerSocket</code></p>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#inherited-from_42","title":"Inherited from","text":"<p>Socket.addListener</p>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#defined-in_43","title":"Defined in","text":"<p>node_modules/@types/node/ts4.8/net.d.ts:339</p> <p>\u25b8 addListener(<code>event</code>, <code>listener</code>): <code>AppiumServerSocket</code></p>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#parameters_9","title":"Parameters","text":"Name Type <code>event</code> <code>\"data\"</code> <code>listener</code> (<code>data</code>: <code>Buffer</code>) =&gt; <code>void</code>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#returns_10","title":"Returns","text":"<p><code>AppiumServerSocket</code></p>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#inherited-from_43","title":"Inherited from","text":"<p>Socket.addListener</p>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#defined-in_44","title":"Defined in","text":"<p>node_modules/@types/node/ts4.8/net.d.ts:340</p> <p>\u25b8 addListener(<code>event</code>, <code>listener</code>): <code>AppiumServerSocket</code></p>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#parameters_10","title":"Parameters","text":"Name Type <code>event</code> <code>\"drain\"</code> <code>listener</code> () =&gt; <code>void</code>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#returns_11","title":"Returns","text":"<p><code>AppiumServerSocket</code></p>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#inherited-from_44","title":"Inherited from","text":"<p>Socket.addListener</p>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#defined-in_45","title":"Defined in","text":"<p>node_modules/@types/node/ts4.8/net.d.ts:341</p> <p>\u25b8 addListener(<code>event</code>, <code>listener</code>): <code>AppiumServerSocket</code></p>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#parameters_11","title":"Parameters","text":"Name Type <code>event</code> <code>\"end\"</code> <code>listener</code> () =&gt; <code>void</code>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#returns_12","title":"Returns","text":"<p><code>AppiumServerSocket</code></p>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#inherited-from_45","title":"Inherited from","text":"<p>Socket.addListener</p>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#defined-in_46","title":"Defined in","text":"<p>node_modules/@types/node/ts4.8/net.d.ts:342</p> <p>\u25b8 addListener(<code>event</code>, <code>listener</code>): <code>AppiumServerSocket</code></p>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#parameters_12","title":"Parameters","text":"Name Type <code>event</code> <code>\"error\"</code> <code>listener</code> (<code>err</code>: <code>Error</code>) =&gt; <code>void</code>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#returns_13","title":"Returns","text":"<p><code>AppiumServerSocket</code></p>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#inherited-from_46","title":"Inherited from","text":"<p>Socket.addListener</p>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#defined-in_47","title":"Defined in","text":"<p>node_modules/@types/node/ts4.8/net.d.ts:343</p> <p>\u25b8 addListener(<code>event</code>, <code>listener</code>): <code>AppiumServerSocket</code></p>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#parameters_13","title":"Parameters","text":"Name Type <code>event</code> <code>\"lookup\"</code> <code>listener</code> (<code>err</code>: <code>Error</code>, <code>address</code>: <code>string</code>, <code>family</code>: <code>string</code> | <code>number</code>, <code>host</code>: <code>string</code>) =&gt; <code>void</code>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#returns_14","title":"Returns","text":"<p><code>AppiumServerSocket</code></p>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#inherited-from_47","title":"Inherited from","text":"<p>Socket.addListener</p>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#defined-in_48","title":"Defined in","text":"<p>node_modules/@types/node/ts4.8/net.d.ts:344</p> <p>\u25b8 addListener(<code>event</code>, <code>listener</code>): <code>AppiumServerSocket</code></p>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#parameters_14","title":"Parameters","text":"Name Type <code>event</code> <code>\"ready\"</code> <code>listener</code> () =&gt; <code>void</code>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#returns_15","title":"Returns","text":"<p><code>AppiumServerSocket</code></p>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#inherited-from_48","title":"Inherited from","text":"<p>Socket.addListener</p>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#defined-in_49","title":"Defined in","text":"<p>node_modules/@types/node/ts4.8/net.d.ts:345</p> <p>\u25b8 addListener(<code>event</code>, <code>listener</code>): <code>AppiumServerSocket</code></p>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#parameters_15","title":"Parameters","text":"Name Type <code>event</code> <code>\"timeout\"</code> <code>listener</code> () =&gt; <code>void</code>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#returns_16","title":"Returns","text":"<p><code>AppiumServerSocket</code></p>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#inherited-from_49","title":"Inherited from","text":"<p>Socket.addListener</p>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#defined-in_50","title":"Defined in","text":"<p>node_modules/@types/node/ts4.8/net.d.ts:346</p>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#address","title":"address","text":"<p>\u25b8 address(): {} | <code>AddressInfo</code></p> <p>Returns the bound <code>address</code>, the address <code>family</code> name and <code>port</code> of the socket as reported by the operating system:<code>{ port: 12346, family: 'IPv4', address: '127.0.0.1' }</code></p> <p><code>Since</code></p> <p>v0.1.90</p>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#returns_17","title":"Returns","text":"<p>{} | <code>AddressInfo</code></p>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#inherited-from_50","title":"Inherited from","text":"<p>Socket.address</p>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#defined-in_51","title":"Defined in","text":"<p>node_modules/@types/node/ts4.8/net.d.ts:213</p>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#connect","title":"connect","text":"<p>\u25b8 connect(<code>options</code>, <code>connectionListener?</code>): <code>AppiumServerSocket</code></p> <p>Initiate a connection on a given socket.</p> <p>Possible signatures:</p> <ul> <li><code>socket.connect(options[, connectListener])</code></li> <li><code>socket.connect(path[, connectListener])</code> for <code>IPC</code> connections.</li> <li><code>socket.connect(port[, host][, connectListener])</code> for TCP connections.</li> <li>Returns: <code>net.Socket</code> The socket itself.</li> </ul> <p>This function is asynchronous. When the connection is established, the <code>'connect'</code> event will be emitted. If there is a problem connecting, instead of a <code>'connect'</code> event, an <code>'error'</code> event will be emitted with the error passed to the <code>'error'</code> listener. The last parameter <code>connectListener</code>, if supplied, will be added as a listener for the <code>'connect'</code> event once.</p> <p>This function should only be used for reconnecting a socket after<code>'close'</code> has been emitted or otherwise it may lead to undefined behavior.</p>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#parameters_16","title":"Parameters","text":"Name Type <code>options</code> <code>SocketConnectOpts</code> <code>connectionListener?</code> () =&gt; <code>void</code>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#returns_18","title":"Returns","text":"<p><code>AppiumServerSocket</code></p>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#inherited-from_51","title":"Inherited from","text":"<p>Socket.connect</p>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#defined-in_52","title":"Defined in","text":"<p>node_modules/@types/node/ts4.8/net.d.ts:118</p> <p>\u25b8 connect(<code>port</code>, <code>host</code>, <code>connectionListener?</code>): <code>AppiumServerSocket</code></p>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#parameters_17","title":"Parameters","text":"Name Type <code>port</code> <code>number</code> <code>host</code> <code>string</code> <code>connectionListener?</code> () =&gt; <code>void</code>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#returns_19","title":"Returns","text":"<p><code>AppiumServerSocket</code></p>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#inherited-from_52","title":"Inherited from","text":"<p>Socket.connect</p>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#defined-in_53","title":"Defined in","text":"<p>node_modules/@types/node/ts4.8/net.d.ts:119</p> <p>\u25b8 connect(<code>port</code>, <code>connectionListener?</code>): <code>AppiumServerSocket</code></p>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#parameters_18","title":"Parameters","text":"Name Type <code>port</code> <code>number</code> <code>connectionListener?</code> () =&gt; <code>void</code>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#returns_20","title":"Returns","text":"<p><code>AppiumServerSocket</code></p>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#inherited-from_53","title":"Inherited from","text":"<p>Socket.connect</p>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#defined-in_54","title":"Defined in","text":"<p>node_modules/@types/node/ts4.8/net.d.ts:120</p> <p>\u25b8 connect(<code>path</code>, <code>connectionListener?</code>): <code>AppiumServerSocket</code></p>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#parameters_19","title":"Parameters","text":"Name Type <code>path</code> <code>string</code> <code>connectionListener?</code> () =&gt; <code>void</code>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#returns_21","title":"Returns","text":"<p><code>AppiumServerSocket</code></p>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#inherited-from_54","title":"Inherited from","text":"<p>Socket.connect</p>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#defined-in_55","title":"Defined in","text":"<p>node_modules/@types/node/ts4.8/net.d.ts:121</p>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#cork","title":"cork","text":"<p>\u25b8 cork(): <code>void</code></p>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#returns_22","title":"Returns","text":"<p><code>void</code></p>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#inherited-from_55","title":"Inherited from","text":"<p>Socket.cork</p>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#defined-in_56","title":"Defined in","text":"<p>node_modules/@types/node/ts4.8/stream.d.ts:913</p>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#destroy","title":"destroy","text":"<p>\u25b8 destroy(<code>error?</code>): <code>AppiumServerSocket</code></p> <p>Destroy the stream. Optionally emit an <code>'error'</code> event, and emit a <code>'close'</code>event (unless <code>emitClose</code> is set to <code>false</code>). After this call, the readable stream will release any internal resources and subsequent calls to <code>push()</code>will be ignored.</p> <p>Once <code>destroy()</code> has been called any further calls will be a no-op and no further errors except from <code>_destroy()</code> may be emitted as <code>'error'</code>.</p> <p>Implementors should not override this method, but instead implement <code>readable._destroy()</code>.</p> <p><code>Since</code></p> <p>v8.0.0</p>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#parameters_20","title":"Parameters","text":"Name Type Description <code>error?</code> <code>Error</code> Error which will be passed as payload in <code>'error'</code> event"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#returns_23","title":"Returns","text":"<p><code>AppiumServerSocket</code></p>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#inherited-from_56","title":"Inherited from","text":"<p>Socket.destroy</p>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#defined-in_57","title":"Defined in","text":"<p>node_modules/@types/node/ts4.8/stream.d.ts:435</p>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#emit","title":"emit","text":"<p>\u25b8 emit(<code>event</code>, <code>...args</code>): <code>boolean</code></p>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#parameters_21","title":"Parameters","text":"Name Type <code>event</code> <code>string</code> | <code>symbol</code> <code>...args</code> <code>any</code>[]"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#returns_24","title":"Returns","text":"<p><code>boolean</code></p>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#inherited-from_57","title":"Inherited from","text":"<p>Socket.emit</p>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#defined-in_58","title":"Defined in","text":"<p>node_modules/@types/node/ts4.8/net.d.ts:347</p> <p>\u25b8 emit(<code>event</code>, <code>hadError</code>): <code>boolean</code></p>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#parameters_22","title":"Parameters","text":"Name Type <code>event</code> <code>\"close\"</code> <code>hadError</code> <code>boolean</code>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#returns_25","title":"Returns","text":"<p><code>boolean</code></p>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#inherited-from_58","title":"Inherited from","text":"<p>Socket.emit</p>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#defined-in_59","title":"Defined in","text":"<p>node_modules/@types/node/ts4.8/net.d.ts:348</p> <p>\u25b8 emit(<code>event</code>): <code>boolean</code></p>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#parameters_23","title":"Parameters","text":"Name Type <code>event</code> <code>\"connect\"</code>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#returns_26","title":"Returns","text":"<p><code>boolean</code></p>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#inherited-from_59","title":"Inherited from","text":"<p>Socket.emit</p>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#defined-in_60","title":"Defined in","text":"<p>node_modules/@types/node/ts4.8/net.d.ts:349</p> <p>\u25b8 emit(<code>event</code>, <code>data</code>): <code>boolean</code></p>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#parameters_24","title":"Parameters","text":"Name Type <code>event</code> <code>\"data\"</code> <code>data</code> <code>Buffer</code>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#returns_27","title":"Returns","text":"<p><code>boolean</code></p>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#inherited-from_60","title":"Inherited from","text":"<p>Socket.emit</p>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#defined-in_61","title":"Defined in","text":"<p>node_modules/@types/node/ts4.8/net.d.ts:350</p> <p>\u25b8 emit(<code>event</code>): <code>boolean</code></p>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#parameters_25","title":"Parameters","text":"Name Type <code>event</code> <code>\"drain\"</code>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#returns_28","title":"Returns","text":"<p><code>boolean</code></p>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#inherited-from_61","title":"Inherited from","text":"<p>Socket.emit</p>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#defined-in_62","title":"Defined in","text":"<p>node_modules/@types/node/ts4.8/net.d.ts:351</p> <p>\u25b8 emit(<code>event</code>): <code>boolean</code></p>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#parameters_26","title":"Parameters","text":"Name Type <code>event</code> <code>\"end\"</code>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#returns_29","title":"Returns","text":"<p><code>boolean</code></p>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#inherited-from_62","title":"Inherited from","text":"<p>Socket.emit</p>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#defined-in_63","title":"Defined in","text":"<p>node_modules/@types/node/ts4.8/net.d.ts:352</p> <p>\u25b8 emit(<code>event</code>, <code>err</code>): <code>boolean</code></p>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#parameters_27","title":"Parameters","text":"Name Type <code>event</code> <code>\"error\"</code> <code>err</code> <code>Error</code>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#returns_30","title":"Returns","text":"<p><code>boolean</code></p>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#inherited-from_63","title":"Inherited from","text":"<p>Socket.emit</p>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#defined-in_64","title":"Defined in","text":"<p>node_modules/@types/node/ts4.8/net.d.ts:353</p> <p>\u25b8 emit(<code>event</code>, <code>err</code>, <code>address</code>, <code>family</code>, <code>host</code>): <code>boolean</code></p>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#parameters_28","title":"Parameters","text":"Name Type <code>event</code> <code>\"lookup\"</code> <code>err</code> <code>Error</code> <code>address</code> <code>string</code> <code>family</code> <code>string</code> | <code>number</code> <code>host</code> <code>string</code>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#returns_31","title":"Returns","text":"<p><code>boolean</code></p>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#inherited-from_64","title":"Inherited from","text":"<p>Socket.emit</p>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#defined-in_65","title":"Defined in","text":"<p>node_modules/@types/node/ts4.8/net.d.ts:354</p> <p>\u25b8 emit(<code>event</code>): <code>boolean</code></p>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#parameters_29","title":"Parameters","text":"Name Type <code>event</code> <code>\"ready\"</code>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#returns_32","title":"Returns","text":"<p><code>boolean</code></p>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#inherited-from_65","title":"Inherited from","text":"<p>Socket.emit</p>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#defined-in_66","title":"Defined in","text":"<p>node_modules/@types/node/ts4.8/net.d.ts:355</p> <p>\u25b8 emit(<code>event</code>): <code>boolean</code></p>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#parameters_30","title":"Parameters","text":"Name Type <code>event</code> <code>\"timeout\"</code>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#returns_33","title":"Returns","text":"<p><code>boolean</code></p>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#inherited-from_66","title":"Inherited from","text":"<p>Socket.emit</p>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#defined-in_67","title":"Defined in","text":"<p>node_modules/@types/node/ts4.8/net.d.ts:356</p>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#end","title":"end","text":"<p>\u25b8 end(<code>callback?</code>): <code>AppiumServerSocket</code></p> <p>Half-closes the socket. i.e., it sends a FIN packet. It is possible the server will still send some data.</p> <p>See <code>writable.end()</code> for further details.</p> <p><code>Since</code></p> <p>v0.1.90</p>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#parameters_31","title":"Parameters","text":"Name Type Description <code>callback?</code> () =&gt; <code>void</code> Optional callback for when the socket is finished."},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#returns_34","title":"Returns","text":"<p><code>AppiumServerSocket</code></p> <p>The socket itself.</p>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#inherited-from_67","title":"Inherited from","text":"<p>Socket.end</p>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#defined-in_68","title":"Defined in","text":"<p>node_modules/@types/node/ts4.8/net.d.ts:322</p> <p>\u25b8 end(<code>buffer</code>, <code>callback?</code>): <code>AppiumServerSocket</code></p>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#parameters_32","title":"Parameters","text":"Name Type <code>buffer</code> <code>string</code> | <code>Uint8Array</code> <code>callback?</code> () =&gt; <code>void</code>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#returns_35","title":"Returns","text":"<p><code>AppiumServerSocket</code></p>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#inherited-from_68","title":"Inherited from","text":"<p>Socket.end</p>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#defined-in_69","title":"Defined in","text":"<p>node_modules/@types/node/ts4.8/net.d.ts:323</p> <p>\u25b8 end(<code>str</code>, <code>encoding?</code>, <code>callback?</code>): <code>AppiumServerSocket</code></p>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#parameters_33","title":"Parameters","text":"Name Type <code>str</code> <code>string</code> | <code>Uint8Array</code> <code>encoding?</code> <code>BufferEncoding</code> <code>callback?</code> () =&gt; <code>void</code>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#returns_36","title":"Returns","text":"<p><code>AppiumServerSocket</code></p>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#inherited-from_69","title":"Inherited from","text":"<p>Socket.end</p>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#defined-in_70","title":"Defined in","text":"<p>node_modules/@types/node/ts4.8/net.d.ts:324</p>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#eventnames","title":"eventNames","text":"<p>\u25b8 eventNames(): (<code>string</code> | <code>symbol</code>)[]</p> <p>Returns an array listing the events for which the emitter has registered listeners. The values in the array are strings or <code>Symbol</code>s.</p> <pre><code>const EventEmitter = require('events');\nconst myEE = new EventEmitter();\nmyEE.on('foo', () =&gt; {});\nmyEE.on('bar', () =&gt; {});\nconst sym = Symbol('symbol');\nmyEE.on(sym, () =&gt; {});\nconsole.log(myEE.eventNames());\n// Prints: [ 'foo', 'bar', Symbol(symbol) ]\n</code></pre> <p><code>Since</code></p> <p>v6.0.0</p>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#returns_37","title":"Returns","text":"<p>(<code>string</code> | <code>symbol</code>)[]</p>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#inherited-from_70","title":"Inherited from","text":"<p>Socket.eventNames</p>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#defined-in_71","title":"Defined in","text":"<p>node_modules/@types/node/ts4.8/events.d.ts:669</p>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#getmaxlisteners","title":"getMaxListeners","text":"<p>\u25b8 getMaxListeners(): <code>number</code></p> <p>Returns the current max listener value for the <code>EventEmitter</code> which is either set by <code>emitter.setMaxListeners(n)</code> or defaults to defaultMaxListeners.</p> <p><code>Since</code></p> <p>v1.0.0</p>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#returns_38","title":"Returns","text":"<p><code>number</code></p>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#inherited-from_71","title":"Inherited from","text":"<p>Socket.getMaxListeners</p>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#defined-in_72","title":"Defined in","text":"<p>node_modules/@types/node/ts4.8/events.d.ts:526</p>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#ispaused","title":"isPaused","text":"<p>\u25b8 isPaused(): <code>boolean</code></p> <p>The <code>readable.isPaused()</code> method returns the current operating state of the<code>Readable</code>. This is used primarily by the mechanism that underlies the<code>readable.pipe()</code> method. In most typical cases, there will be no reason to use this method directly.</p> <pre><code>const readable = new stream.Readable();\nreadable.isPaused(); // === false\nreadable.pause();\nreadable.isPaused(); // === true\nreadable.resume();\nreadable.isPaused(); // === false\n</code></pre> <p><code>Since</code></p> <p>v0.11.14</p>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#returns_39","title":"Returns","text":"<p><code>boolean</code></p>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#inherited-from_72","title":"Inherited from","text":"<p>Socket.isPaused</p>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#defined-in_73","title":"Defined in","text":"<p>node_modules/@types/node/ts4.8/stream.d.ts:302</p>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#listenercount","title":"listenerCount","text":"<p>\u25b8 listenerCount(<code>eventName</code>): <code>number</code></p> <p>Returns the number of listeners listening to the event named <code>eventName</code>.</p> <p><code>Since</code></p> <p>v3.2.0</p>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#parameters_34","title":"Parameters","text":"Name Type Description <code>eventName</code> <code>string</code> | <code>symbol</code> The name of the event being listened for"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#returns_40","title":"Returns","text":"<p><code>number</code></p>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#inherited-from_73","title":"Inherited from","text":"<p>Socket.listenerCount</p>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#defined-in_74","title":"Defined in","text":"<p>node_modules/@types/node/ts4.8/events.d.ts:616</p>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#listeners","title":"listeners","text":"<p>\u25b8 listeners(<code>eventName</code>): <code>Function</code>[]</p> <p>Returns a copy of the array of listeners for the event named <code>eventName</code>.</p> <pre><code>server.on('connection', (stream) =&gt; {\nconsole.log('someone connected!');\n});\nconsole.log(util.inspect(server.listeners('connection')));\n// Prints: [ [Function] ]\n</code></pre> <p><code>Since</code></p> <p>v0.1.26</p>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#parameters_35","title":"Parameters","text":"Name Type <code>eventName</code> <code>string</code> | <code>symbol</code>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#returns_41","title":"Returns","text":"<p><code>Function</code>[]</p>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#inherited-from_74","title":"Inherited from","text":"<p>Socket.listeners</p>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#defined-in_75","title":"Defined in","text":"<p>node_modules/@types/node/ts4.8/events.d.ts:539</p>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#off","title":"off","text":"<p>\u25b8 off(<code>eventName</code>, <code>listener</code>): <code>AppiumServerSocket</code></p> <p>Alias for <code>emitter.removeListener()</code>.</p> <p><code>Since</code></p> <p>v10.0.0</p>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#parameters_36","title":"Parameters","text":"Name Type <code>eventName</code> <code>string</code> | <code>symbol</code> <code>listener</code> (...<code>args</code>: <code>any</code>[]) =&gt; <code>void</code>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#returns_42","title":"Returns","text":"<p><code>AppiumServerSocket</code></p>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#inherited-from_75","title":"Inherited from","text":"<p>Socket.off</p>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#defined-in_76","title":"Defined in","text":"<p>node_modules/@types/node/ts4.8/events.d.ts:499</p>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#on","title":"on","text":"<p>\u25b8 on(<code>event</code>, <code>listener</code>): <code>AppiumServerSocket</code></p>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#parameters_37","title":"Parameters","text":"Name Type <code>event</code> <code>string</code> <code>listener</code> (...<code>args</code>: <code>any</code>[]) =&gt; <code>void</code>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#returns_43","title":"Returns","text":"<p><code>AppiumServerSocket</code></p>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#inherited-from_76","title":"Inherited from","text":"<p>Socket.on</p>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#defined-in_77","title":"Defined in","text":"<p>node_modules/@types/node/ts4.8/net.d.ts:357</p> <p>\u25b8 on(<code>event</code>, <code>listener</code>): <code>AppiumServerSocket</code></p>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#parameters_38","title":"Parameters","text":"Name Type <code>event</code> <code>\"close\"</code> <code>listener</code> (<code>hadError</code>: <code>boolean</code>) =&gt; <code>void</code>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#returns_44","title":"Returns","text":"<p><code>AppiumServerSocket</code></p>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#inherited-from_77","title":"Inherited from","text":"<p>Socket.on</p>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#defined-in_78","title":"Defined in","text":"<p>node_modules/@types/node/ts4.8/net.d.ts:358</p> <p>\u25b8 on(<code>event</code>, <code>listener</code>): <code>AppiumServerSocket</code></p>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#parameters_39","title":"Parameters","text":"Name Type <code>event</code> <code>\"connect\"</code> <code>listener</code> () =&gt; <code>void</code>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#returns_45","title":"Returns","text":"<p><code>AppiumServerSocket</code></p>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#inherited-from_78","title":"Inherited from","text":"<p>Socket.on</p>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#defined-in_79","title":"Defined in","text":"<p>node_modules/@types/node/ts4.8/net.d.ts:359</p> <p>\u25b8 on(<code>event</code>, <code>listener</code>): <code>AppiumServerSocket</code></p>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#parameters_40","title":"Parameters","text":"Name Type <code>event</code> <code>\"data\"</code> <code>listener</code> (<code>data</code>: <code>Buffer</code>) =&gt; <code>void</code>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#returns_46","title":"Returns","text":"<p><code>AppiumServerSocket</code></p>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#inherited-from_79","title":"Inherited from","text":"<p>Socket.on</p>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#defined-in_80","title":"Defined in","text":"<p>node_modules/@types/node/ts4.8/net.d.ts:360</p> <p>\u25b8 on(<code>event</code>, <code>listener</code>): <code>AppiumServerSocket</code></p>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#parameters_41","title":"Parameters","text":"Name Type <code>event</code> <code>\"drain\"</code> <code>listener</code> () =&gt; <code>void</code>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#returns_47","title":"Returns","text":"<p><code>AppiumServerSocket</code></p>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#inherited-from_80","title":"Inherited from","text":"<p>Socket.on</p>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#defined-in_81","title":"Defined in","text":"<p>node_modules/@types/node/ts4.8/net.d.ts:361</p> <p>\u25b8 on(<code>event</code>, <code>listener</code>): <code>AppiumServerSocket</code></p>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#parameters_42","title":"Parameters","text":"Name Type <code>event</code> <code>\"end\"</code> <code>listener</code> () =&gt; <code>void</code>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#returns_48","title":"Returns","text":"<p><code>AppiumServerSocket</code></p>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#inherited-from_81","title":"Inherited from","text":"<p>Socket.on</p>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#defined-in_82","title":"Defined in","text":"<p>node_modules/@types/node/ts4.8/net.d.ts:362</p> <p>\u25b8 on(<code>event</code>, <code>listener</code>): <code>AppiumServerSocket</code></p>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#parameters_43","title":"Parameters","text":"Name Type <code>event</code> <code>\"error\"</code> <code>listener</code> (<code>err</code>: <code>Error</code>) =&gt; <code>void</code>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#returns_49","title":"Returns","text":"<p><code>AppiumServerSocket</code></p>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#inherited-from_82","title":"Inherited from","text":"<p>Socket.on</p>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#defined-in_83","title":"Defined in","text":"<p>node_modules/@types/node/ts4.8/net.d.ts:363</p> <p>\u25b8 on(<code>event</code>, <code>listener</code>): <code>AppiumServerSocket</code></p>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#parameters_44","title":"Parameters","text":"Name Type <code>event</code> <code>\"lookup\"</code> <code>listener</code> (<code>err</code>: <code>Error</code>, <code>address</code>: <code>string</code>, <code>family</code>: <code>string</code> | <code>number</code>, <code>host</code>: <code>string</code>) =&gt; <code>void</code>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#returns_50","title":"Returns","text":"<p><code>AppiumServerSocket</code></p>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#inherited-from_83","title":"Inherited from","text":"<p>Socket.on</p>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#defined-in_84","title":"Defined in","text":"<p>node_modules/@types/node/ts4.8/net.d.ts:364</p> <p>\u25b8 on(<code>event</code>, <code>listener</code>): <code>AppiumServerSocket</code></p>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#parameters_45","title":"Parameters","text":"Name Type <code>event</code> <code>\"ready\"</code> <code>listener</code> () =&gt; <code>void</code>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#returns_51","title":"Returns","text":"<p><code>AppiumServerSocket</code></p>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#inherited-from_84","title":"Inherited from","text":"<p>Socket.on</p>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#defined-in_85","title":"Defined in","text":"<p>node_modules/@types/node/ts4.8/net.d.ts:365</p> <p>\u25b8 on(<code>event</code>, <code>listener</code>): <code>AppiumServerSocket</code></p>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#parameters_46","title":"Parameters","text":"Name Type <code>event</code> <code>\"timeout\"</code> <code>listener</code> () =&gt; <code>void</code>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#returns_52","title":"Returns","text":"<p><code>AppiumServerSocket</code></p>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#inherited-from_85","title":"Inherited from","text":"<p>Socket.on</p>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#defined-in_86","title":"Defined in","text":"<p>node_modules/@types/node/ts4.8/net.d.ts:366</p>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#once","title":"once","text":"<p>\u25b8 once(<code>event</code>, <code>listener</code>): <code>AppiumServerSocket</code></p>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#parameters_47","title":"Parameters","text":"Name Type <code>event</code> <code>string</code> <code>listener</code> (...<code>args</code>: <code>any</code>[]) =&gt; <code>void</code>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#returns_53","title":"Returns","text":"<p><code>AppiumServerSocket</code></p>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#inherited-from_86","title":"Inherited from","text":"<p>Socket.once</p>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#defined-in_87","title":"Defined in","text":"<p>node_modules/@types/node/ts4.8/net.d.ts:367</p> <p>\u25b8 once(<code>event</code>, <code>listener</code>): <code>AppiumServerSocket</code></p>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#parameters_48","title":"Parameters","text":"Name Type <code>event</code> <code>\"close\"</code> <code>listener</code> (<code>hadError</code>: <code>boolean</code>) =&gt; <code>void</code>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#returns_54","title":"Returns","text":"<p><code>AppiumServerSocket</code></p>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#inherited-from_87","title":"Inherited from","text":"<p>Socket.once</p>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#defined-in_88","title":"Defined in","text":"<p>node_modules/@types/node/ts4.8/net.d.ts:368</p> <p>\u25b8 once(<code>event</code>, <code>listener</code>): <code>AppiumServerSocket</code></p>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#parameters_49","title":"Parameters","text":"Name Type <code>event</code> <code>\"connect\"</code> <code>listener</code> () =&gt; <code>void</code>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#returns_55","title":"Returns","text":"<p><code>AppiumServerSocket</code></p>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#inherited-from_88","title":"Inherited from","text":"<p>Socket.once</p>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#defined-in_89","title":"Defined in","text":"<p>node_modules/@types/node/ts4.8/net.d.ts:369</p> <p>\u25b8 once(<code>event</code>, <code>listener</code>): <code>AppiumServerSocket</code></p>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#parameters_50","title":"Parameters","text":"Name Type <code>event</code> <code>\"data\"</code> <code>listener</code> (<code>data</code>: <code>Buffer</code>) =&gt; <code>void</code>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#returns_56","title":"Returns","text":"<p><code>AppiumServerSocket</code></p>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#inherited-from_89","title":"Inherited from","text":"<p>Socket.once</p>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#defined-in_90","title":"Defined in","text":"<p>node_modules/@types/node/ts4.8/net.d.ts:370</p> <p>\u25b8 once(<code>event</code>, <code>listener</code>): <code>AppiumServerSocket</code></p>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#parameters_51","title":"Parameters","text":"Name Type <code>event</code> <code>\"drain\"</code> <code>listener</code> () =&gt; <code>void</code>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#returns_57","title":"Returns","text":"<p><code>AppiumServerSocket</code></p>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#inherited-from_90","title":"Inherited from","text":"<p>Socket.once</p>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#defined-in_91","title":"Defined in","text":"<p>node_modules/@types/node/ts4.8/net.d.ts:371</p> <p>\u25b8 once(<code>event</code>, <code>listener</code>): <code>AppiumServerSocket</code></p>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#parameters_52","title":"Parameters","text":"Name Type <code>event</code> <code>\"end\"</code> <code>listener</code> () =&gt; <code>void</code>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#returns_58","title":"Returns","text":"<p><code>AppiumServerSocket</code></p>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#inherited-from_91","title":"Inherited from","text":"<p>Socket.once</p>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#defined-in_92","title":"Defined in","text":"<p>node_modules/@types/node/ts4.8/net.d.ts:372</p> <p>\u25b8 once(<code>event</code>, <code>listener</code>): <code>AppiumServerSocket</code></p>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#parameters_53","title":"Parameters","text":"Name Type <code>event</code> <code>\"error\"</code> <code>listener</code> (<code>err</code>: <code>Error</code>) =&gt; <code>void</code>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#returns_59","title":"Returns","text":"<p><code>AppiumServerSocket</code></p>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#inherited-from_92","title":"Inherited from","text":"<p>Socket.once</p>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#defined-in_93","title":"Defined in","text":"<p>node_modules/@types/node/ts4.8/net.d.ts:373</p> <p>\u25b8 once(<code>event</code>, <code>listener</code>): <code>AppiumServerSocket</code></p>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#parameters_54","title":"Parameters","text":"Name Type <code>event</code> <code>\"lookup\"</code> <code>listener</code> (<code>err</code>: <code>Error</code>, <code>address</code>: <code>string</code>, <code>family</code>: <code>string</code> | <code>number</code>, <code>host</code>: <code>string</code>) =&gt; <code>void</code>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#returns_60","title":"Returns","text":"<p><code>AppiumServerSocket</code></p>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#inherited-from_93","title":"Inherited from","text":"<p>Socket.once</p>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#defined-in_94","title":"Defined in","text":"<p>node_modules/@types/node/ts4.8/net.d.ts:374</p> <p>\u25b8 once(<code>event</code>, <code>listener</code>): <code>AppiumServerSocket</code></p>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#parameters_55","title":"Parameters","text":"Name Type <code>event</code> <code>\"ready\"</code> <code>listener</code> () =&gt; <code>void</code>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#returns_61","title":"Returns","text":"<p><code>AppiumServerSocket</code></p>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#inherited-from_94","title":"Inherited from","text":"<p>Socket.once</p>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#defined-in_95","title":"Defined in","text":"<p>node_modules/@types/node/ts4.8/net.d.ts:375</p> <p>\u25b8 once(<code>event</code>, <code>listener</code>): <code>AppiumServerSocket</code></p>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#parameters_56","title":"Parameters","text":"Name Type <code>event</code> <code>\"timeout\"</code> <code>listener</code> () =&gt; <code>void</code>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#returns_62","title":"Returns","text":"<p><code>AppiumServerSocket</code></p>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#inherited-from_95","title":"Inherited from","text":"<p>Socket.once</p>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#defined-in_96","title":"Defined in","text":"<p>node_modules/@types/node/ts4.8/net.d.ts:376</p>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#pause","title":"pause","text":"<p>\u25b8 pause(): <code>AppiumServerSocket</code></p> <p>Pauses the reading of data. That is, <code>'data'</code> events will not be emitted. Useful to throttle back an upload.</p>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#returns_63","title":"Returns","text":"<p><code>AppiumServerSocket</code></p> <p>The socket itself.</p>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#inherited-from_96","title":"Inherited from","text":"<p>Socket.pause</p>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#defined-in_97","title":"Defined in","text":"<p>node_modules/@types/node/ts4.8/net.d.ts:133</p>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#pipe","title":"pipe","text":"<p>\u25b8 pipe&lt;<code>T</code>&gt;(<code>destination</code>, <code>options?</code>): <code>T</code></p>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#type-parameters","title":"Type parameters","text":"Name Type <code>T</code> extends <code>WritableStream</code>&lt;<code>T</code>&gt;"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#parameters_57","title":"Parameters","text":"Name Type <code>destination</code> <code>T</code> <code>options?</code> <code>Object</code> <code>options.end?</code> <code>boolean</code>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#returns_64","title":"Returns","text":"<p><code>T</code></p>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#inherited-from_97","title":"Inherited from","text":"<p>Socket.pipe</p>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#defined-in_98","title":"Defined in","text":"<p>node_modules/@types/node/ts4.8/stream.d.ts:26</p>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#prependlistener","title":"prependListener","text":"<p>\u25b8 prependListener(<code>event</code>, <code>listener</code>): <code>AppiumServerSocket</code></p>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#parameters_58","title":"Parameters","text":"Name Type <code>event</code> <code>string</code> <code>listener</code> (...<code>args</code>: <code>any</code>[]) =&gt; <code>void</code>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#returns_65","title":"Returns","text":"<p><code>AppiumServerSocket</code></p>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#inherited-from_98","title":"Inherited from","text":"<p>Socket.prependListener</p>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#defined-in_99","title":"Defined in","text":"<p>node_modules/@types/node/ts4.8/net.d.ts:377</p> <p>\u25b8 prependListener(<code>event</code>, <code>listener</code>): <code>AppiumServerSocket</code></p>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#parameters_59","title":"Parameters","text":"Name Type <code>event</code> <code>\"close\"</code> <code>listener</code> (<code>hadError</code>: <code>boolean</code>) =&gt; <code>void</code>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#returns_66","title":"Returns","text":"<p><code>AppiumServerSocket</code></p>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#inherited-from_99","title":"Inherited from","text":"<p>Socket.prependListener</p>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#defined-in_100","title":"Defined in","text":"<p>node_modules/@types/node/ts4.8/net.d.ts:378</p> <p>\u25b8 prependListener(<code>event</code>, <code>listener</code>): <code>AppiumServerSocket</code></p>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#parameters_60","title":"Parameters","text":"Name Type <code>event</code> <code>\"connect\"</code> <code>listener</code> () =&gt; <code>void</code>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#returns_67","title":"Returns","text":"<p><code>AppiumServerSocket</code></p>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#inherited-from_100","title":"Inherited from","text":"<p>Socket.prependListener</p>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#defined-in_101","title":"Defined in","text":"<p>node_modules/@types/node/ts4.8/net.d.ts:379</p> <p>\u25b8 prependListener(<code>event</code>, <code>listener</code>): <code>AppiumServerSocket</code></p>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#parameters_61","title":"Parameters","text":"Name Type <code>event</code> <code>\"data\"</code> <code>listener</code> (<code>data</code>: <code>Buffer</code>) =&gt; <code>void</code>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#returns_68","title":"Returns","text":"<p><code>AppiumServerSocket</code></p>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#inherited-from_101","title":"Inherited from","text":"<p>Socket.prependListener</p>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#defined-in_102","title":"Defined in","text":"<p>node_modules/@types/node/ts4.8/net.d.ts:380</p> <p>\u25b8 prependListener(<code>event</code>, <code>listener</code>): <code>AppiumServerSocket</code></p>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#parameters_62","title":"Parameters","text":"Name Type <code>event</code> <code>\"drain\"</code> <code>listener</code> () =&gt; <code>void</code>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#returns_69","title":"Returns","text":"<p><code>AppiumServerSocket</code></p>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#inherited-from_102","title":"Inherited from","text":"<p>Socket.prependListener</p>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#defined-in_103","title":"Defined in","text":"<p>node_modules/@types/node/ts4.8/net.d.ts:381</p> <p>\u25b8 prependListener(<code>event</code>, <code>listener</code>): <code>AppiumServerSocket</code></p>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#parameters_63","title":"Parameters","text":"Name Type <code>event</code> <code>\"end\"</code> <code>listener</code> () =&gt; <code>void</code>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#returns_70","title":"Returns","text":"<p><code>AppiumServerSocket</code></p>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#inherited-from_103","title":"Inherited from","text":"<p>Socket.prependListener</p>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#defined-in_104","title":"Defined in","text":"<p>node_modules/@types/node/ts4.8/net.d.ts:382</p> <p>\u25b8 prependListener(<code>event</code>, <code>listener</code>): <code>AppiumServerSocket</code></p>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#parameters_64","title":"Parameters","text":"Name Type <code>event</code> <code>\"error\"</code> <code>listener</code> (<code>err</code>: <code>Error</code>) =&gt; <code>void</code>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#returns_71","title":"Returns","text":"<p><code>AppiumServerSocket</code></p>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#inherited-from_104","title":"Inherited from","text":"<p>Socket.prependListener</p>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#defined-in_105","title":"Defined in","text":"<p>node_modules/@types/node/ts4.8/net.d.ts:383</p> <p>\u25b8 prependListener(<code>event</code>, <code>listener</code>): <code>AppiumServerSocket</code></p>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#parameters_65","title":"Parameters","text":"Name Type <code>event</code> <code>\"lookup\"</code> <code>listener</code> (<code>err</code>: <code>Error</code>, <code>address</code>: <code>string</code>, <code>family</code>: <code>string</code> | <code>number</code>, <code>host</code>: <code>string</code>) =&gt; <code>void</code>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#returns_72","title":"Returns","text":"<p><code>AppiumServerSocket</code></p>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#inherited-from_105","title":"Inherited from","text":"<p>Socket.prependListener</p>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#defined-in_106","title":"Defined in","text":"<p>node_modules/@types/node/ts4.8/net.d.ts:384</p> <p>\u25b8 prependListener(<code>event</code>, <code>listener</code>): <code>AppiumServerSocket</code></p>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#parameters_66","title":"Parameters","text":"Name Type <code>event</code> <code>\"ready\"</code> <code>listener</code> () =&gt; <code>void</code>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#returns_73","title":"Returns","text":"<p><code>AppiumServerSocket</code></p>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#inherited-from_106","title":"Inherited from","text":"<p>Socket.prependListener</p>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#defined-in_107","title":"Defined in","text":"<p>node_modules/@types/node/ts4.8/net.d.ts:385</p> <p>\u25b8 prependListener(<code>event</code>, <code>listener</code>): <code>AppiumServerSocket</code></p>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#parameters_67","title":"Parameters","text":"Name Type <code>event</code> <code>\"timeout\"</code> <code>listener</code> () =&gt; <code>void</code>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#returns_74","title":"Returns","text":"<p><code>AppiumServerSocket</code></p>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#inherited-from_107","title":"Inherited from","text":"<p>Socket.prependListener</p>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#defined-in_108","title":"Defined in","text":"<p>node_modules/@types/node/ts4.8/net.d.ts:386</p>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#prependoncelistener","title":"prependOnceListener","text":"<p>\u25b8 prependOnceListener(<code>event</code>, <code>listener</code>): <code>AppiumServerSocket</code></p>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#parameters_68","title":"Parameters","text":"Name Type <code>event</code> <code>string</code> <code>listener</code> (...<code>args</code>: <code>any</code>[]) =&gt; <code>void</code>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#returns_75","title":"Returns","text":"<p><code>AppiumServerSocket</code></p>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#inherited-from_108","title":"Inherited from","text":"<p>Socket.prependOnceListener</p>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#defined-in_109","title":"Defined in","text":"<p>node_modules/@types/node/ts4.8/net.d.ts:387</p> <p>\u25b8 prependOnceListener(<code>event</code>, <code>listener</code>): <code>AppiumServerSocket</code></p>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#parameters_69","title":"Parameters","text":"Name Type <code>event</code> <code>\"close\"</code> <code>listener</code> (<code>hadError</code>: <code>boolean</code>) =&gt; <code>void</code>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#returns_76","title":"Returns","text":"<p><code>AppiumServerSocket</code></p>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#inherited-from_109","title":"Inherited from","text":"<p>Socket.prependOnceListener</p>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#defined-in_110","title":"Defined in","text":"<p>node_modules/@types/node/ts4.8/net.d.ts:388</p> <p>\u25b8 prependOnceListener(<code>event</code>, <code>listener</code>): <code>AppiumServerSocket</code></p>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#parameters_70","title":"Parameters","text":"Name Type <code>event</code> <code>\"connect\"</code> <code>listener</code> () =&gt; <code>void</code>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#returns_77","title":"Returns","text":"<p><code>AppiumServerSocket</code></p>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#inherited-from_110","title":"Inherited from","text":"<p>Socket.prependOnceListener</p>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#defined-in_111","title":"Defined in","text":"<p>node_modules/@types/node/ts4.8/net.d.ts:389</p> <p>\u25b8 prependOnceListener(<code>event</code>, <code>listener</code>): <code>AppiumServerSocket</code></p>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#parameters_71","title":"Parameters","text":"Name Type <code>event</code> <code>\"data\"</code> <code>listener</code> (<code>data</code>: <code>Buffer</code>) =&gt; <code>void</code>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#returns_78","title":"Returns","text":"<p><code>AppiumServerSocket</code></p>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#inherited-from_111","title":"Inherited from","text":"<p>Socket.prependOnceListener</p>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#defined-in_112","title":"Defined in","text":"<p>node_modules/@types/node/ts4.8/net.d.ts:390</p> <p>\u25b8 prependOnceListener(<code>event</code>, <code>listener</code>): <code>AppiumServerSocket</code></p>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#parameters_72","title":"Parameters","text":"Name Type <code>event</code> <code>\"drain\"</code> <code>listener</code> () =&gt; <code>void</code>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#returns_79","title":"Returns","text":"<p><code>AppiumServerSocket</code></p>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#inherited-from_112","title":"Inherited from","text":"<p>Socket.prependOnceListener</p>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#defined-in_113","title":"Defined in","text":"<p>node_modules/@types/node/ts4.8/net.d.ts:391</p> <p>\u25b8 prependOnceListener(<code>event</code>, <code>listener</code>): <code>AppiumServerSocket</code></p>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#parameters_73","title":"Parameters","text":"Name Type <code>event</code> <code>\"end\"</code> <code>listener</code> () =&gt; <code>void</code>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#returns_80","title":"Returns","text":"<p><code>AppiumServerSocket</code></p>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#inherited-from_113","title":"Inherited from","text":"<p>Socket.prependOnceListener</p>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#defined-in_114","title":"Defined in","text":"<p>node_modules/@types/node/ts4.8/net.d.ts:392</p> <p>\u25b8 prependOnceListener(<code>event</code>, <code>listener</code>): <code>AppiumServerSocket</code></p>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#parameters_74","title":"Parameters","text":"Name Type <code>event</code> <code>\"error\"</code> <code>listener</code> (<code>err</code>: <code>Error</code>) =&gt; <code>void</code>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#returns_81","title":"Returns","text":"<p><code>AppiumServerSocket</code></p>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#inherited-from_114","title":"Inherited from","text":"<p>Socket.prependOnceListener</p>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#defined-in_115","title":"Defined in","text":"<p>node_modules/@types/node/ts4.8/net.d.ts:393</p> <p>\u25b8 prependOnceListener(<code>event</code>, <code>listener</code>): <code>AppiumServerSocket</code></p>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#parameters_75","title":"Parameters","text":"Name Type <code>event</code> <code>\"lookup\"</code> <code>listener</code> (<code>err</code>: <code>Error</code>, <code>address</code>: <code>string</code>, <code>family</code>: <code>string</code> | <code>number</code>, <code>host</code>: <code>string</code>) =&gt; <code>void</code>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#returns_82","title":"Returns","text":"<p><code>AppiumServerSocket</code></p>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#inherited-from_115","title":"Inherited from","text":"<p>Socket.prependOnceListener</p>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#defined-in_116","title":"Defined in","text":"<p>node_modules/@types/node/ts4.8/net.d.ts:394</p> <p>\u25b8 prependOnceListener(<code>event</code>, <code>listener</code>): <code>AppiumServerSocket</code></p>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#parameters_76","title":"Parameters","text":"Name Type <code>event</code> <code>\"ready\"</code> <code>listener</code> () =&gt; <code>void</code>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#returns_83","title":"Returns","text":"<p><code>AppiumServerSocket</code></p>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#inherited-from_116","title":"Inherited from","text":"<p>Socket.prependOnceListener</p>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#defined-in_117","title":"Defined in","text":"<p>node_modules/@types/node/ts4.8/net.d.ts:395</p> <p>\u25b8 prependOnceListener(<code>event</code>, <code>listener</code>): <code>AppiumServerSocket</code></p>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#parameters_77","title":"Parameters","text":"Name Type <code>event</code> <code>\"timeout\"</code> <code>listener</code> () =&gt; <code>void</code>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#returns_84","title":"Returns","text":"<p><code>AppiumServerSocket</code></p>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#inherited-from_117","title":"Inherited from","text":"<p>Socket.prependOnceListener</p>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#defined-in_118","title":"Defined in","text":"<p>node_modules/@types/node/ts4.8/net.d.ts:396</p>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#push","title":"push","text":"<p>\u25b8 push(<code>chunk</code>, <code>encoding?</code>): <code>boolean</code></p>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#parameters_78","title":"Parameters","text":"Name Type <code>chunk</code> <code>any</code> <code>encoding?</code> <code>BufferEncoding</code>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#returns_85","title":"Returns","text":"<p><code>boolean</code></p>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#inherited-from_118","title":"Inherited from","text":"<p>Socket.push</p>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#defined-in_119","title":"Defined in","text":"<p>node_modules/@types/node/ts4.8/stream.d.ts:422</p>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#rawlisteners","title":"rawListeners","text":"<p>\u25b8 rawListeners(<code>eventName</code>): <code>Function</code>[]</p> <p>Returns a copy of the array of listeners for the event named <code>eventName</code>, including any wrappers (such as those created by <code>.once()</code>).</p> <pre><code>const emitter = new EventEmitter();\nemitter.once('log', () =&gt; console.log('log once'));\n// Returns a new Array with a function `onceWrapper` which has a property\n// `listener` which contains the original listener bound above\nconst listeners = emitter.rawListeners('log');\nconst logFnWrapper = listeners[0];\n// Logs \"log once\" to the console and does not unbind the `once` event\nlogFnWrapper.listener();\n// Logs \"log once\" to the console and removes the listener\nlogFnWrapper();\nemitter.on('log', () =&gt; console.log('log persistently'));\n// Will return a new Array with a single function bound by `.on()` above\nconst newListeners = emitter.rawListeners('log');\n// Logs \"log persistently\" twice\nnewListeners[0]();\nemitter.emit('log');\n</code></pre> <p><code>Since</code></p> <p>v9.4.0</p>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#parameters_79","title":"Parameters","text":"Name Type <code>eventName</code> <code>string</code> | <code>symbol</code>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#returns_86","title":"Returns","text":"<p><code>Function</code>[]</p>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#inherited-from_119","title":"Inherited from","text":"<p>Socket.rawListeners</p>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#defined-in_120","title":"Defined in","text":"<p>node_modules/@types/node/ts4.8/events.d.ts:569</p>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#read","title":"read","text":"<p>\u25b8 read(<code>size?</code>): <code>any</code></p> <p>The <code>readable.read()</code> method reads data out of the internal buffer and returns it. If no data is available to be read, <code>null</code> is returned. By default, the data is returned as a <code>Buffer</code> object unless an encoding has been specified using the <code>readable.setEncoding()</code> method or the stream is operating in object mode.</p> <p>The optional <code>size</code> argument specifies a specific number of bytes to read. If<code>size</code> bytes are not available to be read, <code>null</code> will be returned _unless_the stream has ended, in which case all of the data remaining in the internal buffer will be returned.</p> <p>If the <code>size</code> argument is not specified, all of the data contained in the internal buffer will be returned.</p> <p>The <code>size</code> argument must be less than or equal to 1 GiB.</p> <p>The <code>readable.read()</code> method should only be called on <code>Readable</code> streams operating in paused mode. In flowing mode, <code>readable.read()</code> is called automatically until the internal buffer is fully drained.</p> <pre><code>const readable = getReadableStreamSomehow();\n// 'readable' may be triggered multiple times as data is buffered in\nreadable.on('readable', () =&gt; {\nlet chunk;\nconsole.log('Stream is readable (new data received in buffer)');\n// Use a loop to make sure we read all currently available data\nwhile (null !== (chunk = readable.read())) {\nconsole.log(`Read ${chunk.length} bytes of data...`);\n}\n});\n// 'end' will be triggered once when there is no more data available\nreadable.on('end', () =&gt; {\nconsole.log('Reached end of stream.');\n});\n</code></pre> <p>Each call to <code>readable.read()</code> returns a chunk of data, or <code>null</code>. The chunks are not concatenated. A <code>while</code> loop is necessary to consume all data currently in the buffer. When reading a large file <code>.read()</code> may return <code>null</code>, having consumed all buffered content so far, but there is still more data to come not yet buffered. In this case a new <code>'readable'</code> event will be emitted when there is more data in the buffer. Finally the <code>'end'</code> event will be emitted when there is no more data to come.</p> <p>Therefore to read a file's whole contents from a <code>readable</code>, it is necessary to collect chunks across multiple <code>'readable'</code> events:</p> <pre><code>const chunks = [];\nreadable.on('readable', () =&gt; {\nlet chunk;\nwhile (null !== (chunk = readable.read())) {\nchunks.push(chunk);\n}\n});\nreadable.on('end', () =&gt; {\nconst content = chunks.join('');\n});\n</code></pre> <p>A <code>Readable</code> stream in object mode will always return a single item from a call to <code>readable.read(size)</code>, regardless of the value of the<code>size</code> argument.</p> <p>If the <code>readable.read()</code> method returns a chunk of data, a <code>'data'</code> event will also be emitted.</p> <p>Calling read after the <code>'end'</code> event has been emitted will return <code>null</code>. No runtime error will be raised.</p> <p><code>Since</code></p> <p>v0.9.4</p>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#parameters_80","title":"Parameters","text":"Name Type Description <code>size?</code> <code>number</code> Optional argument to specify how much data to read."},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#returns_87","title":"Returns","text":"<p><code>any</code></p>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#inherited-from_120","title":"Inherited from","text":"<p>Socket.read</p>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#defined-in_121","title":"Defined in","text":"<p>node_modules/@types/node/ts4.8/stream.d.ts:219</p>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#ref","title":"ref","text":"<p>\u25b8 ref(): <code>AppiumServerSocket</code></p> <p>Opposite of <code>unref()</code>, calling <code>ref()</code> on a previously <code>unref</code>ed socket will not let the program exit if it's the only socket left (the default behavior). If the socket is <code>ref</code>ed calling <code>ref</code> again will have no effect.</p> <p><code>Since</code></p> <p>v0.9.1</p>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#returns_88","title":"Returns","text":"<p><code>AppiumServerSocket</code></p> <p>The socket itself.</p>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#inherited-from_121","title":"Inherited from","text":"<p>Socket.ref</p>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#defined-in_122","title":"Defined in","text":"<p>node_modules/@types/node/ts4.8/net.d.ts:227</p>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#removealllisteners","title":"removeAllListeners","text":"<p>\u25b8 removeAllListeners(<code>event?</code>): <code>AppiumServerSocket</code></p> <p>Removes all listeners, or those of the specified <code>eventName</code>.</p> <p>It is bad practice to remove listeners added elsewhere in the code, particularly when the <code>EventEmitter</code> instance was created by some other component or module (e.g. sockets or file streams).</p> <p>Returns a reference to the <code>EventEmitter</code>, so that calls can be chained.</p> <p><code>Since</code></p> <p>v0.1.26</p>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#parameters_81","title":"Parameters","text":"Name Type <code>event?</code> <code>string</code> | <code>symbol</code>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#returns_89","title":"Returns","text":"<p><code>AppiumServerSocket</code></p>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#inherited-from_122","title":"Inherited from","text":"<p>Socket.removeAllListeners</p>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#defined-in_123","title":"Defined in","text":"<p>node_modules/@types/node/ts4.8/events.d.ts:510</p>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#removelistener","title":"removeListener","text":"<p>\u25b8 removeListener(<code>event</code>, <code>listener</code>): <code>AppiumServerSocket</code></p>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#parameters_82","title":"Parameters","text":"Name Type <code>event</code> <code>\"close\"</code> <code>listener</code> () =&gt; <code>void</code>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#returns_90","title":"Returns","text":"<p><code>AppiumServerSocket</code></p>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#inherited-from_123","title":"Inherited from","text":"<p>Socket.removeListener</p>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#defined-in_124","title":"Defined in","text":"<p>node_modules/@types/node/ts4.8/stream.d.ts:495</p> <p>\u25b8 removeListener(<code>event</code>, <code>listener</code>): <code>AppiumServerSocket</code></p>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#parameters_83","title":"Parameters","text":"Name Type <code>event</code> <code>\"data\"</code> <code>listener</code> (<code>chunk</code>: <code>any</code>) =&gt; <code>void</code>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#returns_91","title":"Returns","text":"<p><code>AppiumServerSocket</code></p>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#inherited-from_124","title":"Inherited from","text":"<p>Socket.removeListener</p>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#defined-in_125","title":"Defined in","text":"<p>node_modules/@types/node/ts4.8/stream.d.ts:496</p> <p>\u25b8 removeListener(<code>event</code>, <code>listener</code>): <code>AppiumServerSocket</code></p>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#parameters_84","title":"Parameters","text":"Name Type <code>event</code> <code>\"end\"</code> <code>listener</code> () =&gt; <code>void</code>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#returns_92","title":"Returns","text":"<p><code>AppiumServerSocket</code></p>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#inherited-from_125","title":"Inherited from","text":"<p>Socket.removeListener</p>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#defined-in_126","title":"Defined in","text":"<p>node_modules/@types/node/ts4.8/stream.d.ts:497</p> <p>\u25b8 removeListener(<code>event</code>, <code>listener</code>): <code>AppiumServerSocket</code></p>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#parameters_85","title":"Parameters","text":"Name Type <code>event</code> <code>\"error\"</code> <code>listener</code> (<code>err</code>: <code>Error</code>) =&gt; <code>void</code>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#returns_93","title":"Returns","text":"<p><code>AppiumServerSocket</code></p>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#inherited-from_126","title":"Inherited from","text":"<p>Socket.removeListener</p>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#defined-in_127","title":"Defined in","text":"<p>node_modules/@types/node/ts4.8/stream.d.ts:498</p> <p>\u25b8 removeListener(<code>event</code>, <code>listener</code>): <code>AppiumServerSocket</code></p>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#parameters_86","title":"Parameters","text":"Name Type <code>event</code> <code>\"pause\"</code> <code>listener</code> () =&gt; <code>void</code>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#returns_94","title":"Returns","text":"<p><code>AppiumServerSocket</code></p>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#inherited-from_127","title":"Inherited from","text":"<p>Socket.removeListener</p>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#defined-in_128","title":"Defined in","text":"<p>node_modules/@types/node/ts4.8/stream.d.ts:499</p> <p>\u25b8 removeListener(<code>event</code>, <code>listener</code>): <code>AppiumServerSocket</code></p>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#parameters_87","title":"Parameters","text":"Name Type <code>event</code> <code>\"readable\"</code> <code>listener</code> () =&gt; <code>void</code>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#returns_95","title":"Returns","text":"<p><code>AppiumServerSocket</code></p>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#inherited-from_128","title":"Inherited from","text":"<p>Socket.removeListener</p>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#defined-in_129","title":"Defined in","text":"<p>node_modules/@types/node/ts4.8/stream.d.ts:500</p> <p>\u25b8 removeListener(<code>event</code>, <code>listener</code>): <code>AppiumServerSocket</code></p>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#parameters_88","title":"Parameters","text":"Name Type <code>event</code> <code>\"resume\"</code> <code>listener</code> () =&gt; <code>void</code>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#returns_96","title":"Returns","text":"<p><code>AppiumServerSocket</code></p>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#inherited-from_129","title":"Inherited from","text":"<p>Socket.removeListener</p>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#defined-in_130","title":"Defined in","text":"<p>node_modules/@types/node/ts4.8/stream.d.ts:501</p> <p>\u25b8 removeListener(<code>event</code>, <code>listener</code>): <code>AppiumServerSocket</code></p>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#parameters_89","title":"Parameters","text":"Name Type <code>event</code> <code>string</code> | <code>symbol</code> <code>listener</code> (...<code>args</code>: <code>any</code>[]) =&gt; <code>void</code>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#returns_97","title":"Returns","text":"<p><code>AppiumServerSocket</code></p>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#inherited-from_130","title":"Inherited from","text":"<p>Socket.removeListener</p>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#defined-in_131","title":"Defined in","text":"<p>node_modules/@types/node/ts4.8/stream.d.ts:502</p>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#resetanddestroy","title":"resetAndDestroy","text":"<p>\u25b8 resetAndDestroy(): <code>AppiumServerSocket</code></p> <p>Close the TCP connection by sending an RST packet and destroy the stream. If this TCP socket is in connecting status, it will send an RST packet and destroy this TCP socket once it is connected. Otherwise, it will call <code>socket.destroy</code> with an <code>ERR_SOCKET_CLOSED</code> Error. If this is not a TCP socket (for example, a pipe), calling this method will immediately throw an <code>ERR_INVALID_HANDLE_TYPE</code> Error.</p> <p><code>Since</code></p> <p>v18.3.0</p>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#returns_98","title":"Returns","text":"<p><code>AppiumServerSocket</code></p> <p>The socket itself.</p>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#inherited-from_131","title":"Inherited from","text":"<p>Socket.resetAndDestroy</p>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#defined-in_132","title":"Defined in","text":"<p>node_modules/@types/node/ts4.8/net.d.ts:144</p>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#resume","title":"resume","text":"<p>\u25b8 resume(): <code>AppiumServerSocket</code></p> <p>Resumes reading after a call to <code>socket.pause()</code>.</p>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#returns_99","title":"Returns","text":"<p><code>AppiumServerSocket</code></p> <p>The socket itself.</p>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#inherited-from_132","title":"Inherited from","text":"<p>Socket.resume</p>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#defined-in_133","title":"Defined in","text":"<p>node_modules/@types/node/ts4.8/net.d.ts:149</p>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#setdefaultencoding","title":"setDefaultEncoding","text":"<p>\u25b8 setDefaultEncoding(<code>encoding</code>): <code>AppiumServerSocket</code></p>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#parameters_90","title":"Parameters","text":"Name Type <code>encoding</code> <code>BufferEncoding</code>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#returns_100","title":"Returns","text":"<p><code>AppiumServerSocket</code></p>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#inherited-from_133","title":"Inherited from","text":"<p>Socket.setDefaultEncoding</p>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#defined-in_134","title":"Defined in","text":"<p>node_modules/@types/node/ts4.8/stream.d.ts:909</p>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#setencoding","title":"setEncoding","text":"<p>\u25b8 setEncoding(<code>encoding?</code>): <code>AppiumServerSocket</code></p> <p>Set the encoding for the socket as a <code>Readable Stream</code>. See <code>readable.setEncoding()</code> for more information.</p> <p><code>Since</code></p> <p>v0.1.90</p>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#parameters_91","title":"Parameters","text":"Name Type <code>encoding?</code> <code>BufferEncoding</code>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#returns_101","title":"Returns","text":"<p><code>AppiumServerSocket</code></p> <p>The socket itself.</p>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#inherited-from_134","title":"Inherited from","text":"<p>Socket.setEncoding</p>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#defined-in_135","title":"Defined in","text":"<p>node_modules/@types/node/ts4.8/net.d.ts:127</p>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#setkeepalive","title":"setKeepAlive","text":"<p>\u25b8 setKeepAlive(<code>enable?</code>, <code>initialDelay?</code>): <code>AppiumServerSocket</code></p> <p>Enable/disable keep-alive functionality, and optionally set the initial delay before the first keepalive probe is sent on an idle socket.</p> <p>Set <code>initialDelay</code> (in milliseconds) to set the delay between the last data packet received and the first keepalive probe. Setting <code>0</code> for<code>initialDelay</code> will leave the value unchanged from the default (or previous) setting.</p> <p>Enabling the keep-alive functionality will set the following socket options:</p> <ul> <li><code>SO_KEEPALIVE=1</code></li> <li><code>TCP_KEEPIDLE=initialDelay</code></li> <li><code>TCP_KEEPCNT=10</code></li> <li><code>TCP_KEEPINTVL=1</code></li> </ul> <p><code>Since</code></p> <p>v0.1.92</p>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#parameters_92","title":"Parameters","text":"Name Type <code>enable?</code> <code>boolean</code> <code>initialDelay?</code> <code>number</code>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#returns_102","title":"Returns","text":"<p><code>AppiumServerSocket</code></p> <p>The socket itself.</p>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#inherited-from_135","title":"Inherited from","text":"<p>Socket.setKeepAlive</p>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#defined-in_136","title":"Defined in","text":"<p>node_modules/@types/node/ts4.8/net.d.ts:207</p>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#setmaxlisteners","title":"setMaxListeners","text":"<p>\u25b8 setMaxListeners(<code>n</code>): <code>AppiumServerSocket</code></p> <p>By default <code>EventEmitter</code>s will print a warning if more than <code>10</code> listeners are added for a particular event. This is a useful default that helps finding memory leaks. The <code>emitter.setMaxListeners()</code> method allows the limit to be modified for this specific <code>EventEmitter</code> instance. The value can be set to<code>Infinity</code> (or <code>0</code>) to indicate an unlimited number of listeners.</p> <p>Returns a reference to the <code>EventEmitter</code>, so that calls can be chained.</p> <p><code>Since</code></p> <p>v0.3.5</p>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#parameters_93","title":"Parameters","text":"Name Type <code>n</code> <code>number</code>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#returns_103","title":"Returns","text":"<p><code>AppiumServerSocket</code></p>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#inherited-from_136","title":"Inherited from","text":"<p>Socket.setMaxListeners</p>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#defined-in_137","title":"Defined in","text":"<p>node_modules/@types/node/ts4.8/events.d.ts:520</p>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#setnodelay","title":"setNoDelay","text":"<p>\u25b8 setNoDelay(<code>noDelay?</code>): <code>AppiumServerSocket</code></p> <p>Enable/disable the use of Nagle's algorithm.</p> <p>When a TCP connection is created, it will have Nagle's algorithm enabled.</p> <p>Nagle's algorithm delays data before it is sent via the network. It attempts to optimize throughput at the expense of latency.</p> <p>Passing <code>true</code> for <code>noDelay</code> or not passing an argument will disable Nagle's algorithm for the socket. Passing <code>false</code> for <code>noDelay</code> will enable Nagle's algorithm.</p> <p><code>Since</code></p> <p>v0.1.90</p>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#parameters_94","title":"Parameters","text":"Name Type <code>noDelay?</code> <code>boolean</code>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#returns_104","title":"Returns","text":"<p><code>AppiumServerSocket</code></p> <p>The socket itself.</p>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#inherited-from_137","title":"Inherited from","text":"<p>Socket.setNoDelay</p>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#defined-in_138","title":"Defined in","text":"<p>node_modules/@types/node/ts4.8/net.d.ts:187</p>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#settimeout","title":"setTimeout","text":"<p>\u25b8 setTimeout(<code>timeout</code>, <code>callback?</code>): <code>AppiumServerSocket</code></p> <p>Sets the socket to timeout after <code>timeout</code> milliseconds of inactivity on the socket. By default <code>net.Socket</code> do not have a timeout.</p> <p>When an idle timeout is triggered the socket will receive a <code>'timeout'</code> event but the connection will not be severed. The user must manually call <code>socket.end()</code> or <code>socket.destroy()</code> to end the connection.</p> <pre><code>socket.setTimeout(3000);\nsocket.on('timeout', () =&gt; {\nconsole.log('socket timeout');\nsocket.end();\n});\n</code></pre> <p>If <code>timeout</code> is 0, then the existing idle timeout is disabled.</p> <p>The optional <code>callback</code> parameter will be added as a one-time listener for the <code>'timeout'</code> event.</p> <p><code>Since</code></p> <p>v0.1.90</p>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#parameters_95","title":"Parameters","text":"Name Type <code>timeout</code> <code>number</code> <code>callback?</code> () =&gt; <code>void</code>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#returns_105","title":"Returns","text":"<p><code>AppiumServerSocket</code></p> <p>The socket itself.</p>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#inherited-from_138","title":"Inherited from","text":"<p>Socket.setTimeout</p>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#defined-in_139","title":"Defined in","text":"<p>node_modules/@types/node/ts4.8/net.d.ts:171</p>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#uncork","title":"uncork","text":"<p>\u25b8 uncork(): <code>void</code></p>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#returns_106","title":"Returns","text":"<p><code>void</code></p>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#inherited-from_139","title":"Inherited from","text":"<p>Socket.uncork</p>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#defined-in_140","title":"Defined in","text":"<p>node_modules/@types/node/ts4.8/stream.d.ts:914</p>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#unpipe","title":"unpipe","text":"<p>\u25b8 unpipe(<code>destination?</code>): <code>AppiumServerSocket</code></p> <p>The <code>readable.unpipe()</code> method detaches a <code>Writable</code> stream previously attached using the pipe method.</p> <p>If the <code>destination</code> is not specified, then all pipes are detached.</p> <p>If the <code>destination</code> is specified, but no pipe is set up for it, then the method does nothing.</p> <pre><code>const fs = require('fs');\nconst readable = getReadableStreamSomehow();\nconst writable = fs.createWriteStream('file.txt');\n// All the data from readable goes into 'file.txt',\n// but only for the first second.\nreadable.pipe(writable);\nsetTimeout(() =&gt; {\nconsole.log('Stop writing to file.txt.');\nreadable.unpipe(writable);\nconsole.log('Manually close the file stream.');\nwritable.end();\n}, 1000);\n</code></pre> <p><code>Since</code></p> <p>v0.9.4</p>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#parameters_96","title":"Parameters","text":"Name Type Description <code>destination?</code> <code>WritableStream</code> Optional specific stream to unpipe"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#returns_107","title":"Returns","text":"<p><code>AppiumServerSocket</code></p>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#inherited-from_140","title":"Inherited from","text":"<p>Socket.unpipe</p>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#defined-in_141","title":"Defined in","text":"<p>node_modules/@types/node/ts4.8/stream.d.ts:329</p>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#unref","title":"unref","text":"<p>\u25b8 unref(): <code>AppiumServerSocket</code></p> <p>Calling <code>unref()</code> on a socket will allow the program to exit if this is the only active socket in the event system. If the socket is already <code>unref</code>ed calling<code>unref()</code> again will have no effect.</p> <p><code>Since</code></p> <p>v0.9.1</p>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#returns_108","title":"Returns","text":"<p><code>AppiumServerSocket</code></p> <p>The socket itself.</p>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#inherited-from_141","title":"Inherited from","text":"<p>Socket.unref</p>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#defined-in_142","title":"Defined in","text":"<p>node_modules/@types/node/ts4.8/net.d.ts:220</p>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#unshift","title":"unshift","text":"<p>\u25b8 unshift(<code>chunk</code>, <code>encoding?</code>): <code>void</code></p> <p>Passing <code>chunk</code> as <code>null</code> signals the end of the stream (EOF) and behaves the same as <code>readable.push(null)</code>, after which no more data can be written. The EOF signal is put at the end of the buffer and any buffered data will still be flushed.</p> <p>The <code>readable.unshift()</code> method pushes a chunk of data back into the internal buffer. This is useful in certain situations where a stream is being consumed by code that needs to \"un-consume\" some amount of data that it has optimistically pulled out of the source, so that the data can be passed on to some other party.</p> <p>The <code>stream.unshift(chunk)</code> method cannot be called after the <code>'end'</code> event has been emitted or a runtime error will be thrown.</p> <p>Developers using <code>stream.unshift()</code> often should consider switching to use of a <code>Transform</code> stream instead. See the <code>API for stream implementers</code> section for more information.</p> <pre><code>// Pull off a header delimited by \\n\\n.\n// Use unshift() if we get too much.\n// Call the callback with (error, header, stream).\nconst { StringDecoder } = require('string_decoder');\nfunction parseHeader(stream, callback) {\nstream.on('error', callback);\nstream.on('readable', onReadable);\nconst decoder = new StringDecoder('utf8');\nlet header = '';\nfunction onReadable() {\nlet chunk;\nwhile (null !== (chunk = stream.read())) {\nconst str = decoder.write(chunk);\nif (str.includes('\\n\\n')) {\n// Found the header boundary.\nconst split = str.split(/\\n\\n/);\nheader += split.shift();\nconst remaining = split.join('\\n\\n');\nconst buf = Buffer.from(remaining, 'utf8');\nstream.removeListener('error', callback);\n// Remove the 'readable' listener before unshifting.\nstream.removeListener('readable', onReadable);\nif (buf.length)\nstream.unshift(buf);\n// Now the body of the message can be read from the stream.\ncallback(null, header, stream);\nreturn;\n}\n// Still reading the header.\nheader += str;\n}\n}\n}\n</code></pre> <p>Unlike push, <code>stream.unshift(chunk)</code> will not end the reading process by resetting the internal reading state of the stream. This can cause unexpected results if <code>readable.unshift()</code> is called during a read (i.e. from within a _read implementation on a custom stream). Following the call to <code>readable.unshift()</code> with an immediate push will reset the reading state appropriately, however it is best to simply avoid calling <code>readable.unshift()</code> while in the process of performing a read.</p> <p><code>Since</code></p> <p>v0.9.11</p>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#parameters_97","title":"Parameters","text":"Name Type Description <code>chunk</code> <code>any</code> Chunk of data to unshift onto the read queue. For streams not operating in object mode, <code>chunk</code> must be a string, <code>Buffer</code>, <code>Uint8Array</code> or <code>null</code>. For object mode streams, <code>chunk</code> may be any JavaScript value. <code>encoding?</code> <code>BufferEncoding</code> Encoding of string chunks. Must be a valid <code>Buffer</code> encoding, such as <code>'utf8'</code> or <code>'ascii'</code>."},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#returns_109","title":"Returns","text":"<p><code>void</code></p>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#inherited-from_142","title":"Inherited from","text":"<p>Socket.unshift</p>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#defined-in_143","title":"Defined in","text":"<p>node_modules/@types/node/ts4.8/stream.d.ts:395</p>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#wrap","title":"wrap","text":"<p>\u25b8 wrap(<code>stream</code>): <code>AppiumServerSocket</code></p> <p>Prior to Node.js 0.10, streams did not implement the entire <code>stream</code> module API as it is currently defined. (See <code>Compatibility</code> for more information.)</p> <p>When using an older Node.js library that emits <code>'data'</code> events and has a pause method that is advisory only, the<code>readable.wrap()</code> method can be used to create a <code>Readable</code> stream that uses the old stream as its data source.</p> <p>It will rarely be necessary to use <code>readable.wrap()</code> but the method has been provided as a convenience for interacting with older Node.js applications and libraries.</p> <pre><code>const { OldReader } = require('./old-api-module.js');\nconst { Readable } = require('stream');\nconst oreader = new OldReader();\nconst myReader = new Readable().wrap(oreader);\nmyReader.on('readable', () =&gt; {\nmyReader.read(); // etc.\n});\n</code></pre> <p><code>Since</code></p> <p>v0.9.4</p>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#parameters_98","title":"Parameters","text":"Name Type Description <code>stream</code> <code>ReadableStream</code> An \"old style\" readable stream"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#returns_110","title":"Returns","text":"<p><code>AppiumServerSocket</code></p>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#inherited-from_143","title":"Inherited from","text":"<p>Socket.wrap</p>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#defined-in_144","title":"Defined in","text":"<p>node_modules/@types/node/ts4.8/stream.d.ts:421</p>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#write","title":"write","text":"<p>\u25b8 write(<code>buffer</code>, <code>cb?</code>): <code>boolean</code></p> <p>Sends data on the socket. The second parameter specifies the encoding in the case of a string. It defaults to UTF8 encoding.</p> <p>Returns <code>true</code> if the entire data was flushed successfully to the kernel buffer. Returns <code>false</code> if all or part of the data was queued in user memory.<code>'drain'</code> will be emitted when the buffer is again free.</p> <p>The optional <code>callback</code> parameter will be executed when the data is finally written out, which may not be immediately.</p> <p>See <code>Writable</code> stream <code>write()</code> method for more information.</p> <p><code>Since</code></p> <p>v0.1.90</p>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#parameters_99","title":"Parameters","text":"Name Type <code>buffer</code> <code>string</code> | <code>Uint8Array</code> <code>cb?</code> (<code>err?</code>: <code>Error</code>) =&gt; <code>void</code>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#returns_111","title":"Returns","text":"<p><code>boolean</code></p>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#inherited-from_144","title":"Inherited from","text":"<p>Socket.write</p>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#defined-in_145","title":"Defined in","text":"<p>node_modules/@types/node/ts4.8/net.d.ts:97</p> <p>\u25b8 write(<code>str</code>, <code>encoding?</code>, <code>cb?</code>): <code>boolean</code></p>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#parameters_100","title":"Parameters","text":"Name Type <code>str</code> <code>string</code> | <code>Uint8Array</code> <code>encoding?</code> <code>BufferEncoding</code> <code>cb?</code> (<code>err?</code>: <code>Error</code>) =&gt; <code>void</code>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#returns_112","title":"Returns","text":"<p><code>boolean</code></p>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#inherited-from_145","title":"Inherited from","text":"<p>Socket.write</p>"},{"location":"reference/interfaces/appium_types.AppiumServerSocket/#defined-in_146","title":"Defined in","text":"<p>node_modules/@types/node/ts4.8/net.d.ts:98</p>"},{"location":"reference/interfaces/appium_types.Constraint/","title":"Interface: Constraint","text":"<p>@appium/types.Constraint</p> <p>Extensions can define new methods for the Appium server to map to command names, of the same format as used in Appium's <code>routes.js</code>.</p> <p><code>Example</code></p> <pre><code>{\n*   '/session/:sessionId/new_method': {\n*     GET: {command: 'getNewThing'},\n*     POST: {command: 'setNewThing', payloadParams: {required: ['someParam']}}\n*   }\n* }\n</code></pre>"},{"location":"reference/interfaces/appium_types.Constraint/#table-of-contents","title":"Table of contents","text":""},{"location":"reference/interfaces/appium_types.Constraint/#properties","title":"Properties","text":"<ul> <li>deprecated</li> <li>inclusion</li> <li>inclusionCaseInsensitive</li> <li>isArray</li> <li>isBoolean</li> <li>isNumber</li> <li>isObject</li> <li>isString</li> <li>presence</li> </ul>"},{"location":"reference/interfaces/appium_types.Constraint/#properties_1","title":"Properties","text":""},{"location":"reference/interfaces/appium_types.Constraint/#deprecated","title":"deprecated","text":"<p>\u2022 <code>Optional</code> <code>Readonly</code> deprecated: <code>boolean</code></p>"},{"location":"reference/interfaces/appium_types.Constraint/#defined-in","title":"Defined in","text":"<p>packages/types/lib/driver.ts:463</p>"},{"location":"reference/interfaces/appium_types.Constraint/#inclusion","title":"inclusion","text":"<p>\u2022 <code>Optional</code> <code>Readonly</code> inclusion: readonly [<code>any</code>, <code>any</code>]</p>"},{"location":"reference/interfaces/appium_types.Constraint/#defined-in_1","title":"Defined in","text":"<p>packages/types/lib/driver.ts:464</p>"},{"location":"reference/interfaces/appium_types.Constraint/#inclusioncaseinsensitive","title":"inclusionCaseInsensitive","text":"<p>\u2022 <code>Optional</code> <code>Readonly</code> inclusionCaseInsensitive: readonly [<code>any</code>, <code>any</code>]</p>"},{"location":"reference/interfaces/appium_types.Constraint/#defined-in_2","title":"Defined in","text":"<p>packages/types/lib/driver.ts:465</p>"},{"location":"reference/interfaces/appium_types.Constraint/#isarray","title":"isArray","text":"<p>\u2022 <code>Optional</code> <code>Readonly</code> isArray: <code>boolean</code></p>"},{"location":"reference/interfaces/appium_types.Constraint/#defined-in_3","title":"Defined in","text":"<p>packages/types/lib/driver.ts:462</p>"},{"location":"reference/interfaces/appium_types.Constraint/#isboolean","title":"isBoolean","text":"<p>\u2022 <code>Optional</code> <code>Readonly</code> isBoolean: <code>boolean</code></p>"},{"location":"reference/interfaces/appium_types.Constraint/#defined-in_4","title":"Defined in","text":"<p>packages/types/lib/driver.ts:460</p>"},{"location":"reference/interfaces/appium_types.Constraint/#isnumber","title":"isNumber","text":"<p>\u2022 <code>Optional</code> <code>Readonly</code> isNumber: <code>boolean</code></p>"},{"location":"reference/interfaces/appium_types.Constraint/#defined-in_5","title":"Defined in","text":"<p>packages/types/lib/driver.ts:459</p>"},{"location":"reference/interfaces/appium_types.Constraint/#isobject","title":"isObject","text":"<p>\u2022 <code>Optional</code> <code>Readonly</code> isObject: <code>boolean</code></p>"},{"location":"reference/interfaces/appium_types.Constraint/#defined-in_6","title":"Defined in","text":"<p>packages/types/lib/driver.ts:461</p>"},{"location":"reference/interfaces/appium_types.Constraint/#isstring","title":"isString","text":"<p>\u2022 <code>Optional</code> <code>Readonly</code> isString: <code>boolean</code></p>"},{"location":"reference/interfaces/appium_types.Constraint/#defined-in_7","title":"Defined in","text":"<p>packages/types/lib/driver.ts:458</p>"},{"location":"reference/interfaces/appium_types.Constraint/#presence","title":"presence","text":"<p>\u2022 <code>Optional</code> <code>Readonly</code> presence: <code>boolean</code> | <code>Readonly</code>&lt;{ <code>allowEmpty</code>: <code>boolean</code>  }&gt;</p>"},{"location":"reference/interfaces/appium_types.Constraint/#defined-in_8","title":"Defined in","text":"<p>packages/types/lib/driver.ts:457</p>"},{"location":"reference/interfaces/appium_types.Cookie/","title":"Interface: Cookie","text":"<p>@appium/types.Cookie</p>"},{"location":"reference/interfaces/appium_types.Cookie/#table-of-contents","title":"Table of contents","text":""},{"location":"reference/interfaces/appium_types.Cookie/#properties","title":"Properties","text":"<ul> <li>domain</li> <li>expiry</li> <li>httpOnly</li> <li>name</li> <li>path</li> <li>sameSite</li> <li>secure</li> <li>value</li> </ul>"},{"location":"reference/interfaces/appium_types.Cookie/#properties_1","title":"Properties","text":""},{"location":"reference/interfaces/appium_types.Cookie/#domain","title":"domain","text":"<p>\u2022 <code>Optional</code> domain: <code>string</code></p>"},{"location":"reference/interfaces/appium_types.Cookie/#defined-in","title":"Defined in","text":"<p>packages/types/lib/driver.ts:508</p>"},{"location":"reference/interfaces/appium_types.Cookie/#expiry","title":"expiry","text":"<p>\u2022 <code>Optional</code> expiry: <code>number</code></p>"},{"location":"reference/interfaces/appium_types.Cookie/#defined-in_1","title":"Defined in","text":"<p>packages/types/lib/driver.ts:511</p>"},{"location":"reference/interfaces/appium_types.Cookie/#httponly","title":"httpOnly","text":"<p>\u2022 <code>Optional</code> httpOnly: <code>boolean</code></p>"},{"location":"reference/interfaces/appium_types.Cookie/#defined-in_2","title":"Defined in","text":"<p>packages/types/lib/driver.ts:510</p>"},{"location":"reference/interfaces/appium_types.Cookie/#name","title":"name","text":"<p>\u2022 name: <code>string</code></p>"},{"location":"reference/interfaces/appium_types.Cookie/#defined-in_3","title":"Defined in","text":"<p>packages/types/lib/driver.ts:505</p>"},{"location":"reference/interfaces/appium_types.Cookie/#path","title":"path","text":"<p>\u2022 <code>Optional</code> path: <code>string</code></p>"},{"location":"reference/interfaces/appium_types.Cookie/#defined-in_4","title":"Defined in","text":"<p>packages/types/lib/driver.ts:507</p>"},{"location":"reference/interfaces/appium_types.Cookie/#samesite","title":"sameSite","text":"<p>\u2022 <code>Optional</code> sameSite: <code>\"Lax\"</code> | <code>\"Strict\"</code></p>"},{"location":"reference/interfaces/appium_types.Cookie/#defined-in_5","title":"Defined in","text":"<p>packages/types/lib/driver.ts:512</p>"},{"location":"reference/interfaces/appium_types.Cookie/#secure","title":"secure","text":"<p>\u2022 <code>Optional</code> secure: <code>boolean</code></p>"},{"location":"reference/interfaces/appium_types.Cookie/#defined-in_6","title":"Defined in","text":"<p>packages/types/lib/driver.ts:509</p>"},{"location":"reference/interfaces/appium_types.Cookie/#value","title":"value","text":"<p>\u2022 value: <code>string</code></p>"},{"location":"reference/interfaces/appium_types.Cookie/#defined-in_7","title":"Defined in","text":"<p>packages/types/lib/driver.ts:506</p>"},{"location":"reference/interfaces/appium_types.Core/","title":"Interface: Core&lt;C&gt;","text":"<p>@appium/types.Core</p> <p>Methods and properties which both <code>AppiumDriver</code> and <code>BaseDriver</code> inherit.</p> <p>This should not be used directly by external code.</p>"},{"location":"reference/interfaces/appium_types.Core/#type-parameters","title":"Type parameters","text":"Name Type <code>C</code> extends <code>Constraints</code> = <code>BaseDriverCapConstraints</code>"},{"location":"reference/interfaces/appium_types.Core/#hierarchy","title":"Hierarchy","text":"<ul> <li><code>Core</code></li> </ul> <p>\u21b3 <code>Driver</code></p>"},{"location":"reference/interfaces/appium_types.Core/#table-of-contents","title":"Table of contents","text":""},{"location":"reference/interfaces/appium_types.Core/#properties","title":"Properties","text":"<ul> <li>allowInsecure</li> <li>basePath</li> <li>denyInsecure</li> <li>driverData</li> <li>eventEmitter</li> <li>eventHistory</li> <li>helpers</li> <li>implicitWaitMs</li> <li>initialOpts</li> <li>isCommandsQueueEnabled</li> <li>locatorStrategies</li> <li>log</li> <li>newCommandTimeoutMs</li> <li>opts</li> <li>protocol</li> <li>relaxedSecurityEnabled</li> <li>sessionId</li> <li>settings</li> <li>shouldValidateCaps</li> <li>webLocatorStrategies</li> </ul>"},{"location":"reference/interfaces/appium_types.Core/#methods","title":"Methods","text":"<ul> <li>addManagedDriver</li> <li>assertFeatureEnabled</li> <li>canProxy</li> <li>clearNewCommandTimeout</li> <li>driverForSession</li> <li>getManagedDrivers</li> <li>getProxyAvoidList</li> <li>getStatus</li> <li>isFeatureEnabled</li> <li>isMjsonwpProtocol</li> <li>isW3CProtocol</li> <li>logEvent</li> <li>onUnexpectedShutdown</li> <li>proxyActive</li> <li>proxyRouteIsAvoided</li> <li>sessionExists</li> <li>validateLocatorStrategy</li> </ul>"},{"location":"reference/interfaces/appium_types.Core/#properties_1","title":"Properties","text":""},{"location":"reference/interfaces/appium_types.Core/#allowinsecure","title":"allowInsecure","text":"<p>\u2022 allowInsecure: <code>string</code>[]</p>"},{"location":"reference/interfaces/appium_types.Core/#defined-in","title":"Defined in","text":"<p>packages/types/lib/driver.ts:598</p>"},{"location":"reference/interfaces/appium_types.Core/#basepath","title":"basePath","text":"<p>\u2022 basePath: <code>string</code></p>"},{"location":"reference/interfaces/appium_types.Core/#defined-in_1","title":"Defined in","text":"<p>packages/types/lib/driver.ts:596</p>"},{"location":"reference/interfaces/appium_types.Core/#denyinsecure","title":"denyInsecure","text":"<p>\u2022 denyInsecure: <code>string</code>[]</p>"},{"location":"reference/interfaces/appium_types.Core/#defined-in_2","title":"Defined in","text":"<p>packages/types/lib/driver.ts:599</p>"},{"location":"reference/interfaces/appium_types.Core/#driverdata","title":"driverData","text":"<p>\u2022 <code>Optional</code> driverData: <code>DriverData</code></p>"},{"location":"reference/interfaces/appium_types.Core/#defined-in_3","title":"Defined in","text":"<p>packages/types/lib/driver.ts:607</p>"},{"location":"reference/interfaces/appium_types.Core/#eventemitter","title":"eventEmitter","text":"<p>\u2022 eventEmitter: <code>EventEmitter</code></p>"},{"location":"reference/interfaces/appium_types.Core/#defined-in_4","title":"Defined in","text":"<p>packages/types/lib/driver.ts:604</p>"},{"location":"reference/interfaces/appium_types.Core/#eventhistory","title":"eventHistory","text":"<p>\u2022 eventHistory: <code>EventHistory</code></p>"},{"location":"reference/interfaces/appium_types.Core/#defined-in_5","title":"Defined in","text":"<p>packages/types/lib/driver.ts:609</p>"},{"location":"reference/interfaces/appium_types.Core/#helpers","title":"helpers","text":"<p>\u2022 helpers: <code>DriverHelpers</code>&lt;<code>C</code>&gt;</p>"},{"location":"reference/interfaces/appium_types.Core/#defined-in_6","title":"Defined in","text":"<p>packages/types/lib/driver.ts:595</p>"},{"location":"reference/interfaces/appium_types.Core/#implicitwaitms","title":"implicitWaitMs","text":"<p>\u2022 implicitWaitMs: <code>number</code></p>"},{"location":"reference/interfaces/appium_types.Core/#defined-in_7","title":"Defined in","text":"<p>packages/types/lib/driver.ts:601</p>"},{"location":"reference/interfaces/appium_types.Core/#initialopts","title":"initialOpts","text":"<p>\u2022 initialOpts: <code>ServerArgs</code></p>"},{"location":"reference/interfaces/appium_types.Core/#defined-in_8","title":"Defined in","text":"<p>packages/types/lib/driver.ts:593</p>"},{"location":"reference/interfaces/appium_types.Core/#iscommandsqueueenabled","title":"isCommandsQueueEnabled","text":"<p>\u2022 isCommandsQueueEnabled: <code>boolean</code></p>"},{"location":"reference/interfaces/appium_types.Core/#defined-in_9","title":"Defined in","text":"<p>packages/types/lib/driver.ts:608</p>"},{"location":"reference/interfaces/appium_types.Core/#locatorstrategies","title":"locatorStrategies","text":"<p>\u2022 locatorStrategies: <code>string</code>[]</p>"},{"location":"reference/interfaces/appium_types.Core/#defined-in_10","title":"Defined in","text":"<p>packages/types/lib/driver.ts:602</p>"},{"location":"reference/interfaces/appium_types.Core/#log","title":"log","text":"<p>\u2022 log: <code>AppiumLogger</code></p>"},{"location":"reference/interfaces/appium_types.Core/#defined-in_11","title":"Defined in","text":"<p>packages/types/lib/driver.ts:606</p>"},{"location":"reference/interfaces/appium_types.Core/#newcommandtimeoutms","title":"newCommandTimeoutMs","text":"<p>\u2022 newCommandTimeoutMs: <code>number</code></p>"},{"location":"reference/interfaces/appium_types.Core/#defined-in_12","title":"Defined in","text":"<p>packages/types/lib/driver.ts:600</p>"},{"location":"reference/interfaces/appium_types.Core/#opts","title":"opts","text":"<p>\u2022 opts: <code>DriverOpts</code>&lt;<code>C</code>&gt;</p>"},{"location":"reference/interfaces/appium_types.Core/#defined-in_13","title":"Defined in","text":"<p>packages/types/lib/driver.ts:592</p>"},{"location":"reference/interfaces/appium_types.Core/#protocol","title":"protocol","text":"<p>\u2022 <code>Optional</code> protocol: <code>string</code></p>"},{"location":"reference/interfaces/appium_types.Core/#defined-in_14","title":"Defined in","text":"<p>packages/types/lib/driver.ts:594</p>"},{"location":"reference/interfaces/appium_types.Core/#relaxedsecurityenabled","title":"relaxedSecurityEnabled","text":"<p>\u2022 relaxedSecurityEnabled: <code>boolean</code></p>"},{"location":"reference/interfaces/appium_types.Core/#defined-in_15","title":"Defined in","text":"<p>packages/types/lib/driver.ts:597</p>"},{"location":"reference/interfaces/appium_types.Core/#sessionid","title":"sessionId","text":"<p>\u2022 sessionId: <code>null</code> | <code>string</code></p>"},{"location":"reference/interfaces/appium_types.Core/#defined-in_16","title":"Defined in","text":"<p>packages/types/lib/driver.ts:591</p>"},{"location":"reference/interfaces/appium_types.Core/#settings","title":"settings","text":"<p>\u2022 settings: <code>DeviceSettings</code>&lt;<code>any</code>&gt;</p>"},{"location":"reference/interfaces/appium_types.Core/#defined-in_17","title":"Defined in","text":"<p>packages/types/lib/driver.ts:605</p>"},{"location":"reference/interfaces/appium_types.Core/#shouldvalidatecaps","title":"shouldValidateCaps","text":"<p>\u2022 shouldValidateCaps: <code>boolean</code></p>"},{"location":"reference/interfaces/appium_types.Core/#defined-in_18","title":"Defined in","text":"<p>packages/types/lib/driver.ts:590</p>"},{"location":"reference/interfaces/appium_types.Core/#weblocatorstrategies","title":"webLocatorStrategies","text":"<p>\u2022 webLocatorStrategies: <code>string</code>[]</p>"},{"location":"reference/interfaces/appium_types.Core/#defined-in_19","title":"Defined in","text":"<p>packages/types/lib/driver.ts:603</p>"},{"location":"reference/interfaces/appium_types.Core/#methods_1","title":"Methods","text":""},{"location":"reference/interfaces/appium_types.Core/#addmanageddriver","title":"addManagedDriver","text":"<p>\u25b8 addManagedDriver(<code>driver</code>): <code>void</code></p>"},{"location":"reference/interfaces/appium_types.Core/#parameters","title":"Parameters","text":"Name Type <code>driver</code> <code>Driver</code>&lt;{ <code>app</code>: { <code>isString</code>: <code>true</code> = true } ; <code>autoLaunch</code>: { <code>isBoolean</code>: <code>true</code> = true } ; <code>autoWebview</code>: { <code>isBoolean</code>: <code>true</code> = true } ; <code>automationName</code>: { <code>isString</code>: <code>true</code> = true } ; <code>deviceName</code>: { <code>isString</code>: <code>true</code> = true } ; <code>eventTimings</code>: { <code>isBoolean</code>: <code>true</code> = true } ; <code>fullReset</code>: { <code>isBoolean</code>: <code>true</code> = true } ; <code>language</code>: { <code>isString</code>: <code>true</code> = true } ; <code>locale</code>: { <code>isString</code>: <code>true</code> = true } ; <code>newCommandTimeout</code>: { <code>isNumber</code>: <code>true</code> = true } ; <code>noReset</code>: { <code>isBoolean</code>: <code>true</code> = true } ; <code>orientation</code>: { <code>inclusion</code>: readonly [<code>\"LANDSCAPE\"</code>, <code>\"PORTRAIT\"</code>]  } ; <code>platformName</code>: { <code>isString</code>: <code>true</code> = true; <code>presence</code>: <code>true</code> = true } ; <code>platformVersion</code>: { <code>isString</code>: <code>true</code> = true } ; <code>printPageSourceOnFindFailure</code>: { <code>isBoolean</code>: <code>true</code> = true } ; <code>udid</code>: { <code>isString</code>: <code>true</code> = true } ; <code>webSocketUrl</code>: { <code>isString</code>: <code>true</code> = true }  }, <code>StringRecord</code>, <code>any</code>&gt;"},{"location":"reference/interfaces/appium_types.Core/#returns","title":"Returns","text":"<p><code>void</code></p>"},{"location":"reference/interfaces/appium_types.Core/#defined-in_20","title":"Defined in","text":"<p>packages/types/lib/driver.ts:653</p>"},{"location":"reference/interfaces/appium_types.Core/#assertfeatureenabled","title":"assertFeatureEnabled","text":"<p>\u25b8 assertFeatureEnabled(<code>name</code>): <code>void</code></p>"},{"location":"reference/interfaces/appium_types.Core/#parameters_1","title":"Parameters","text":"Name Type <code>name</code> <code>string</code>"},{"location":"reference/interfaces/appium_types.Core/#returns_1","title":"Returns","text":"<p><code>void</code></p>"},{"location":"reference/interfaces/appium_types.Core/#defined-in_21","title":"Defined in","text":"<p>packages/types/lib/driver.ts:647</p>"},{"location":"reference/interfaces/appium_types.Core/#canproxy","title":"canProxy","text":"<p>\u25b8 canProxy(<code>sessionId?</code>): <code>boolean</code></p>"},{"location":"reference/interfaces/appium_types.Core/#parameters_2","title":"Parameters","text":"Name Type <code>sessionId?</code> <code>string</code>"},{"location":"reference/interfaces/appium_types.Core/#returns_2","title":"Returns","text":"<p><code>boolean</code></p>"},{"location":"reference/interfaces/appium_types.Core/#defined-in_22","title":"Defined in","text":"<p>packages/types/lib/driver.ts:651</p>"},{"location":"reference/interfaces/appium_types.Core/#clearnewcommandtimeout","title":"clearNewCommandTimeout","text":"<p>\u25b8 clearNewCommandTimeout(): <code>Promise</code>&lt;<code>void</code>&gt;</p>"},{"location":"reference/interfaces/appium_types.Core/#returns_3","title":"Returns","text":"<p><code>Promise</code>&lt;<code>void</code>&gt;</p>"},{"location":"reference/interfaces/appium_types.Core/#defined-in_23","title":"Defined in","text":"<p>packages/types/lib/driver.ts:655</p>"},{"location":"reference/interfaces/appium_types.Core/#driverforsession","title":"driverForSession","text":"<p>\u25b8 driverForSession(<code>sessionId</code>): <code>null</code> | <code>Core</code>&lt;<code>C</code>&gt;</p>"},{"location":"reference/interfaces/appium_types.Core/#parameters_3","title":"Parameters","text":"Name Type <code>sessionId</code> <code>string</code>"},{"location":"reference/interfaces/appium_types.Core/#returns_4","title":"Returns","text":"<p><code>null</code> | <code>Core</code>&lt;<code>C</code>&gt;</p>"},{"location":"reference/interfaces/appium_types.Core/#defined-in_24","title":"Defined in","text":"<p>packages/types/lib/driver.ts:657</p>"},{"location":"reference/interfaces/appium_types.Core/#getmanageddrivers","title":"getManagedDrivers","text":"<p>\u25b8 getManagedDrivers(): <code>Driver</code>&lt;{ <code>app</code>: { <code>isString</code>: <code>true</code> = true } ; <code>autoLaunch</code>: { <code>isBoolean</code>: <code>true</code> = true } ; <code>autoWebview</code>: { <code>isBoolean</code>: <code>true</code> = true } ; <code>automationName</code>: { <code>isString</code>: <code>true</code> = true } ; <code>deviceName</code>: { <code>isString</code>: <code>true</code> = true } ; <code>eventTimings</code>: { <code>isBoolean</code>: <code>true</code> = true } ; <code>fullReset</code>: { <code>isBoolean</code>: <code>true</code> = true } ; <code>language</code>: { <code>isString</code>: <code>true</code> = true } ; <code>locale</code>: { <code>isString</code>: <code>true</code> = true } ; <code>newCommandTimeout</code>: { <code>isNumber</code>: <code>true</code> = true } ; <code>noReset</code>: { <code>isBoolean</code>: <code>true</code> = true } ; <code>orientation</code>: { <code>inclusion</code>: readonly [<code>\"LANDSCAPE\"</code>, <code>\"PORTRAIT\"</code>]  } ; <code>platformName</code>: { <code>isString</code>: <code>true</code> = true; <code>presence</code>: <code>true</code> = true } ; <code>platformVersion</code>: { <code>isString</code>: <code>true</code> = true } ; <code>printPageSourceOnFindFailure</code>: { <code>isBoolean</code>: <code>true</code> = true } ; <code>udid</code>: { <code>isString</code>: <code>true</code> = true } ; <code>webSocketUrl</code>: { <code>isString</code>: <code>true</code> = true }  }, <code>StringRecord</code>, <code>any</code>&gt;[]</p>"},{"location":"reference/interfaces/appium_types.Core/#returns_5","title":"Returns","text":"<p><code>Driver</code>&lt;{ <code>app</code>: { <code>isString</code>: <code>true</code> = true } ; <code>autoLaunch</code>: { <code>isBoolean</code>: <code>true</code> = true } ; <code>autoWebview</code>: { <code>isBoolean</code>: <code>true</code> = true } ; <code>automationName</code>: { <code>isString</code>: <code>true</code> = true } ; <code>deviceName</code>: { <code>isString</code>: <code>true</code> = true } ; <code>eventTimings</code>: { <code>isBoolean</code>: <code>true</code> = true } ; <code>fullReset</code>: { <code>isBoolean</code>: <code>true</code> = true } ; <code>language</code>: { <code>isString</code>: <code>true</code> = true } ; <code>locale</code>: { <code>isString</code>: <code>true</code> = true } ; <code>newCommandTimeout</code>: { <code>isNumber</code>: <code>true</code> = true } ; <code>noReset</code>: { <code>isBoolean</code>: <code>true</code> = true } ; <code>orientation</code>: { <code>inclusion</code>: readonly [<code>\"LANDSCAPE\"</code>, <code>\"PORTRAIT\"</code>]  } ; <code>platformName</code>: { <code>isString</code>: <code>true</code> = true; <code>presence</code>: <code>true</code> = true } ; <code>platformVersion</code>: { <code>isString</code>: <code>true</code> = true } ; <code>printPageSourceOnFindFailure</code>: { <code>isBoolean</code>: <code>true</code> = true } ; <code>udid</code>: { <code>isString</code>: <code>true</code> = true } ; <code>webSocketUrl</code>: { <code>isString</code>: <code>true</code> = true }  }, <code>StringRecord</code>, <code>any</code>&gt;[]</p>"},{"location":"reference/interfaces/appium_types.Core/#defined-in_25","title":"Defined in","text":"<p>packages/types/lib/driver.ts:654</p>"},{"location":"reference/interfaces/appium_types.Core/#getproxyavoidlist","title":"getProxyAvoidList","text":"<p>\u25b8 getProxyAvoidList(<code>sessionId?</code>): <code>RouteMatcher</code>[]</p>"},{"location":"reference/interfaces/appium_types.Core/#parameters_4","title":"Parameters","text":"Name Type <code>sessionId?</code> <code>string</code>"},{"location":"reference/interfaces/appium_types.Core/#returns_6","title":"Returns","text":"<p><code>RouteMatcher</code>[]</p>"},{"location":"reference/interfaces/appium_types.Core/#defined-in_26","title":"Defined in","text":"<p>packages/types/lib/driver.ts:650</p>"},{"location":"reference/interfaces/appium_types.Core/#getstatus","title":"getStatus","text":"<p>\u25b8 getStatus(): <code>Promise</code>&lt;<code>any</code>&gt;</p> <p><code>Summary</code></p> <p>Retrieve the server's current status.</p> <p><code>Description</code></p> <p>Returns information about whether a remote end is in a state in which it can create new sessions and can additionally include arbitrary meta information that is specific to the implementation.</p> <p>The readiness state is represented by the ready property of the body, which is false if an attempt to create a session at the current time would fail. However, the value true does not guarantee that a New Session command will succeed.</p> <p>Implementations may optionally include additional meta information as part of the body, but the top-level properties ready and message are reserved and must not be overwritten.</p> <p><code>Example</code></p> <pre><code>// webdriver.io example\nawait driver.status();\n</code></pre> <pre><code>driver.get_status()\n</code></pre> <pre><code>driver.getStatus();\n</code></pre> <pre><code># ruby_lib example\nremote_status\n# ruby_lib_core example\n@driver.remote_status\n</code></pre>"},{"location":"reference/interfaces/appium_types.Core/#returns_7","title":"Returns","text":"<p><code>Promise</code>&lt;<code>any</code>&gt;</p>"},{"location":"reference/interfaces/appium_types.Core/#defined-in_27","title":"Defined in","text":"<p>packages/types/lib/driver.ts:642</p>"},{"location":"reference/interfaces/appium_types.Core/#isfeatureenabled","title":"isFeatureEnabled","text":"<p>\u25b8 isFeatureEnabled(<code>name</code>): <code>boolean</code></p>"},{"location":"reference/interfaces/appium_types.Core/#parameters_5","title":"Parameters","text":"Name Type <code>name</code> <code>string</code>"},{"location":"reference/interfaces/appium_types.Core/#returns_8","title":"Returns","text":"<p><code>boolean</code></p>"},{"location":"reference/interfaces/appium_types.Core/#defined-in_28","title":"Defined in","text":"<p>packages/types/lib/driver.ts:646</p>"},{"location":"reference/interfaces/appium_types.Core/#ismjsonwpprotocol","title":"isMjsonwpProtocol","text":"<p>\u25b8 isMjsonwpProtocol(): <code>boolean</code></p>"},{"location":"reference/interfaces/appium_types.Core/#returns_9","title":"Returns","text":"<p><code>boolean</code></p>"},{"location":"reference/interfaces/appium_types.Core/#defined-in_29","title":"Defined in","text":"<p>packages/types/lib/driver.ts:645</p>"},{"location":"reference/interfaces/appium_types.Core/#isw3cprotocol","title":"isW3CProtocol","text":"<p>\u25b8 isW3CProtocol(): <code>boolean</code></p>"},{"location":"reference/interfaces/appium_types.Core/#returns_10","title":"Returns","text":"<p><code>boolean</code></p>"},{"location":"reference/interfaces/appium_types.Core/#defined-in_30","title":"Defined in","text":"<p>packages/types/lib/driver.ts:644</p>"},{"location":"reference/interfaces/appium_types.Core/#logevent","title":"logEvent","text":"<p>\u25b8 logEvent(<code>eventName</code>): <code>void</code></p>"},{"location":"reference/interfaces/appium_types.Core/#parameters_6","title":"Parameters","text":"Name Type <code>eventName</code> <code>string</code>"},{"location":"reference/interfaces/appium_types.Core/#returns_11","title":"Returns","text":"<p><code>void</code></p>"},{"location":"reference/interfaces/appium_types.Core/#defined-in_31","title":"Defined in","text":"<p>packages/types/lib/driver.ts:656</p>"},{"location":"reference/interfaces/appium_types.Core/#onunexpectedshutdown","title":"onUnexpectedShutdown","text":"<p>\u25b8 onUnexpectedShutdown(<code>handler</code>): <code>void</code></p>"},{"location":"reference/interfaces/appium_types.Core/#parameters_7","title":"Parameters","text":"Name Type <code>handler</code> () =&gt; <code>any</code>"},{"location":"reference/interfaces/appium_types.Core/#returns_12","title":"Returns","text":"<p><code>void</code></p>"},{"location":"reference/interfaces/appium_types.Core/#defined-in_32","title":"Defined in","text":"<p>packages/types/lib/driver.ts:610</p>"},{"location":"reference/interfaces/appium_types.Core/#proxyactive","title":"proxyActive","text":"<p>\u25b8 proxyActive(<code>sessionId?</code>): <code>boolean</code></p>"},{"location":"reference/interfaces/appium_types.Core/#parameters_8","title":"Parameters","text":"Name Type <code>sessionId?</code> <code>string</code>"},{"location":"reference/interfaces/appium_types.Core/#returns_13","title":"Returns","text":"<p><code>boolean</code></p>"},{"location":"reference/interfaces/appium_types.Core/#defined-in_33","title":"Defined in","text":"<p>packages/types/lib/driver.ts:649</p>"},{"location":"reference/interfaces/appium_types.Core/#proxyrouteisavoided","title":"proxyRouteIsAvoided","text":"<p>\u25b8 proxyRouteIsAvoided(<code>sessionId</code>, <code>method</code>, <code>url</code>): <code>boolean</code></p>"},{"location":"reference/interfaces/appium_types.Core/#parameters_9","title":"Parameters","text":"Name Type <code>sessionId</code> <code>string</code> <code>method</code> <code>string</code> <code>url</code> <code>string</code>"},{"location":"reference/interfaces/appium_types.Core/#returns_14","title":"Returns","text":"<p><code>boolean</code></p>"},{"location":"reference/interfaces/appium_types.Core/#defined-in_34","title":"Defined in","text":"<p>packages/types/lib/driver.ts:652</p>"},{"location":"reference/interfaces/appium_types.Core/#sessionexists","title":"sessionExists","text":"<p>\u25b8 sessionExists(<code>sessionId</code>): <code>boolean</code></p>"},{"location":"reference/interfaces/appium_types.Core/#parameters_10","title":"Parameters","text":"Name Type <code>sessionId</code> <code>string</code>"},{"location":"reference/interfaces/appium_types.Core/#returns_15","title":"Returns","text":"<p><code>boolean</code></p>"},{"location":"reference/interfaces/appium_types.Core/#defined-in_35","title":"Defined in","text":"<p>packages/types/lib/driver.ts:643</p>"},{"location":"reference/interfaces/appium_types.Core/#validatelocatorstrategy","title":"validateLocatorStrategy","text":"<p>\u25b8 validateLocatorStrategy(<code>strategy</code>, <code>webContext?</code>): <code>void</code></p>"},{"location":"reference/interfaces/appium_types.Core/#parameters_11","title":"Parameters","text":"Name Type <code>strategy</code> <code>string</code> <code>webContext?</code> <code>boolean</code>"},{"location":"reference/interfaces/appium_types.Core/#returns_16","title":"Returns","text":"<p><code>void</code></p>"},{"location":"reference/interfaces/appium_types.Core/#defined-in_36","title":"Defined in","text":"<p>packages/types/lib/driver.ts:648</p>"},{"location":"reference/interfaces/appium_types.Credential/","title":"Interface: Credential","text":"<p>@appium/types.Credential</p>"},{"location":"reference/interfaces/appium_types.Credential/#table-of-contents","title":"Table of contents","text":""},{"location":"reference/interfaces/appium_types.Credential/#properties","title":"Properties","text":"<ul> <li>credentialId</li> <li>isResidentCredential</li> <li>largeBlob</li> <li>privateKey</li> <li>rpId</li> <li>signCount</li> <li>userHandle</li> </ul>"},{"location":"reference/interfaces/appium_types.Credential/#properties_1","title":"Properties","text":""},{"location":"reference/interfaces/appium_types.Credential/#credentialid","title":"credentialId","text":"<p>\u2022 credentialId: <code>string</code></p>"},{"location":"reference/interfaces/appium_types.Credential/#defined-in","title":"Defined in","text":"<p>packages/types/lib/driver.ts:564</p>"},{"location":"reference/interfaces/appium_types.Credential/#isresidentcredential","title":"isResidentCredential","text":"<p>\u2022 isResidentCredential: <code>boolean</code></p>"},{"location":"reference/interfaces/appium_types.Credential/#defined-in_1","title":"Defined in","text":"<p>packages/types/lib/driver.ts:565</p>"},{"location":"reference/interfaces/appium_types.Credential/#largeblob","title":"largeBlob","text":"<p>\u2022 <code>Optional</code> largeBlob: <code>string</code></p>"},{"location":"reference/interfaces/appium_types.Credential/#defined-in_2","title":"Defined in","text":"<p>packages/types/lib/driver.ts:570</p>"},{"location":"reference/interfaces/appium_types.Credential/#privatekey","title":"privateKey","text":"<p>\u2022 privateKey: <code>string</code></p>"},{"location":"reference/interfaces/appium_types.Credential/#defined-in_3","title":"Defined in","text":"<p>packages/types/lib/driver.ts:567</p>"},{"location":"reference/interfaces/appium_types.Credential/#rpid","title":"rpId","text":"<p>\u2022 rpId: <code>string</code></p>"},{"location":"reference/interfaces/appium_types.Credential/#defined-in_4","title":"Defined in","text":"<p>packages/types/lib/driver.ts:566</p>"},{"location":"reference/interfaces/appium_types.Credential/#signcount","title":"signCount","text":"<p>\u2022 signCount: <code>number</code></p>"},{"location":"reference/interfaces/appium_types.Credential/#defined-in_5","title":"Defined in","text":"<p>packages/types/lib/driver.ts:569</p>"},{"location":"reference/interfaces/appium_types.Credential/#userhandle","title":"userHandle","text":"<p>\u2022 <code>Optional</code> userHandle: <code>string</code></p>"},{"location":"reference/interfaces/appium_types.Credential/#defined-in_6","title":"Defined in","text":"<p>packages/types/lib/driver.ts:568</p>"},{"location":"reference/interfaces/appium_types.DefaultCapabilitiesConfig/","title":"Interface: DefaultCapabilitiesConfig","text":"<p>@appium/types.DefaultCapabilitiesConfig</p> <p>Set the default desired capabilities, which will be set on each session unless overridden by received capabilities. If a string, a path to a JSON file containing the capabilities, or raw JSON.</p>"},{"location":"reference/interfaces/appium_types.DefaultCapabilitiesConfig/#indexable","title":"Indexable","text":"<p>\u25aa [k: <code>string</code>]: <code>unknown</code></p>"},{"location":"reference/interfaces/appium_types.DeviceSettings/","title":"Interface: DeviceSettings&lt;T&gt;","text":"<p>@appium/types.DeviceSettings</p>"},{"location":"reference/interfaces/appium_types.DeviceSettings/#type-parameters","title":"Type parameters","text":"Name Type <code>T</code> <code>any</code>"},{"location":"reference/interfaces/appium_types.DeviceSettings/#table-of-contents","title":"Table of contents","text":""},{"location":"reference/interfaces/appium_types.DeviceSettings/#methods","title":"Methods","text":"<ul> <li>getSettings</li> <li>update</li> </ul>"},{"location":"reference/interfaces/appium_types.DeviceSettings/#methods_1","title":"Methods","text":""},{"location":"reference/interfaces/appium_types.DeviceSettings/#getsettings","title":"getSettings","text":"<p>\u25b8 getSettings(): <code>Record</code>&lt;<code>string</code>, <code>T</code>&gt;</p>"},{"location":"reference/interfaces/appium_types.DeviceSettings/#returns","title":"Returns","text":"<p><code>Record</code>&lt;<code>string</code>, <code>T</code>&gt;</p>"},{"location":"reference/interfaces/appium_types.DeviceSettings/#defined-in","title":"Defined in","text":"<p>packages/types/lib/driver.ts:485</p>"},{"location":"reference/interfaces/appium_types.DeviceSettings/#update","title":"update","text":"<p>\u25b8 update(<code>newSettings</code>): <code>Promise</code>&lt;<code>void</code>&gt;</p>"},{"location":"reference/interfaces/appium_types.DeviceSettings/#parameters","title":"Parameters","text":"Name Type <code>newSettings</code> <code>Record</code>&lt;<code>string</code>, <code>T</code>&gt;"},{"location":"reference/interfaces/appium_types.DeviceSettings/#returns_1","title":"Returns","text":"<p><code>Promise</code>&lt;<code>void</code>&gt;</p>"},{"location":"reference/interfaces/appium_types.DeviceSettings/#defined-in_1","title":"Defined in","text":"<p>packages/types/lib/driver.ts:484</p>"},{"location":"reference/interfaces/appium_types.Driver/","title":"Interface: Driver&lt;C, CArgs, Ctx&gt;","text":"<p>@appium/types.Driver</p> <p><code>BaseDriver</code> implements this.  It contains default behavior; external drivers are expected to implement <code>ExternalDriver</code> instead.</p> <p><code>C</code> should be the constraints of the driver. <code>CArgs</code> would be the shape of <code>cliArgs</code>. <code>Ctx</code> would be the type of the element context (e.g., string, dictionary of some sort, etc.)</p>"},{"location":"reference/interfaces/appium_types.Driver/#type-parameters","title":"Type parameters","text":"Name Type <code>C</code> extends <code>Constraints</code> = <code>BaseDriverCapConstraints</code> <code>CArgs</code> extends <code>StringRecord</code> = <code>StringRecord</code> <code>Ctx</code> <code>any</code>"},{"location":"reference/interfaces/appium_types.Driver/#hierarchy","title":"Hierarchy","text":"<ul> <li> <p><code>ISessionCommands</code></p> </li> <li> <p><code>ILogCommands</code>&lt;<code>C</code>&gt;</p> </li> <li> <p><code>IFindCommands</code>&lt;<code>Ctx</code>&gt;</p> </li> <li> <p><code>ISettingsCommands</code></p> </li> <li> <p><code>ITimeoutCommands</code></p> </li> <li> <p><code>IEventCommands</code></p> </li> <li> <p><code>IExecuteCommands</code></p> </li> <li> <p><code>SessionHandler</code>&lt;[sessionId: string, caps: any], <code>void</code>, <code>C</code>&gt;</p> </li> <li> <p><code>Core</code></p> </li> </ul> <p>\u21b3 <code>Driver</code></p> <p>\u21b3\u21b3 <code>ExternalDriver</code></p>"},{"location":"reference/interfaces/appium_types.Driver/#table-of-contents","title":"Table of contents","text":""},{"location":"reference/interfaces/appium_types.Driver/#properties","title":"Properties","text":"<ul> <li>allowInsecure</li> <li>basePath</li> <li>caps</li> <li>cliArgs</li> <li>denyInsecure</li> <li>desiredCapConstraints</li> <li>driverData</li> <li>eventEmitter</li> <li>eventHistory</li> <li>helpers</li> <li>implicitWaitMs</li> <li>initialOpts</li> <li>isCommandsQueueEnabled</li> <li>locatorStrategies</li> <li>log</li> <li>newCommandTimeoutMs</li> <li>opts</li> <li>originalCaps</li> <li>protocol</li> <li>relaxedSecurityEnabled</li> <li>sessionId</li> <li>settings</li> <li>shouldValidateCaps</li> <li>supportedLogTypes</li> <li>updateSettings</li> <li>webLocatorStrategies</li> </ul>"},{"location":"reference/interfaces/appium_types.Driver/#methods","title":"Methods","text":"<ul> <li>addManagedDriver</li> <li>assertFeatureEnabled</li> <li>assignServer</li> <li>canProxy</li> <li>clearNewCommandTimeout</li> <li>createSession</li> <li>deleteSession</li> <li>driverForSession</li> <li>executeCommand</li> <li>executeMethod</li> <li>findElOrEls</li> <li>findElOrElsWithProcessing</li> <li>findElement</li> <li>findElementFromElement</li> <li>findElementFromShadowRoot</li> <li>findElements</li> <li>findElementsFromElement</li> <li>findElementsFromShadowRoot</li> <li>getLog</li> <li>getLogEvents</li> <li>getLogTypes</li> <li>getManagedDrivers</li> <li>getPageSource</li> <li>getProxyAvoidList</li> <li>getSession</li> <li>getSessions</li> <li>getSettings</li> <li>getStatus</li> <li>getTimeouts</li> <li>implicitWait</li> <li>implicitWaitForCondition</li> <li>implicitWaitMJSONWP</li> <li>implicitWaitW3C</li> <li>isFeatureEnabled</li> <li>isMjsonwpProtocol</li> <li>isW3CProtocol</li> <li>logCustomEvent</li> <li>logEvent</li> <li>logExtraCaps</li> <li>newCommandTimeout</li> <li>onUnexpectedShutdown</li> <li>pageLoadTimeoutMJSONWP</li> <li>pageLoadTimeoutW3C</li> <li>parseTimeoutArgument</li> <li>proxyActive</li> <li>proxyRouteIsAvoided</li> <li>reset</li> <li>scriptTimeoutMJSONWP</li> <li>scriptTimeoutW3C</li> <li>sessionExists</li> <li>setImplicitWait</li> <li>setNewCommandTimeout</li> <li>startNewCommandTimeout</li> <li>startUnexpectedShutdown</li> <li>timeouts</li> <li>validateDesiredCaps</li> <li>validateLocatorStrategy</li> </ul>"},{"location":"reference/interfaces/appium_types.Driver/#properties_1","title":"Properties","text":""},{"location":"reference/interfaces/appium_types.Driver/#allowinsecure","title":"allowInsecure","text":"<p>\u2022 allowInsecure: <code>string</code>[]</p>"},{"location":"reference/interfaces/appium_types.Driver/#inherited-from","title":"Inherited from","text":"<p>Core.allowInsecure</p>"},{"location":"reference/interfaces/appium_types.Driver/#defined-in","title":"Defined in","text":"<p>packages/types/lib/driver.ts:598</p>"},{"location":"reference/interfaces/appium_types.Driver/#basepath","title":"basePath","text":"<p>\u2022 basePath: <code>string</code></p>"},{"location":"reference/interfaces/appium_types.Driver/#inherited-from_1","title":"Inherited from","text":"<p>Core.basePath</p>"},{"location":"reference/interfaces/appium_types.Driver/#defined-in_1","title":"Defined in","text":"<p>packages/types/lib/driver.ts:596</p>"},{"location":"reference/interfaces/appium_types.Driver/#caps","title":"caps","text":"<p>\u2022 <code>Optional</code> caps: <code>Partial</code>&lt;<code>ConstraintsToCaps</code>&lt;<code>C</code>&gt; &amp; <code>void</code>&gt;</p> <p>The processed capabilities used to start the session represented by the current driver instance</p>"},{"location":"reference/interfaces/appium_types.Driver/#defined-in_2","title":"Defined in","text":"<p>packages/types/lib/driver.ts:722</p>"},{"location":"reference/interfaces/appium_types.Driver/#cliargs","title":"cliArgs","text":"<p>\u2022 cliArgs: <code>CArgs</code></p> <p>The set of command line arguments set for this driver</p>"},{"location":"reference/interfaces/appium_types.Driver/#defined-in_3","title":"Defined in","text":"<p>packages/types/lib/driver.ts:684</p>"},{"location":"reference/interfaces/appium_types.Driver/#denyinsecure","title":"denyInsecure","text":"<p>\u2022 denyInsecure: <code>string</code>[]</p>"},{"location":"reference/interfaces/appium_types.Driver/#inherited-from_2","title":"Inherited from","text":"<p>Core.denyInsecure</p>"},{"location":"reference/interfaces/appium_types.Driver/#defined-in_4","title":"Defined in","text":"<p>packages/types/lib/driver.ts:599</p>"},{"location":"reference/interfaces/appium_types.Driver/#desiredcapconstraints","title":"desiredCapConstraints","text":"<p>\u2022 desiredCapConstraints: <code>C</code></p> <p>The constraints object used to validate capabilities</p>"},{"location":"reference/interfaces/appium_types.Driver/#defined-in_5","title":"Defined in","text":"<p>packages/types/lib/driver.ts:732</p>"},{"location":"reference/interfaces/appium_types.Driver/#driverdata","title":"driverData","text":"<p>\u2022 <code>Optional</code> driverData: <code>DriverData</code></p>"},{"location":"reference/interfaces/appium_types.Driver/#inherited-from_3","title":"Inherited from","text":"<p>Core.driverData</p>"},{"location":"reference/interfaces/appium_types.Driver/#defined-in_6","title":"Defined in","text":"<p>packages/types/lib/driver.ts:607</p>"},{"location":"reference/interfaces/appium_types.Driver/#eventemitter","title":"eventEmitter","text":"<p>\u2022 eventEmitter: <code>EventEmitter</code></p>"},{"location":"reference/interfaces/appium_types.Driver/#inherited-from_4","title":"Inherited from","text":"<p>Core.eventEmitter</p>"},{"location":"reference/interfaces/appium_types.Driver/#defined-in_7","title":"Defined in","text":"<p>packages/types/lib/driver.ts:604</p>"},{"location":"reference/interfaces/appium_types.Driver/#eventhistory","title":"eventHistory","text":"<p>\u2022 eventHistory: <code>EventHistory</code></p>"},{"location":"reference/interfaces/appium_types.Driver/#inherited-from_5","title":"Inherited from","text":"<p>Core.eventHistory</p>"},{"location":"reference/interfaces/appium_types.Driver/#defined-in_8","title":"Defined in","text":"<p>packages/types/lib/driver.ts:609</p>"},{"location":"reference/interfaces/appium_types.Driver/#helpers","title":"helpers","text":"<p>\u2022 helpers: <code>DriverHelpers</code>&lt;{ <code>app</code>: { <code>isString</code>: <code>true</code> = true } ; <code>autoLaunch</code>: { <code>isBoolean</code>: <code>true</code> = true } ; <code>autoWebview</code>: { <code>isBoolean</code>: <code>true</code> = true } ; <code>automationName</code>: { <code>isString</code>: <code>true</code> = true } ; <code>deviceName</code>: { <code>isString</code>: <code>true</code> = true } ; <code>eventTimings</code>: { <code>isBoolean</code>: <code>true</code> = true } ; <code>fullReset</code>: { <code>isBoolean</code>: <code>true</code> = true } ; <code>language</code>: { <code>isString</code>: <code>true</code> = true } ; <code>locale</code>: { <code>isString</code>: <code>true</code> = true } ; <code>newCommandTimeout</code>: { <code>isNumber</code>: <code>true</code> = true } ; <code>noReset</code>: { <code>isBoolean</code>: <code>true</code> = true } ; <code>orientation</code>: { <code>inclusion</code>: readonly [<code>\"LANDSCAPE\"</code>, <code>\"PORTRAIT\"</code>]  } ; <code>platformName</code>: { <code>isString</code>: <code>true</code> = true; <code>presence</code>: <code>true</code> = true } ; <code>platformVersion</code>: { <code>isString</code>: <code>true</code> = true } ; <code>printPageSourceOnFindFailure</code>: { <code>isBoolean</code>: <code>true</code> = true } ; <code>udid</code>: { <code>isString</code>: <code>true</code> = true } ; <code>webSocketUrl</code>: { <code>isString</code>: <code>true</code> = true }  }&gt;</p>"},{"location":"reference/interfaces/appium_types.Driver/#inherited-from_6","title":"Inherited from","text":"<p>Core.helpers</p>"},{"location":"reference/interfaces/appium_types.Driver/#defined-in_9","title":"Defined in","text":"<p>packages/types/lib/driver.ts:595</p>"},{"location":"reference/interfaces/appium_types.Driver/#implicitwaitms","title":"implicitWaitMs","text":"<p>\u2022 implicitWaitMs: <code>number</code></p>"},{"location":"reference/interfaces/appium_types.Driver/#inherited-from_7","title":"Inherited from","text":"<p>Core.implicitWaitMs</p>"},{"location":"reference/interfaces/appium_types.Driver/#defined-in_10","title":"Defined in","text":"<p>packages/types/lib/driver.ts:601</p>"},{"location":"reference/interfaces/appium_types.Driver/#initialopts","title":"initialOpts","text":"<p>\u2022 initialOpts: <code>ServerArgs</code></p>"},{"location":"reference/interfaces/appium_types.Driver/#inherited-from_8","title":"Inherited from","text":"<p>Core.initialOpts</p>"},{"location":"reference/interfaces/appium_types.Driver/#defined-in_11","title":"Defined in","text":"<p>packages/types/lib/driver.ts:593</p>"},{"location":"reference/interfaces/appium_types.Driver/#iscommandsqueueenabled","title":"isCommandsQueueEnabled","text":"<p>\u2022 isCommandsQueueEnabled: <code>boolean</code></p>"},{"location":"reference/interfaces/appium_types.Driver/#inherited-from_9","title":"Inherited from","text":"<p>Core.isCommandsQueueEnabled</p>"},{"location":"reference/interfaces/appium_types.Driver/#defined-in_12","title":"Defined in","text":"<p>packages/types/lib/driver.ts:608</p>"},{"location":"reference/interfaces/appium_types.Driver/#locatorstrategies","title":"locatorStrategies","text":"<p>\u2022 locatorStrategies: <code>string</code>[]</p>"},{"location":"reference/interfaces/appium_types.Driver/#inherited-from_10","title":"Inherited from","text":"<p>Core.locatorStrategies</p>"},{"location":"reference/interfaces/appium_types.Driver/#defined-in_13","title":"Defined in","text":"<p>packages/types/lib/driver.ts:602</p>"},{"location":"reference/interfaces/appium_types.Driver/#log","title":"log","text":"<p>\u2022 log: <code>AppiumLogger</code></p>"},{"location":"reference/interfaces/appium_types.Driver/#inherited-from_11","title":"Inherited from","text":"<p>Core.log</p>"},{"location":"reference/interfaces/appium_types.Driver/#defined-in_14","title":"Defined in","text":"<p>packages/types/lib/driver.ts:606</p>"},{"location":"reference/interfaces/appium_types.Driver/#newcommandtimeoutms","title":"newCommandTimeoutMs","text":"<p>\u2022 newCommandTimeoutMs: <code>number</code></p>"},{"location":"reference/interfaces/appium_types.Driver/#inherited-from_12","title":"Inherited from","text":"<p>Core.newCommandTimeoutMs</p>"},{"location":"reference/interfaces/appium_types.Driver/#defined-in_15","title":"Defined in","text":"<p>packages/types/lib/driver.ts:600</p>"},{"location":"reference/interfaces/appium_types.Driver/#opts","title":"opts","text":"<p>\u2022 opts: <code>DriverOpts</code>&lt;{ <code>app</code>: { <code>isString</code>: <code>true</code> = true } ; <code>autoLaunch</code>: { <code>isBoolean</code>: <code>true</code> = true } ; <code>autoWebview</code>: { <code>isBoolean</code>: <code>true</code> = true } ; <code>automationName</code>: { <code>isString</code>: <code>true</code> = true } ; <code>deviceName</code>: { <code>isString</code>: <code>true</code> = true } ; <code>eventTimings</code>: { <code>isBoolean</code>: <code>true</code> = true } ; <code>fullReset</code>: { <code>isBoolean</code>: <code>true</code> = true } ; <code>language</code>: { <code>isString</code>: <code>true</code> = true } ; <code>locale</code>: { <code>isString</code>: <code>true</code> = true } ; <code>newCommandTimeout</code>: { <code>isNumber</code>: <code>true</code> = true } ; <code>noReset</code>: { <code>isBoolean</code>: <code>true</code> = true } ; <code>orientation</code>: { <code>inclusion</code>: readonly [<code>\"LANDSCAPE\"</code>, <code>\"PORTRAIT\"</code>]  } ; <code>platformName</code>: { <code>isString</code>: <code>true</code> = true; <code>presence</code>: <code>true</code> = true } ; <code>platformVersion</code>: { <code>isString</code>: <code>true</code> = true } ; <code>printPageSourceOnFindFailure</code>: { <code>isBoolean</code>: <code>true</code> = true } ; <code>udid</code>: { <code>isString</code>: <code>true</code> = true } ; <code>webSocketUrl</code>: { <code>isString</code>: <code>true</code> = true }  }&gt;</p>"},{"location":"reference/interfaces/appium_types.Driver/#inherited-from_13","title":"Inherited from","text":"<p>Core.opts</p>"},{"location":"reference/interfaces/appium_types.Driver/#defined-in_16","title":"Defined in","text":"<p>packages/types/lib/driver.ts:592</p>"},{"location":"reference/interfaces/appium_types.Driver/#originalcaps","title":"originalCaps","text":"<p>\u2022 <code>Optional</code> originalCaps: <code>W3CCapabilities</code>&lt;<code>C</code>, <code>void</code>&gt;</p> <p>The original capabilities used to start the session represented by the current driver instance</p>"},{"location":"reference/interfaces/appium_types.Driver/#defined-in_17","title":"Defined in","text":"<p>packages/types/lib/driver.ts:727</p>"},{"location":"reference/interfaces/appium_types.Driver/#protocol","title":"protocol","text":"<p>\u2022 <code>Optional</code> protocol: <code>string</code></p>"},{"location":"reference/interfaces/appium_types.Driver/#inherited-from_14","title":"Inherited from","text":"<p>Core.protocol</p>"},{"location":"reference/interfaces/appium_types.Driver/#defined-in_18","title":"Defined in","text":"<p>packages/types/lib/driver.ts:594</p>"},{"location":"reference/interfaces/appium_types.Driver/#relaxedsecurityenabled","title":"relaxedSecurityEnabled","text":"<p>\u2022 relaxedSecurityEnabled: <code>boolean</code></p>"},{"location":"reference/interfaces/appium_types.Driver/#inherited-from_15","title":"Inherited from","text":"<p>Core.relaxedSecurityEnabled</p>"},{"location":"reference/interfaces/appium_types.Driver/#defined-in_19","title":"Defined in","text":"<p>packages/types/lib/driver.ts:597</p>"},{"location":"reference/interfaces/appium_types.Driver/#sessionid","title":"sessionId","text":"<p>\u2022 sessionId: <code>null</code> | <code>string</code></p>"},{"location":"reference/interfaces/appium_types.Driver/#inherited-from_16","title":"Inherited from","text":"<p>Core.sessionId</p>"},{"location":"reference/interfaces/appium_types.Driver/#defined-in_20","title":"Defined in","text":"<p>packages/types/lib/driver.ts:591</p>"},{"location":"reference/interfaces/appium_types.Driver/#settings","title":"settings","text":"<p>\u2022 settings: <code>DeviceSettings</code>&lt;<code>any</code>&gt;</p>"},{"location":"reference/interfaces/appium_types.Driver/#inherited-from_17","title":"Inherited from","text":"<p>Core.settings</p>"},{"location":"reference/interfaces/appium_types.Driver/#defined-in_21","title":"Defined in","text":"<p>packages/types/lib/driver.ts:605</p>"},{"location":"reference/interfaces/appium_types.Driver/#shouldvalidatecaps","title":"shouldValidateCaps","text":"<p>\u2022 shouldValidateCaps: <code>boolean</code></p>"},{"location":"reference/interfaces/appium_types.Driver/#inherited-from_18","title":"Inherited from","text":"<p>Core.shouldValidateCaps</p>"},{"location":"reference/interfaces/appium_types.Driver/#defined-in_22","title":"Defined in","text":"<p>packages/types/lib/driver.ts:590</p>"},{"location":"reference/interfaces/appium_types.Driver/#supportedlogtypes","title":"supportedLogTypes","text":"<p>\u2022 supportedLogTypes: <code>Readonly</code>&lt;<code>LogDefRecord</code>&lt;<code>C</code>&gt;&gt;</p> <p>Definition of the available log types</p>"},{"location":"reference/interfaces/appium_types.Driver/#inherited-from_19","title":"Inherited from","text":"<p>ILogCommands.supportedLogTypes</p>"},{"location":"reference/interfaces/appium_types.Driver/#defined-in_23","title":"Defined in","text":"<p>packages/types/lib/driver.ts:335</p>"},{"location":"reference/interfaces/appium_types.Driver/#updatesettings","title":"updateSettings","text":"<p>\u2022 updateSettings: (<code>settings</code>: <code>StringRecord</code>) =&gt; <code>Promise</code>&lt;<code>void</code>&gt;</p>"},{"location":"reference/interfaces/appium_types.Driver/#type-declaration","title":"Type declaration","text":"<p>\u25b8 (<code>settings</code>): <code>Promise</code>&lt;<code>void</code>&gt;</p> <p>Update the session's settings dictionary with a new settings object</p>"},{"location":"reference/interfaces/appium_types.Driver/#parameters","title":"Parameters","text":"Name Type Description <code>settings</code> <code>StringRecord</code> A key-value map of setting names to values. Settings not named in the map will not have their value adjusted."},{"location":"reference/interfaces/appium_types.Driver/#returns","title":"Returns","text":"<p><code>Promise</code>&lt;<code>void</code>&gt;</p>"},{"location":"reference/interfaces/appium_types.Driver/#inherited-from_20","title":"Inherited from","text":"<p>ISettingsCommands.updateSettings</p>"},{"location":"reference/interfaces/appium_types.Driver/#defined-in_24","title":"Defined in","text":"<p>packages/types/lib/driver.ts:388</p>"},{"location":"reference/interfaces/appium_types.Driver/#weblocatorstrategies","title":"webLocatorStrategies","text":"<p>\u2022 webLocatorStrategies: <code>string</code>[]</p>"},{"location":"reference/interfaces/appium_types.Driver/#inherited-from_21","title":"Inherited from","text":"<p>Core.webLocatorStrategies</p>"},{"location":"reference/interfaces/appium_types.Driver/#defined-in_25","title":"Defined in","text":"<p>packages/types/lib/driver.ts:603</p>"},{"location":"reference/interfaces/appium_types.Driver/#methods_1","title":"Methods","text":""},{"location":"reference/interfaces/appium_types.Driver/#addmanageddriver","title":"addManagedDriver","text":"<p>\u25b8 addManagedDriver(<code>driver</code>): <code>void</code></p>"},{"location":"reference/interfaces/appium_types.Driver/#parameters_1","title":"Parameters","text":"Name Type <code>driver</code> <code>Driver</code>&lt;{ <code>app</code>: { <code>isString</code>: <code>true</code> = true } ; <code>autoLaunch</code>: { <code>isBoolean</code>: <code>true</code> = true } ; <code>autoWebview</code>: { <code>isBoolean</code>: <code>true</code> = true } ; <code>automationName</code>: { <code>isString</code>: <code>true</code> = true } ; <code>deviceName</code>: { <code>isString</code>: <code>true</code> = true } ; <code>eventTimings</code>: { <code>isBoolean</code>: <code>true</code> = true } ; <code>fullReset</code>: { <code>isBoolean</code>: <code>true</code> = true } ; <code>language</code>: { <code>isString</code>: <code>true</code> = true } ; <code>locale</code>: { <code>isString</code>: <code>true</code> = true } ; <code>newCommandTimeout</code>: { <code>isNumber</code>: <code>true</code> = true } ; <code>noReset</code>: { <code>isBoolean</code>: <code>true</code> = true } ; <code>orientation</code>: { <code>inclusion</code>: readonly [<code>\"LANDSCAPE\"</code>, <code>\"PORTRAIT\"</code>]  } ; <code>platformName</code>: { <code>isString</code>: <code>true</code> = true; <code>presence</code>: <code>true</code> = true } ; <code>platformVersion</code>: { <code>isString</code>: <code>true</code> = true } ; <code>printPageSourceOnFindFailure</code>: { <code>isBoolean</code>: <code>true</code> = true } ; <code>udid</code>: { <code>isString</code>: <code>true</code> = true } ; <code>webSocketUrl</code>: { <code>isString</code>: <code>true</code> = true }  }, <code>StringRecord</code>, <code>any</code>&gt;"},{"location":"reference/interfaces/appium_types.Driver/#returns_1","title":"Returns","text":"<p><code>void</code></p>"},{"location":"reference/interfaces/appium_types.Driver/#inherited-from_22","title":"Inherited from","text":"<p>Core.addManagedDriver</p>"},{"location":"reference/interfaces/appium_types.Driver/#defined-in_26","title":"Defined in","text":"<p>packages/types/lib/driver.ts:653</p>"},{"location":"reference/interfaces/appium_types.Driver/#assertfeatureenabled","title":"assertFeatureEnabled","text":"<p>\u25b8 assertFeatureEnabled(<code>name</code>): <code>void</code></p>"},{"location":"reference/interfaces/appium_types.Driver/#parameters_2","title":"Parameters","text":"Name Type <code>name</code> <code>string</code>"},{"location":"reference/interfaces/appium_types.Driver/#returns_2","title":"Returns","text":"<p><code>void</code></p>"},{"location":"reference/interfaces/appium_types.Driver/#inherited-from_23","title":"Inherited from","text":"<p>Core.assertFeatureEnabled</p>"},{"location":"reference/interfaces/appium_types.Driver/#defined-in_27","title":"Defined in","text":"<p>packages/types/lib/driver.ts:647</p>"},{"location":"reference/interfaces/appium_types.Driver/#assignserver","title":"assignServer","text":"<p>\u25b8 <code>Optional</code> assignServer(<code>server</code>, <code>host</code>, <code>port</code>, <code>path</code>): <code>void</code></p> <p>A helper function used to assign server information to the driver instance so the driver knows where the server is Running</p>"},{"location":"reference/interfaces/appium_types.Driver/#parameters_3","title":"Parameters","text":"Name Type Description <code>server</code> <code>AppiumServer</code> the server object <code>host</code> <code>string</code> the server hostname <code>port</code> <code>number</code> the server port <code>path</code> <code>string</code> the server base url"},{"location":"reference/interfaces/appium_types.Driver/#returns_3","title":"Returns","text":"<p><code>void</code></p>"},{"location":"reference/interfaces/appium_types.Driver/#defined-in_28","title":"Defined in","text":"<p>packages/types/lib/driver.ts:763</p>"},{"location":"reference/interfaces/appium_types.Driver/#canproxy","title":"canProxy","text":"<p>\u25b8 canProxy(<code>sessionId?</code>): <code>boolean</code></p>"},{"location":"reference/interfaces/appium_types.Driver/#parameters_4","title":"Parameters","text":"Name Type <code>sessionId?</code> <code>string</code>"},{"location":"reference/interfaces/appium_types.Driver/#returns_4","title":"Returns","text":"<p><code>boolean</code></p>"},{"location":"reference/interfaces/appium_types.Driver/#inherited-from_24","title":"Inherited from","text":"<p>Core.canProxy</p>"},{"location":"reference/interfaces/appium_types.Driver/#defined-in_29","title":"Defined in","text":"<p>packages/types/lib/driver.ts:651</p>"},{"location":"reference/interfaces/appium_types.Driver/#clearnewcommandtimeout","title":"clearNewCommandTimeout","text":"<p>\u25b8 clearNewCommandTimeout(): <code>Promise</code>&lt;<code>void</code>&gt;</p>"},{"location":"reference/interfaces/appium_types.Driver/#returns_5","title":"Returns","text":"<p><code>Promise</code>&lt;<code>void</code>&gt;</p>"},{"location":"reference/interfaces/appium_types.Driver/#inherited-from_25","title":"Inherited from","text":"<p>Core.clearNewCommandTimeout</p>"},{"location":"reference/interfaces/appium_types.Driver/#defined-in_30","title":"Defined in","text":"<p>packages/types/lib/driver.ts:655</p>"},{"location":"reference/interfaces/appium_types.Driver/#createsession","title":"createSession","text":"<p>\u25b8 createSession(<code>w3cCaps1</code>, <code>w3cCaps2?</code>, <code>w3cCaps3?</code>, <code>driverData?</code>): <code>Promise</code>&lt;[sessionId: string, caps: any]&gt;</p> <p>Start a new automation session</p> <p><code>See</code></p> <p>https://w3c.github.io/webdriver/#new-session</p> <p><code>Remarks</code></p> <p>The shape of this method is strange because it used to support both JSONWP and W3C capabilities. This will likely change in the future to simplify.</p>"},{"location":"reference/interfaces/appium_types.Driver/#parameters_5","title":"Parameters","text":"Name Type Description <code>w3cCaps1</code> <code>W3CCapabilities</code>&lt;<code>C</code>, <code>void</code>&gt; the new session capabilities <code>w3cCaps2?</code> <code>W3CCapabilities</code>&lt;<code>C</code>, <code>void</code>&gt; another place the new session capabilities could be sent (typically left undefined) <code>w3cCaps3?</code> <code>W3CCapabilities</code>&lt;<code>C</code>, <code>void</code>&gt; another place the new session capabilities could be sent (typically left undefined) <code>driverData?</code> <code>DriverData</code>[] a list of DriverData objects representing other sessions running for this driver on the same Appium server. This information can be used to help ensure no conflict of resources"},{"location":"reference/interfaces/appium_types.Driver/#returns_6","title":"Returns","text":"<p><code>Promise</code>&lt;[sessionId: string, caps: any]&gt;</p> <p>The capabilities object representing the created session</p>"},{"location":"reference/interfaces/appium_types.Driver/#inherited-from_26","title":"Inherited from","text":"<p>SessionHandler.createSession</p>"},{"location":"reference/interfaces/appium_types.Driver/#defined-in_31","title":"Defined in","text":"<p>packages/types/lib/driver.ts:421</p>"},{"location":"reference/interfaces/appium_types.Driver/#deletesession","title":"deleteSession","text":"<p>\u25b8 deleteSession(<code>sessionId?</code>, <code>driverData?</code>): <code>Promise</code>&lt;<code>void</code>&gt;</p> <p>Stop an automation session</p> <p><code>See</code></p> <p>https://w3c.github.io/webdriver/#delete-session</p>"},{"location":"reference/interfaces/appium_types.Driver/#parameters_6","title":"Parameters","text":"Name Type Description <code>sessionId?</code> <code>string</code> the id of the session that is to be deleted <code>driverData?</code> <code>DriverData</code>[] the driver data for other currently-running sessions"},{"location":"reference/interfaces/appium_types.Driver/#returns_7","title":"Returns","text":"<p><code>Promise</code>&lt;<code>void</code>&gt;</p>"},{"location":"reference/interfaces/appium_types.Driver/#inherited-from_27","title":"Inherited from","text":"<p>SessionHandler.deleteSession</p>"},{"location":"reference/interfaces/appium_types.Driver/#defined-in_32","title":"Defined in","text":"<p>packages/types/lib/driver.ts:435</p>"},{"location":"reference/interfaces/appium_types.Driver/#driverforsession","title":"driverForSession","text":"<p>\u25b8 driverForSession(<code>sessionId</code>): <code>null</code> | <code>Core</code>&lt;{ <code>app</code>: { <code>isString</code>: <code>true</code> = true } ; <code>autoLaunch</code>: { <code>isBoolean</code>: <code>true</code> = true } ; <code>autoWebview</code>: { <code>isBoolean</code>: <code>true</code> = true } ; <code>automationName</code>: { <code>isString</code>: <code>true</code> = true } ; <code>deviceName</code>: { <code>isString</code>: <code>true</code> = true } ; <code>eventTimings</code>: { <code>isBoolean</code>: <code>true</code> = true } ; <code>fullReset</code>: { <code>isBoolean</code>: <code>true</code> = true } ; <code>language</code>: { <code>isString</code>: <code>true</code> = true } ; <code>locale</code>: { <code>isString</code>: <code>true</code> = true } ; <code>newCommandTimeout</code>: { <code>isNumber</code>: <code>true</code> = true } ; <code>noReset</code>: { <code>isBoolean</code>: <code>true</code> = true } ; <code>orientation</code>: { <code>inclusion</code>: readonly [<code>\"LANDSCAPE\"</code>, <code>\"PORTRAIT\"</code>]  } ; <code>platformName</code>: { <code>isString</code>: <code>true</code> = true; <code>presence</code>: <code>true</code> = true } ; <code>platformVersion</code>: { <code>isString</code>: <code>true</code> = true } ; <code>printPageSourceOnFindFailure</code>: { <code>isBoolean</code>: <code>true</code> = true } ; <code>udid</code>: { <code>isString</code>: <code>true</code> = true } ; <code>webSocketUrl</code>: { <code>isString</code>: <code>true</code> = true }  }&gt;</p>"},{"location":"reference/interfaces/appium_types.Driver/#parameters_7","title":"Parameters","text":"Name Type <code>sessionId</code> <code>string</code>"},{"location":"reference/interfaces/appium_types.Driver/#returns_8","title":"Returns","text":"<p><code>null</code> | <code>Core</code>&lt;{ <code>app</code>: { <code>isString</code>: <code>true</code> = true } ; <code>autoLaunch</code>: { <code>isBoolean</code>: <code>true</code> = true } ; <code>autoWebview</code>: { <code>isBoolean</code>: <code>true</code> = true } ; <code>automationName</code>: { <code>isString</code>: <code>true</code> = true } ; <code>deviceName</code>: { <code>isString</code>: <code>true</code> = true } ; <code>eventTimings</code>: { <code>isBoolean</code>: <code>true</code> = true } ; <code>fullReset</code>: { <code>isBoolean</code>: <code>true</code> = true } ; <code>language</code>: { <code>isString</code>: <code>true</code> = true } ; <code>locale</code>: { <code>isString</code>: <code>true</code> = true } ; <code>newCommandTimeout</code>: { <code>isNumber</code>: <code>true</code> = true } ; <code>noReset</code>: { <code>isBoolean</code>: <code>true</code> = true } ; <code>orientation</code>: { <code>inclusion</code>: readonly [<code>\"LANDSCAPE\"</code>, <code>\"PORTRAIT\"</code>]  } ; <code>platformName</code>: { <code>isString</code>: <code>true</code> = true; <code>presence</code>: <code>true</code> = true } ; <code>platformVersion</code>: { <code>isString</code>: <code>true</code> = true } ; <code>printPageSourceOnFindFailure</code>: { <code>isBoolean</code>: <code>true</code> = true } ; <code>udid</code>: { <code>isString</code>: <code>true</code> = true } ; <code>webSocketUrl</code>: { <code>isString</code>: <code>true</code> = true }  }&gt;</p>"},{"location":"reference/interfaces/appium_types.Driver/#inherited-from_28","title":"Inherited from","text":"<p>Core.driverForSession</p>"},{"location":"reference/interfaces/appium_types.Driver/#defined-in_33","title":"Defined in","text":"<p>packages/types/lib/driver.ts:657</p>"},{"location":"reference/interfaces/appium_types.Driver/#executecommand","title":"executeCommand","text":"<p>\u25b8 executeCommand(<code>cmd</code>, <code>...args</code>): <code>Promise</code>&lt;<code>any</code>&gt;</p> <p>Execute a driver (WebDriver-protocol) command by its name as defined in the routes file</p>"},{"location":"reference/interfaces/appium_types.Driver/#parameters_8","title":"Parameters","text":"Name Type Description <code>cmd</code> <code>string</code> the name of the command <code>...args</code> <code>any</code>[] arguments to pass to the command"},{"location":"reference/interfaces/appium_types.Driver/#returns_9","title":"Returns","text":"<p><code>Promise</code>&lt;<code>any</code>&gt;</p> <p>The result of running the command</p>"},{"location":"reference/interfaces/appium_types.Driver/#defined-in_34","title":"Defined in","text":"<p>packages/types/lib/driver.ts:696</p>"},{"location":"reference/interfaces/appium_types.Driver/#executemethod","title":"executeMethod","text":"<p>\u25b8 executeMethod(<code>script</code>, <code>args</code>): <code>Promise</code>&lt;<code>any</code>&gt;</p> <p>Call an <code>Execute Method</code> by its name with the given arguments. This method will check that the driver has registered the method matching the name, and send it the arguments.</p>"},{"location":"reference/interfaces/appium_types.Driver/#parameters_9","title":"Parameters","text":"Name Type Description <code>script</code> <code>string</code> the name of the Execute Method <code>args</code> [<code>StringRecord</code>] | [] a singleton array containing an arguments object"},{"location":"reference/interfaces/appium_types.Driver/#returns_10","title":"Returns","text":"<p><code>Promise</code>&lt;<code>any</code>&gt;</p> <p>The result of calling the Execute Method</p>"},{"location":"reference/interfaces/appium_types.Driver/#inherited-from_29","title":"Inherited from","text":"<p>IExecuteCommands.executeMethod</p>"},{"location":"reference/interfaces/appium_types.Driver/#defined-in_35","title":"Defined in","text":"<p>packages/types/lib/driver.ts:186</p>"},{"location":"reference/interfaces/appium_types.Driver/#findelorels","title":"findElOrEls","text":"<p>\u25b8 findElOrEls&lt;<code>Mult</code>&gt;(<code>strategy</code>, <code>selector</code>, <code>mult</code>, <code>context?</code>): <code>Promise</code>&lt;<code>Mult</code> extends <code>true</code> ? <code>Element</code>[] : <code>Element</code>&gt;</p> <p>A helper method that returns one or more UI elements based on the search criteria</p>"},{"location":"reference/interfaces/appium_types.Driver/#type-parameters_1","title":"Type parameters","text":"Name Type <code>Mult</code> extends <code>boolean</code>"},{"location":"reference/interfaces/appium_types.Driver/#parameters_10","title":"Parameters","text":"Name Type Description <code>strategy</code> <code>string</code> the locator strategy <code>selector</code> <code>string</code> the selector <code>mult</code> <code>Mult</code> whether or not we want to find multiple elements <code>context?</code> <code>Ctx</code> the element to use as the search context basis if desiredCapabilities"},{"location":"reference/interfaces/appium_types.Driver/#returns_11","title":"Returns","text":"<p><code>Promise</code>&lt;<code>Mult</code> extends <code>true</code> ? <code>Element</code>[] : <code>Element</code>&gt;</p> <p>A single element or list of elements</p>"},{"location":"reference/interfaces/appium_types.Driver/#inherited-from_30","title":"Inherited from","text":"<p>IFindCommands.findElOrEls</p>"},{"location":"reference/interfaces/appium_types.Driver/#defined-in_36","title":"Defined in","text":"<p>packages/types/lib/driver.ts:297</p>"},{"location":"reference/interfaces/appium_types.Driver/#findelorelswithprocessing","title":"findElOrElsWithProcessing","text":"<p>\u25b8 findElOrElsWithProcessing&lt;<code>Mult</code>&gt;(<code>strategy</code>, <code>selector</code>, <code>mult</code>, <code>context?</code>): <code>Promise</code>&lt;<code>Mult</code> extends <code>true</code> ? <code>Element</code>[] : <code>Element</code>&gt;</p> <p>This is a wrapper for <code>findElOrEls</code> that validates locator strategies and implements the <code>appium:printPageSourceOnFindFailure</code> capability</p>"},{"location":"reference/interfaces/appium_types.Driver/#type-parameters_2","title":"Type parameters","text":"Name Type <code>Mult</code> extends <code>boolean</code>"},{"location":"reference/interfaces/appium_types.Driver/#parameters_11","title":"Parameters","text":"Name Type Description <code>strategy</code> <code>string</code> the locator strategy <code>selector</code> <code>string</code> the selector <code>mult</code> <code>Mult</code> whether or not we want to find multiple elements <code>context?</code> <code>Ctx</code> the element to use as the search context basis if desiredCapabilities"},{"location":"reference/interfaces/appium_types.Driver/#returns_12","title":"Returns","text":"<p><code>Promise</code>&lt;<code>Mult</code> extends <code>true</code> ? <code>Element</code>[] : <code>Element</code>&gt;</p> <p>A single element or list of elements</p>"},{"location":"reference/interfaces/appium_types.Driver/#inherited-from_31","title":"Inherited from","text":"<p>IFindCommands.findElOrElsWithProcessing</p>"},{"location":"reference/interfaces/appium_types.Driver/#defined-in_37","title":"Defined in","text":"<p>packages/types/lib/driver.ts:315</p>"},{"location":"reference/interfaces/appium_types.Driver/#findelement","title":"findElement","text":"<p>\u25b8 findElement(<code>strategy</code>, <code>selector</code>): <code>Promise</code>&lt;<code>Element</code>&gt;</p> <p>Find a UI element given a locator strategy and a selector, erroring if it can't be found</p> <p><code>See</code></p> <p>https://w3c.github.io/webdriver/#find-element</p>"},{"location":"reference/interfaces/appium_types.Driver/#parameters_12","title":"Parameters","text":"Name Type Description <code>strategy</code> <code>string</code> the locator strategy <code>selector</code> <code>string</code> the selector to combine with the strategy to find the specific element"},{"location":"reference/interfaces/appium_types.Driver/#returns_13","title":"Returns","text":"<p><code>Promise</code>&lt;<code>Element</code>&gt;</p> <p>The element object encoding the element id which can be used in element-related commands</p>"},{"location":"reference/interfaces/appium_types.Driver/#inherited-from_32","title":"Inherited from","text":"<p>IFindCommands.findElement</p>"},{"location":"reference/interfaces/appium_types.Driver/#defined-in_38","title":"Defined in","text":"<p>packages/types/lib/driver.ts:213</p>"},{"location":"reference/interfaces/appium_types.Driver/#findelementfromelement","title":"findElementFromElement","text":"<p>\u25b8 findElementFromElement(<code>strategy</code>, <code>selector</code>, <code>elementId</code>): <code>Promise</code>&lt;<code>Element</code>&gt;</p> <p>Find a UI element given a locator strategy and a selector, erroring if it can't be found. Only look for elements among the set of descendants of a given element</p> <p><code>See</code></p> <p>https://w3c.github.io/webdriver/#find-element-from-element</p>"},{"location":"reference/interfaces/appium_types.Driver/#parameters_13","title":"Parameters","text":"Name Type Description <code>strategy</code> <code>string</code> the locator strategy <code>selector</code> <code>string</code> the selector to combine with the strategy to find the specific element <code>elementId</code> <code>string</code> the id of the element to use as the search basis"},{"location":"reference/interfaces/appium_types.Driver/#returns_14","title":"Returns","text":"<p><code>Promise</code>&lt;<code>Element</code>&gt;</p> <p>The element object encoding the element id which can be used in element-related commands</p>"},{"location":"reference/interfaces/appium_types.Driver/#inherited-from_33","title":"Inherited from","text":"<p>IFindCommands.findElementFromElement</p>"},{"location":"reference/interfaces/appium_types.Driver/#defined-in_39","title":"Defined in","text":"<p>packages/types/lib/driver.ts:238</p>"},{"location":"reference/interfaces/appium_types.Driver/#findelementfromshadowroot","title":"findElementFromShadowRoot","text":"<p>\u25b8 <code>Optional</code> findElementFromShadowRoot(<code>strategy</code>, <code>selector</code>, <code>shadowId</code>): <code>Promise</code>&lt;<code>Element</code>&gt;</p> <p>Find an element from a shadow root</p> <p><code>See</code></p> <p>https://w3c.github.io/webdriver/#find-element-from-shadow-root</p>"},{"location":"reference/interfaces/appium_types.Driver/#parameters_14","title":"Parameters","text":"Name Type Description <code>strategy</code> <code>string</code> the locator strategy <code>selector</code> <code>string</code> the selector to combine with the strategy to find the specific elements <code>shadowId</code> <code>string</code> the id of the element to use as the search basis"},{"location":"reference/interfaces/appium_types.Driver/#returns_15","title":"Returns","text":"<p><code>Promise</code>&lt;<code>Element</code>&gt;</p> <p>The element inside the shadow root matching the selector</p>"},{"location":"reference/interfaces/appium_types.Driver/#inherited-from_34","title":"Inherited from","text":"<p>IFindCommands.findElementFromShadowRoot</p>"},{"location":"reference/interfaces/appium_types.Driver/#defined-in_40","title":"Defined in","text":"<p>packages/types/lib/driver.ts:266</p>"},{"location":"reference/interfaces/appium_types.Driver/#findelements","title":"findElements","text":"<p>\u25b8 findElements(<code>strategy</code>, <code>selector</code>): <code>Promise</code>&lt;<code>Element</code>[]&gt;</p> <p>Find a a list of all UI elements matching a given a locator strategy and a selector</p> <p><code>See</code></p> <p>https://w3c.github.io/webdriver/#find-elements</p>"},{"location":"reference/interfaces/appium_types.Driver/#parameters_15","title":"Parameters","text":"Name Type Description <code>strategy</code> <code>string</code> the locator strategy <code>selector</code> <code>string</code> the selector to combine with the strategy to find the specific elements"},{"location":"reference/interfaces/appium_types.Driver/#returns_16","title":"Returns","text":"<p><code>Promise</code>&lt;<code>Element</code>[]&gt;</p> <p>A possibly-empty list of element objects</p>"},{"location":"reference/interfaces/appium_types.Driver/#inherited-from_35","title":"Inherited from","text":"<p>IFindCommands.findElements</p>"},{"location":"reference/interfaces/appium_types.Driver/#defined-in_41","title":"Defined in","text":"<p>packages/types/lib/driver.ts:224</p>"},{"location":"reference/interfaces/appium_types.Driver/#findelementsfromelement","title":"findElementsFromElement","text":"<p>\u25b8 findElementsFromElement(<code>strategy</code>, <code>selector</code>, <code>elementId</code>): <code>Promise</code>&lt;<code>Element</code>[]&gt;</p> <p>Find a a list of all UI elements matching a given a locator strategy and a selector. Only look for elements among the set of descendants of a given element</p> <p><code>See</code></p> <p>https://w3c.github.io/webdriver/#find-elements-from-element</p>"},{"location":"reference/interfaces/appium_types.Driver/#parameters_16","title":"Parameters","text":"Name Type Description <code>strategy</code> <code>string</code> the locator strategy <code>selector</code> <code>string</code> the selector to combine with the strategy to find the specific elements <code>elementId</code> <code>string</code> the id of the element to use as the search basis"},{"location":"reference/interfaces/appium_types.Driver/#returns_17","title":"Returns","text":"<p><code>Promise</code>&lt;<code>Element</code>[]&gt;</p> <p>A possibly-empty list of element objects</p>"},{"location":"reference/interfaces/appium_types.Driver/#inherited-from_36","title":"Inherited from","text":"<p>IFindCommands.findElementsFromElement</p>"},{"location":"reference/interfaces/appium_types.Driver/#defined-in_42","title":"Defined in","text":"<p>packages/types/lib/driver.ts:251</p>"},{"location":"reference/interfaces/appium_types.Driver/#findelementsfromshadowroot","title":"findElementsFromShadowRoot","text":"<p>\u25b8 <code>Optional</code> findElementsFromShadowRoot(<code>strategy</code>, <code>selector</code>, <code>shadowId</code>): <code>Promise</code>&lt;<code>Element</code>[]&gt;</p> <p>Find elements from a shadow root</p> <p><code>See</code></p> <p>https://w3c.github.io/webdriver/#find-element-from-shadow-root</p>"},{"location":"reference/interfaces/appium_types.Driver/#parameters_17","title":"Parameters","text":"Name Type Description <code>strategy</code> <code>string</code> the locator strategy <code>selector</code> <code>string</code> the selector to combine with the strategy to find the specific elements <code>shadowId</code> <code>string</code> the id of the element to use as the search basis"},{"location":"reference/interfaces/appium_types.Driver/#returns_18","title":"Returns","text":"<p><code>Promise</code>&lt;<code>Element</code>[]&gt;</p> <p>A possibly empty list of elements inside the shadow root matching the selector</p>"},{"location":"reference/interfaces/appium_types.Driver/#inherited-from_37","title":"Inherited from","text":"<p>IFindCommands.findElementsFromShadowRoot</p>"},{"location":"reference/interfaces/appium_types.Driver/#defined-in_43","title":"Defined in","text":"<p>packages/types/lib/driver.ts:281</p>"},{"location":"reference/interfaces/appium_types.Driver/#getlog","title":"getLog","text":"<p>\u25b8 getLog(<code>logType</code>): <code>Promise</code>&lt;<code>unknown</code>[]&gt;</p> <p>Get the log for a given log type.</p>"},{"location":"reference/interfaces/appium_types.Driver/#parameters_18","title":"Parameters","text":"Name Type Description <code>logType</code> <code>string</code> Name/key of log type as defined in <code>supportedLogTypes</code>."},{"location":"reference/interfaces/appium_types.Driver/#returns_19","title":"Returns","text":"<p><code>Promise</code>&lt;<code>unknown</code>[]&gt;</p>"},{"location":"reference/interfaces/appium_types.Driver/#inherited-from_38","title":"Inherited from","text":"<p>ILogCommands.getLog</p>"},{"location":"reference/interfaces/appium_types.Driver/#defined-in_44","title":"Defined in","text":"<p>packages/types/lib/driver.ts:347</p>"},{"location":"reference/interfaces/appium_types.Driver/#getlogevents","title":"getLogEvents","text":"<p>\u25b8 getLogEvents(<code>type?</code>): <code>Promise</code>&lt;<code>Record</code>&lt;<code>string</code>, <code>number</code>&gt; | <code>EventHistory</code>&gt;</p> <p>Get a list of events that have occurred in the current session</p>"},{"location":"reference/interfaces/appium_types.Driver/#parameters_19","title":"Parameters","text":"Name Type Description <code>type?</code> <code>string</code> | <code>string</code>[] filter the returned events by including one or more types"},{"location":"reference/interfaces/appium_types.Driver/#returns_20","title":"Returns","text":"<p><code>Promise</code>&lt;<code>Record</code>&lt;<code>string</code>, <code>number</code>&gt; | <code>EventHistory</code>&gt;</p> <p>The event history for the session</p>"},{"location":"reference/interfaces/appium_types.Driver/#inherited-from_39","title":"Inherited from","text":"<p>IEventCommands.getLogEvents</p>"},{"location":"reference/interfaces/appium_types.Driver/#defined-in_45","title":"Defined in","text":"<p>packages/types/lib/driver.ts:157</p>"},{"location":"reference/interfaces/appium_types.Driver/#getlogtypes","title":"getLogTypes","text":"<p>\u25b8 getLogTypes(): <code>Promise</code>&lt;<code>string</code>[]&gt;</p> <p>Get available log types as a list of strings</p>"},{"location":"reference/interfaces/appium_types.Driver/#returns_21","title":"Returns","text":"<p><code>Promise</code>&lt;<code>string</code>[]&gt;</p>"},{"location":"reference/interfaces/appium_types.Driver/#inherited-from_40","title":"Inherited from","text":"<p>ILogCommands.getLogTypes</p>"},{"location":"reference/interfaces/appium_types.Driver/#defined-in_46","title":"Defined in","text":"<p>packages/types/lib/driver.ts:340</p>"},{"location":"reference/interfaces/appium_types.Driver/#getmanageddrivers","title":"getManagedDrivers","text":"<p>\u25b8 getManagedDrivers(): <code>Driver</code>&lt;{ <code>app</code>: { <code>isString</code>: <code>true</code> = true } ; <code>autoLaunch</code>: { <code>isBoolean</code>: <code>true</code> = true } ; <code>autoWebview</code>: { <code>isBoolean</code>: <code>true</code> = true } ; <code>automationName</code>: { <code>isString</code>: <code>true</code> = true } ; <code>deviceName</code>: { <code>isString</code>: <code>true</code> = true } ; <code>eventTimings</code>: { <code>isBoolean</code>: <code>true</code> = true } ; <code>fullReset</code>: { <code>isBoolean</code>: <code>true</code> = true } ; <code>language</code>: { <code>isString</code>: <code>true</code> = true } ; <code>locale</code>: { <code>isString</code>: <code>true</code> = true } ; <code>newCommandTimeout</code>: { <code>isNumber</code>: <code>true</code> = true } ; <code>noReset</code>: { <code>isBoolean</code>: <code>true</code> = true } ; <code>orientation</code>: { <code>inclusion</code>: readonly [<code>\"LANDSCAPE\"</code>, <code>\"PORTRAIT\"</code>]  } ; <code>platformName</code>: { <code>isString</code>: <code>true</code> = true; <code>presence</code>: <code>true</code> = true } ; <code>platformVersion</code>: { <code>isString</code>: <code>true</code> = true } ; <code>printPageSourceOnFindFailure</code>: { <code>isBoolean</code>: <code>true</code> = true } ; <code>udid</code>: { <code>isString</code>: <code>true</code> = true } ; <code>webSocketUrl</code>: { <code>isString</code>: <code>true</code> = true }  }, <code>StringRecord</code>, <code>any</code>&gt;[]</p>"},{"location":"reference/interfaces/appium_types.Driver/#returns_22","title":"Returns","text":"<p><code>Driver</code>&lt;{ <code>app</code>: { <code>isString</code>: <code>true</code> = true } ; <code>autoLaunch</code>: { <code>isBoolean</code>: <code>true</code> = true } ; <code>autoWebview</code>: { <code>isBoolean</code>: <code>true</code> = true } ; <code>automationName</code>: { <code>isString</code>: <code>true</code> = true } ; <code>deviceName</code>: { <code>isString</code>: <code>true</code> = true } ; <code>eventTimings</code>: { <code>isBoolean</code>: <code>true</code> = true } ; <code>fullReset</code>: { <code>isBoolean</code>: <code>true</code> = true } ; <code>language</code>: { <code>isString</code>: <code>true</code> = true } ; <code>locale</code>: { <code>isString</code>: <code>true</code> = true } ; <code>newCommandTimeout</code>: { <code>isNumber</code>: <code>true</code> = true } ; <code>noReset</code>: { <code>isBoolean</code>: <code>true</code> = true } ; <code>orientation</code>: { <code>inclusion</code>: readonly [<code>\"LANDSCAPE\"</code>, <code>\"PORTRAIT\"</code>]  } ; <code>platformName</code>: { <code>isString</code>: <code>true</code> = true; <code>presence</code>: <code>true</code> = true } ; <code>platformVersion</code>: { <code>isString</code>: <code>true</code> = true } ; <code>printPageSourceOnFindFailure</code>: { <code>isBoolean</code>: <code>true</code> = true } ; <code>udid</code>: { <code>isString</code>: <code>true</code> = true } ; <code>webSocketUrl</code>: { <code>isString</code>: <code>true</code> = true }  }, <code>StringRecord</code>, <code>any</code>&gt;[]</p>"},{"location":"reference/interfaces/appium_types.Driver/#inherited-from_41","title":"Inherited from","text":"<p>Core.getManagedDrivers</p>"},{"location":"reference/interfaces/appium_types.Driver/#defined-in_47","title":"Defined in","text":"<p>packages/types/lib/driver.ts:654</p>"},{"location":"reference/interfaces/appium_types.Driver/#getpagesource","title":"getPageSource","text":"<p>\u25b8 getPageSource(): <code>Promise</code>&lt;<code>string</code>&gt;</p> <p>Get the current page/app source as HTML/XML</p> <p><code>See</code></p> <p>https://w3c.github.io/webdriver/#get-page-source</p>"},{"location":"reference/interfaces/appium_types.Driver/#returns_23","title":"Returns","text":"<p><code>Promise</code>&lt;<code>string</code>&gt;</p> <p>The UI hierarchy in a platform-appropriate format (e.g., HTML for a web page)</p>"},{"location":"reference/interfaces/appium_types.Driver/#inherited-from_42","title":"Inherited from","text":"<p>IFindCommands.getPageSource</p>"},{"location":"reference/interfaces/appium_types.Driver/#defined-in_48","title":"Defined in","text":"<p>packages/types/lib/driver.ts:328</p>"},{"location":"reference/interfaces/appium_types.Driver/#getproxyavoidlist","title":"getProxyAvoidList","text":"<p>\u25b8 getProxyAvoidList(<code>sessionId?</code>): <code>RouteMatcher</code>[]</p>"},{"location":"reference/interfaces/appium_types.Driver/#parameters_20","title":"Parameters","text":"Name Type <code>sessionId?</code> <code>string</code>"},{"location":"reference/interfaces/appium_types.Driver/#returns_24","title":"Returns","text":"<p><code>RouteMatcher</code>[]</p>"},{"location":"reference/interfaces/appium_types.Driver/#inherited-from_43","title":"Inherited from","text":"<p>Core.getProxyAvoidList</p>"},{"location":"reference/interfaces/appium_types.Driver/#defined-in_49","title":"Defined in","text":"<p>packages/types/lib/driver.ts:650</p>"},{"location":"reference/interfaces/appium_types.Driver/#getsession","title":"getSession","text":"<p>\u25b8 getSession(): <code>Promise</code>&lt;<code>SingularSessionData</code>&lt;{ <code>app</code>: { <code>isString</code>: <code>true</code> = true } ; <code>autoLaunch</code>: { <code>isBoolean</code>: <code>true</code> = true } ; <code>autoWebview</code>: { <code>isBoolean</code>: <code>true</code> = true } ; <code>automationName</code>: { <code>isString</code>: <code>true</code> = true } ; <code>deviceName</code>: { <code>isString</code>: <code>true</code> = true } ; <code>eventTimings</code>: { <code>isBoolean</code>: <code>true</code> = true } ; <code>fullReset</code>: { <code>isBoolean</code>: <code>true</code> = true } ; <code>language</code>: { <code>isString</code>: <code>true</code> = true } ; <code>locale</code>: { <code>isString</code>: <code>true</code> = true } ; <code>newCommandTimeout</code>: { <code>isNumber</code>: <code>true</code> = true } ; <code>noReset</code>: { <code>isBoolean</code>: <code>true</code> = true } ; <code>orientation</code>: { <code>inclusion</code>: readonly [<code>\"LANDSCAPE\"</code>, <code>\"PORTRAIT\"</code>]  } ; <code>platformName</code>: { <code>isString</code>: <code>true</code> = true; <code>presence</code>: <code>true</code> = true } ; <code>platformVersion</code>: { <code>isString</code>: <code>true</code> = true } ; <code>printPageSourceOnFindFailure</code>: { <code>isBoolean</code>: <code>true</code> = true } ; <code>udid</code>: { <code>isString</code>: <code>true</code> = true } ; <code>webSocketUrl</code>: { <code>isString</code>: <code>true</code> = true }  }, <code>void</code>&gt;&gt;</p> <p>Get the data for the current session</p>"},{"location":"reference/interfaces/appium_types.Driver/#returns_25","title":"Returns","text":"<p><code>Promise</code>&lt;<code>SingularSessionData</code>&lt;{ <code>app</code>: { <code>isString</code>: <code>true</code> = true } ; <code>autoLaunch</code>: { <code>isBoolean</code>: <code>true</code> = true } ; <code>autoWebview</code>: { <code>isBoolean</code>: <code>true</code> = true } ; <code>automationName</code>: { <code>isString</code>: <code>true</code> = true } ; <code>deviceName</code>: { <code>isString</code>: <code>true</code> = true } ; <code>eventTimings</code>: { <code>isBoolean</code>: <code>true</code> = true } ; <code>fullReset</code>: { <code>isBoolean</code>: <code>true</code> = true } ; <code>language</code>: { <code>isString</code>: <code>true</code> = true } ; <code>locale</code>: { <code>isString</code>: <code>true</code> = true } ; <code>newCommandTimeout</code>: { <code>isNumber</code>: <code>true</code> = true } ; <code>noReset</code>: { <code>isBoolean</code>: <code>true</code> = true } ; <code>orientation</code>: { <code>inclusion</code>: readonly [<code>\"LANDSCAPE\"</code>, <code>\"PORTRAIT\"</code>]  } ; <code>platformName</code>: { <code>isString</code>: <code>true</code> = true; <code>presence</code>: <code>true</code> = true } ; <code>platformVersion</code>: { <code>isString</code>: <code>true</code> = true } ; <code>printPageSourceOnFindFailure</code>: { <code>isBoolean</code>: <code>true</code> = true } ; <code>udid</code>: { <code>isString</code>: <code>true</code> = true } ; <code>webSocketUrl</code>: { <code>isString</code>: <code>true</code> = true }  }, <code>void</code>&gt;&gt;</p> <p>A session data object</p>"},{"location":"reference/interfaces/appium_types.Driver/#inherited-from_44","title":"Inherited from","text":"<p>ISessionCommands.getSession</p>"},{"location":"reference/interfaces/appium_types.Driver/#defined-in_50","title":"Defined in","text":"<p>packages/types/lib/driver.ts:173</p>"},{"location":"reference/interfaces/appium_types.Driver/#getsessions","title":"getSessions","text":"<p>\u25b8 getSessions(): <code>Promise</code>&lt;<code>MultiSessionData</code>&lt;{ <code>app</code>: { <code>isString</code>: <code>true</code> = true } ; <code>autoLaunch</code>: { <code>isBoolean</code>: <code>true</code> = true } ; <code>autoWebview</code>: { <code>isBoolean</code>: <code>true</code> = true } ; <code>automationName</code>: { <code>isString</code>: <code>true</code> = true } ; <code>deviceName</code>: { <code>isString</code>: <code>true</code> = true } ; <code>eventTimings</code>: { <code>isBoolean</code>: <code>true</code> = true } ; <code>fullReset</code>: { <code>isBoolean</code>: <code>true</code> = true } ; <code>language</code>: { <code>isString</code>: <code>true</code> = true } ; <code>locale</code>: { <code>isString</code>: <code>true</code> = true } ; <code>newCommandTimeout</code>: { <code>isNumber</code>: <code>true</code> = true } ; <code>noReset</code>: { <code>isBoolean</code>: <code>true</code> = true } ; <code>orientation</code>: { <code>inclusion</code>: readonly [<code>\"LANDSCAPE\"</code>, <code>\"PORTRAIT\"</code>]  } ; <code>platformName</code>: { <code>isString</code>: <code>true</code> = true; <code>presence</code>: <code>true</code> = true } ; <code>platformVersion</code>: { <code>isString</code>: <code>true</code> = true } ; <code>printPageSourceOnFindFailure</code>: { <code>isBoolean</code>: <code>true</code> = true } ; <code>udid</code>: { <code>isString</code>: <code>true</code> = true } ; <code>webSocketUrl</code>: { <code>isString</code>: <code>true</code> = true }  }, <code>void</code>&gt;[]&gt;</p> <p>Get data for all sessions running on an Appium server</p>"},{"location":"reference/interfaces/appium_types.Driver/#returns_26","title":"Returns","text":"<p><code>Promise</code>&lt;<code>MultiSessionData</code>&lt;{ <code>app</code>: { <code>isString</code>: <code>true</code> = true } ; <code>autoLaunch</code>: { <code>isBoolean</code>: <code>true</code> = true } ; <code>autoWebview</code>: { <code>isBoolean</code>: <code>true</code> = true } ; <code>automationName</code>: { <code>isString</code>: <code>true</code> = true } ; <code>deviceName</code>: { <code>isString</code>: <code>true</code> = true } ; <code>eventTimings</code>: { <code>isBoolean</code>: <code>true</code> = true } ; <code>fullReset</code>: { <code>isBoolean</code>: <code>true</code> = true } ; <code>language</code>: { <code>isString</code>: <code>true</code> = true } ; <code>locale</code>: { <code>isString</code>: <code>true</code> = true } ; <code>newCommandTimeout</code>: { <code>isNumber</code>: <code>true</code> = true } ; <code>noReset</code>: { <code>isBoolean</code>: <code>true</code> = true } ; <code>orientation</code>: { <code>inclusion</code>: readonly [<code>\"LANDSCAPE\"</code>, <code>\"PORTRAIT\"</code>]  } ; <code>platformName</code>: { <code>isString</code>: <code>true</code> = true; <code>presence</code>: <code>true</code> = true } ; <code>platformVersion</code>: { <code>isString</code>: <code>true</code> = true } ; <code>printPageSourceOnFindFailure</code>: { <code>isBoolean</code>: <code>true</code> = true } ; <code>udid</code>: { <code>isString</code>: <code>true</code> = true } ; <code>webSocketUrl</code>: { <code>isString</code>: <code>true</code> = true }  }, <code>void</code>&gt;[]&gt;</p> <p>A list of session data objects</p>"},{"location":"reference/interfaces/appium_types.Driver/#inherited-from_45","title":"Inherited from","text":"<p>ISessionCommands.getSessions</p>"},{"location":"reference/interfaces/appium_types.Driver/#defined-in_51","title":"Defined in","text":"<p>packages/types/lib/driver.ts:166</p>"},{"location":"reference/interfaces/appium_types.Driver/#getsettings","title":"getSettings","text":"<p>\u25b8 getSettings(): <code>Promise</code>&lt;<code>StringRecord</code>&gt;</p> <p>Get the current settings for the session</p>"},{"location":"reference/interfaces/appium_types.Driver/#returns_27","title":"Returns","text":"<p><code>Promise</code>&lt;<code>StringRecord</code>&gt;</p> <p>The settings object</p>"},{"location":"reference/interfaces/appium_types.Driver/#inherited-from_46","title":"Inherited from","text":"<p>ISettingsCommands.getSettings</p>"},{"location":"reference/interfaces/appium_types.Driver/#defined-in_52","title":"Defined in","text":"<p>packages/types/lib/driver.ts:395</p>"},{"location":"reference/interfaces/appium_types.Driver/#getstatus","title":"getStatus","text":"<p>\u25b8 getStatus(): <code>Promise</code>&lt;<code>any</code>&gt;</p> <p><code>Summary</code></p> <p>Retrieve the server's current status.</p> <p><code>Description</code></p> <p>Returns information about whether a remote end is in a state in which it can create new sessions and can additionally include arbitrary meta information that is specific to the implementation.</p> <p>The readiness state is represented by the ready property of the body, which is false if an attempt to create a session at the current time would fail. However, the value true does not guarantee that a New Session command will succeed.</p> <p>Implementations may optionally include additional meta information as part of the body, but the top-level properties ready and message are reserved and must not be overwritten.</p> <p><code>Example</code></p> <pre><code>// webdriver.io example\nawait driver.status();\n</code></pre> <pre><code>driver.get_status()\n</code></pre> <pre><code>driver.getStatus();\n</code></pre> <pre><code># ruby_lib example\nremote_status\n# ruby_lib_core example\n@driver.remote_status\n</code></pre>"},{"location":"reference/interfaces/appium_types.Driver/#returns_28","title":"Returns","text":"<p><code>Promise</code>&lt;<code>any</code>&gt;</p>"},{"location":"reference/interfaces/appium_types.Driver/#inherited-from_47","title":"Inherited from","text":"<p>Core.getStatus</p>"},{"location":"reference/interfaces/appium_types.Driver/#defined-in_53","title":"Defined in","text":"<p>packages/types/lib/driver.ts:642</p>"},{"location":"reference/interfaces/appium_types.Driver/#gettimeouts","title":"getTimeouts","text":"<p>\u25b8 getTimeouts(): <code>Promise</code>&lt;<code>Record</code>&lt;<code>string</code>, <code>number</code>&gt;&gt;</p> <p>Get the current timeouts</p> <p><code>See</code></p> <p>https://w3c.github.io/webdriver/#get-timeouts</p>"},{"location":"reference/interfaces/appium_types.Driver/#returns_29","title":"Returns","text":"<p><code>Promise</code>&lt;<code>Record</code>&lt;<code>string</code>, <code>number</code>&gt;&gt;</p> <p>A map of timeout names to ms values</p>"},{"location":"reference/interfaces/appium_types.Driver/#inherited-from_48","title":"Inherited from","text":"<p>ITimeoutCommands.getTimeouts</p>"},{"location":"reference/interfaces/appium_types.Driver/#defined-in_54","title":"Defined in","text":"<p>packages/types/lib/driver.ts:77</p>"},{"location":"reference/interfaces/appium_types.Driver/#implicitwait","title":"implicitWait","text":"<p>\u25b8 implicitWait(<code>ms</code>): <code>Promise</code>&lt;<code>void</code>&gt;</p> <p>Set the implicit wait timeout</p> <p><code>Deprecated</code></p> <p>Use <code>timeouts</code> instead</p>"},{"location":"reference/interfaces/appium_types.Driver/#parameters_21","title":"Parameters","text":"Name Type Description <code>ms</code> <code>string</code> | <code>number</code> the timeout in ms"},{"location":"reference/interfaces/appium_types.Driver/#returns_30","title":"Returns","text":"<p><code>Promise</code>&lt;<code>void</code>&gt;</p>"},{"location":"reference/interfaces/appium_types.Driver/#inherited-from_49","title":"Inherited from","text":"<p>ITimeoutCommands.implicitWait</p>"},{"location":"reference/interfaces/appium_types.Driver/#defined-in_55","title":"Defined in","text":"<p>packages/types/lib/driver.ts:53</p>"},{"location":"reference/interfaces/appium_types.Driver/#implicitwaitforcondition","title":"implicitWaitForCondition","text":"<p>\u25b8 implicitWaitForCondition(<code>condition</code>): <code>Promise</code>&lt;<code>unknown</code>&gt;</p> <p>Periodically retry an async function up until the currently set implicit wait timeout</p>"},{"location":"reference/interfaces/appium_types.Driver/#parameters_22","title":"Parameters","text":"Name Type Description <code>condition</code> () =&gt; <code>Promise</code>&lt;<code>any</code>&gt; the behaviour to retry until it returns truthy"},{"location":"reference/interfaces/appium_types.Driver/#returns_31","title":"Returns","text":"<p><code>Promise</code>&lt;<code>unknown</code>&gt;</p> <p>The return value of the condition</p>"},{"location":"reference/interfaces/appium_types.Driver/#inherited-from_50","title":"Inherited from","text":"<p>ITimeoutCommands.implicitWaitForCondition</p>"},{"location":"reference/interfaces/appium_types.Driver/#defined-in_56","title":"Defined in","text":"<p>packages/types/lib/driver.ts:69</p>"},{"location":"reference/interfaces/appium_types.Driver/#implicitwaitmjsonwp","title":"implicitWaitMJSONWP","text":"<p>\u25b8 implicitWaitMJSONWP(<code>ms</code>): <code>Promise</code>&lt;<code>void</code>&gt;</p> <p>Set the implicit wait value that was sent in via the JSONWP</p> <p><code>Deprecated</code></p>"},{"location":"reference/interfaces/appium_types.Driver/#parameters_23","title":"Parameters","text":"Name Type Description <code>ms</code> <code>number</code> the timeout in ms"},{"location":"reference/interfaces/appium_types.Driver/#returns_32","title":"Returns","text":"<p><code>Promise</code>&lt;<code>void</code>&gt;</p>"},{"location":"reference/interfaces/appium_types.Driver/#inherited-from_51","title":"Inherited from","text":"<p>ITimeoutCommands.implicitWaitMJSONWP</p>"},{"location":"reference/interfaces/appium_types.Driver/#defined-in_57","title":"Defined in","text":"<p>packages/types/lib/driver.ts:92</p>"},{"location":"reference/interfaces/appium_types.Driver/#implicitwaitw3c","title":"implicitWaitW3C","text":"<p>\u25b8 implicitWaitW3C(<code>ms</code>): <code>Promise</code>&lt;<code>void</code>&gt;</p> <p>Set the implicit wait value that was sent in via the W3C protocol</p>"},{"location":"reference/interfaces/appium_types.Driver/#parameters_24","title":"Parameters","text":"Name Type Description <code>ms</code> <code>number</code> the timeout in ms"},{"location":"reference/interfaces/appium_types.Driver/#returns_33","title":"Returns","text":"<p><code>Promise</code>&lt;<code>void</code>&gt;</p>"},{"location":"reference/interfaces/appium_types.Driver/#inherited-from_52","title":"Inherited from","text":"<p>ITimeoutCommands.implicitWaitW3C</p>"},{"location":"reference/interfaces/appium_types.Driver/#defined-in_58","title":"Defined in","text":"<p>packages/types/lib/driver.ts:84</p>"},{"location":"reference/interfaces/appium_types.Driver/#isfeatureenabled","title":"isFeatureEnabled","text":"<p>\u25b8 isFeatureEnabled(<code>name</code>): <code>boolean</code></p>"},{"location":"reference/interfaces/appium_types.Driver/#parameters_25","title":"Parameters","text":"Name Type <code>name</code> <code>string</code>"},{"location":"reference/interfaces/appium_types.Driver/#returns_34","title":"Returns","text":"<p><code>boolean</code></p>"},{"location":"reference/interfaces/appium_types.Driver/#inherited-from_53","title":"Inherited from","text":"<p>Core.isFeatureEnabled</p>"},{"location":"reference/interfaces/appium_types.Driver/#defined-in_59","title":"Defined in","text":"<p>packages/types/lib/driver.ts:646</p>"},{"location":"reference/interfaces/appium_types.Driver/#ismjsonwpprotocol","title":"isMjsonwpProtocol","text":"<p>\u25b8 isMjsonwpProtocol(): <code>boolean</code></p>"},{"location":"reference/interfaces/appium_types.Driver/#returns_35","title":"Returns","text":"<p><code>boolean</code></p>"},{"location":"reference/interfaces/appium_types.Driver/#inherited-from_54","title":"Inherited from","text":"<p>Core.isMjsonwpProtocol</p>"},{"location":"reference/interfaces/appium_types.Driver/#defined-in_60","title":"Defined in","text":"<p>packages/types/lib/driver.ts:645</p>"},{"location":"reference/interfaces/appium_types.Driver/#isw3cprotocol","title":"isW3CProtocol","text":"<p>\u25b8 isW3CProtocol(): <code>boolean</code></p>"},{"location":"reference/interfaces/appium_types.Driver/#returns_36","title":"Returns","text":"<p><code>boolean</code></p>"},{"location":"reference/interfaces/appium_types.Driver/#inherited-from_55","title":"Inherited from","text":"<p>Core.isW3CProtocol</p>"},{"location":"reference/interfaces/appium_types.Driver/#defined-in_61","title":"Defined in","text":"<p>packages/types/lib/driver.ts:644</p>"},{"location":"reference/interfaces/appium_types.Driver/#logcustomevent","title":"logCustomEvent","text":"<p>\u25b8 logCustomEvent(<code>vendor</code>, <code>event</code>): <code>Promise</code>&lt;<code>void</code>&gt;</p> <p>Add a custom-named event to the Appium event log</p>"},{"location":"reference/interfaces/appium_types.Driver/#parameters_26","title":"Parameters","text":"Name Type Description <code>vendor</code> <code>string</code> the name of the vendor or tool the event belongs to, to namespace the event <code>event</code> <code>string</code> the name of the event itself"},{"location":"reference/interfaces/appium_types.Driver/#returns_37","title":"Returns","text":"<p><code>Promise</code>&lt;<code>void</code>&gt;</p>"},{"location":"reference/interfaces/appium_types.Driver/#inherited-from_56","title":"Inherited from","text":"<p>IEventCommands.logCustomEvent</p>"},{"location":"reference/interfaces/appium_types.Driver/#defined-in_62","title":"Defined in","text":"<p>packages/types/lib/driver.ts:148</p>"},{"location":"reference/interfaces/appium_types.Driver/#logevent","title":"logEvent","text":"<p>\u25b8 logEvent(<code>eventName</code>): <code>void</code></p>"},{"location":"reference/interfaces/appium_types.Driver/#parameters_27","title":"Parameters","text":"Name Type <code>eventName</code> <code>string</code>"},{"location":"reference/interfaces/appium_types.Driver/#returns_38","title":"Returns","text":"<p><code>void</code></p>"},{"location":"reference/interfaces/appium_types.Driver/#inherited-from_57","title":"Inherited from","text":"<p>Core.logEvent</p>"},{"location":"reference/interfaces/appium_types.Driver/#defined-in_63","title":"Defined in","text":"<p>packages/types/lib/driver.ts:656</p>"},{"location":"reference/interfaces/appium_types.Driver/#logextracaps","title":"logExtraCaps","text":"<p>\u25b8 logExtraCaps(<code>caps</code>): <code>void</code></p> <p>A helper function to log unrecognized capabilities to the console</p> <p><code>Params</code></p> <p>caps - the capabilities</p>"},{"location":"reference/interfaces/appium_types.Driver/#parameters_28","title":"Parameters","text":"Name Type <code>caps</code> <code>Partial</code>&lt;<code>ConstraintsToCaps</code>&lt;<code>C</code>&gt; &amp; <code>void</code>&gt;"},{"location":"reference/interfaces/appium_types.Driver/#returns_39","title":"Returns","text":"<p><code>void</code></p>"},{"location":"reference/interfaces/appium_types.Driver/#defined-in_64","title":"Defined in","text":"<p>packages/types/lib/driver.ts:752</p>"},{"location":"reference/interfaces/appium_types.Driver/#newcommandtimeout","title":"newCommandTimeout","text":"<p>\u25b8 newCommandTimeout(<code>ms</code>): <code>Promise</code>&lt;<code>void</code>&gt;</p> <p>Set Appium's new command timeout</p>"},{"location":"reference/interfaces/appium_types.Driver/#parameters_29","title":"Parameters","text":"Name Type Description <code>ms</code> <code>number</code> the timeout in ms"},{"location":"reference/interfaces/appium_types.Driver/#returns_40","title":"Returns","text":"<p><code>Promise</code>&lt;<code>void</code>&gt;</p>"},{"location":"reference/interfaces/appium_types.Driver/#inherited-from_58","title":"Inherited from","text":"<p>ITimeoutCommands.newCommandTimeout</p>"},{"location":"reference/interfaces/appium_types.Driver/#defined-in_65","title":"Defined in","text":"<p>packages/types/lib/driver.ts:129</p>"},{"location":"reference/interfaces/appium_types.Driver/#onunexpectedshutdown","title":"onUnexpectedShutdown","text":"<p>\u25b8 onUnexpectedShutdown(<code>handler</code>): <code>void</code></p>"},{"location":"reference/interfaces/appium_types.Driver/#parameters_30","title":"Parameters","text":"Name Type <code>handler</code> () =&gt; <code>any</code>"},{"location":"reference/interfaces/appium_types.Driver/#returns_41","title":"Returns","text":"<p><code>void</code></p>"},{"location":"reference/interfaces/appium_types.Driver/#inherited-from_59","title":"Inherited from","text":"<p>Core.onUnexpectedShutdown</p>"},{"location":"reference/interfaces/appium_types.Driver/#defined-in_66","title":"Defined in","text":"<p>packages/types/lib/driver.ts:610</p>"},{"location":"reference/interfaces/appium_types.Driver/#pageloadtimeoutmjsonwp","title":"pageLoadTimeoutMJSONWP","text":"<p>\u25b8 pageLoadTimeoutMJSONWP(<code>ms</code>): <code>Promise</code>&lt;<code>void</code>&gt;</p> <p>Set the page load timeout value that was sent in via the JSONWP</p> <p><code>Deprecated</code></p>"},{"location":"reference/interfaces/appium_types.Driver/#parameters_31","title":"Parameters","text":"Name Type Description <code>ms</code> <code>number</code> the timeout in ms"},{"location":"reference/interfaces/appium_types.Driver/#returns_42","title":"Returns","text":"<p><code>Promise</code>&lt;<code>void</code>&gt;</p>"},{"location":"reference/interfaces/appium_types.Driver/#inherited-from_60","title":"Inherited from","text":"<p>ITimeoutCommands.pageLoadTimeoutMJSONWP</p>"},{"location":"reference/interfaces/appium_types.Driver/#defined-in_67","title":"Defined in","text":"<p>packages/types/lib/driver.ts:107</p>"},{"location":"reference/interfaces/appium_types.Driver/#pageloadtimeoutw3c","title":"pageLoadTimeoutW3C","text":"<p>\u25b8 pageLoadTimeoutW3C(<code>ms</code>): <code>Promise</code>&lt;<code>void</code>&gt;</p> <p>Set the page load timeout value that was sent in via the W3C protocol</p>"},{"location":"reference/interfaces/appium_types.Driver/#parameters_32","title":"Parameters","text":"Name Type Description <code>ms</code> <code>number</code> the timeout in ms"},{"location":"reference/interfaces/appium_types.Driver/#returns_43","title":"Returns","text":"<p><code>Promise</code>&lt;<code>void</code>&gt;</p>"},{"location":"reference/interfaces/appium_types.Driver/#inherited-from_61","title":"Inherited from","text":"<p>ITimeoutCommands.pageLoadTimeoutW3C</p>"},{"location":"reference/interfaces/appium_types.Driver/#defined-in_68","title":"Defined in","text":"<p>packages/types/lib/driver.ts:99</p>"},{"location":"reference/interfaces/appium_types.Driver/#parsetimeoutargument","title":"parseTimeoutArgument","text":"<p>\u25b8 parseTimeoutArgument(<code>ms</code>): <code>number</code></p> <p>Get a timeout value from a number or a string</p>"},{"location":"reference/interfaces/appium_types.Driver/#parameters_33","title":"Parameters","text":"Name Type Description <code>ms</code> <code>string</code> | <code>number</code> the timeout value as a number or a string"},{"location":"reference/interfaces/appium_types.Driver/#returns_44","title":"Returns","text":"<p><code>number</code></p> <p>The timeout as a number in ms</p>"},{"location":"reference/interfaces/appium_types.Driver/#inherited-from_62","title":"Inherited from","text":"<p>ITimeoutCommands.parseTimeoutArgument</p>"},{"location":"reference/interfaces/appium_types.Driver/#defined-in_69","title":"Defined in","text":"<p>packages/types/lib/driver.ts:138</p>"},{"location":"reference/interfaces/appium_types.Driver/#proxyactive","title":"proxyActive","text":"<p>\u25b8 proxyActive(<code>sessionId?</code>): <code>boolean</code></p>"},{"location":"reference/interfaces/appium_types.Driver/#parameters_34","title":"Parameters","text":"Name Type <code>sessionId?</code> <code>string</code>"},{"location":"reference/interfaces/appium_types.Driver/#returns_45","title":"Returns","text":"<p><code>boolean</code></p>"},{"location":"reference/interfaces/appium_types.Driver/#inherited-from_63","title":"Inherited from","text":"<p>Core.proxyActive</p>"},{"location":"reference/interfaces/appium_types.Driver/#defined-in_70","title":"Defined in","text":"<p>packages/types/lib/driver.ts:649</p>"},{"location":"reference/interfaces/appium_types.Driver/#proxyrouteisavoided","title":"proxyRouteIsAvoided","text":"<p>\u25b8 proxyRouteIsAvoided(<code>sessionId</code>, <code>method</code>, <code>url</code>): <code>boolean</code></p>"},{"location":"reference/interfaces/appium_types.Driver/#parameters_35","title":"Parameters","text":"Name Type <code>sessionId</code> <code>string</code> <code>method</code> <code>string</code> <code>url</code> <code>string</code>"},{"location":"reference/interfaces/appium_types.Driver/#returns_46","title":"Returns","text":"<p><code>boolean</code></p>"},{"location":"reference/interfaces/appium_types.Driver/#inherited-from_64","title":"Inherited from","text":"<p>Core.proxyRouteIsAvoided</p>"},{"location":"reference/interfaces/appium_types.Driver/#defined-in_71","title":"Defined in","text":"<p>packages/types/lib/driver.ts:652</p>"},{"location":"reference/interfaces/appium_types.Driver/#reset","title":"reset","text":"<p>\u25b8 reset(): <code>Promise</code>&lt;<code>void</code>&gt;</p> <p>Reset the current session (run the delete session and create session subroutines)</p> <p><code>Deprecated</code></p> <p>Use explicit session management commands instead</p>"},{"location":"reference/interfaces/appium_types.Driver/#returns_47","title":"Returns","text":"<p><code>Promise</code>&lt;<code>void</code>&gt;</p>"},{"location":"reference/interfaces/appium_types.Driver/#defined-in_72","title":"Defined in","text":"<p>packages/types/lib/driver.ts:717</p>"},{"location":"reference/interfaces/appium_types.Driver/#scripttimeoutmjsonwp","title":"scriptTimeoutMJSONWP","text":"<p>\u25b8 scriptTimeoutMJSONWP(<code>ms</code>): <code>Promise</code>&lt;<code>void</code>&gt;</p> <p>Set the script timeout value that was sent in via the JSONWP</p> <p><code>Deprecated</code></p>"},{"location":"reference/interfaces/appium_types.Driver/#parameters_36","title":"Parameters","text":"Name Type Description <code>ms</code> <code>number</code> the timeout in ms"},{"location":"reference/interfaces/appium_types.Driver/#returns_48","title":"Returns","text":"<p><code>Promise</code>&lt;<code>void</code>&gt;</p>"},{"location":"reference/interfaces/appium_types.Driver/#inherited-from_65","title":"Inherited from","text":"<p>ITimeoutCommands.scriptTimeoutMJSONWP</p>"},{"location":"reference/interfaces/appium_types.Driver/#defined-in_73","title":"Defined in","text":"<p>packages/types/lib/driver.ts:122</p>"},{"location":"reference/interfaces/appium_types.Driver/#scripttimeoutw3c","title":"scriptTimeoutW3C","text":"<p>\u25b8 scriptTimeoutW3C(<code>ms</code>): <code>Promise</code>&lt;<code>void</code>&gt;</p> <p>Set the script timeout value that was sent in via the W3C protocol</p>"},{"location":"reference/interfaces/appium_types.Driver/#parameters_37","title":"Parameters","text":"Name Type Description <code>ms</code> <code>number</code> the timeout in ms"},{"location":"reference/interfaces/appium_types.Driver/#returns_49","title":"Returns","text":"<p><code>Promise</code>&lt;<code>void</code>&gt;</p>"},{"location":"reference/interfaces/appium_types.Driver/#inherited-from_66","title":"Inherited from","text":"<p>ITimeoutCommands.scriptTimeoutW3C</p>"},{"location":"reference/interfaces/appium_types.Driver/#defined-in_74","title":"Defined in","text":"<p>packages/types/lib/driver.ts:114</p>"},{"location":"reference/interfaces/appium_types.Driver/#sessionexists","title":"sessionExists","text":"<p>\u25b8 sessionExists(<code>sessionId</code>): <code>boolean</code></p>"},{"location":"reference/interfaces/appium_types.Driver/#parameters_38","title":"Parameters","text":"Name Type <code>sessionId</code> <code>string</code>"},{"location":"reference/interfaces/appium_types.Driver/#returns_50","title":"Returns","text":"<p><code>boolean</code></p>"},{"location":"reference/interfaces/appium_types.Driver/#inherited-from_67","title":"Inherited from","text":"<p>Core.sessionExists</p>"},{"location":"reference/interfaces/appium_types.Driver/#defined-in_75","title":"Defined in","text":"<p>packages/types/lib/driver.ts:643</p>"},{"location":"reference/interfaces/appium_types.Driver/#setimplicitwait","title":"setImplicitWait","text":"<p>\u25b8 setImplicitWait(<code>ms</code>): <code>void</code></p> <p>A helper method (not a command) used to set the implicit wait value</p>"},{"location":"reference/interfaces/appium_types.Driver/#parameters_39","title":"Parameters","text":"Name Type Description <code>ms</code> <code>number</code> the implicit wait in ms"},{"location":"reference/interfaces/appium_types.Driver/#returns_51","title":"Returns","text":"<p><code>void</code></p>"},{"location":"reference/interfaces/appium_types.Driver/#inherited-from_68","title":"Inherited from","text":"<p>ITimeoutCommands.setImplicitWait</p>"},{"location":"reference/interfaces/appium_types.Driver/#defined-in_76","title":"Defined in","text":"<p>packages/types/lib/driver.ts:60</p>"},{"location":"reference/interfaces/appium_types.Driver/#setnewcommandtimeout","title":"setNewCommandTimeout","text":"<p>\u25b8 setNewCommandTimeout(<code>ms</code>): <code>void</code></p> <p>Set the new command timeout</p>"},{"location":"reference/interfaces/appium_types.Driver/#parameters_40","title":"Parameters","text":"Name Type Description <code>ms</code> <code>number</code> the timeout in ms"},{"location":"reference/interfaces/appium_types.Driver/#returns_52","title":"Returns","text":"<p><code>void</code></p>"},{"location":"reference/interfaces/appium_types.Driver/#inherited-from_69","title":"Inherited from","text":"<p>ITimeoutCommands.setNewCommandTimeout</p>"},{"location":"reference/interfaces/appium_types.Driver/#defined-in_77","title":"Defined in","text":"<p>packages/types/lib/driver.ts:44</p>"},{"location":"reference/interfaces/appium_types.Driver/#startnewcommandtimeout","title":"startNewCommandTimeout","text":"<p>\u25b8 startNewCommandTimeout(): <code>Promise</code>&lt;<code>void</code>&gt;</p> <p>Start the timer for the New Command Timeout, which when it runs out, will stop the current session</p>"},{"location":"reference/interfaces/appium_types.Driver/#returns_53","title":"Returns","text":"<p><code>Promise</code>&lt;<code>void</code>&gt;</p>"},{"location":"reference/interfaces/appium_types.Driver/#defined-in_78","title":"Defined in","text":"<p>packages/types/lib/driver.ts:710</p>"},{"location":"reference/interfaces/appium_types.Driver/#startunexpectedshutdown","title":"startUnexpectedShutdown","text":"<p>\u25b8 startUnexpectedShutdown(<code>err?</code>): <code>Promise</code>&lt;<code>void</code>&gt;</p> <p>Signify to any owning processes that this driver encountered an error which should cause the session to terminate immediately (for example an upstream service failed)</p>"},{"location":"reference/interfaces/appium_types.Driver/#parameters_41","title":"Parameters","text":"Name Type Description <code>err?</code> <code>Error</code> the Error object which is causing the shutdown"},{"location":"reference/interfaces/appium_types.Driver/#returns_54","title":"Returns","text":"<p><code>Promise</code>&lt;<code>void</code>&gt;</p>"},{"location":"reference/interfaces/appium_types.Driver/#defined-in_79","title":"Defined in","text":"<p>packages/types/lib/driver.ts:704</p>"},{"location":"reference/interfaces/appium_types.Driver/#timeouts","title":"timeouts","text":"<p>\u25b8 timeouts(<code>type</code>, <code>ms</code>, <code>script?</code>, <code>pageLoad?</code>, <code>implicit?</code>): <code>Promise</code>&lt;<code>void</code>&gt;</p> <p>Set the various timeouts associated with a session</p> <p><code>See</code></p> <p>https://w3c.github.io/webdriver/#set-timeouts</p>"},{"location":"reference/interfaces/appium_types.Driver/#parameters_42","title":"Parameters","text":"Name Type Description <code>type</code> <code>string</code> used only for the old (JSONWP) command, the type of the timeout <code>ms</code> <code>string</code> | <code>number</code> used only for the old (JSONWP) command, the ms for the timeout <code>script?</code> <code>number</code> the number in ms for the script timeout, used for the W3C command <code>pageLoad?</code> <code>number</code> the number in ms for the pageLoad timeout, used for the W3C command <code>implicit?</code> <code>string</code> | <code>number</code> the number in ms for the implicit wait timeout, used for the W3C command"},{"location":"reference/interfaces/appium_types.Driver/#returns_55","title":"Returns","text":"<p><code>Promise</code>&lt;<code>void</code>&gt;</p>"},{"location":"reference/interfaces/appium_types.Driver/#inherited-from_70","title":"Inherited from","text":"<p>ITimeoutCommands.timeouts</p>"},{"location":"reference/interfaces/appium_types.Driver/#defined-in_80","title":"Defined in","text":"<p>packages/types/lib/driver.ts:31</p>"},{"location":"reference/interfaces/appium_types.Driver/#validatedesiredcaps","title":"validateDesiredCaps","text":"<p>\u25b8 validateDesiredCaps(<code>caps</code>): <code>boolean</code></p> <p>Validate the capabilities used to start a session</p>"},{"location":"reference/interfaces/appium_types.Driver/#parameters_43","title":"Parameters","text":"Name Type Description <code>caps</code> <code>Partial</code>&lt;<code>ConstraintsToCaps</code>&lt;<code>C</code>&gt; &amp; <code>void</code>&gt; the capabilities"},{"location":"reference/interfaces/appium_types.Driver/#returns_56","title":"Returns","text":"<p><code>boolean</code></p> <p>Whether or not the capabilities are valid</p>"},{"location":"reference/interfaces/appium_types.Driver/#defined-in_81","title":"Defined in","text":"<p>packages/types/lib/driver.ts:743</p>"},{"location":"reference/interfaces/appium_types.Driver/#validatelocatorstrategy","title":"validateLocatorStrategy","text":"<p>\u25b8 validateLocatorStrategy(<code>strategy</code>, <code>webContext?</code>): <code>void</code></p>"},{"location":"reference/interfaces/appium_types.Driver/#parameters_44","title":"Parameters","text":"Name Type <code>strategy</code> <code>string</code> <code>webContext?</code> <code>boolean</code>"},{"location":"reference/interfaces/appium_types.Driver/#returns_57","title":"Returns","text":"<p><code>void</code></p>"},{"location":"reference/interfaces/appium_types.Driver/#inherited-from_71","title":"Inherited from","text":"<p>Core.validateLocatorStrategy</p>"},{"location":"reference/interfaces/appium_types.Driver/#defined-in_82","title":"Defined in","text":"<p>packages/types/lib/driver.ts:648</p>"},{"location":"reference/interfaces/appium_types.DriverConfig/","title":"Interface: DriverConfig","text":"<p>@appium/types.DriverConfig</p> <p>Driver-specific configuration. Keys should correspond to driver package names</p>"},{"location":"reference/interfaces/appium_types.DriverConfig/#indexable","title":"Indexable","text":"<p>\u25aa [k: <code>string</code>]: <code>unknown</code></p>"},{"location":"reference/interfaces/appium_types.DriverHelpers/","title":"Interface: DriverHelpers&lt;C&gt;","text":"<p>@appium/types.DriverHelpers</p>"},{"location":"reference/interfaces/appium_types.DriverHelpers/#type-parameters","title":"Type parameters","text":"Name Type <code>C</code> extends <code>Constraints</code>"},{"location":"reference/interfaces/appium_types.DriverHelpers/#table-of-contents","title":"Table of contents","text":""},{"location":"reference/interfaces/appium_types.DriverHelpers/#properties","title":"Properties","text":"<ul> <li>configureApp</li> <li>duplicateKeys</li> <li>generateDriverLogPrefix</li> <li>isPackageOrBundle</li> <li>parseCapsArray</li> </ul>"},{"location":"reference/interfaces/appium_types.DriverHelpers/#properties_1","title":"Properties","text":""},{"location":"reference/interfaces/appium_types.DriverHelpers/#configureapp","title":"configureApp","text":"<p>\u2022 configureApp: (<code>app</code>: <code>string</code>, <code>supportedAppExtensions</code>: <code>string</code>[]) =&gt; <code>Promise</code>&lt;<code>string</code>&gt;</p>"},{"location":"reference/interfaces/appium_types.DriverHelpers/#type-declaration","title":"Type declaration","text":"<p>\u25b8 (<code>app</code>, <code>supportedAppExtensions</code>): <code>Promise</code>&lt;<code>string</code>&gt;</p>"},{"location":"reference/interfaces/appium_types.DriverHelpers/#parameters","title":"Parameters","text":"Name Type <code>app</code> <code>string</code> <code>supportedAppExtensions</code> <code>string</code>[]"},{"location":"reference/interfaces/appium_types.DriverHelpers/#returns","title":"Returns","text":"<p><code>Promise</code>&lt;<code>string</code>&gt;</p>"},{"location":"reference/interfaces/appium_types.DriverHelpers/#defined-in","title":"Defined in","text":"<p>packages/types/lib/driver.ts:470</p>"},{"location":"reference/interfaces/appium_types.DriverHelpers/#duplicatekeys","title":"duplicateKeys","text":"<p>\u2022 duplicateKeys: (<code>input</code>: <code>T</code>, <code>firstKey</code>: <code>string</code>, <code>secondKey</code>: <code>string</code>) =&gt; <code>T</code>"},{"location":"reference/interfaces/appium_types.DriverHelpers/#type-declaration_1","title":"Type declaration","text":"<p>\u25b8 &lt;<code>T</code>&gt;(<code>input</code>, <code>firstKey</code>, <code>secondKey</code>): <code>T</code></p>"},{"location":"reference/interfaces/appium_types.DriverHelpers/#type-parameters_1","title":"Type parameters","text":"Name <code>T</code>"},{"location":"reference/interfaces/appium_types.DriverHelpers/#parameters_1","title":"Parameters","text":"Name Type <code>input</code> <code>T</code> <code>firstKey</code> <code>string</code> <code>secondKey</code> <code>string</code>"},{"location":"reference/interfaces/appium_types.DriverHelpers/#returns_1","title":"Returns","text":"<p><code>T</code></p>"},{"location":"reference/interfaces/appium_types.DriverHelpers/#defined-in_1","title":"Defined in","text":"<p>packages/types/lib/driver.ts:472</p>"},{"location":"reference/interfaces/appium_types.DriverHelpers/#generatedriverlogprefix","title":"generateDriverLogPrefix","text":"<p>\u2022 generateDriverLogPrefix: (<code>obj</code>: <code>Core</code>&lt;<code>C</code>&gt;, <code>sessionId?</code>: <code>string</code>) =&gt; <code>string</code></p>"},{"location":"reference/interfaces/appium_types.DriverHelpers/#type-declaration_2","title":"Type declaration","text":"<p>\u25b8 (<code>obj</code>, <code>sessionId?</code>): <code>string</code></p>"},{"location":"reference/interfaces/appium_types.DriverHelpers/#parameters_2","title":"Parameters","text":"Name Type <code>obj</code> <code>Core</code>&lt;<code>C</code>&gt; <code>sessionId?</code> <code>string</code>"},{"location":"reference/interfaces/appium_types.DriverHelpers/#returns_2","title":"Returns","text":"<p><code>string</code></p>"},{"location":"reference/interfaces/appium_types.DriverHelpers/#defined-in_2","title":"Defined in","text":"<p>packages/types/lib/driver.ts:474</p>"},{"location":"reference/interfaces/appium_types.DriverHelpers/#ispackageorbundle","title":"isPackageOrBundle","text":"<p>\u2022 isPackageOrBundle: (<code>app</code>: <code>string</code>) =&gt; <code>boolean</code></p>"},{"location":"reference/interfaces/appium_types.DriverHelpers/#type-declaration_3","title":"Type declaration","text":"<p>\u25b8 (<code>app</code>): <code>boolean</code></p>"},{"location":"reference/interfaces/appium_types.DriverHelpers/#parameters_3","title":"Parameters","text":"Name Type <code>app</code> <code>string</code>"},{"location":"reference/interfaces/appium_types.DriverHelpers/#returns_3","title":"Returns","text":"<p><code>boolean</code></p>"},{"location":"reference/interfaces/appium_types.DriverHelpers/#defined-in_3","title":"Defined in","text":"<p>packages/types/lib/driver.ts:471</p>"},{"location":"reference/interfaces/appium_types.DriverHelpers/#parsecapsarray","title":"parseCapsArray","text":"<p>\u2022 parseCapsArray: (<code>cap</code>: <code>string</code> | <code>string</code>[]) =&gt; <code>string</code>[]</p>"},{"location":"reference/interfaces/appium_types.DriverHelpers/#type-declaration_4","title":"Type declaration","text":"<p>\u25b8 (<code>cap</code>): <code>string</code>[]</p>"},{"location":"reference/interfaces/appium_types.DriverHelpers/#parameters_4","title":"Parameters","text":"Name Type <code>cap</code> <code>string</code> | <code>string</code>[]"},{"location":"reference/interfaces/appium_types.DriverHelpers/#returns_4","title":"Returns","text":"<p><code>string</code>[]</p>"},{"location":"reference/interfaces/appium_types.DriverHelpers/#defined-in_4","title":"Defined in","text":"<p>packages/types/lib/driver.ts:473</p>"},{"location":"reference/interfaces/appium_types.DriverStatic/","title":"Interface: DriverStatic&lt;D&gt;","text":"<p>@appium/types.DriverStatic</p> <p>Static members of a <code>DriverClass</code>.</p> <p>This is likely unusable by external consumers, but YMMV!</p>"},{"location":"reference/interfaces/appium_types.DriverStatic/#type-parameters","title":"Type parameters","text":"Name Type <code>D</code> extends <code>Driver</code>"},{"location":"reference/interfaces/appium_types.DriverStatic/#table-of-contents","title":"Table of contents","text":""},{"location":"reference/interfaces/appium_types.DriverStatic/#properties","title":"Properties","text":"<ul> <li>baseVersion</li> <li>executeMethodMap</li> <li>newMethodMap</li> <li>updateServer</li> </ul>"},{"location":"reference/interfaces/appium_types.DriverStatic/#properties_1","title":"Properties","text":""},{"location":"reference/interfaces/appium_types.DriverStatic/#baseversion","title":"baseVersion","text":"<p>\u2022 baseVersion: <code>string</code></p>"},{"location":"reference/interfaces/appium_types.DriverStatic/#defined-in","title":"Defined in","text":"<p>packages/types/lib/driver.ts:2209</p>"},{"location":"reference/interfaces/appium_types.DriverStatic/#executemethodmap","title":"executeMethodMap","text":"<p>\u2022 <code>Optional</code> executeMethodMap: <code>Readonly</code>&lt;<code>Record</code>&lt;<code>string</code>, <code>Readonly</code>&lt;<code>ExecuteMethodDef</code>&lt;<code>D</code>&gt;&gt;&gt;&gt;</p>"},{"location":"reference/interfaces/appium_types.DriverStatic/#defined-in_1","title":"Defined in","text":"<p>packages/types/lib/driver.ts:2212</p>"},{"location":"reference/interfaces/appium_types.DriverStatic/#newmethodmap","title":"newMethodMap","text":"<p>\u2022 <code>Optional</code> newMethodMap: <code>Readonly</code>&lt;<code>Record</code>&lt;<code>string</code>, { <code>DELETE?</code>: <code>MethodDef</code>&lt;<code>D</code>&gt; ; <code>GET?</code>: <code>MethodDef</code>&lt;<code>D</code>&gt; ; <code>POST?</code>: <code>MethodDef</code>&lt;<code>D</code>&gt;  }&gt;&gt;</p>"},{"location":"reference/interfaces/appium_types.DriverStatic/#defined-in_2","title":"Defined in","text":"<p>packages/types/lib/driver.ts:2211</p>"},{"location":"reference/interfaces/appium_types.DriverStatic/#updateserver","title":"updateServer","text":"<p>\u2022 <code>Optional</code> updateServer: <code>UpdateServerCallback</code></p>"},{"location":"reference/interfaces/appium_types.DriverStatic/#defined-in_3","title":"Defined in","text":"<p>packages/types/lib/driver.ts:2210</p>"},{"location":"reference/interfaces/appium_types.Element/","title":"Interface: Element","text":"<p>@appium/types.Element</p>"},{"location":"reference/interfaces/appium_types.Element/#table-of-contents","title":"Table of contents","text":""},{"location":"reference/interfaces/appium_types.Element/#properties","title":"Properties","text":"<ul> <li>element-6066-11e4-a52e-4f735466cecf</li> </ul>"},{"location":"reference/interfaces/appium_types.Element/#properties_1","title":"Properties","text":""},{"location":"reference/interfaces/appium_types.Element/#element-6066-11e4-a52e-4f735466cecf","title":"element-6066-11e4-a52e-4f735466cecf","text":"<p>\u2022 element-6066-11e4-a52e-4f735466cecf: <code>string</code></p>"},{"location":"reference/interfaces/appium_types.Element/#defined-in","title":"Defined in","text":"<p>packages/types/lib/action.ts:8</p>"},{"location":"reference/interfaces/appium_types.EventHistory/","title":"Interface: EventHistory","text":"<p>@appium/types.EventHistory</p>"},{"location":"reference/interfaces/appium_types.EventHistory/#indexable","title":"Indexable","text":"<p>\u25aa [key: <code>string</code>]: <code>any</code></p>"},{"location":"reference/interfaces/appium_types.EventHistory/#table-of-contents","title":"Table of contents","text":""},{"location":"reference/interfaces/appium_types.EventHistory/#properties","title":"Properties","text":"<ul> <li>commands</li> </ul>"},{"location":"reference/interfaces/appium_types.EventHistory/#properties_1","title":"Properties","text":""},{"location":"reference/interfaces/appium_types.EventHistory/#commands","title":"commands","text":"<p>\u2022 commands: <code>EventHistoryCommand</code>[]</p>"},{"location":"reference/interfaces/appium_types.EventHistory/#defined-in","title":"Defined in","text":"<p>packages/types/lib/driver.ts:574</p>"},{"location":"reference/interfaces/appium_types.EventHistoryCommand/","title":"Interface: EventHistoryCommand","text":"<p>@appium/types.EventHistoryCommand</p>"},{"location":"reference/interfaces/appium_types.EventHistoryCommand/#table-of-contents","title":"Table of contents","text":""},{"location":"reference/interfaces/appium_types.EventHistoryCommand/#properties","title":"Properties","text":"<ul> <li>cmd</li> <li>endTime</li> <li>startTime</li> </ul>"},{"location":"reference/interfaces/appium_types.EventHistoryCommand/#properties_1","title":"Properties","text":""},{"location":"reference/interfaces/appium_types.EventHistoryCommand/#cmd","title":"cmd","text":"<p>\u2022 cmd: <code>string</code></p>"},{"location":"reference/interfaces/appium_types.EventHistoryCommand/#defined-in","title":"Defined in","text":"<p>packages/types/lib/driver.ts:579</p>"},{"location":"reference/interfaces/appium_types.EventHistoryCommand/#endtime","title":"endTime","text":"<p>\u2022 endTime: <code>number</code></p>"},{"location":"reference/interfaces/appium_types.EventHistoryCommand/#defined-in_1","title":"Defined in","text":"<p>packages/types/lib/driver.ts:581</p>"},{"location":"reference/interfaces/appium_types.EventHistoryCommand/#starttime","title":"startTime","text":"<p>\u2022 startTime: <code>number</code></p>"},{"location":"reference/interfaces/appium_types.EventHistoryCommand/#defined-in_2","title":"Defined in","text":"<p>packages/types/lib/driver.ts:580</p>"},{"location":"reference/interfaces/appium_types.ExecuteMethodDef/","title":"Interface: ExecuteMethodDef&lt;Ext&gt;","text":"<p>@appium/types.ExecuteMethodDef</p>"},{"location":"reference/interfaces/appium_types.ExecuteMethodDef/#type-parameters","title":"Type parameters","text":"Name Type <code>Ext</code> extends <code>Driver</code> | <code>Plugin</code>"},{"location":"reference/interfaces/appium_types.ExecuteMethodDef/#table-of-contents","title":"Table of contents","text":""},{"location":"reference/interfaces/appium_types.ExecuteMethodDef/#properties","title":"Properties","text":"<ul> <li>command</li> <li>params</li> </ul>"},{"location":"reference/interfaces/appium_types.ExecuteMethodDef/#properties_1","title":"Properties","text":""},{"location":"reference/interfaces/appium_types.ExecuteMethodDef/#command","title":"command","text":"<p>\u2022 command: <code>NonNullable</code>&lt;{ [Key in string | number | symbol]: Required&lt;Ext&gt;[Key] extends (Ext extends Plugin ? PluginCommand&lt;ExternalDriver&lt;Object&gt;, any[], any&gt; : Ext extends Driver&lt;Object, StringRecord, any&gt; ? DriverCommand&lt;any, unknown&gt; : never) ? Key : never }[keyof <code>Ext</code>]&gt;</p>"},{"location":"reference/interfaces/appium_types.ExecuteMethodDef/#defined-in","title":"Defined in","text":"<p>packages/types/lib/index.ts:106</p>"},{"location":"reference/interfaces/appium_types.ExecuteMethodDef/#params","title":"params","text":"<p>\u2022 <code>Optional</code> params: <code>Object</code></p>"},{"location":"reference/interfaces/appium_types.ExecuteMethodDef/#type-declaration","title":"Type declaration","text":"Name Type <code>optional?</code> readonly <code>string</code>[] <code>required?</code> readonly <code>string</code>[]"},{"location":"reference/interfaces/appium_types.ExecuteMethodDef/#defined-in_1","title":"Defined in","text":"<p>packages/types/lib/index.ts:110</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/","title":"Interface: ExternalDriver&lt;C&gt;","text":"<p>@appium/types.ExternalDriver</p> <p>External drivers must subclass <code>BaseDriver</code>, and can implement any of these methods. None of these are implemented within Appium itself.</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#type-parameters","title":"Type parameters","text":"Name Type <code>C</code> extends <code>Constraints</code> = <code>BaseDriverCapConstraints</code>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#hierarchy","title":"Hierarchy","text":"<ul> <li><code>Driver</code>&lt;<code>C</code>&gt;</li> </ul> <p>\u21b3 <code>ExternalDriver</code></p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#table-of-contents","title":"Table of contents","text":""},{"location":"reference/interfaces/appium_types.ExternalDriver/#properties","title":"Properties","text":"<ul> <li>allowInsecure</li> <li>basePath</li> <li>caps</li> <li>cliArgs</li> <li>denyInsecure</li> <li>desiredCapConstraints</li> <li>driverData</li> <li>eventEmitter</li> <li>eventHistory</li> <li>helpers</li> <li>implicitWaitMs</li> <li>initialOpts</li> <li>isCommandsQueueEnabled</li> <li>locatorStrategies</li> <li>log</li> <li>newCommandTimeoutMs</li> <li>opts</li> <li>originalCaps</li> <li>protocol</li> <li>relaxedSecurityEnabled</li> <li>server</li> <li>serverHost</li> <li>serverPath</li> <li>serverPort</li> <li>sessionId</li> <li>settings</li> <li>shouldValidateCaps</li> <li>supportedLogTypes</li> <li>updateSettings</li> <li>webLocatorStrategies</li> </ul>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#methods","title":"Methods","text":"<ul> <li>activateApp</li> <li>activateIMEEngine</li> <li>active</li> <li>addAuthCredential</li> <li>addManagedDriver</li> <li>addVirtualAuthenticator</li> <li>assertFeatureEnabled</li> <li>assignServer</li> <li>asyncScriptTimeout</li> <li>availableIMEEngines</li> <li>back</li> <li>background</li> <li>buttonDown</li> <li>buttonUp</li> <li>canProxy</li> <li>clear</li> <li>clearNewCommandTimeout</li> <li>click</li> <li>clickCurrent</li> <li>closeApp</li> <li>closeWindow</li> <li>createNewWindow</li> <li>createSession</li> <li>deactivateIMEEngine</li> <li>deleteCookie</li> <li>deleteCookies</li> <li>deleteSession</li> <li>doubleClick</li> <li>driverForSession</li> <li>elementDisplayed</li> <li>elementEnabled</li> <li>elementSelected</li> <li>elementShadowRoot</li> <li>endCoverage</li> <li>equalsElement</li> <li>execute</li> <li>executeAsync</li> <li>executeCdp</li> <li>executeCommand</li> <li>executeMethod</li> <li>findElOrEls</li> <li>findElOrElsWithProcessing</li> <li>findElement</li> <li>findElementFromElement</li> <li>findElementFromShadowRoot</li> <li>findElements</li> <li>findElementsFromElement</li> <li>findElementsFromShadowRoot</li> <li>fingerprint</li> <li>flick</li> <li>forward</li> <li>fullScreenWindow</li> <li>getActiveIMEEngine</li> <li>getAlertText</li> <li>getAttribute</li> <li>getAuthCredential</li> <li>getClipboard</li> <li>getComputedLabel</li> <li>getComputedRole</li> <li>getContexts</li> <li>getCookie</li> <li>getCookies</li> <li>getCssProperty</li> <li>getCurrentActivity</li> <li>getCurrentContext</li> <li>getCurrentPackage</li> <li>getDeviceTime</li> <li>getDisplayDensity</li> <li>getElementRect</li> <li>getElementScreenshot</li> <li>getGeoLocation</li> <li>getLocation</li> <li>getLocationInView</li> <li>getLog</li> <li>getLogEvents</li> <li>getLogTypes</li> <li>getManagedDrivers</li> <li>getName</li> <li>getNetworkConnection</li> <li>getOrientation</li> <li>getPageIndex</li> <li>getPageSource</li> <li>getPerformanceData</li> <li>getPerformanceDataTypes</li> <li>getProperty</li> <li>getProxyAvoidList</li> <li>getRotation</li> <li>getScreenshot</li> <li>getSession</li> <li>getSessions</li> <li>getSettings</li> <li>getSize</li> <li>getStatus</li> <li>getStrings</li> <li>getSystemBars</li> <li>getText</li> <li>getTimeouts</li> <li>getUrl</li> <li>getWindowHandle</li> <li>getWindowHandles</li> <li>getWindowRect</li> <li>getWindowSize</li> <li>gsmCall</li> <li>gsmSignal</li> <li>gsmVoice</li> <li>hideKeyboard</li> <li>implicitWait</li> <li>implicitWaitForCondition</li> <li>implicitWaitMJSONWP</li> <li>implicitWaitW3C</li> <li>installApp</li> <li>isAppInstalled</li> <li>isFeatureEnabled</li> <li>isIMEActivated</li> <li>isKeyboardShown</li> <li>isLocked</li> <li>isMjsonwpProtocol</li> <li>isW3CProtocol</li> <li>keyevent</li> <li>keys</li> <li>launchApp</li> <li>lock</li> <li>logCustomEvent</li> <li>logEvent</li> <li>logExtraCaps</li> <li>longPressKeyCode</li> <li>maximizeWindow</li> <li>minimizeWindow</li> <li>mobileRotation</li> <li>mobileShake</li> <li>moveTo</li> <li>networkSpeed</li> <li>newCommandTimeout</li> <li>onUnexpectedShutdown</li> <li>openNotifications</li> <li>pageLoadTimeoutMJSONWP</li> <li>pageLoadTimeoutW3C</li> <li>parseTimeoutArgument</li> <li>performActions</li> <li>performMultiAction</li> <li>performTouch</li> <li>postAcceptAlert</li> <li>postDismissAlert</li> <li>powerAC</li> <li>powerCapacity</li> <li>pressKeyCode</li> <li>proxyActive</li> <li>proxyCommand</li> <li>proxyRouteIsAvoided</li> <li>pullFile</li> <li>pullFolder</li> <li>pushFile</li> <li>queryAppState</li> <li>receiveAsyncResponse</li> <li>refresh</li> <li>releaseActions</li> <li>removeAllAuthCredentials</li> <li>removeApp</li> <li>removeAuthCredential</li> <li>removeVirtualAuthenticator</li> <li>replaceValue</li> <li>reset</li> <li>scriptTimeoutMJSONWP</li> <li>scriptTimeoutW3C</li> <li>sendSMS</li> <li>sessionExists</li> <li>setAlertText</li> <li>setClipboard</li> <li>setContext</li> <li>setCookie</li> <li>setFrame</li> <li>setGeoLocation</li> <li>setImplicitWait</li> <li>setNetworkConnection</li> <li>setNewCommandTimeout</li> <li>setOrientation</li> <li>setRotation</li> <li>setUrl</li> <li>setUserAuthVerified</li> <li>setValue</li> <li>setValueImmediate</li> <li>setWindow</li> <li>setWindowRect</li> <li>startActivity</li> <li>startNewCommandTimeout</li> <li>startRecordingScreen</li> <li>startUnexpectedShutdown</li> <li>stopRecordingScreen</li> <li>submit</li> <li>switchToParentFrame</li> <li>terminateApp</li> <li>timeouts</li> <li>title</li> <li>toggleData</li> <li>toggleEnrollTouchId</li> <li>toggleFlightMode</li> <li>toggleLocationServices</li> <li>toggleWiFi</li> <li>touchDown</li> <li>touchId</li> <li>touchLongClick</li> <li>touchMove</li> <li>touchUp</li> <li>unlock</li> <li>validateDesiredCaps</li> <li>validateLocatorStrategy</li> </ul>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#properties_1","title":"Properties","text":""},{"location":"reference/interfaces/appium_types.ExternalDriver/#allowinsecure","title":"allowInsecure","text":"<p>\u2022 allowInsecure: <code>string</code>[]</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#inherited-from","title":"Inherited from","text":"<p>Driver.allowInsecure</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#defined-in","title":"Defined in","text":"<p>packages/types/lib/driver.ts:598</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#basepath","title":"basePath","text":"<p>\u2022 basePath: <code>string</code></p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#inherited-from_1","title":"Inherited from","text":"<p>Driver.basePath</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#defined-in_1","title":"Defined in","text":"<p>packages/types/lib/driver.ts:596</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#caps","title":"caps","text":"<p>\u2022 <code>Optional</code> caps: <code>Partial</code>&lt;<code>ConstraintsToCaps</code>&lt;<code>C</code>&gt; &amp; <code>void</code>&gt;</p> <p>The processed capabilities used to start the session represented by the current driver instance</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#inherited-from_2","title":"Inherited from","text":"<p>Driver.caps</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#defined-in_2","title":"Defined in","text":"<p>packages/types/lib/driver.ts:722</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#cliargs","title":"cliArgs","text":"<p>\u2022 cliArgs: <code>StringRecord</code></p> <p>The set of command line arguments set for this driver</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#inherited-from_3","title":"Inherited from","text":"<p>Driver.cliArgs</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#defined-in_3","title":"Defined in","text":"<p>packages/types/lib/driver.ts:684</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#denyinsecure","title":"denyInsecure","text":"<p>\u2022 denyInsecure: <code>string</code>[]</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#inherited-from_4","title":"Inherited from","text":"<p>Driver.denyInsecure</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#defined-in_4","title":"Defined in","text":"<p>packages/types/lib/driver.ts:599</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#desiredcapconstraints","title":"desiredCapConstraints","text":"<p>\u2022 desiredCapConstraints: <code>C</code></p> <p>The constraints object used to validate capabilities</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#inherited-from_5","title":"Inherited from","text":"<p>Driver.desiredCapConstraints</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#defined-in_5","title":"Defined in","text":"<p>packages/types/lib/driver.ts:732</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#driverdata","title":"driverData","text":"<p>\u2022 <code>Optional</code> driverData: <code>DriverData</code></p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#inherited-from_6","title":"Inherited from","text":"<p>Driver.driverData</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#defined-in_6","title":"Defined in","text":"<p>packages/types/lib/driver.ts:607</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#eventemitter","title":"eventEmitter","text":"<p>\u2022 eventEmitter: <code>EventEmitter</code></p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#inherited-from_7","title":"Inherited from","text":"<p>Driver.eventEmitter</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#defined-in_7","title":"Defined in","text":"<p>packages/types/lib/driver.ts:604</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#eventhistory","title":"eventHistory","text":"<p>\u2022 eventHistory: <code>EventHistory</code></p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#inherited-from_8","title":"Inherited from","text":"<p>Driver.eventHistory</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#defined-in_8","title":"Defined in","text":"<p>packages/types/lib/driver.ts:609</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#helpers","title":"helpers","text":"<p>\u2022 helpers: <code>DriverHelpers</code>&lt;{ <code>app</code>: { <code>isString</code>: <code>true</code> = true } ; <code>autoLaunch</code>: { <code>isBoolean</code>: <code>true</code> = true } ; <code>autoWebview</code>: { <code>isBoolean</code>: <code>true</code> = true } ; <code>automationName</code>: { <code>isString</code>: <code>true</code> = true } ; <code>deviceName</code>: { <code>isString</code>: <code>true</code> = true } ; <code>eventTimings</code>: { <code>isBoolean</code>: <code>true</code> = true } ; <code>fullReset</code>: { <code>isBoolean</code>: <code>true</code> = true } ; <code>language</code>: { <code>isString</code>: <code>true</code> = true } ; <code>locale</code>: { <code>isString</code>: <code>true</code> = true } ; <code>newCommandTimeout</code>: { <code>isNumber</code>: <code>true</code> = true } ; <code>noReset</code>: { <code>isBoolean</code>: <code>true</code> = true } ; <code>orientation</code>: { <code>inclusion</code>: readonly [<code>\"LANDSCAPE\"</code>, <code>\"PORTRAIT\"</code>]  } ; <code>platformName</code>: { <code>isString</code>: <code>true</code> = true; <code>presence</code>: <code>true</code> = true } ; <code>platformVersion</code>: { <code>isString</code>: <code>true</code> = true } ; <code>printPageSourceOnFindFailure</code>: { <code>isBoolean</code>: <code>true</code> = true } ; <code>udid</code>: { <code>isString</code>: <code>true</code> = true } ; <code>webSocketUrl</code>: { <code>isString</code>: <code>true</code> = true }  }&gt;</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#inherited-from_9","title":"Inherited from","text":"<p>Driver.helpers</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#defined-in_9","title":"Defined in","text":"<p>packages/types/lib/driver.ts:595</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#implicitwaitms","title":"implicitWaitMs","text":"<p>\u2022 implicitWaitMs: <code>number</code></p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#inherited-from_10","title":"Inherited from","text":"<p>Driver.implicitWaitMs</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#defined-in_10","title":"Defined in","text":"<p>packages/types/lib/driver.ts:601</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#initialopts","title":"initialOpts","text":"<p>\u2022 initialOpts: <code>ServerArgs</code></p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#inherited-from_11","title":"Inherited from","text":"<p>Driver.initialOpts</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#defined-in_11","title":"Defined in","text":"<p>packages/types/lib/driver.ts:593</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#iscommandsqueueenabled","title":"isCommandsQueueEnabled","text":"<p>\u2022 isCommandsQueueEnabled: <code>boolean</code></p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#inherited-from_12","title":"Inherited from","text":"<p>Driver.isCommandsQueueEnabled</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#defined-in_12","title":"Defined in","text":"<p>packages/types/lib/driver.ts:608</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#locatorstrategies","title":"locatorStrategies","text":"<p>\u2022 locatorStrategies: <code>string</code>[]</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#inherited-from_13","title":"Inherited from","text":"<p>Driver.locatorStrategies</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#defined-in_13","title":"Defined in","text":"<p>packages/types/lib/driver.ts:602</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#log","title":"log","text":"<p>\u2022 log: <code>AppiumLogger</code></p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#inherited-from_14","title":"Inherited from","text":"<p>Driver.log</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#defined-in_14","title":"Defined in","text":"<p>packages/types/lib/driver.ts:606</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#newcommandtimeoutms","title":"newCommandTimeoutMs","text":"<p>\u2022 newCommandTimeoutMs: <code>number</code></p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#inherited-from_15","title":"Inherited from","text":"<p>Driver.newCommandTimeoutMs</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#defined-in_15","title":"Defined in","text":"<p>packages/types/lib/driver.ts:600</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#opts","title":"opts","text":"<p>\u2022 opts: <code>DriverOpts</code>&lt;{ <code>app</code>: { <code>isString</code>: <code>true</code> = true } ; <code>autoLaunch</code>: { <code>isBoolean</code>: <code>true</code> = true } ; <code>autoWebview</code>: { <code>isBoolean</code>: <code>true</code> = true } ; <code>automationName</code>: { <code>isString</code>: <code>true</code> = true } ; <code>deviceName</code>: { <code>isString</code>: <code>true</code> = true } ; <code>eventTimings</code>: { <code>isBoolean</code>: <code>true</code> = true } ; <code>fullReset</code>: { <code>isBoolean</code>: <code>true</code> = true } ; <code>language</code>: { <code>isString</code>: <code>true</code> = true } ; <code>locale</code>: { <code>isString</code>: <code>true</code> = true } ; <code>newCommandTimeout</code>: { <code>isNumber</code>: <code>true</code> = true } ; <code>noReset</code>: { <code>isBoolean</code>: <code>true</code> = true } ; <code>orientation</code>: { <code>inclusion</code>: readonly [<code>\"LANDSCAPE\"</code>, <code>\"PORTRAIT\"</code>]  } ; <code>platformName</code>: { <code>isString</code>: <code>true</code> = true; <code>presence</code>: <code>true</code> = true } ; <code>platformVersion</code>: { <code>isString</code>: <code>true</code> = true } ; <code>printPageSourceOnFindFailure</code>: { <code>isBoolean</code>: <code>true</code> = true } ; <code>udid</code>: { <code>isString</code>: <code>true</code> = true } ; <code>webSocketUrl</code>: { <code>isString</code>: <code>true</code> = true }  }&gt;</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#inherited-from_16","title":"Inherited from","text":"<p>Driver.opts</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#defined-in_16","title":"Defined in","text":"<p>packages/types/lib/driver.ts:592</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#originalcaps","title":"originalCaps","text":"<p>\u2022 <code>Optional</code> originalCaps: <code>W3CCapabilities</code>&lt;<code>C</code>, <code>void</code>&gt;</p> <p>The original capabilities used to start the session represented by the current driver instance</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#inherited-from_17","title":"Inherited from","text":"<p>Driver.originalCaps</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#defined-in_17","title":"Defined in","text":"<p>packages/types/lib/driver.ts:727</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#protocol","title":"protocol","text":"<p>\u2022 <code>Optional</code> protocol: <code>string</code></p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#inherited-from_18","title":"Inherited from","text":"<p>Driver.protocol</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#defined-in_18","title":"Defined in","text":"<p>packages/types/lib/driver.ts:594</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#relaxedsecurityenabled","title":"relaxedSecurityEnabled","text":"<p>\u2022 relaxedSecurityEnabled: <code>boolean</code></p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#inherited-from_19","title":"Inherited from","text":"<p>Driver.relaxedSecurityEnabled</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#defined-in_19","title":"Defined in","text":"<p>packages/types/lib/driver.ts:597</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#server","title":"server","text":"<p>\u2022 <code>Optional</code> server: <code>AppiumServer</code></p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#defined-in_20","title":"Defined in","text":"<p>packages/types/lib/driver.ts:773</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#serverhost","title":"serverHost","text":"<p>\u2022 <code>Optional</code> serverHost: <code>string</code></p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#defined-in_21","title":"Defined in","text":"<p>packages/types/lib/driver.ts:774</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#serverpath","title":"serverPath","text":"<p>\u2022 <code>Optional</code> serverPath: <code>string</code></p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#defined-in_22","title":"Defined in","text":"<p>packages/types/lib/driver.ts:776</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#serverport","title":"serverPort","text":"<p>\u2022 <code>Optional</code> serverPort: <code>number</code></p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#defined-in_23","title":"Defined in","text":"<p>packages/types/lib/driver.ts:775</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#sessionid","title":"sessionId","text":"<p>\u2022 sessionId: <code>null</code> | <code>string</code></p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#inherited-from_20","title":"Inherited from","text":"<p>Driver.sessionId</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#defined-in_24","title":"Defined in","text":"<p>packages/types/lib/driver.ts:591</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#settings","title":"settings","text":"<p>\u2022 settings: <code>DeviceSettings</code>&lt;<code>any</code>&gt;</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#inherited-from_21","title":"Inherited from","text":"<p>Driver.settings</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#defined-in_25","title":"Defined in","text":"<p>packages/types/lib/driver.ts:605</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#shouldvalidatecaps","title":"shouldValidateCaps","text":"<p>\u2022 shouldValidateCaps: <code>boolean</code></p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#inherited-from_22","title":"Inherited from","text":"<p>Driver.shouldValidateCaps</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#defined-in_26","title":"Defined in","text":"<p>packages/types/lib/driver.ts:590</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#supportedlogtypes","title":"supportedLogTypes","text":"<p>\u2022 supportedLogTypes: <code>Readonly</code>&lt;<code>LogDefRecord</code>&lt;<code>C</code>&gt;&gt;</p> <p>Definition of the available log types</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#inherited-from_23","title":"Inherited from","text":"<p>Driver.supportedLogTypes</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#defined-in_27","title":"Defined in","text":"<p>packages/types/lib/driver.ts:335</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#updatesettings","title":"updateSettings","text":"<p>\u2022 updateSettings: (<code>settings</code>: <code>StringRecord</code>) =&gt; <code>Promise</code>&lt;<code>void</code>&gt;</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#type-declaration","title":"Type declaration","text":"<p>\u25b8 (<code>settings</code>): <code>Promise</code>&lt;<code>void</code>&gt;</p> <p>Update the session's settings dictionary with a new settings object</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#parameters","title":"Parameters","text":"Name Type Description <code>settings</code> <code>StringRecord</code> A key-value map of setting names to values. Settings not named in the map will not have their value adjusted."},{"location":"reference/interfaces/appium_types.ExternalDriver/#returns","title":"Returns","text":"<p><code>Promise</code>&lt;<code>void</code>&gt;</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#inherited-from_24","title":"Inherited from","text":"<p>Driver.updateSettings</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#defined-in_28","title":"Defined in","text":"<p>packages/types/lib/driver.ts:388</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#weblocatorstrategies","title":"webLocatorStrategies","text":"<p>\u2022 webLocatorStrategies: <code>string</code>[]</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#inherited-from_25","title":"Inherited from","text":"<p>Driver.webLocatorStrategies</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#defined-in_29","title":"Defined in","text":"<p>packages/types/lib/driver.ts:603</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#methods_1","title":"Methods","text":""},{"location":"reference/interfaces/appium_types.ExternalDriver/#activateapp","title":"activateApp","text":"<p>\u25b8 <code>Optional</code> activateApp(<code>appId</code>, <code>options?</code>): <code>Promise</code>&lt;<code>void</code>&gt;</p> <p>Launch an app</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#parameters_1","title":"Parameters","text":"Name Type Description <code>appId</code> <code>string</code> the package or bundle ID of the application <code>options?</code> <code>unknown</code> driver-specific launch options"},{"location":"reference/interfaces/appium_types.ExternalDriver/#returns_1","title":"Returns","text":"<p><code>Promise</code>&lt;<code>void</code>&gt;</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#defined-in_30","title":"Defined in","text":"<p>packages/types/lib/driver.ts:1469</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#activateimeengine","title":"activateIMEEngine","text":"<p>\u25b8 <code>Optional</code> activateIMEEngine(<code>engine</code>): <code>Promise</code>&lt;<code>void</code>&gt;</p> <p>Activate an IME engine</p> <p><code>Deprecated</code></p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#parameters_2","title":"Parameters","text":"Name Type Description <code>engine</code> <code>string</code> the name of the engine"},{"location":"reference/interfaces/appium_types.ExternalDriver/#returns_2","title":"Returns","text":"<p><code>Promise</code>&lt;<code>void</code>&gt;</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#defined-in_31","title":"Defined in","text":"<p>packages/types/lib/driver.ts:1867</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#active","title":"active","text":"<p>\u25b8 <code>Optional</code> active(): <code>Promise</code>&lt;<code>Element</code>&gt;</p> <p>Get the active element</p> <p><code>See</code></p> <p>https://w3c.github.io/webdriver/#get-active-element</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#returns_3","title":"Returns","text":"<p><code>Promise</code>&lt;<code>Element</code>&gt;</p> <p>The JSON object encapsulating the active element reference</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#defined-in_32","title":"Defined in","text":"<p>packages/types/lib/driver.ts:940</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#addauthcredential","title":"addAuthCredential","text":"<p>\u25b8 <code>Optional</code> addAuthCredential(<code>credentialId</code>, <code>isResidentCredential</code>, <code>rpId</code>, <code>privateKey</code>, <code>userHandle</code>, <code>signCount</code>, <code>authenticatorId</code>): <code>Promise</code>&lt;<code>void</code>&gt;</p> <p>Inject a public key credential source into a virtual authenticator</p> <p><code>See</code></p> <p>https://www.w3.org/TR/webauthn-2/#sctn-automation-add-credential</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#parameters_3","title":"Parameters","text":"Name Type Description <code>credentialId</code> <code>string</code> the base64 encoded credential ID <code>isResidentCredential</code> <code>boolean</code> if true, a client-side credential, otherwise a server-side credential <code>rpId</code> <code>string</code> the relying party ID the credential is scoped to <code>privateKey</code> <code>string</code> the base64 encoded private key package <code>userHandle</code> <code>string</code> the base64 encoded user handle <code>signCount</code> <code>number</code> the initial value for a signature counter <code>authenticatorId</code> <code>string</code> -"},{"location":"reference/interfaces/appium_types.ExternalDriver/#returns_4","title":"Returns","text":"<p><code>Promise</code>&lt;<code>void</code>&gt;</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#defined-in_33","title":"Defined in","text":"<p>packages/types/lib/driver.ts:2149</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#addmanageddriver","title":"addManagedDriver","text":"<p>\u25b8 addManagedDriver(<code>driver</code>): <code>void</code></p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#parameters_4","title":"Parameters","text":"Name Type <code>driver</code> <code>Driver</code>&lt;{ <code>app</code>: { <code>isString</code>: <code>true</code> = true } ; <code>autoLaunch</code>: { <code>isBoolean</code>: <code>true</code> = true } ; <code>autoWebview</code>: { <code>isBoolean</code>: <code>true</code> = true } ; <code>automationName</code>: { <code>isString</code>: <code>true</code> = true } ; <code>deviceName</code>: { <code>isString</code>: <code>true</code> = true } ; <code>eventTimings</code>: { <code>isBoolean</code>: <code>true</code> = true } ; <code>fullReset</code>: { <code>isBoolean</code>: <code>true</code> = true } ; <code>language</code>: { <code>isString</code>: <code>true</code> = true } ; <code>locale</code>: { <code>isString</code>: <code>true</code> = true } ; <code>newCommandTimeout</code>: { <code>isNumber</code>: <code>true</code> = true } ; <code>noReset</code>: { <code>isBoolean</code>: <code>true</code> = true } ; <code>orientation</code>: { <code>inclusion</code>: readonly [<code>\"LANDSCAPE\"</code>, <code>\"PORTRAIT\"</code>]  } ; <code>platformName</code>: { <code>isString</code>: <code>true</code> = true; <code>presence</code>: <code>true</code> = true } ; <code>platformVersion</code>: { <code>isString</code>: <code>true</code> = true } ; <code>printPageSourceOnFindFailure</code>: { <code>isBoolean</code>: <code>true</code> = true } ; <code>udid</code>: { <code>isString</code>: <code>true</code> = true } ; <code>webSocketUrl</code>: { <code>isString</code>: <code>true</code> = true }  }, <code>StringRecord</code>, <code>any</code>&gt;"},{"location":"reference/interfaces/appium_types.ExternalDriver/#returns_5","title":"Returns","text":"<p><code>void</code></p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#inherited-from_26","title":"Inherited from","text":"<p>Driver.addManagedDriver</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#defined-in_34","title":"Defined in","text":"<p>packages/types/lib/driver.ts:653</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#addvirtualauthenticator","title":"addVirtualAuthenticator","text":"<p>\u25b8 <code>Optional</code> addVirtualAuthenticator(<code>protocol</code>, <code>transport</code>, <code>hasResidentKey?</code>, <code>hasUserVerification?</code>, <code>isUserConsenting?</code>, <code>isUserVerified?</code>): <code>Promise</code>&lt;<code>string</code>&gt;</p> <p>Add a virtual authenticator to a browser</p> <p><code>See</code></p> <p>https://www.w3.org/TR/webauthn-2/#sctn-automation-add-virtual-authenticator</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#parameters_5","title":"Parameters","text":"Name Type Description <code>protocol</code> <code>\"ctap/u2f\"</code> | <code>\"ctap2\"</code> | <code>\"ctap2_1\"</code> the protocol <code>transport</code> <code>string</code> a valid AuthenticatorTransport value <code>hasResidentKey?</code> <code>boolean</code> whether there is a resident key <code>hasUserVerification?</code> <code>boolean</code> whether the authenticator has user verification <code>isUserConsenting?</code> <code>boolean</code> whether it is a user consenting authenticator <code>isUserVerified?</code> <code>boolean</code> whether the user is verified"},{"location":"reference/interfaces/appium_types.ExternalDriver/#returns_6","title":"Returns","text":"<p><code>Promise</code>&lt;<code>string</code>&gt;</p> <p>The authenticator ID</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#defined-in_35","title":"Defined in","text":"<p>packages/types/lib/driver.ts:2120</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#assertfeatureenabled","title":"assertFeatureEnabled","text":"<p>\u25b8 assertFeatureEnabled(<code>name</code>): <code>void</code></p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#parameters_6","title":"Parameters","text":"Name Type <code>name</code> <code>string</code>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#returns_7","title":"Returns","text":"<p><code>void</code></p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#inherited-from_27","title":"Inherited from","text":"<p>Driver.assertFeatureEnabled</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#defined-in_36","title":"Defined in","text":"<p>packages/types/lib/driver.ts:647</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#assignserver","title":"assignServer","text":"<p>\u25b8 <code>Optional</code> assignServer(<code>server</code>, <code>host</code>, <code>port</code>, <code>path</code>): <code>void</code></p> <p>A helper function used to assign server information to the driver instance so the driver knows where the server is Running</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#parameters_7","title":"Parameters","text":"Name Type Description <code>server</code> <code>AppiumServer</code> the server object <code>host</code> <code>string</code> the server hostname <code>port</code> <code>number</code> the server port <code>path</code> <code>string</code> the server base url"},{"location":"reference/interfaces/appium_types.ExternalDriver/#returns_8","title":"Returns","text":"<p><code>void</code></p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#inherited-from_28","title":"Inherited from","text":"<p>Driver.assignServer</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#defined-in_37","title":"Defined in","text":"<p>packages/types/lib/driver.ts:763</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#asyncscripttimeout","title":"asyncScriptTimeout","text":"<p>\u25b8 <code>Optional</code> asyncScriptTimeout(<code>ms</code>): <code>Promise</code>&lt;<code>void</code>&gt;</p> <p>Set the async execute script timeout</p> <p><code>Deprecated</code></p> <p>Use the W3C timeouts command instead</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#parameters_8","title":"Parameters","text":"Name Type Description <code>ms</code> <code>number</code> the timeout"},{"location":"reference/interfaces/appium_types.ExternalDriver/#returns_9","title":"Returns","text":"<p><code>Promise</code>&lt;<code>void</code>&gt;</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#defined-in_38","title":"Defined in","text":"<p>packages/types/lib/driver.ts:1752</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#availableimeengines","title":"availableIMEEngines","text":"<p>\u25b8 <code>Optional</code> availableIMEEngines(): <code>Promise</code>&lt;<code>string</code>[]&gt;</p> <p>Get the list of IME engines</p> <p><code>Deprecated</code></p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#returns_10","title":"Returns","text":"<p><code>Promise</code>&lt;<code>string</code>[]&gt;</p> <p>The list of IME engines</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#defined-in_39","title":"Defined in","text":"<p>packages/types/lib/driver.ts:1833</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#back","title":"back","text":"<p>\u25b8 <code>Optional</code> back(): <code>Promise</code>&lt;<code>void</code>&gt;</p> <p>Navigate back in the page history</p> <p><code>See</code></p> <p>https://w3c.github.io/webdriver/#back</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#returns_11","title":"Returns","text":"<p><code>Promise</code>&lt;<code>void</code>&gt;</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#defined-in_40","title":"Defined in","text":"<p>packages/types/lib/driver.ts:800</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#background","title":"background","text":"<p>\u25b8 <code>Optional</code> background(<code>seconds</code>): <code>Promise</code>&lt;<code>void</code>&gt;</p> <p>Background (close) the app either permanently or for a certain amount of time</p> <p><code>Deprecated</code></p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#parameters_9","title":"Parameters","text":"Name Type Description <code>seconds</code> <code>null</code> | <code>number</code> the number of seconds to background the app for, or <code>null</code> for permanently"},{"location":"reference/interfaces/appium_types.ExternalDriver/#returns_12","title":"Returns","text":"<p><code>Promise</code>&lt;<code>void</code>&gt;</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#defined-in_41","title":"Defined in","text":"<p>packages/types/lib/driver.ts:1668</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#buttondown","title":"buttonDown","text":"<p>\u25b8 <code>Optional</code> buttonDown(<code>button?</code>): <code>Promise</code>&lt;<code>void</code>&gt;</p> <p>Trigger a mouse button down</p> <p><code>Deprecated</code></p> <p>Use the Actions API instead</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#parameters_10","title":"Parameters","text":"Name Type Description <code>button?</code> <code>number</code> the button ID"},{"location":"reference/interfaces/appium_types.ExternalDriver/#returns_13","title":"Returns","text":"<p><code>Promise</code>&lt;<code>void</code>&gt;</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#defined-in_42","title":"Defined in","text":"<p>packages/types/lib/driver.ts:1901</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#buttonup","title":"buttonUp","text":"<p>\u25b8 <code>Optional</code> buttonUp(<code>button?</code>): <code>Promise</code>&lt;<code>void</code>&gt;</p> <p>Trigger a mouse button up</p> <p><code>Deprecated</code></p> <p>Use the Actions API instead</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#parameters_11","title":"Parameters","text":"Name Type Description <code>button?</code> <code>number</code> the button ID"},{"location":"reference/interfaces/appium_types.ExternalDriver/#returns_14","title":"Returns","text":"<p><code>Promise</code>&lt;<code>void</code>&gt;</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#defined-in_43","title":"Defined in","text":"<p>packages/types/lib/driver.ts:1910</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#canproxy","title":"canProxy","text":"<p>\u25b8 canProxy(<code>sessionId?</code>): <code>boolean</code></p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#parameters_12","title":"Parameters","text":"Name Type <code>sessionId?</code> <code>string</code>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#returns_15","title":"Returns","text":"<p><code>boolean</code></p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#inherited-from_29","title":"Inherited from","text":"<p>Driver.canProxy</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#defined-in_44","title":"Defined in","text":"<p>packages/types/lib/driver.ts:651</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#clear","title":"clear","text":"<p>\u25b8 <code>Optional</code> clear(<code>elementId</code>): <code>Promise</code>&lt;<code>void</code>&gt;</p> <p>Clear the text/value of an editable element</p> <p><code>See</code></p> <p>https://w3c.github.io/webdriver/#element-clear</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#parameters_13","title":"Parameters","text":"Name Type Description <code>elementId</code> <code>string</code> the id of the element"},{"location":"reference/interfaces/appium_types.ExternalDriver/#returns_16","title":"Returns","text":"<p><code>Promise</code>&lt;<code>void</code>&gt;</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#defined-in_45","title":"Defined in","text":"<p>packages/types/lib/driver.ts:1079</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#clearnewcommandtimeout","title":"clearNewCommandTimeout","text":"<p>\u25b8 clearNewCommandTimeout(): <code>Promise</code>&lt;<code>void</code>&gt;</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#returns_17","title":"Returns","text":"<p><code>Promise</code>&lt;<code>void</code>&gt;</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#inherited-from_30","title":"Inherited from","text":"<p>Driver.clearNewCommandTimeout</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#defined-in_46","title":"Defined in","text":"<p>packages/types/lib/driver.ts:655</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#click","title":"click","text":"<p>\u25b8 <code>Optional</code> click(<code>elementId</code>): <code>Promise</code>&lt;<code>void</code>&gt;</p> <p>Click/tap an element</p> <p><code>See</code></p> <p>https://w3c.github.io/webdriver/#element-click</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#parameters_14","title":"Parameters","text":"Name Type Description <code>elementId</code> <code>string</code> the id of the element"},{"location":"reference/interfaces/appium_types.ExternalDriver/#returns_18","title":"Returns","text":"<p><code>Promise</code>&lt;<code>void</code>&gt;</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#defined-in_47","title":"Defined in","text":"<p>packages/types/lib/driver.ts:1071</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#clickcurrent","title":"clickCurrent","text":"<p>\u25b8 <code>Optional</code> clickCurrent(<code>button?</code>): <code>Promise</code>&lt;<code>void</code>&gt;</p> <p>Click the current mouse location</p> <p><code>Deprecated</code></p> <p>Use the Actions API instead</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#parameters_15","title":"Parameters","text":"Name Type Description <code>button?</code> <code>number</code> the button ID"},{"location":"reference/interfaces/appium_types.ExternalDriver/#returns_19","title":"Returns","text":"<p><code>Promise</code>&lt;<code>void</code>&gt;</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#defined-in_48","title":"Defined in","text":"<p>packages/types/lib/driver.ts:1919</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#closeapp","title":"closeApp","text":"<p>\u25b8 <code>Optional</code> closeApp(): <code>Promise</code>&lt;<code>void</code>&gt;</p> <p>Stop the session without stopping the session</p> <p><code>Deprecated</code></p> <p>Don't use this, it never made sense.</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#returns_20","title":"Returns","text":"<p><code>Promise</code>&lt;<code>void</code>&gt;</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#defined-in_49","title":"Defined in","text":"<p>packages/types/lib/driver.ts:1659</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#closewindow","title":"closeWindow","text":"<p>\u25b8 <code>Optional</code> closeWindow(): <code>Promise</code>&lt;<code>string</code>[]&gt;</p> <p>Close the current browsing context (window)</p> <p><code>See</code></p> <p>https://w3c.github.io/webdriver/#close-window</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#returns_21","title":"Returns","text":"<p><code>Promise</code>&lt;<code>string</code>[]&gt;</p> <p>An array of window handles representing currently-open windows</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#defined-in_50","title":"Defined in","text":"<p>packages/types/lib/driver.ts:847</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#createnewwindow","title":"createNewWindow","text":"<p>\u25b8 <code>Optional</code> createNewWindow(<code>type?</code>): <code>Promise</code>&lt;<code>NewWindow</code>&gt;</p> <p>Create a new browser window</p> <p><code>See</code></p> <p>https://w3c.github.io/webdriver/#new-window</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#parameters_16","title":"Parameters","text":"Name Type Description <code>type?</code> <code>NewWindowType</code> a hint to the driver whether to create a \"tab\" or \"window\""},{"location":"reference/interfaces/appium_types.ExternalDriver/#returns_22","title":"Returns","text":"<p><code>Promise</code>&lt;<code>NewWindow</code>&gt;</p> <p>An object containing the handle of the newly created window and its type</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#defined-in_51","title":"Defined in","text":"<p>packages/types/lib/driver.ts:873</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#createsession","title":"createSession","text":"<p>\u25b8 createSession(<code>w3cCaps1</code>, <code>w3cCaps2?</code>, <code>w3cCaps3?</code>, <code>driverData?</code>): <code>Promise</code>&lt;[sessionId: string, caps: any]&gt;</p> <p>Start a new automation session</p> <p><code>See</code></p> <p>https://w3c.github.io/webdriver/#new-session</p> <p><code>Remarks</code></p> <p>The shape of this method is strange because it used to support both JSONWP and W3C capabilities. This will likely change in the future to simplify.</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#parameters_17","title":"Parameters","text":"Name Type Description <code>w3cCaps1</code> <code>W3CCapabilities</code>&lt;<code>C</code>, <code>void</code>&gt; the new session capabilities <code>w3cCaps2?</code> <code>W3CCapabilities</code>&lt;<code>C</code>, <code>void</code>&gt; another place the new session capabilities could be sent (typically left undefined) <code>w3cCaps3?</code> <code>W3CCapabilities</code>&lt;<code>C</code>, <code>void</code>&gt; another place the new session capabilities could be sent (typically left undefined) <code>driverData?</code> <code>DriverData</code>[] a list of DriverData objects representing other sessions running for this driver on the same Appium server. This information can be used to help ensure no conflict of resources"},{"location":"reference/interfaces/appium_types.ExternalDriver/#returns_23","title":"Returns","text":"<p><code>Promise</code>&lt;[sessionId: string, caps: any]&gt;</p> <p>The capabilities object representing the created session</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#inherited-from_31","title":"Inherited from","text":"<p>Driver.createSession</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#defined-in_52","title":"Defined in","text":"<p>packages/types/lib/driver.ts:421</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#deactivateimeengine","title":"deactivateIMEEngine","text":"<p>\u25b8 <code>Optional</code> deactivateIMEEngine(): <code>Promise</code>&lt;<code>void</code>&gt;</p> <p>Deactivate an IME engine</p> <p><code>Deprecated</code></p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#returns_24","title":"Returns","text":"<p><code>Promise</code>&lt;<code>void</code>&gt;</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#defined-in_53","title":"Defined in","text":"<p>packages/types/lib/driver.ts:1858</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#deletecookie","title":"deleteCookie","text":"<p>\u25b8 <code>Optional</code> deleteCookie(<code>name</code>): <code>Promise</code>&lt;<code>void</code>&gt;</p> <p>Delete a named cookie</p> <p><code>See</code></p> <p>https://w3c.github.io/webdriver/#delete-cookie</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#parameters_18","title":"Parameters","text":"Name Type Description <code>name</code> <code>string</code> the name of the cookie to delete"},{"location":"reference/interfaces/appium_types.ExternalDriver/#returns_25","title":"Returns","text":"<p><code>Promise</code>&lt;<code>void</code>&gt;</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#defined-in_54","title":"Defined in","text":"<p>packages/types/lib/driver.ts:1148</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#deletecookies","title":"deleteCookies","text":"<p>\u25b8 <code>Optional</code> deleteCookies(): <code>Promise</code>&lt;<code>void</code>&gt;</p> <p>Delete all cookies</p> <p><code>See</code></p> <p>https://w3c.github.io/webdriver/#delete-all-cookies</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#returns_26","title":"Returns","text":"<p><code>Promise</code>&lt;<code>void</code>&gt;</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#defined-in_55","title":"Defined in","text":"<p>packages/types/lib/driver.ts:1154</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#deletesession","title":"deleteSession","text":"<p>\u25b8 deleteSession(<code>sessionId?</code>, <code>driverData?</code>): <code>Promise</code>&lt;<code>void</code>&gt;</p> <p>Stop an automation session</p> <p><code>See</code></p> <p>https://w3c.github.io/webdriver/#delete-session</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#parameters_19","title":"Parameters","text":"Name Type Description <code>sessionId?</code> <code>string</code> the id of the session that is to be deleted <code>driverData?</code> <code>DriverData</code>[] the driver data for other currently-running sessions"},{"location":"reference/interfaces/appium_types.ExternalDriver/#returns_27","title":"Returns","text":"<p><code>Promise</code>&lt;<code>void</code>&gt;</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#inherited-from_32","title":"Inherited from","text":"<p>Driver.deleteSession</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#defined-in_56","title":"Defined in","text":"<p>packages/types/lib/driver.ts:435</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#doubleclick","title":"doubleClick","text":"<p>\u25b8 <code>Optional</code> doubleClick(): <code>Promise</code>&lt;<code>void</code>&gt;</p> <p>Double-click the current mouse location</p> <p><code>Deprecated</code></p> <p>Use the Actions API instead</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#returns_28","title":"Returns","text":"<p><code>Promise</code>&lt;<code>void</code>&gt;</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#defined-in_57","title":"Defined in","text":"<p>packages/types/lib/driver.ts:1926</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#driverforsession","title":"driverForSession","text":"<p>\u25b8 driverForSession(<code>sessionId</code>): <code>null</code> | <code>Core</code>&lt;{ <code>app</code>: { <code>isString</code>: <code>true</code> = true } ; <code>autoLaunch</code>: { <code>isBoolean</code>: <code>true</code> = true } ; <code>autoWebview</code>: { <code>isBoolean</code>: <code>true</code> = true } ; <code>automationName</code>: { <code>isString</code>: <code>true</code> = true } ; <code>deviceName</code>: { <code>isString</code>: <code>true</code> = true } ; <code>eventTimings</code>: { <code>isBoolean</code>: <code>true</code> = true } ; <code>fullReset</code>: { <code>isBoolean</code>: <code>true</code> = true } ; <code>language</code>: { <code>isString</code>: <code>true</code> = true } ; <code>locale</code>: { <code>isString</code>: <code>true</code> = true } ; <code>newCommandTimeout</code>: { <code>isNumber</code>: <code>true</code> = true } ; <code>noReset</code>: { <code>isBoolean</code>: <code>true</code> = true } ; <code>orientation</code>: { <code>inclusion</code>: readonly [<code>\"LANDSCAPE\"</code>, <code>\"PORTRAIT\"</code>]  } ; <code>platformName</code>: { <code>isString</code>: <code>true</code> = true; <code>presence</code>: <code>true</code> = true } ; <code>platformVersion</code>: { <code>isString</code>: <code>true</code> = true } ; <code>printPageSourceOnFindFailure</code>: { <code>isBoolean</code>: <code>true</code> = true } ; <code>udid</code>: { <code>isString</code>: <code>true</code> = true } ; <code>webSocketUrl</code>: { <code>isString</code>: <code>true</code> = true }  }&gt;</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#parameters_20","title":"Parameters","text":"Name Type <code>sessionId</code> <code>string</code>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#returns_29","title":"Returns","text":"<p><code>null</code> | <code>Core</code>&lt;{ <code>app</code>: { <code>isString</code>: <code>true</code> = true } ; <code>autoLaunch</code>: { <code>isBoolean</code>: <code>true</code> = true } ; <code>autoWebview</code>: { <code>isBoolean</code>: <code>true</code> = true } ; <code>automationName</code>: { <code>isString</code>: <code>true</code> = true } ; <code>deviceName</code>: { <code>isString</code>: <code>true</code> = true } ; <code>eventTimings</code>: { <code>isBoolean</code>: <code>true</code> = true } ; <code>fullReset</code>: { <code>isBoolean</code>: <code>true</code> = true } ; <code>language</code>: { <code>isString</code>: <code>true</code> = true } ; <code>locale</code>: { <code>isString</code>: <code>true</code> = true } ; <code>newCommandTimeout</code>: { <code>isNumber</code>: <code>true</code> = true } ; <code>noReset</code>: { <code>isBoolean</code>: <code>true</code> = true } ; <code>orientation</code>: { <code>inclusion</code>: readonly [<code>\"LANDSCAPE\"</code>, <code>\"PORTRAIT\"</code>]  } ; <code>platformName</code>: { <code>isString</code>: <code>true</code> = true; <code>presence</code>: <code>true</code> = true } ; <code>platformVersion</code>: { <code>isString</code>: <code>true</code> = true } ; <code>printPageSourceOnFindFailure</code>: { <code>isBoolean</code>: <code>true</code> = true } ; <code>udid</code>: { <code>isString</code>: <code>true</code> = true } ; <code>webSocketUrl</code>: { <code>isString</code>: <code>true</code> = true }  }&gt;</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#inherited-from_33","title":"Inherited from","text":"<p>Driver.driverForSession</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#defined-in_58","title":"Defined in","text":"<p>packages/types/lib/driver.ts:657</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#elementdisplayed","title":"elementDisplayed","text":"<p>\u25b8 <code>Optional</code> elementDisplayed(<code>elementId</code>): <code>Promise</code>&lt;<code>boolean</code>&gt;</p> <p>Determine whether an element is displayed</p> <p><code>See</code></p> <p>https://w3c.github.io/webdriver/#element-displayedness</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#parameters_21","title":"Parameters","text":"Name Type Description <code>elementId</code> <code>string</code> the id of the element"},{"location":"reference/interfaces/appium_types.ExternalDriver/#returns_30","title":"Returns","text":"<p><code>Promise</code>&lt;<code>boolean</code>&gt;</p> <p>True if any part of the element is rendered within the viewport, False otherwise</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#defined-in_59","title":"Defined in","text":"<p>packages/types/lib/driver.ts:1063</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#elementenabled","title":"elementEnabled","text":"<p>\u25b8 <code>Optional</code> elementEnabled(<code>elementId</code>): <code>Promise</code>&lt;<code>boolean</code>&gt;</p> <p>Determine whether an element is enabled</p> <p><code>See</code></p> <p>https://w3c.github.io/webdriver/#is-element-enabled</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#parameters_22","title":"Parameters","text":"Name Type Description <code>elementId</code> <code>string</code> the id of the element"},{"location":"reference/interfaces/appium_types.ExternalDriver/#returns_31","title":"Returns","text":"<p><code>Promise</code>&lt;<code>boolean</code>&gt;</p> <p>True if the element is enabled, False otherwise</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#defined-in_60","title":"Defined in","text":"<p>packages/types/lib/driver.ts:1033</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#elementselected","title":"elementSelected","text":"<p>\u25b8 <code>Optional</code> elementSelected(<code>elementId</code>): <code>Promise</code>&lt;<code>boolean</code>&gt;</p> <p>Determine if the reference element is selected or not</p> <p><code>See</code></p> <p>https://w3c.github.io/webdriver/#is-element-selected</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#parameters_23","title":"Parameters","text":"Name Type Description <code>elementId</code> <code>string</code> the id of the element"},{"location":"reference/interfaces/appium_types.ExternalDriver/#returns_32","title":"Returns","text":"<p><code>Promise</code>&lt;<code>boolean</code>&gt;</p> <p>True if the element is selected, False otherwise</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#defined-in_61","title":"Defined in","text":"<p>packages/types/lib/driver.ts:960</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#elementshadowroot","title":"elementShadowRoot","text":"<p>\u25b8 <code>Optional</code> elementShadowRoot(<code>elementId</code>): <code>Promise</code>&lt;<code>Element</code>&gt;</p> <p>Get the shadow root of an element</p> <p><code>See</code></p> <p>https://w3c.github.io/webdriver/#get-element-shadow-root</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#parameters_24","title":"Parameters","text":"Name Type Description <code>elementId</code> <code>string</code> the id of the element to retrieve the shadow root for"},{"location":"reference/interfaces/appium_types.ExternalDriver/#returns_33","title":"Returns","text":"<p><code>Promise</code>&lt;<code>Element</code>&gt;</p> <p>The shadow root for an element, as an element</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#defined-in_62","title":"Defined in","text":"<p>packages/types/lib/driver.ts:950</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#endcoverage","title":"endCoverage","text":"<p>\u25b8 <code>Optional</code> endCoverage(<code>intent</code>, <code>path</code>): <code>Promise</code>&lt;<code>void</code>&gt;</p> <p>End platform-specific code coverage tracing</p> <p><code>Deprecated</code></p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#parameters_25","title":"Parameters","text":"Name Type Description <code>intent</code> <code>string</code> the Android intent for the coverage activity <code>path</code> <code>string</code> the path to place the results"},{"location":"reference/interfaces/appium_types.ExternalDriver/#returns_34","title":"Returns","text":"<p><code>Promise</code>&lt;<code>void</code>&gt;</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#defined-in_63","title":"Defined in","text":"<p>packages/types/lib/driver.ts:1678</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#equalselement","title":"equalsElement","text":"<p>\u25b8 <code>Optional</code> equalsElement(<code>elementId</code>, <code>otherElementId</code>): <code>Promise</code>&lt;<code>boolean</code>&gt;</p> <p>Check whether two elements are identical</p> <p><code>Deprecated</code></p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#parameters_26","title":"Parameters","text":"Name Type Description <code>elementId</code> <code>string</code> the first element's ID <code>otherElementId</code> <code>string</code> the second element's ID"},{"location":"reference/interfaces/appium_types.ExternalDriver/#returns_35","title":"Returns","text":"<p><code>Promise</code>&lt;<code>boolean</code>&gt;</p> <p>True if the elements are equal, false otherwise</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#defined-in_64","title":"Defined in","text":"<p>packages/types/lib/driver.ts:1806</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#execute","title":"execute","text":"<p>\u25b8 <code>Optional</code> execute(<code>script</code>, <code>args</code>): <code>Promise</code>&lt;<code>unknown</code>&gt;</p> <p>Execute JavaScript (or some other kind of script) in the browser/app context</p> <p><code>See</code></p> <p>https://w3c.github.io/webdriver/#execute-script</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#parameters_27","title":"Parameters","text":"Name Type Description <code>script</code> <code>string</code> the string to be evaluated as the script, which will be made the body of an anonymous function in the case of JS <code>args</code> <code>unknown</code>[] the list of arguments to be applied to the script as a function"},{"location":"reference/interfaces/appium_types.ExternalDriver/#returns_36","title":"Returns","text":"<p><code>Promise</code>&lt;<code>unknown</code>&gt;</p> <p>The return value of the script execution</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#defined-in_65","title":"Defined in","text":"<p>packages/types/lib/driver.ts:1100</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#executeasync","title":"executeAsync","text":"<p>\u25b8 <code>Optional</code> executeAsync(<code>script</code>, <code>args</code>): <code>Promise</code>&lt;<code>unknown</code>&gt;</p> <p>Execute JavaScript (or some other kind of script) in the browser/app context, asynchronously</p> <p><code>See</code></p> <p>https://w3c.github.io/webdriver/#execute-async-script</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#parameters_28","title":"Parameters","text":"Name Type Description <code>script</code> <code>string</code> the string to be evaluated as the script, which will be made the body of an anonymous function in the case of JS <code>args</code> <code>unknown</code>[] the list of arguments to be applied to the script as a function"},{"location":"reference/interfaces/appium_types.ExternalDriver/#returns_37","title":"Returns","text":"<p><code>Promise</code>&lt;<code>unknown</code>&gt;</p> <p>The promise resolution of the return value of the script execution (or an error object if the promise is rejected)</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#defined-in_66","title":"Defined in","text":"<p>packages/types/lib/driver.ts:1113</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#executecdp","title":"executeCdp","text":"<p>\u25b8 <code>Optional</code> executeCdp(<code>cmd</code>, <code>params</code>): <code>Promise</code>&lt;<code>unknown</code>&gt;</p> <p>Execute a devtools command</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#parameters_29","title":"Parameters","text":"Name Type Description <code>cmd</code> <code>string</code> the command <code>params</code> <code>unknown</code> any command-specific command parameters"},{"location":"reference/interfaces/appium_types.ExternalDriver/#returns_38","title":"Returns","text":"<p><code>Promise</code>&lt;<code>unknown</code>&gt;</p> <p>The result of the command execution</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#defined-in_67","title":"Defined in","text":"<p>packages/types/lib/driver.ts:2103</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#executecommand","title":"executeCommand","text":"<p>\u25b8 executeCommand(<code>cmd</code>, <code>...args</code>): <code>Promise</code>&lt;<code>any</code>&gt;</p> <p>Execute a driver (WebDriver-protocol) command by its name as defined in the routes file</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#parameters_30","title":"Parameters","text":"Name Type Description <code>cmd</code> <code>string</code> the name of the command <code>...args</code> <code>any</code>[] arguments to pass to the command"},{"location":"reference/interfaces/appium_types.ExternalDriver/#returns_39","title":"Returns","text":"<p><code>Promise</code>&lt;<code>any</code>&gt;</p> <p>The result of running the command</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#inherited-from_34","title":"Inherited from","text":"<p>Driver.executeCommand</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#defined-in_68","title":"Defined in","text":"<p>packages/types/lib/driver.ts:696</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#executemethod","title":"executeMethod","text":"<p>\u25b8 executeMethod(<code>script</code>, <code>args</code>): <code>Promise</code>&lt;<code>any</code>&gt;</p> <p>Call an <code>Execute Method</code> by its name with the given arguments. This method will check that the driver has registered the method matching the name, and send it the arguments.</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#parameters_31","title":"Parameters","text":"Name Type Description <code>script</code> <code>string</code> the name of the Execute Method <code>args</code> [<code>StringRecord</code>] | [] a singleton array containing an arguments object"},{"location":"reference/interfaces/appium_types.ExternalDriver/#returns_40","title":"Returns","text":"<p><code>Promise</code>&lt;<code>any</code>&gt;</p> <p>The result of calling the Execute Method</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#inherited-from_35","title":"Inherited from","text":"<p>Driver.executeMethod</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#defined-in_69","title":"Defined in","text":"<p>packages/types/lib/driver.ts:186</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#findelorels","title":"findElOrEls","text":"<p>\u25b8 findElOrEls&lt;<code>Mult</code>&gt;(<code>strategy</code>, <code>selector</code>, <code>mult</code>, <code>context?</code>): <code>Promise</code>&lt;<code>Mult</code> extends <code>true</code> ? <code>Element</code>[] : <code>Element</code>&gt;</p> <p>A helper method that returns one or more UI elements based on the search criteria</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#type-parameters_1","title":"Type parameters","text":"Name Type <code>Mult</code> extends <code>boolean</code>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#parameters_32","title":"Parameters","text":"Name Type Description <code>strategy</code> <code>string</code> the locator strategy <code>selector</code> <code>string</code> the selector <code>mult</code> <code>Mult</code> whether or not we want to find multiple elements <code>context?</code> <code>any</code> the element to use as the search context basis if desiredCapabilities"},{"location":"reference/interfaces/appium_types.ExternalDriver/#returns_41","title":"Returns","text":"<p><code>Promise</code>&lt;<code>Mult</code> extends <code>true</code> ? <code>Element</code>[] : <code>Element</code>&gt;</p> <p>A single element or list of elements</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#inherited-from_36","title":"Inherited from","text":"<p>Driver.findElOrEls</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#defined-in_70","title":"Defined in","text":"<p>packages/types/lib/driver.ts:297</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#findelorelswithprocessing","title":"findElOrElsWithProcessing","text":"<p>\u25b8 findElOrElsWithProcessing&lt;<code>Mult</code>&gt;(<code>strategy</code>, <code>selector</code>, <code>mult</code>, <code>context?</code>): <code>Promise</code>&lt;<code>Mult</code> extends <code>true</code> ? <code>Element</code>[] : <code>Element</code>&gt;</p> <p>This is a wrapper for <code>findElOrEls</code> that validates locator strategies and implements the <code>appium:printPageSourceOnFindFailure</code> capability</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#type-parameters_2","title":"Type parameters","text":"Name Type <code>Mult</code> extends <code>boolean</code>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#parameters_33","title":"Parameters","text":"Name Type Description <code>strategy</code> <code>string</code> the locator strategy <code>selector</code> <code>string</code> the selector <code>mult</code> <code>Mult</code> whether or not we want to find multiple elements <code>context?</code> <code>any</code> the element to use as the search context basis if desiredCapabilities"},{"location":"reference/interfaces/appium_types.ExternalDriver/#returns_42","title":"Returns","text":"<p><code>Promise</code>&lt;<code>Mult</code> extends <code>true</code> ? <code>Element</code>[] : <code>Element</code>&gt;</p> <p>A single element or list of elements</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#inherited-from_37","title":"Inherited from","text":"<p>Driver.findElOrElsWithProcessing</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#defined-in_71","title":"Defined in","text":"<p>packages/types/lib/driver.ts:315</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#findelement","title":"findElement","text":"<p>\u25b8 findElement(<code>strategy</code>, <code>selector</code>): <code>Promise</code>&lt;<code>Element</code>&gt;</p> <p>Find a UI element given a locator strategy and a selector, erroring if it can't be found</p> <p><code>See</code></p> <p>https://w3c.github.io/webdriver/#find-element</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#parameters_34","title":"Parameters","text":"Name Type Description <code>strategy</code> <code>string</code> the locator strategy <code>selector</code> <code>string</code> the selector to combine with the strategy to find the specific element"},{"location":"reference/interfaces/appium_types.ExternalDriver/#returns_43","title":"Returns","text":"<p><code>Promise</code>&lt;<code>Element</code>&gt;</p> <p>The element object encoding the element id which can be used in element-related commands</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#inherited-from_38","title":"Inherited from","text":"<p>Driver.findElement</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#defined-in_72","title":"Defined in","text":"<p>packages/types/lib/driver.ts:213</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#findelementfromelement","title":"findElementFromElement","text":"<p>\u25b8 findElementFromElement(<code>strategy</code>, <code>selector</code>, <code>elementId</code>): <code>Promise</code>&lt;<code>Element</code>&gt;</p> <p>Find a UI element given a locator strategy and a selector, erroring if it can't be found. Only look for elements among the set of descendants of a given element</p> <p><code>See</code></p> <p>https://w3c.github.io/webdriver/#find-element-from-element</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#parameters_35","title":"Parameters","text":"Name Type Description <code>strategy</code> <code>string</code> the locator strategy <code>selector</code> <code>string</code> the selector to combine with the strategy to find the specific element <code>elementId</code> <code>string</code> the id of the element to use as the search basis"},{"location":"reference/interfaces/appium_types.ExternalDriver/#returns_44","title":"Returns","text":"<p><code>Promise</code>&lt;<code>Element</code>&gt;</p> <p>The element object encoding the element id which can be used in element-related commands</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#inherited-from_39","title":"Inherited from","text":"<p>Driver.findElementFromElement</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#defined-in_73","title":"Defined in","text":"<p>packages/types/lib/driver.ts:238</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#findelementfromshadowroot","title":"findElementFromShadowRoot","text":"<p>\u25b8 <code>Optional</code> findElementFromShadowRoot(<code>strategy</code>, <code>selector</code>, <code>shadowId</code>): <code>Promise</code>&lt;<code>Element</code>&gt;</p> <p>Find an element from a shadow root</p> <p><code>See</code></p> <p>https://w3c.github.io/webdriver/#find-element-from-shadow-root</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#parameters_36","title":"Parameters","text":"Name Type Description <code>strategy</code> <code>string</code> the locator strategy <code>selector</code> <code>string</code> the selector to combine with the strategy to find the specific elements <code>shadowId</code> <code>string</code> the id of the element to use as the search basis"},{"location":"reference/interfaces/appium_types.ExternalDriver/#returns_45","title":"Returns","text":"<p><code>Promise</code>&lt;<code>Element</code>&gt;</p> <p>The element inside the shadow root matching the selector</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#inherited-from_40","title":"Inherited from","text":"<p>Driver.findElementFromShadowRoot</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#defined-in_74","title":"Defined in","text":"<p>packages/types/lib/driver.ts:266</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#findelements","title":"findElements","text":"<p>\u25b8 findElements(<code>strategy</code>, <code>selector</code>): <code>Promise</code>&lt;<code>Element</code>[]&gt;</p> <p>Find a a list of all UI elements matching a given a locator strategy and a selector</p> <p><code>See</code></p> <p>https://w3c.github.io/webdriver/#find-elements</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#parameters_37","title":"Parameters","text":"Name Type Description <code>strategy</code> <code>string</code> the locator strategy <code>selector</code> <code>string</code> the selector to combine with the strategy to find the specific elements"},{"location":"reference/interfaces/appium_types.ExternalDriver/#returns_46","title":"Returns","text":"<p><code>Promise</code>&lt;<code>Element</code>[]&gt;</p> <p>A possibly-empty list of element objects</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#inherited-from_41","title":"Inherited from","text":"<p>Driver.findElements</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#defined-in_75","title":"Defined in","text":"<p>packages/types/lib/driver.ts:224</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#findelementsfromelement","title":"findElementsFromElement","text":"<p>\u25b8 findElementsFromElement(<code>strategy</code>, <code>selector</code>, <code>elementId</code>): <code>Promise</code>&lt;<code>Element</code>[]&gt;</p> <p>Find a a list of all UI elements matching a given a locator strategy and a selector. Only look for elements among the set of descendants of a given element</p> <p><code>See</code></p> <p>https://w3c.github.io/webdriver/#find-elements-from-element</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#parameters_38","title":"Parameters","text":"Name Type Description <code>strategy</code> <code>string</code> the locator strategy <code>selector</code> <code>string</code> the selector to combine with the strategy to find the specific elements <code>elementId</code> <code>string</code> the id of the element to use as the search basis"},{"location":"reference/interfaces/appium_types.ExternalDriver/#returns_47","title":"Returns","text":"<p><code>Promise</code>&lt;<code>Element</code>[]&gt;</p> <p>A possibly-empty list of element objects</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#inherited-from_42","title":"Inherited from","text":"<p>Driver.findElementsFromElement</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#defined-in_76","title":"Defined in","text":"<p>packages/types/lib/driver.ts:251</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#findelementsfromshadowroot","title":"findElementsFromShadowRoot","text":"<p>\u25b8 <code>Optional</code> findElementsFromShadowRoot(<code>strategy</code>, <code>selector</code>, <code>shadowId</code>): <code>Promise</code>&lt;<code>Element</code>[]&gt;</p> <p>Find elements from a shadow root</p> <p><code>See</code></p> <p>https://w3c.github.io/webdriver/#find-element-from-shadow-root</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#parameters_39","title":"Parameters","text":"Name Type Description <code>strategy</code> <code>string</code> the locator strategy <code>selector</code> <code>string</code> the selector to combine with the strategy to find the specific elements <code>shadowId</code> <code>string</code> the id of the element to use as the search basis"},{"location":"reference/interfaces/appium_types.ExternalDriver/#returns_48","title":"Returns","text":"<p><code>Promise</code>&lt;<code>Element</code>[]&gt;</p> <p>A possibly empty list of elements inside the shadow root matching the selector</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#inherited-from_43","title":"Inherited from","text":"<p>Driver.findElementsFromShadowRoot</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#defined-in_77","title":"Defined in","text":"<p>packages/types/lib/driver.ts:281</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#fingerprint","title":"fingerprint","text":"<p>\u25b8 <code>Optional</code> fingerprint(<code>fingerprintId</code>): <code>Promise</code>&lt;<code>void</code>&gt;</p> <p>Apply a synthetic fingerprint to the fingerprint detector of the device</p> <p><code>Deprecated</code></p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#parameters_40","title":"Parameters","text":"Name Type Description <code>fingerprintId</code> <code>number</code> the numeric ID of the fingerprint to use"},{"location":"reference/interfaces/appium_types.ExternalDriver/#returns_49","title":"Returns","text":"<p><code>Promise</code>&lt;<code>void</code>&gt;</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#defined-in_78","title":"Defined in","text":"<p>packages/types/lib/driver.ts:1337</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#flick","title":"flick","text":"<p>\u25b8 <code>Optional</code> flick(<code>element?</code>, <code>xSpeed?</code>, <code>ySpeed?</code>, <code>xOffset?</code>, <code>yOffset?</code>, <code>speed?</code>): <code>Promise</code>&lt;<code>void</code>&gt;</p> <p>Perform a flick event at the location specified</p> <p><code>Deprecated</code></p> <p>Use the Actions API instead</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#parameters_41","title":"Parameters","text":"Name Type Description <code>element?</code> <code>string</code> the element to make coordinates relative to <code>xSpeed?</code> <code>number</code> the horizontal flick speed (in driver-specific units) <code>ySpeed?</code> <code>number</code> the vertical flick speed (in driver-specific units) <code>xOffset?</code> <code>number</code> the x coordinate <code>yOffset?</code> <code>number</code> the y coordinate <code>speed?</code> <code>number</code> the speed (unclear how this relates to xSpeed and ySpeed)"},{"location":"reference/interfaces/appium_types.ExternalDriver/#returns_50","title":"Returns","text":"<p><code>Promise</code>&lt;<code>void</code>&gt;</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#defined-in_79","title":"Defined in","text":"<p>packages/types/lib/driver.ts:1979</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#forward","title":"forward","text":"<p>\u25b8 <code>Optional</code> forward(): <code>Promise</code>&lt;<code>void</code>&gt;</p> <p>Navigate forward in the page history</p> <p><code>See</code></p> <p>https://w3c.github.io/webdriver/#forward</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#returns_51","title":"Returns","text":"<p><code>Promise</code>&lt;<code>void</code>&gt;</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#defined-in_80","title":"Defined in","text":"<p>packages/types/lib/driver.ts:806</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#fullscreenwindow","title":"fullScreenWindow","text":"<p>\u25b8 <code>Optional</code> fullScreenWindow(): <code>Promise</code>&lt;<code>Rect</code>&gt;</p> <p>Put the current window into full screen mode</p> <p><code>See</code></p> <p>https://w3c.github.io/webdriver/#fullscreen-window</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#returns_52","title":"Returns","text":"<p><code>Promise</code>&lt;<code>Rect</code>&gt;</p> <p>The actual <code>Rect</code> of the window after running the command</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#defined-in_81","title":"Defined in","text":"<p>packages/types/lib/driver.ts:932</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#getactiveimeengine","title":"getActiveIMEEngine","text":"<p>\u25b8 <code>Optional</code> getActiveIMEEngine(): <code>Promise</code>&lt;<code>string</code>&gt;</p> <p>Get the active IME engine</p> <p><code>Deprecated</code></p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#returns_53","title":"Returns","text":"<p><code>Promise</code>&lt;<code>string</code>&gt;</p> <p>The name of the active engine</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#defined-in_82","title":"Defined in","text":"<p>packages/types/lib/driver.ts:1842</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#getalerttext","title":"getAlertText","text":"<p>\u25b8 <code>Optional</code> getAlertText(): <code>Promise</code>&lt;<code>null</code> | <code>string</code>&gt;</p> <p>Get the text of the displayed alert</p> <p><code>See</code></p> <p>https://w3c.github.io/webdriver/#get-alert-text</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#returns_54","title":"Returns","text":"<p><code>Promise</code>&lt;<code>null</code> | <code>string</code>&gt;</p> <p>The text of the alert</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#defined-in_83","title":"Defined in","text":"<p>packages/types/lib/driver.ts:1188</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#getattribute","title":"getAttribute","text":"<p>\u25b8 <code>Optional</code> getAttribute(<code>name</code>, <code>elementId</code>): <code>Promise</code>&lt;<code>null</code> | <code>string</code>&gt;</p> <p>Retrieve the value of an element's attribute</p> <p><code>See</code></p> <p>https://w3c.github.io/webdriver/#get-element-attribute</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#parameters_42","title":"Parameters","text":"Name Type Description <code>name</code> <code>string</code> the attribute name <code>elementId</code> <code>string</code> the id of the element"},{"location":"reference/interfaces/appium_types.ExternalDriver/#returns_55","title":"Returns","text":"<p><code>Promise</code>&lt;<code>null</code> | <code>string</code>&gt;</p> <p>The attribute value</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#defined-in_84","title":"Defined in","text":"<p>packages/types/lib/driver.ts:971</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#getauthcredential","title":"getAuthCredential","text":"<p>\u25b8 <code>Optional</code> getAuthCredential(): <code>Promise</code>&lt;<code>Credential</code>[]&gt;</p> <p>Get the list of public key credential sources</p> <p><code>See</code></p> <p>https://www.w3.org/TR/webauthn-2/#sctn-automation-get-credentials</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#returns_56","title":"Returns","text":"<p><code>Promise</code>&lt;<code>Credential</code>[]&gt;</p> <p>The list of Credentials</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#defined-in_85","title":"Defined in","text":"<p>packages/types/lib/driver.ts:2165</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#getclipboard","title":"getClipboard","text":"<p>\u25b8 <code>Optional</code> getClipboard(<code>contentType?</code>): <code>Promise</code>&lt;<code>string</code>&gt;</p> <p>Get the contents of the device clipboard, converted into an appropriate media type</p> <p><code>Deprecated</code></p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#parameters_43","title":"Parameters","text":"Name Type Description <code>contentType?</code> <code>string</code> the media type if not text"},{"location":"reference/interfaces/appium_types.ExternalDriver/#returns_57","title":"Returns","text":"<p><code>Promise</code>&lt;<code>string</code>&gt;</p> <p>The text or media content (base64-encoded) of the clipboard</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#defined-in_86","title":"Defined in","text":"<p>packages/types/lib/driver.ts:1742</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#getcomputedlabel","title":"getComputedLabel","text":"<p>\u25b8 <code>Optional</code> getComputedLabel(<code>elementId</code>): <code>Promise</code>&lt;<code>null</code> | <code>string</code>&gt;</p> <p>Get the accessible name/label of an element</p> <p><code>See</code></p> <p>https://w3c.github.io/webdriver/#get-computed-label</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#parameters_44","title":"Parameters","text":"Name Type Description <code>elementId</code> <code>string</code> the id of the element"},{"location":"reference/interfaces/appium_types.ExternalDriver/#returns_58","title":"Returns","text":"<p><code>Promise</code>&lt;<code>null</code> | <code>string</code>&gt;</p> <p>The accessible name</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#defined-in_87","title":"Defined in","text":"<p>packages/types/lib/driver.ts:1053</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#getcomputedrole","title":"getComputedRole","text":"<p>\u25b8 <code>Optional</code> getComputedRole(<code>elementId</code>): <code>Promise</code>&lt;<code>null</code> | <code>string</code>&gt;</p> <p>Get the WAI-ARIA role of an element</p> <p><code>See</code></p> <p>https://w3c.github.io/webdriver/#get-computed-role</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#parameters_45","title":"Parameters","text":"Name Type Description <code>elementId</code> <code>string</code> the id of the element"},{"location":"reference/interfaces/appium_types.ExternalDriver/#returns_59","title":"Returns","text":"<p><code>Promise</code>&lt;<code>null</code> | <code>string</code>&gt;</p> <p>The role</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#defined-in_88","title":"Defined in","text":"<p>packages/types/lib/driver.ts:1043</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#getcontexts","title":"getContexts","text":"<p>\u25b8 <code>Optional</code> getContexts(): <code>Promise</code>&lt;<code>string</code>[]&gt;</p> <p>Get the list of available contexts</p> <p><code>See</code></p> <p>https://github.com/SeleniumHQ/mobile-spec/blob/master/spec-draft.md#webviews-and-other-contexts</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#returns_60","title":"Returns","text":"<p><code>Promise</code>&lt;<code>string</code>[]&gt;</p> <p>The list of context names</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#defined-in_89","title":"Defined in","text":"<p>packages/types/lib/driver.ts:2026</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#getcookie","title":"getCookie","text":"<p>\u25b8 <code>Optional</code> getCookie(<code>name</code>): <code>Promise</code>&lt;<code>Cookie</code>&gt;</p> <p>Get a cookie by name</p> <p><code>See</code></p> <p>https://w3c.github.io/webdriver/#get-named-cookie</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#parameters_46","title":"Parameters","text":"Name Type Description <code>name</code> <code>string</code> the name of the cookie"},{"location":"reference/interfaces/appium_types.ExternalDriver/#returns_61","title":"Returns","text":"<p><code>Promise</code>&lt;<code>Cookie</code>&gt;</p> <p>A serialized cookie</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#defined-in_90","title":"Defined in","text":"<p>packages/types/lib/driver.ts:1131</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#getcookies","title":"getCookies","text":"<p>\u25b8 <code>Optional</code> getCookies(): <code>Promise</code>&lt;<code>Cookie</code>[]&gt;</p> <p>Get all cookies known to the browsing context</p> <p><code>See</code></p> <p>https://w3c.github.io/webdriver/#get-all-cookies</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#returns_62","title":"Returns","text":"<p><code>Promise</code>&lt;<code>Cookie</code>[]&gt;</p> <p>A list of serialized cookies</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#defined-in_91","title":"Defined in","text":"<p>packages/types/lib/driver.ts:1121</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#getcssproperty","title":"getCssProperty","text":"<p>\u25b8 <code>Optional</code> getCssProperty(<code>name</code>, <code>elementId</code>): <code>Promise</code>&lt;<code>string</code>&gt;</p> <p>Retrieve the value of a CSS property of an element</p> <p><code>See</code></p> <p>https://w3c.github.io/webdriver/#get-element-css-value</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#parameters_47","title":"Parameters","text":"Name Type Description <code>name</code> <code>string</code> the CSS property name <code>elementId</code> <code>string</code> the id of the element"},{"location":"reference/interfaces/appium_types.ExternalDriver/#returns_63","title":"Returns","text":"<p><code>Promise</code>&lt;<code>string</code>&gt;</p> <p>The property value</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#defined-in_92","title":"Defined in","text":"<p>packages/types/lib/driver.ts:993</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#getcurrentactivity","title":"getCurrentActivity","text":"<p>\u25b8 <code>Optional</code> getCurrentActivity(): <code>Promise</code>&lt;<code>string</code>&gt;</p> <p>Get the current activity name</p> <p><code>Deprecated</code></p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#returns_64","title":"Returns","text":"<p><code>Promise</code>&lt;<code>string</code>&gt;</p> <p>The activity name</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#defined-in_93","title":"Defined in","text":"<p>packages/types/lib/driver.ts:1444</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#getcurrentcontext","title":"getCurrentContext","text":"<p>\u25b8 <code>Optional</code> getCurrentContext(): <code>Promise</code>&lt;<code>null</code> | <code>string</code>&gt;</p> <p>Get the currently active context</p> <p><code>See</code></p> <p>https://github.com/SeleniumHQ/mobile-spec/blob/master/spec-draft.md#webviews-and-other-contexts</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#returns_65","title":"Returns","text":"<p><code>Promise</code>&lt;<code>null</code> | <code>string</code>&gt;</p> <p>The context name</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#defined-in_94","title":"Defined in","text":"<p>packages/types/lib/driver.ts:2010</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#getcurrentpackage","title":"getCurrentPackage","text":"<p>\u25b8 <code>Optional</code> getCurrentPackage(): <code>Promise</code>&lt;<code>string</code>&gt;</p> <p>Get the current active app package name/id</p> <p><code>Deprecated</code></p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#returns_66","title":"Returns","text":"<p><code>Promise</code>&lt;<code>string</code>&gt;</p> <p>The package name</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#defined-in_95","title":"Defined in","text":"<p>packages/types/lib/driver.ts:1453</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#getdevicetime","title":"getDeviceTime","text":"<p>\u25b8 <code>Optional</code> getDeviceTime(<code>format?</code>): <code>Promise</code>&lt;<code>string</code>&gt;</p> <p>Get the current time on the device under timeouts</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#parameters_48","title":"Parameters","text":"Name Type Description <code>format?</code> <code>string</code> the date/time format you would like the response into"},{"location":"reference/interfaces/appium_types.ExternalDriver/#returns_67","title":"Returns","text":"<p><code>Promise</code>&lt;<code>string</code>&gt;</p> <p>The formatted time</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#defined-in_96","title":"Defined in","text":"<p>packages/types/lib/driver.ts:1232</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#getdisplaydensity","title":"getDisplayDensity","text":"<p>\u25b8 <code>Optional</code> getDisplayDensity(): <code>Promise</code>&lt;<code>number</code>&gt;</p> <p>Get the display's pixel density</p> <p><code>Deprecated</code></p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#returns_68","title":"Returns","text":"<p><code>Promise</code>&lt;<code>number</code>&gt;</p> <p>The density</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#defined-in_97","title":"Defined in","text":"<p>packages/types/lib/driver.ts:1627</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#getelementrect","title":"getElementRect","text":"<p>\u25b8 <code>Optional</code> getElementRect(<code>elementId</code>): <code>Promise</code>&lt;<code>Rect</code>&gt;</p> <p>Get the dimensions and position of an element</p> <p><code>See</code></p> <p>https://w3c.github.io/webdriver/#get-element-rect</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#parameters_49","title":"Parameters","text":"Name Type Description <code>elementId</code> <code>string</code> the id of the element"},{"location":"reference/interfaces/appium_types.ExternalDriver/#returns_69","title":"Returns","text":"<p><code>Promise</code>&lt;<code>Rect</code>&gt;</p> <p>The Rect object containing x, y, width, and height properties</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#defined-in_98","title":"Defined in","text":"<p>packages/types/lib/driver.ts:1023</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#getelementscreenshot","title":"getElementScreenshot","text":"<p>\u25b8 <code>Optional</code> getElementScreenshot(<code>elementId</code>): <code>Promise</code>&lt;<code>string</code>&gt;</p> <p>Get an image of a single element as rendered on screen</p> <p><code>See</code></p> <p>https://w3c.github.io/webdriver/#take-element-screenshot</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#parameters_50","title":"Parameters","text":"Name Type Description <code>elementId</code> <code>string</code> the id of the element"},{"location":"reference/interfaces/appium_types.ExternalDriver/#returns_70","title":"Returns","text":"<p><code>Promise</code>&lt;<code>string</code>&gt;</p> <p>A base64-encoded string representing the PNG image data for the element rect</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#defined-in_99","title":"Defined in","text":"<p>packages/types/lib/driver.ts:1214</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#getgeolocation","title":"getGeoLocation","text":"<p>\u25b8 <code>Optional</code> getGeoLocation(): <code>Promise</code>&lt;<code>Location</code>&gt;</p> <p>Get the virtual or real geographical location of a device</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#returns_71","title":"Returns","text":"<p><code>Promise</code>&lt;<code>Location</code>&gt;</p> <p>The location</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#defined-in_100","title":"Defined in","text":"<p>packages/types/lib/driver.ts:1993</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#getlocation","title":"getLocation","text":"<p>\u25b8 <code>Optional</code> getLocation(<code>elementId</code>): <code>Promise</code>&lt;<code>Position</code>&gt;</p> <p>Get the position of an element on screen</p> <p><code>Deprecated</code></p> <p>Use getElementRect instead</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#parameters_51","title":"Parameters","text":"Name Type Description <code>elementId</code> <code>string</code> the element ID"},{"location":"reference/interfaces/appium_types.ExternalDriver/#returns_72","title":"Returns","text":"<p><code>Promise</code>&lt;<code>Position</code>&gt;</p> <p>The position of the element</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#defined-in_101","title":"Defined in","text":"<p>packages/types/lib/driver.ts:1772</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#getlocationinview","title":"getLocationInView","text":"<p>\u25b8 <code>Optional</code> getLocationInView(<code>elementId</code>): <code>Promise</code>&lt;<code>Position</code>&gt;</p> <p>Get the position of an element on screen within a certain other view</p> <p><code>Deprecated</code></p> <p>Use getElementRect instead</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#parameters_52","title":"Parameters","text":"Name Type Description <code>elementId</code> <code>string</code> the element ID"},{"location":"reference/interfaces/appium_types.ExternalDriver/#returns_73","title":"Returns","text":"<p><code>Promise</code>&lt;<code>Position</code>&gt;</p> <p>The position of the element</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#defined-in_102","title":"Defined in","text":"<p>packages/types/lib/driver.ts:1783</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#getlog","title":"getLog","text":"<p>\u25b8 getLog(<code>logType</code>): <code>Promise</code>&lt;<code>unknown</code>[]&gt;</p> <p>Get the log for a given log type.</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#parameters_53","title":"Parameters","text":"Name Type Description <code>logType</code> <code>string</code> Name/key of log type as defined in <code>supportedLogTypes</code>."},{"location":"reference/interfaces/appium_types.ExternalDriver/#returns_74","title":"Returns","text":"<p><code>Promise</code>&lt;<code>unknown</code>[]&gt;</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#inherited-from_44","title":"Inherited from","text":"<p>Driver.getLog</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#defined-in_103","title":"Defined in","text":"<p>packages/types/lib/driver.ts:347</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#getlogevents","title":"getLogEvents","text":"<p>\u25b8 getLogEvents(<code>type?</code>): <code>Promise</code>&lt;<code>Record</code>&lt;<code>string</code>, <code>number</code>&gt; | <code>EventHistory</code>&gt;</p> <p>Get a list of events that have occurred in the current session</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#parameters_54","title":"Parameters","text":"Name Type Description <code>type?</code> <code>string</code> | <code>string</code>[] filter the returned events by including one or more types"},{"location":"reference/interfaces/appium_types.ExternalDriver/#returns_75","title":"Returns","text":"<p><code>Promise</code>&lt;<code>Record</code>&lt;<code>string</code>, <code>number</code>&gt; | <code>EventHistory</code>&gt;</p> <p>The event history for the session</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#inherited-from_45","title":"Inherited from","text":"<p>Driver.getLogEvents</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#defined-in_104","title":"Defined in","text":"<p>packages/types/lib/driver.ts:157</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#getlogtypes","title":"getLogTypes","text":"<p>\u25b8 getLogTypes(): <code>Promise</code>&lt;<code>string</code>[]&gt;</p> <p>Get available log types as a list of strings</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#returns_76","title":"Returns","text":"<p><code>Promise</code>&lt;<code>string</code>[]&gt;</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#inherited-from_46","title":"Inherited from","text":"<p>Driver.getLogTypes</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#defined-in_105","title":"Defined in","text":"<p>packages/types/lib/driver.ts:340</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#getmanageddrivers","title":"getManagedDrivers","text":"<p>\u25b8 getManagedDrivers(): <code>Driver</code>&lt;{ <code>app</code>: { <code>isString</code>: <code>true</code> = true } ; <code>autoLaunch</code>: { <code>isBoolean</code>: <code>true</code> = true } ; <code>autoWebview</code>: { <code>isBoolean</code>: <code>true</code> = true } ; <code>automationName</code>: { <code>isString</code>: <code>true</code> = true } ; <code>deviceName</code>: { <code>isString</code>: <code>true</code> = true } ; <code>eventTimings</code>: { <code>isBoolean</code>: <code>true</code> = true } ; <code>fullReset</code>: { <code>isBoolean</code>: <code>true</code> = true } ; <code>language</code>: { <code>isString</code>: <code>true</code> = true } ; <code>locale</code>: { <code>isString</code>: <code>true</code> = true } ; <code>newCommandTimeout</code>: { <code>isNumber</code>: <code>true</code> = true } ; <code>noReset</code>: { <code>isBoolean</code>: <code>true</code> = true } ; <code>orientation</code>: { <code>inclusion</code>: readonly [<code>\"LANDSCAPE\"</code>, <code>\"PORTRAIT\"</code>]  } ; <code>platformName</code>: { <code>isString</code>: <code>true</code> = true; <code>presence</code>: <code>true</code> = true } ; <code>platformVersion</code>: { <code>isString</code>: <code>true</code> = true } ; <code>printPageSourceOnFindFailure</code>: { <code>isBoolean</code>: <code>true</code> = true } ; <code>udid</code>: { <code>isString</code>: <code>true</code> = true } ; <code>webSocketUrl</code>: { <code>isString</code>: <code>true</code> = true }  }, <code>StringRecord</code>, <code>any</code>&gt;[]</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#returns_77","title":"Returns","text":"<p><code>Driver</code>&lt;{ <code>app</code>: { <code>isString</code>: <code>true</code> = true } ; <code>autoLaunch</code>: { <code>isBoolean</code>: <code>true</code> = true } ; <code>autoWebview</code>: { <code>isBoolean</code>: <code>true</code> = true } ; <code>automationName</code>: { <code>isString</code>: <code>true</code> = true } ; <code>deviceName</code>: { <code>isString</code>: <code>true</code> = true } ; <code>eventTimings</code>: { <code>isBoolean</code>: <code>true</code> = true } ; <code>fullReset</code>: { <code>isBoolean</code>: <code>true</code> = true } ; <code>language</code>: { <code>isString</code>: <code>true</code> = true } ; <code>locale</code>: { <code>isString</code>: <code>true</code> = true } ; <code>newCommandTimeout</code>: { <code>isNumber</code>: <code>true</code> = true } ; <code>noReset</code>: { <code>isBoolean</code>: <code>true</code> = true } ; <code>orientation</code>: { <code>inclusion</code>: readonly [<code>\"LANDSCAPE\"</code>, <code>\"PORTRAIT\"</code>]  } ; <code>platformName</code>: { <code>isString</code>: <code>true</code> = true; <code>presence</code>: <code>true</code> = true } ; <code>platformVersion</code>: { <code>isString</code>: <code>true</code> = true } ; <code>printPageSourceOnFindFailure</code>: { <code>isBoolean</code>: <code>true</code> = true } ; <code>udid</code>: { <code>isString</code>: <code>true</code> = true } ; <code>webSocketUrl</code>: { <code>isString</code>: <code>true</code> = true }  }, <code>StringRecord</code>, <code>any</code>&gt;[]</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#inherited-from_47","title":"Inherited from","text":"<p>Driver.getManagedDrivers</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#defined-in_106","title":"Defined in","text":"<p>packages/types/lib/driver.ts:654</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#getname","title":"getName","text":"<p>\u25b8 <code>Optional</code> getName(<code>elementId</code>): <code>Promise</code>&lt;<code>string</code>&gt;</p> <p>Get the tag name of an element</p> <p><code>See</code></p> <p>https://w3c.github.io/webdriver/#get-element-tag-name</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#parameters_55","title":"Parameters","text":"Name Type Description <code>elementId</code> <code>string</code> the id of the element"},{"location":"reference/interfaces/appium_types.ExternalDriver/#returns_78","title":"Returns","text":"<p><code>Promise</code>&lt;<code>string</code>&gt;</p> <p>The tag name</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#defined-in_107","title":"Defined in","text":"<p>packages/types/lib/driver.ts:1013</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#getnetworkconnection","title":"getNetworkConnection","text":"<p>\u25b8 <code>Optional</code> getNetworkConnection(): <code>Promise</code>&lt;<code>number</code>&gt;</p> <p>Get the network connection state of a device</p> <p><code>See</code></p> <p>https://github.com/SeleniumHQ/mobile-spec/blob/master/spec-draft.md#device-modes</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#returns_79","title":"Returns","text":"<p><code>Promise</code>&lt;<code>number</code>&gt;</p> <p>A number which is a bitmask representing categories like Data, Wifi, and Airplane mode status</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#defined-in_108","title":"Defined in","text":"<p>packages/types/lib/driver.ts:2046</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#getorientation","title":"getOrientation","text":"<p>\u25b8 <code>Optional</code> getOrientation(): <code>Promise</code>&lt;<code>string</code>&gt;</p> <p>Get the device orientation</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#returns_80","title":"Returns","text":"<p><code>Promise</code>&lt;<code>string</code>&gt;</p> <p>The orientation string</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#defined-in_109","title":"Defined in","text":"<p>packages/types/lib/driver.ts:1874</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#getpageindex","title":"getPageIndex","text":"<p>\u25b8 <code>Optional</code> getPageIndex(<code>elementId</code>): <code>Promise</code>&lt;<code>string</code>&gt;</p> <p>Get the index of an element on the page</p> <p><code>Deprecated</code></p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#parameters_56","title":"Parameters","text":"Name Type Description <code>elementId</code> <code>string</code> the element id"},{"location":"reference/interfaces/appium_types.ExternalDriver/#returns_81","title":"Returns","text":"<p><code>Promise</code>&lt;<code>string</code>&gt;</p> <p>The page index</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#defined-in_110","title":"Defined in","text":"<p>packages/types/lib/driver.ts:2037</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#getpagesource","title":"getPageSource","text":"<p>\u25b8 getPageSource(): <code>Promise</code>&lt;<code>string</code>&gt;</p> <p>Get the current page/app source as HTML/XML</p> <p><code>See</code></p> <p>https://w3c.github.io/webdriver/#get-page-source</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#returns_82","title":"Returns","text":"<p><code>Promise</code>&lt;<code>string</code>&gt;</p> <p>The UI hierarchy in a platform-appropriate format (e.g., HTML for a web page)</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#inherited-from_48","title":"Inherited from","text":"<p>Driver.getPageSource</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#defined-in_111","title":"Defined in","text":"<p>packages/types/lib/driver.ts:328</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#getperformancedata","title":"getPerformanceData","text":"<p>\u25b8 <code>Optional</code> getPerformanceData(<code>packageName</code>, <code>dataType</code>, <code>dataReadTimeout?</code>): <code>Promise</code>&lt;<code>string</code>[]&gt;</p> <p>Get the list of performance data associated with a given type</p> <p><code>Deprecated</code></p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#parameters_57","title":"Parameters","text":"Name Type Description <code>packageName</code> <code>string</code> the package name / id of the app to retrieve data for <code>dataType</code> <code>string</code> the performance data type; one of those retrieved in a call to getPerformanceDataTypes <code>dataReadTimeout?</code> <code>number</code> how long to wait for data before timing out"},{"location":"reference/interfaces/appium_types.ExternalDriver/#returns_83","title":"Returns","text":"<p><code>Promise</code>&lt;<code>string</code>[]&gt;</p> <p>A list of performance data strings</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#defined-in_112","title":"Defined in","text":"<p>packages/types/lib/driver.ts:1302</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#getperformancedatatypes","title":"getPerformanceDataTypes","text":"<p>\u25b8 <code>Optional</code> getPerformanceDataTypes(): <code>Promise</code>&lt;<code>string</code>[]&gt;</p> <p>List the performance data types supported by this driver, which can be used in a call to get the performance data by type.</p> <p><code>Deprecated</code></p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#returns_84","title":"Returns","text":"<p><code>Promise</code>&lt;<code>string</code>[]&gt;</p> <p>The list of types</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#defined-in_113","title":"Defined in","text":"<p>packages/types/lib/driver.ts:1288</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#getproperty","title":"getProperty","text":"<p>\u25b8 <code>Optional</code> getProperty(<code>name</code>, <code>elementId</code>): <code>Promise</code>&lt;<code>null</code> | <code>string</code>&gt;</p> <p>Retrieve the value of a named property of an element's JS object</p> <p><code>See</code></p> <p>https://w3c.github.io/webdriver/#get-element-property</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#parameters_58","title":"Parameters","text":"Name Type Description <code>name</code> <code>string</code> the object property name <code>elementId</code> <code>string</code> the id of the element"},{"location":"reference/interfaces/appium_types.ExternalDriver/#returns_85","title":"Returns","text":"<p><code>Promise</code>&lt;<code>null</code> | <code>string</code>&gt;</p> <p>The property value</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#defined-in_114","title":"Defined in","text":"<p>packages/types/lib/driver.ts:982</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#getproxyavoidlist","title":"getProxyAvoidList","text":"<p>\u25b8 getProxyAvoidList(<code>sessionId?</code>): <code>RouteMatcher</code>[]</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#parameters_59","title":"Parameters","text":"Name Type <code>sessionId?</code> <code>string</code>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#returns_86","title":"Returns","text":"<p><code>RouteMatcher</code>[]</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#inherited-from_49","title":"Inherited from","text":"<p>Driver.getProxyAvoidList</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#defined-in_115","title":"Defined in","text":"<p>packages/types/lib/driver.ts:650</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#getrotation","title":"getRotation","text":"<p>\u25b8 <code>Optional</code> getRotation(): <code>Promise</code>&lt;<code>Rotation</code>&gt;</p> <p>Get the current rotation state of the device</p> <p><code>See</code></p> <p>https://github.com/SeleniumHQ/mobile-spec/blob/master/spec-draft.md#device-rotation</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#returns_87","title":"Returns","text":"<p><code>Promise</code>&lt;<code>Rotation</code>&gt;</p> <p>The Rotation object consisting of x, y, and z rotation values (0 &lt;= n &lt;= 360)</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#defined-in_116","title":"Defined in","text":"<p>packages/types/lib/driver.ts:2081</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#getscreenshot","title":"getScreenshot","text":"<p>\u25b8 <code>Optional</code> getScreenshot(): <code>Promise</code>&lt;<code>string</code>&gt;</p> <p>Get a screenshot of the current document as rendered</p> <p><code>See</code></p> <p>https://w3c.github.io/webdriver/#take-screenshot</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#returns_88","title":"Returns","text":"<p><code>Promise</code>&lt;<code>string</code>&gt;</p> <p>A base64-encoded string representing the PNG image data</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#defined-in_117","title":"Defined in","text":"<p>packages/types/lib/driver.ts:1204</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#getsession","title":"getSession","text":"<p>\u25b8 getSession(): <code>Promise</code>&lt;<code>SingularSessionData</code>&lt;{ <code>app</code>: { <code>isString</code>: <code>true</code> = true } ; <code>autoLaunch</code>: { <code>isBoolean</code>: <code>true</code> = true } ; <code>autoWebview</code>: { <code>isBoolean</code>: <code>true</code> = true } ; <code>automationName</code>: { <code>isString</code>: <code>true</code> = true } ; <code>deviceName</code>: { <code>isString</code>: <code>true</code> = true } ; <code>eventTimings</code>: { <code>isBoolean</code>: <code>true</code> = true } ; <code>fullReset</code>: { <code>isBoolean</code>: <code>true</code> = true } ; <code>language</code>: { <code>isString</code>: <code>true</code> = true } ; <code>locale</code>: { <code>isString</code>: <code>true</code> = true } ; <code>newCommandTimeout</code>: { <code>isNumber</code>: <code>true</code> = true } ; <code>noReset</code>: { <code>isBoolean</code>: <code>true</code> = true } ; <code>orientation</code>: { <code>inclusion</code>: readonly [<code>\"LANDSCAPE\"</code>, <code>\"PORTRAIT\"</code>]  } ; <code>platformName</code>: { <code>isString</code>: <code>true</code> = true; <code>presence</code>: <code>true</code> = true } ; <code>platformVersion</code>: { <code>isString</code>: <code>true</code> = true } ; <code>printPageSourceOnFindFailure</code>: { <code>isBoolean</code>: <code>true</code> = true } ; <code>udid</code>: { <code>isString</code>: <code>true</code> = true } ; <code>webSocketUrl</code>: { <code>isString</code>: <code>true</code> = true }  }, <code>void</code>&gt;&gt;</p> <p>Get the data for the current session</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#returns_89","title":"Returns","text":"<p><code>Promise</code>&lt;<code>SingularSessionData</code>&lt;{ <code>app</code>: { <code>isString</code>: <code>true</code> = true } ; <code>autoLaunch</code>: { <code>isBoolean</code>: <code>true</code> = true } ; <code>autoWebview</code>: { <code>isBoolean</code>: <code>true</code> = true } ; <code>automationName</code>: { <code>isString</code>: <code>true</code> = true } ; <code>deviceName</code>: { <code>isString</code>: <code>true</code> = true } ; <code>eventTimings</code>: { <code>isBoolean</code>: <code>true</code> = true } ; <code>fullReset</code>: { <code>isBoolean</code>: <code>true</code> = true } ; <code>language</code>: { <code>isString</code>: <code>true</code> = true } ; <code>locale</code>: { <code>isString</code>: <code>true</code> = true } ; <code>newCommandTimeout</code>: { <code>isNumber</code>: <code>true</code> = true } ; <code>noReset</code>: { <code>isBoolean</code>: <code>true</code> = true } ; <code>orientation</code>: { <code>inclusion</code>: readonly [<code>\"LANDSCAPE\"</code>, <code>\"PORTRAIT\"</code>]  } ; <code>platformName</code>: { <code>isString</code>: <code>true</code> = true; <code>presence</code>: <code>true</code> = true } ; <code>platformVersion</code>: { <code>isString</code>: <code>true</code> = true } ; <code>printPageSourceOnFindFailure</code>: { <code>isBoolean</code>: <code>true</code> = true } ; <code>udid</code>: { <code>isString</code>: <code>true</code> = true } ; <code>webSocketUrl</code>: { <code>isString</code>: <code>true</code> = true }  }, <code>void</code>&gt;&gt;</p> <p>A session data object</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#inherited-from_50","title":"Inherited from","text":"<p>Driver.getSession</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#defined-in_118","title":"Defined in","text":"<p>packages/types/lib/driver.ts:173</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#getsessions","title":"getSessions","text":"<p>\u25b8 getSessions(): <code>Promise</code>&lt;<code>MultiSessionData</code>&lt;{ <code>app</code>: { <code>isString</code>: <code>true</code> = true } ; <code>autoLaunch</code>: { <code>isBoolean</code>: <code>true</code> = true } ; <code>autoWebview</code>: { <code>isBoolean</code>: <code>true</code> = true } ; <code>automationName</code>: { <code>isString</code>: <code>true</code> = true } ; <code>deviceName</code>: { <code>isString</code>: <code>true</code> = true } ; <code>eventTimings</code>: { <code>isBoolean</code>: <code>true</code> = true } ; <code>fullReset</code>: { <code>isBoolean</code>: <code>true</code> = true } ; <code>language</code>: { <code>isString</code>: <code>true</code> = true } ; <code>locale</code>: { <code>isString</code>: <code>true</code> = true } ; <code>newCommandTimeout</code>: { <code>isNumber</code>: <code>true</code> = true } ; <code>noReset</code>: { <code>isBoolean</code>: <code>true</code> = true } ; <code>orientation</code>: { <code>inclusion</code>: readonly [<code>\"LANDSCAPE\"</code>, <code>\"PORTRAIT\"</code>]  } ; <code>platformName</code>: { <code>isString</code>: <code>true</code> = true; <code>presence</code>: <code>true</code> = true } ; <code>platformVersion</code>: { <code>isString</code>: <code>true</code> = true } ; <code>printPageSourceOnFindFailure</code>: { <code>isBoolean</code>: <code>true</code> = true } ; <code>udid</code>: { <code>isString</code>: <code>true</code> = true } ; <code>webSocketUrl</code>: { <code>isString</code>: <code>true</code> = true }  }, <code>void</code>&gt;[]&gt;</p> <p>Get data for all sessions running on an Appium server</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#returns_90","title":"Returns","text":"<p><code>Promise</code>&lt;<code>MultiSessionData</code>&lt;{ <code>app</code>: { <code>isString</code>: <code>true</code> = true } ; <code>autoLaunch</code>: { <code>isBoolean</code>: <code>true</code> = true } ; <code>autoWebview</code>: { <code>isBoolean</code>: <code>true</code> = true } ; <code>automationName</code>: { <code>isString</code>: <code>true</code> = true } ; <code>deviceName</code>: { <code>isString</code>: <code>true</code> = true } ; <code>eventTimings</code>: { <code>isBoolean</code>: <code>true</code> = true } ; <code>fullReset</code>: { <code>isBoolean</code>: <code>true</code> = true } ; <code>language</code>: { <code>isString</code>: <code>true</code> = true } ; <code>locale</code>: { <code>isString</code>: <code>true</code> = true } ; <code>newCommandTimeout</code>: { <code>isNumber</code>: <code>true</code> = true } ; <code>noReset</code>: { <code>isBoolean</code>: <code>true</code> = true } ; <code>orientation</code>: { <code>inclusion</code>: readonly [<code>\"LANDSCAPE\"</code>, <code>\"PORTRAIT\"</code>]  } ; <code>platformName</code>: { <code>isString</code>: <code>true</code> = true; <code>presence</code>: <code>true</code> = true } ; <code>platformVersion</code>: { <code>isString</code>: <code>true</code> = true } ; <code>printPageSourceOnFindFailure</code>: { <code>isBoolean</code>: <code>true</code> = true } ; <code>udid</code>: { <code>isString</code>: <code>true</code> = true } ; <code>webSocketUrl</code>: { <code>isString</code>: <code>true</code> = true }  }, <code>void</code>&gt;[]&gt;</p> <p>A list of session data objects</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#inherited-from_51","title":"Inherited from","text":"<p>Driver.getSessions</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#defined-in_119","title":"Defined in","text":"<p>packages/types/lib/driver.ts:166</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#getsettings","title":"getSettings","text":"<p>\u25b8 getSettings(): <code>Promise</code>&lt;<code>StringRecord</code>&gt;</p> <p>Get the current settings for the session</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#returns_91","title":"Returns","text":"<p><code>Promise</code>&lt;<code>StringRecord</code>&gt;</p> <p>The settings object</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#inherited-from_52","title":"Inherited from","text":"<p>Driver.getSettings</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#defined-in_120","title":"Defined in","text":"<p>packages/types/lib/driver.ts:395</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#getsize","title":"getSize","text":"<p>\u25b8 <code>Optional</code> getSize(<code>elementId</code>): <code>Promise</code>&lt;<code>Size</code>&gt;</p> <p>Get the size of an element</p> <p><code>Deprecated</code></p> <p>Use getElementRect instead</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#parameters_60","title":"Parameters","text":"Name Type Description <code>elementId</code> <code>string</code> the element ID"},{"location":"reference/interfaces/appium_types.ExternalDriver/#returns_92","title":"Returns","text":"<p><code>Promise</code>&lt;<code>Size</code>&gt;</p> <p>The size of the element</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#defined-in_121","title":"Defined in","text":"<p>packages/types/lib/driver.ts:1794</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#getstatus","title":"getStatus","text":"<p>\u25b8 getStatus(): <code>Promise</code>&lt;<code>any</code>&gt;</p> <p><code>Summary</code></p> <p>Retrieve the server's current status.</p> <p><code>Description</code></p> <p>Returns information about whether a remote end is in a state in which it can create new sessions and can additionally include arbitrary meta information that is specific to the implementation.</p> <p>The readiness state is represented by the ready property of the body, which is false if an attempt to create a session at the current time would fail. However, the value true does not guarantee that a New Session command will succeed.</p> <p>Implementations may optionally include additional meta information as part of the body, but the top-level properties ready and message are reserved and must not be overwritten.</p> <p><code>Example</code></p> <pre><code>// webdriver.io example\nawait driver.status();\n</code></pre> <pre><code>driver.get_status()\n</code></pre> <pre><code>driver.getStatus();\n</code></pre> <pre><code># ruby_lib example\nremote_status\n# ruby_lib_core example\n@driver.remote_status\n</code></pre>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#returns_93","title":"Returns","text":"<p><code>Promise</code>&lt;<code>any</code>&gt;</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#inherited-from_53","title":"Inherited from","text":"<p>Driver.getStatus</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#defined-in_122","title":"Defined in","text":"<p>packages/types/lib/driver.ts:642</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#getstrings","title":"getStrings","text":"<p>\u25b8 <code>Optional</code> getStrings(<code>language?</code>, <code>stringFile?</code>): <code>Promise</code>&lt;<code>Record</code>&lt;<code>string</code>, <code>unknown</code>&gt;&gt;</p> <p>Return the language-specific strings for an app</p> <p><code>Deprecated</code></p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#parameters_61","title":"Parameters","text":"Name Type Description <code>language?</code> <code>string</code> the language to retrieve strings for <code>stringFile?</code> <code>string</code> the path to the localized strings file if not in the default location"},{"location":"reference/interfaces/appium_types.ExternalDriver/#returns_94","title":"Returns","text":"<p><code>Promise</code>&lt;<code>Record</code>&lt;<code>string</code>, <code>unknown</code>&gt;&gt;</p> <p>A record of localized keys to localized text</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#defined-in_123","title":"Defined in","text":"<p>packages/types/lib/driver.ts:1690</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#getsystembars","title":"getSystemBars","text":"<p>\u25b8 <code>Optional</code> getSystemBars(): <code>Promise</code>&lt;<code>unknown</code>[]&gt;</p> <p>Get information from the system bars of a device</p> <p><code>Deprecated</code></p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#returns_95","title":"Returns","text":"<p><code>Promise</code>&lt;<code>unknown</code>[]&gt;</p> <p>An array of information objects of driver-specific shape</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#defined-in_124","title":"Defined in","text":"<p>packages/types/lib/driver.ts:1618</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#gettext","title":"getText","text":"<p>\u25b8 <code>Optional</code> getText(<code>elementId</code>): <code>Promise</code>&lt;<code>string</code>&gt;</p> <p>Get the text of an element as rendered</p> <p><code>See</code></p> <p>https://w3c.github.io/webdriver/#get-element-text</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#parameters_62","title":"Parameters","text":"Name Type Description <code>elementId</code> <code>string</code> the id of the element"},{"location":"reference/interfaces/appium_types.ExternalDriver/#returns_96","title":"Returns","text":"<p><code>Promise</code>&lt;<code>string</code>&gt;</p> <p>The text rendered for the element</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#defined-in_125","title":"Defined in","text":"<p>packages/types/lib/driver.ts:1003</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#gettimeouts","title":"getTimeouts","text":"<p>\u25b8 getTimeouts(): <code>Promise</code>&lt;<code>Record</code>&lt;<code>string</code>, <code>number</code>&gt;&gt;</p> <p>Get the current timeouts</p> <p><code>See</code></p> <p>https://w3c.github.io/webdriver/#get-timeouts</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#returns_97","title":"Returns","text":"<p><code>Promise</code>&lt;<code>Record</code>&lt;<code>string</code>, <code>number</code>&gt;&gt;</p> <p>A map of timeout names to ms values</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#inherited-from_54","title":"Inherited from","text":"<p>Driver.getTimeouts</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#defined-in_126","title":"Defined in","text":"<p>packages/types/lib/driver.ts:77</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#geturl","title":"getUrl","text":"<p>\u25b8 <code>Optional</code> getUrl(): <code>Promise</code>&lt;<code>string</code>&gt;</p> <p>Get the current url</p> <p><code>See</code></p> <p>https://w3c.github.io/webdriver/#get-current-url</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#returns_98","title":"Returns","text":"<p><code>Promise</code>&lt;<code>string</code>&gt;</p> <p>The url</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#defined-in_127","title":"Defined in","text":"<p>packages/types/lib/driver.ts:794</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#getwindowhandle","title":"getWindowHandle","text":"<p>\u25b8 <code>Optional</code> getWindowHandle(): <code>Promise</code>&lt;<code>string</code>&gt;</p> <p>Get the handle (id) associated with the current browser window</p> <p><code>See</code></p> <p>https://w3c.github.io/webdriver/#get-window-handle</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#returns_99","title":"Returns","text":"<p><code>Promise</code>&lt;<code>string</code>&gt;</p> <p>The handle string</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#defined-in_128","title":"Defined in","text":"<p>packages/types/lib/driver.ts:839</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#getwindowhandles","title":"getWindowHandles","text":"<p>\u25b8 <code>Optional</code> getWindowHandles(): <code>Promise</code>&lt;<code>string</code>[]&gt;</p> <p>Get a set of handles representing open browser windows</p> <p><code>See</code></p> <p>https://w3c.github.io/webdriver/#get-window-handles</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#returns_100","title":"Returns","text":"<p><code>Promise</code>&lt;<code>string</code>[]&gt;</p> <p>An array of window handles representing currently-open windows</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#defined-in_129","title":"Defined in","text":"<p>packages/types/lib/driver.ts:863</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#getwindowrect","title":"getWindowRect","text":"<p>\u25b8 <code>Optional</code> getWindowRect(): <code>Promise</code>&lt;<code>Rect</code>&gt;</p> <p>Get the size and position of the current window</p> <p><code>See</code></p> <p>https://w3c.github.io/webdriver/#get-window-rect</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#returns_101","title":"Returns","text":"<p><code>Promise</code>&lt;<code>Rect</code>&gt;</p> <p>A <code>Rect</code> JSON object with x, y, width, and height properties</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#defined-in_130","title":"Defined in","text":"<p>packages/types/lib/driver.ts:895</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#getwindowsize","title":"getWindowSize","text":"<p>\u25b8 <code>Optional</code> getWindowSize(): <code>Promise</code>&lt;<code>Size</code>&gt;</p> <p>Get the window size</p> <p><code>Deprecated</code></p> <p>Use getWindowRect instead</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#returns_102","title":"Returns","text":"<p><code>Promise</code>&lt;<code>Size</code>&gt;</p> <p>The size (width and height)</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#defined-in_131","title":"Defined in","text":"<p>packages/types/lib/driver.ts:1761</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#gsmcall","title":"gsmCall","text":"<p>\u25b8 <code>Optional</code> gsmCall(<code>phoneNumber</code>, <code>action</code>): <code>Promise</code>&lt;<code>void</code>&gt;</p> <p>Simulate triggering a phone call from a phone number and having the device take an action in response</p> <p><code>Deprecated</code></p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#parameters_63","title":"Parameters","text":"Name Type Description <code>phoneNumber</code> <code>string</code> the number to pretend the call is from <code>action</code> <code>string</code> the action to take in response (accept, reject, etc...)"},{"location":"reference/interfaces/appium_types.ExternalDriver/#returns_103","title":"Returns","text":"<p><code>Promise</code>&lt;<code>void</code>&gt;</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#defined-in_132","title":"Defined in","text":"<p>packages/types/lib/driver.ts:1358</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#gsmsignal","title":"gsmSignal","text":"<p>\u25b8 <code>Optional</code> gsmSignal(<code>signalStrength</code>): <code>Promise</code>&lt;<code>void</code>&gt;</p> <p>Simulate setting the GSM signal strength for a cell phone</p> <p><code>Deprecated</code></p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#parameters_64","title":"Parameters","text":"Name Type <code>signalStrength</code> <code>string</code>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#returns_104","title":"Returns","text":"<p><code>Promise</code>&lt;<code>void</code>&gt;</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#defined-in_133","title":"Defined in","text":"<p>packages/types/lib/driver.ts:1367</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#gsmvoice","title":"gsmVoice","text":"<p>\u25b8 <code>Optional</code> gsmVoice(<code>state</code>): <code>Promise</code>&lt;<code>void</code>&gt;</p> <p>Do something with GSM voice (unclear; this should not be implemented anywhere)</p> <p><code>Deprecated</code></p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#parameters_65","title":"Parameters","text":"Name Type Description <code>state</code> <code>string</code> the state"},{"location":"reference/interfaces/appium_types.ExternalDriver/#returns_105","title":"Returns","text":"<p><code>Promise</code>&lt;<code>void</code>&gt;</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#defined-in_134","title":"Defined in","text":"<p>packages/types/lib/driver.ts:1376</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#hidekeyboard","title":"hideKeyboard","text":"<p>\u25b8 <code>Optional</code> hideKeyboard(<code>strategy?</code>, <code>key?</code>, <code>keyCode?</code>, <code>keyName?</code>): <code>Promise</code>&lt;<code>void</code>&gt;</p> <p>Attempt to hide a virtual keyboard</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#parameters_66","title":"Parameters","text":"Name Type Description <code>strategy?</code> <code>string</code> the driver-specific name of a hiding strategy to follow <code>key?</code> <code>string</code> the text of a key to use to hide the keyboard <code>keyCode?</code> <code>string</code> a key code to trigger to hide the keyboard <code>keyName?</code> <code>string</code> the name of a key to use to hide the keyboard"},{"location":"reference/interfaces/appium_types.ExternalDriver/#returns_106","title":"Returns","text":"<p><code>Promise</code>&lt;<code>void</code>&gt;</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#defined-in_135","title":"Defined in","text":"<p>packages/types/lib/driver.ts:1512</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#implicitwait","title":"implicitWait","text":"<p>\u25b8 implicitWait(<code>ms</code>): <code>Promise</code>&lt;<code>void</code>&gt;</p> <p>Set the implicit wait timeout</p> <p><code>Deprecated</code></p> <p>Use <code>timeouts</code> instead</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#parameters_67","title":"Parameters","text":"Name Type Description <code>ms</code> <code>string</code> | <code>number</code> the timeout in ms"},{"location":"reference/interfaces/appium_types.ExternalDriver/#returns_107","title":"Returns","text":"<p><code>Promise</code>&lt;<code>void</code>&gt;</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#inherited-from_55","title":"Inherited from","text":"<p>Driver.implicitWait</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#defined-in_136","title":"Defined in","text":"<p>packages/types/lib/driver.ts:53</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#implicitwaitforcondition","title":"implicitWaitForCondition","text":"<p>\u25b8 implicitWaitForCondition(<code>condition</code>): <code>Promise</code>&lt;<code>unknown</code>&gt;</p> <p>Periodically retry an async function up until the currently set implicit wait timeout</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#parameters_68","title":"Parameters","text":"Name Type Description <code>condition</code> () =&gt; <code>Promise</code>&lt;<code>any</code>&gt; the behaviour to retry until it returns truthy"},{"location":"reference/interfaces/appium_types.ExternalDriver/#returns_108","title":"Returns","text":"<p><code>Promise</code>&lt;<code>unknown</code>&gt;</p> <p>The return value of the condition</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#inherited-from_56","title":"Inherited from","text":"<p>Driver.implicitWaitForCondition</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#defined-in_137","title":"Defined in","text":"<p>packages/types/lib/driver.ts:69</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#implicitwaitmjsonwp","title":"implicitWaitMJSONWP","text":"<p>\u25b8 implicitWaitMJSONWP(<code>ms</code>): <code>Promise</code>&lt;<code>void</code>&gt;</p> <p>Set the implicit wait value that was sent in via the JSONWP</p> <p><code>Deprecated</code></p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#parameters_69","title":"Parameters","text":"Name Type Description <code>ms</code> <code>number</code> the timeout in ms"},{"location":"reference/interfaces/appium_types.ExternalDriver/#returns_109","title":"Returns","text":"<p><code>Promise</code>&lt;<code>void</code>&gt;</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#inherited-from_57","title":"Inherited from","text":"<p>Driver.implicitWaitMJSONWP</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#defined-in_138","title":"Defined in","text":"<p>packages/types/lib/driver.ts:92</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#implicitwaitw3c","title":"implicitWaitW3C","text":"<p>\u25b8 implicitWaitW3C(<code>ms</code>): <code>Promise</code>&lt;<code>void</code>&gt;</p> <p>Set the implicit wait value that was sent in via the W3C protocol</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#parameters_70","title":"Parameters","text":"Name Type Description <code>ms</code> <code>number</code> the timeout in ms"},{"location":"reference/interfaces/appium_types.ExternalDriver/#returns_110","title":"Returns","text":"<p><code>Promise</code>&lt;<code>void</code>&gt;</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#inherited-from_58","title":"Inherited from","text":"<p>Driver.implicitWaitW3C</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#defined-in_139","title":"Defined in","text":"<p>packages/types/lib/driver.ts:84</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#installapp","title":"installApp","text":"<p>\u25b8 <code>Optional</code> installApp(<code>appPath</code>, <code>options?</code>): <code>Promise</code>&lt;<code>void</code>&gt;</p> <p>Install an app on a device</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#parameters_71","title":"Parameters","text":"Name Type Description <code>appPath</code> <code>string</code> the absolute path to a local app or a URL of a downloadable app bundle <code>options?</code> <code>unknown</code> driver-specific install options"},{"location":"reference/interfaces/appium_types.ExternalDriver/#returns_111","title":"Returns","text":"<p><code>Promise</code>&lt;<code>void</code>&gt;</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#defined-in_140","title":"Defined in","text":"<p>packages/types/lib/driver.ts:1461</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#isappinstalled","title":"isAppInstalled","text":"<p>\u25b8 <code>Optional</code> isAppInstalled(<code>appId</code>): <code>Promise</code>&lt;<code>boolean</code>&gt;</p> <p>Determine whether an app is installed</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#parameters_72","title":"Parameters","text":"Name Type Description <code>appId</code> <code>string</code> the package or bundle ID of the application"},{"location":"reference/interfaces/appium_types.ExternalDriver/#returns_112","title":"Returns","text":"<p><code>Promise</code>&lt;<code>boolean</code>&gt;</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#defined-in_141","title":"Defined in","text":"<p>packages/types/lib/driver.ts:1492</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#isfeatureenabled","title":"isFeatureEnabled","text":"<p>\u25b8 isFeatureEnabled(<code>name</code>): <code>boolean</code></p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#parameters_73","title":"Parameters","text":"Name Type <code>name</code> <code>string</code>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#returns_113","title":"Returns","text":"<p><code>boolean</code></p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#inherited-from_59","title":"Inherited from","text":"<p>Driver.isFeatureEnabled</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#defined-in_142","title":"Defined in","text":"<p>packages/types/lib/driver.ts:646</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#isimeactivated","title":"isIMEActivated","text":"<p>\u25b8 <code>Optional</code> isIMEActivated(): <code>Promise</code>&lt;<code>boolean</code>&gt;</p> <p>Determine whether an IME is active</p> <p><code>Deprecated</code></p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#returns_114","title":"Returns","text":"<p><code>Promise</code>&lt;<code>boolean</code>&gt;</p> <p>True if the IME is activated</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#defined-in_143","title":"Defined in","text":"<p>packages/types/lib/driver.ts:1851</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#iskeyboardshown","title":"isKeyboardShown","text":"<p>\u25b8 <code>Optional</code> isKeyboardShown(): <code>Promise</code>&lt;<code>boolean</code>&gt;</p> <p>Determine whether the keyboard is shown</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#returns_115","title":"Returns","text":"<p><code>Promise</code>&lt;<code>boolean</code>&gt;</p> <p>Whether the keyboard is shown</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#defined-in_144","title":"Defined in","text":"<p>packages/types/lib/driver.ts:1519</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#islocked","title":"isLocked","text":"<p>\u25b8 <code>Optional</code> isLocked(): <code>Promise</code>&lt;<code>boolean</code>&gt;</p> <p>Determine whether the device is locked</p> <p><code>Deprecated</code></p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#returns_116","title":"Returns","text":"<p><code>Promise</code>&lt;<code>boolean</code>&gt;</p> <p>True if the device is locked, false otherwise</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#defined-in_145","title":"Defined in","text":"<p>packages/types/lib/driver.ts:1258</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#ismjsonwpprotocol","title":"isMjsonwpProtocol","text":"<p>\u25b8 isMjsonwpProtocol(): <code>boolean</code></p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#returns_117","title":"Returns","text":"<p><code>boolean</code></p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#inherited-from_60","title":"Inherited from","text":"<p>Driver.isMjsonwpProtocol</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#defined-in_146","title":"Defined in","text":"<p>packages/types/lib/driver.ts:645</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#isw3cprotocol","title":"isW3CProtocol","text":"<p>\u25b8 isW3CProtocol(): <code>boolean</code></p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#returns_118","title":"Returns","text":"<p><code>boolean</code></p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#inherited-from_61","title":"Inherited from","text":"<p>Driver.isW3CProtocol</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#defined-in_147","title":"Defined in","text":"<p>packages/types/lib/driver.ts:644</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#keyevent","title":"keyevent","text":"<p>\u25b8 <code>Optional</code> keyevent(<code>keycode</code>, <code>metastate?</code>): <code>Promise</code>&lt;<code>void</code>&gt;</p> <p>Simulate a keyevent on the device</p> <p><code>Deprecated</code></p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#parameters_74","title":"Parameters","text":"Name Type Description <code>keycode</code> <code>string</code> the manufacturer defined keycode <code>metastate?</code> <code>string</code> the combination of meta startUnexpectedShutdown"},{"location":"reference/interfaces/appium_types.ExternalDriver/#returns_119","title":"Returns","text":"<p><code>Promise</code>&lt;<code>void</code>&gt;</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#defined-in_148","title":"Defined in","text":"<p>packages/types/lib/driver.ts:1413</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#keys","title":"keys","text":"<p>\u25b8 <code>Optional</code> keys(<code>value</code>): <code>Promise</code>&lt;<code>void</code>&gt;</p> <p>Send keys to the app</p> <p><code>Deprecated</code></p> <p>Use the W3C send keys method instead</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#parameters_75","title":"Parameters","text":"Name Type <code>value</code> <code>string</code>[]"},{"location":"reference/interfaces/appium_types.ExternalDriver/#returns_120","title":"Returns","text":"<p><code>Promise</code>&lt;<code>void</code>&gt;</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#defined-in_149","title":"Defined in","text":"<p>packages/types/lib/driver.ts:1824</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#launchapp","title":"launchApp","text":"<p>\u25b8 <code>Optional</code> launchApp(): <code>Promise</code>&lt;<code>void</code>&gt;</p> <p>Start the session after it has been started.</p> <p><code>Deprecated</code></p> <p>Don't use this, it never made sense.</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#returns_121","title":"Returns","text":"<p><code>Promise</code>&lt;<code>void</code>&gt;</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#defined-in_150","title":"Defined in","text":"<p>packages/types/lib/driver.ts:1652</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#lock","title":"lock","text":"<p>\u25b8 <code>Optional</code> lock(<code>seconds?</code>): <code>Promise</code>&lt;<code>void</code>&gt;</p> <p>Lock the device, and optionally unlock the device after a certain amount of time</p> <p><code>Deprecated</code></p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#parameters_76","title":"Parameters","text":"Name Type Description <code>seconds?</code> <code>number</code> the number of seconds after which to unlock the device. Set to zero or leave empty to not unlock the device automatically"},{"location":"reference/interfaces/appium_types.ExternalDriver/#returns_122","title":"Returns","text":"<p><code>Promise</code>&lt;<code>void</code>&gt;</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#defined-in_151","title":"Defined in","text":"<p>packages/types/lib/driver.ts:1242</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#logcustomevent","title":"logCustomEvent","text":"<p>\u25b8 logCustomEvent(<code>vendor</code>, <code>event</code>): <code>Promise</code>&lt;<code>void</code>&gt;</p> <p>Add a custom-named event to the Appium event log</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#parameters_77","title":"Parameters","text":"Name Type Description <code>vendor</code> <code>string</code> the name of the vendor or tool the event belongs to, to namespace the event <code>event</code> <code>string</code> the name of the event itself"},{"location":"reference/interfaces/appium_types.ExternalDriver/#returns_123","title":"Returns","text":"<p><code>Promise</code>&lt;<code>void</code>&gt;</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#inherited-from_62","title":"Inherited from","text":"<p>Driver.logCustomEvent</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#defined-in_152","title":"Defined in","text":"<p>packages/types/lib/driver.ts:148</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#logevent","title":"logEvent","text":"<p>\u25b8 logEvent(<code>eventName</code>): <code>void</code></p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#parameters_78","title":"Parameters","text":"Name Type <code>eventName</code> <code>string</code>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#returns_124","title":"Returns","text":"<p><code>void</code></p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#inherited-from_63","title":"Inherited from","text":"<p>Driver.logEvent</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#defined-in_153","title":"Defined in","text":"<p>packages/types/lib/driver.ts:656</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#logextracaps","title":"logExtraCaps","text":"<p>\u25b8 logExtraCaps(<code>caps</code>): <code>void</code></p> <p>A helper function to log unrecognized capabilities to the console</p> <p><code>Params</code></p> <p>caps - the capabilities</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#parameters_79","title":"Parameters","text":"Name Type <code>caps</code> <code>Partial</code>&lt;<code>ConstraintsToCaps</code>&lt;<code>C</code>&gt; &amp; <code>void</code>&gt;"},{"location":"reference/interfaces/appium_types.ExternalDriver/#returns_125","title":"Returns","text":"<p><code>void</code></p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#inherited-from_64","title":"Inherited from","text":"<p>Driver.logExtraCaps</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#defined-in_154","title":"Defined in","text":"<p>packages/types/lib/driver.ts:752</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#longpresskeycode","title":"longPressKeyCode","text":"<p>\u25b8 <code>Optional</code> longPressKeyCode(<code>keycode</code>, <code>metastate?</code>, <code>flags?</code>): <code>Promise</code>&lt;<code>void</code>&gt;</p> <p>Press a device hardware key by its code for a longer duration</p> <p><code>Deprecated</code></p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#parameters_80","title":"Parameters","text":"Name Type Description <code>keycode</code> <code>number</code> the keycode <code>metastate?</code> <code>number</code> the code denoting the simultaneous pressing of any meta keys (shift etc) <code>flags?</code> <code>number</code> the code denoting the combination of extra flags"},{"location":"reference/interfaces/appium_types.ExternalDriver/#returns_126","title":"Returns","text":"<p><code>Promise</code>&lt;<code>void</code>&gt;</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#defined-in_155","title":"Defined in","text":"<p>packages/types/lib/driver.ts:1328</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#maximizewindow","title":"maximizeWindow","text":"<p>\u25b8 <code>Optional</code> maximizeWindow(): <code>Promise</code>&lt;<code>Rect</code>&gt;</p> <p>Run the window-manager specific 'maximize' operation on the current window</p> <p><code>See</code></p> <p>https://w3c.github.io/webdriver/#maximize-window</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#returns_127","title":"Returns","text":"<p><code>Promise</code>&lt;<code>Rect</code>&gt;</p> <p>The actual <code>Rect</code> of the window after running the command</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#defined-in_156","title":"Defined in","text":"<p>packages/types/lib/driver.ts:916</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#minimizewindow","title":"minimizeWindow","text":"<p>\u25b8 <code>Optional</code> minimizeWindow(): <code>Promise</code>&lt;<code>Rect</code>&gt;</p> <p>Run the window-manager specific 'minimize' operation on the current window</p> <p><code>See</code></p> <p>https://w3c.github.io/webdriver/#minimize-window</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#returns_128","title":"Returns","text":"<p><code>Promise</code>&lt;<code>Rect</code>&gt;</p> <p>The actual <code>Rect</code> of the window after running the command</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#defined-in_157","title":"Defined in","text":"<p>packages/types/lib/driver.ts:924</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#mobilerotation","title":"mobileRotation","text":"<p>\u25b8 <code>Optional</code> mobileRotation(<code>x</code>, <code>y</code>, <code>radius</code>, <code>rotation</code>, <code>touchCount</code>, <code>duration</code>, <code>elementId?</code>): <code>Promise</code>&lt;<code>void</code>&gt;</p> <p>Construct a rotation gesture? Unclear what this command does and it does not appear to be used</p> <p><code>Deprecated</code></p> <p>Use setRotation instead</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#parameters_81","title":"Parameters","text":"Name Type Description <code>x</code> <code>number</code> the x coordinate of the rotation center <code>y</code> <code>number</code> the y coordinate of the rotation center <code>radius</code> <code>number</code> the radius of the rotation circle <code>rotation</code> <code>number</code> the rotation angle? idk <code>touchCount</code> <code>number</code> how many fingers to rotate <code>duration</code> <code>string</code> - <code>elementId?</code> <code>string</code> if we're rotating around an element"},{"location":"reference/interfaces/appium_types.ExternalDriver/#returns_129","title":"Returns","text":"<p><code>Promise</code>&lt;<code>void</code>&gt;</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#defined-in_158","title":"Defined in","text":"<p>packages/types/lib/driver.ts:1427</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#mobileshake","title":"mobileShake","text":"<p>\u25b8 <code>Optional</code> mobileShake(): <code>Promise</code>&lt;<code>void</code>&gt;</p> <p>Shake the device</p> <p><code>Deprecated</code></p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#returns_130","title":"Returns","text":"<p><code>Promise</code>&lt;<code>void</code>&gt;</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#defined-in_159","title":"Defined in","text":"<p>packages/types/lib/driver.ts:1223</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#moveto","title":"moveTo","text":"<p>\u25b8 <code>Optional</code> moveTo(<code>element?</code>, <code>xOffset?</code>, <code>yOffset?</code>): <code>Promise</code>&lt;<code>void</code>&gt;</p> <p>Move the mouse pointer to a particular screen location</p> <p><code>Deprecated</code></p> <p>Use the Actions API instead</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#parameters_82","title":"Parameters","text":"Name Type Description <code>element?</code> <code>null</code> | <code>string</code> the element ID if the move is relative to an element <code>xOffset?</code> <code>number</code> the x offset <code>yOffset?</code> <code>number</code> the y offset"},{"location":"reference/interfaces/appium_types.ExternalDriver/#returns_131","title":"Returns","text":"<p><code>Promise</code>&lt;<code>void</code>&gt;</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#defined-in_160","title":"Defined in","text":"<p>packages/types/lib/driver.ts:1892</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#networkspeed","title":"networkSpeed","text":"<p>\u25b8 <code>Optional</code> networkSpeed(<code>netspeed</code>): <code>Promise</code>&lt;<code>void</code>&gt;</p> <p>Set the network speed of the device</p> <p><code>Deprecated</code></p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#parameters_83","title":"Parameters","text":"Name Type Description <code>netspeed</code> <code>string</code> the speed as a string, like '3G'"},{"location":"reference/interfaces/appium_types.ExternalDriver/#returns_132","title":"Returns","text":"<p><code>Promise</code>&lt;<code>void</code>&gt;</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#defined-in_161","title":"Defined in","text":"<p>packages/types/lib/driver.ts:1403</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#newcommandtimeout","title":"newCommandTimeout","text":"<p>\u25b8 newCommandTimeout(<code>ms</code>): <code>Promise</code>&lt;<code>void</code>&gt;</p> <p>Set Appium's new command timeout</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#parameters_84","title":"Parameters","text":"Name Type Description <code>ms</code> <code>number</code> the timeout in ms"},{"location":"reference/interfaces/appium_types.ExternalDriver/#returns_133","title":"Returns","text":"<p><code>Promise</code>&lt;<code>void</code>&gt;</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#inherited-from_65","title":"Inherited from","text":"<p>Driver.newCommandTimeout</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#defined-in_162","title":"Defined in","text":"<p>packages/types/lib/driver.ts:129</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#onunexpectedshutdown","title":"onUnexpectedShutdown","text":"<p>\u25b8 onUnexpectedShutdown(<code>handler</code>): <code>void</code></p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#parameters_85","title":"Parameters","text":"Name Type <code>handler</code> () =&gt; <code>any</code>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#returns_134","title":"Returns","text":"<p><code>void</code></p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#inherited-from_66","title":"Inherited from","text":"<p>Driver.onUnexpectedShutdown</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#defined-in_163","title":"Defined in","text":"<p>packages/types/lib/driver.ts:610</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#opennotifications","title":"openNotifications","text":"<p>\u25b8 <code>Optional</code> openNotifications(): <code>Promise</code>&lt;<code>void</code>&gt;</p> <p>Open the notifications shade/screen</p> <p><code>Deprecated</code></p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#returns_135","title":"Returns","text":"<p><code>Promise</code>&lt;<code>void</code>&gt;</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#defined-in_164","title":"Defined in","text":"<p>packages/types/lib/driver.ts:1580</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#pageloadtimeoutmjsonwp","title":"pageLoadTimeoutMJSONWP","text":"<p>\u25b8 pageLoadTimeoutMJSONWP(<code>ms</code>): <code>Promise</code>&lt;<code>void</code>&gt;</p> <p>Set the page load timeout value that was sent in via the JSONWP</p> <p><code>Deprecated</code></p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#parameters_86","title":"Parameters","text":"Name Type Description <code>ms</code> <code>number</code> the timeout in ms"},{"location":"reference/interfaces/appium_types.ExternalDriver/#returns_136","title":"Returns","text":"<p><code>Promise</code>&lt;<code>void</code>&gt;</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#inherited-from_67","title":"Inherited from","text":"<p>Driver.pageLoadTimeoutMJSONWP</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#defined-in_165","title":"Defined in","text":"<p>packages/types/lib/driver.ts:107</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#pageloadtimeoutw3c","title":"pageLoadTimeoutW3C","text":"<p>\u25b8 pageLoadTimeoutW3C(<code>ms</code>): <code>Promise</code>&lt;<code>void</code>&gt;</p> <p>Set the page load timeout value that was sent in via the W3C protocol</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#parameters_87","title":"Parameters","text":"Name Type Description <code>ms</code> <code>number</code> the timeout in ms"},{"location":"reference/interfaces/appium_types.ExternalDriver/#returns_137","title":"Returns","text":"<p><code>Promise</code>&lt;<code>void</code>&gt;</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#inherited-from_68","title":"Inherited from","text":"<p>Driver.pageLoadTimeoutW3C</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#defined-in_166","title":"Defined in","text":"<p>packages/types/lib/driver.ts:99</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#parsetimeoutargument","title":"parseTimeoutArgument","text":"<p>\u25b8 parseTimeoutArgument(<code>ms</code>): <code>number</code></p> <p>Get a timeout value from a number or a string</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#parameters_88","title":"Parameters","text":"Name Type Description <code>ms</code> <code>string</code> | <code>number</code> the timeout value as a number or a string"},{"location":"reference/interfaces/appium_types.ExternalDriver/#returns_138","title":"Returns","text":"<p><code>number</code></p> <p>The timeout as a number in ms</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#inherited-from_69","title":"Inherited from","text":"<p>Driver.parseTimeoutArgument</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#defined-in_167","title":"Defined in","text":"<p>packages/types/lib/driver.ts:138</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#performactions","title":"performActions","text":"<p>\u25b8 <code>Optional</code> performActions(<code>actions</code>): <code>Promise</code>&lt;<code>void</code>&gt;</p> <p>Perform touch or keyboard actions</p> <p><code>See</code></p> <p>https://w3c.github.io/webdriver/#perform-actions</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#parameters_89","title":"Parameters","text":"Name Type Description <code>actions</code> <code>ActionSequence</code>[] the action sequence"},{"location":"reference/interfaces/appium_types.ExternalDriver/#returns_139","title":"Returns","text":"<p><code>Promise</code>&lt;<code>void</code>&gt;</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#defined-in_168","title":"Defined in","text":"<p>packages/types/lib/driver.ts:1162</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#performmultiaction","title":"performMultiAction","text":"<p>\u25b8 <code>Optional</code> performMultiAction(<code>actions</code>, <code>elementId</code>): <code>Promise</code>&lt;<code>void</code>&gt;</p> <p>Perform a set of touch actions</p> <p><code>Deprecated</code></p> <p>Use the W3C Actions API instead</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#parameters_90","title":"Parameters","text":"Name Type Description <code>actions</code> <code>unknown</code> the old MJSONWP style touch action objects <code>elementId</code> <code>string</code> the id of an element if actions are restricted to one element"},{"location":"reference/interfaces/appium_types.ExternalDriver/#returns_140","title":"Returns","text":"<p><code>Promise</code>&lt;<code>void</code>&gt;</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#defined-in_169","title":"Defined in","text":"<p>packages/types/lib/driver.ts:2073</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#performtouch","title":"performTouch","text":"<p>\u25b8 <code>Optional</code> performTouch(<code>actions</code>): <code>Promise</code>&lt;<code>void</code>&gt;</p> <p>Perform a set of touch actions</p> <p><code>Deprecated</code></p> <p>Use the W3C Actions API instead</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#parameters_91","title":"Parameters","text":"Name Type Description <code>actions</code> <code>unknown</code> the old MJSONWP style touch action objects"},{"location":"reference/interfaces/appium_types.ExternalDriver/#returns_141","title":"Returns","text":"<p><code>Promise</code>&lt;<code>void</code>&gt;</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#defined-in_170","title":"Defined in","text":"<p>packages/types/lib/driver.ts:2063</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#postacceptalert","title":"postAcceptAlert","text":"<p>\u25b8 <code>Optional</code> postAcceptAlert(): <code>Promise</code>&lt;<code>void</code>&gt;</p> <p>Accept a simple dialog/alert</p> <p><code>See</code></p> <p>https://w3c.github.io/webdriver/#accept-alert</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#returns_142","title":"Returns","text":"<p><code>Promise</code>&lt;<code>void</code>&gt;</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#defined-in_171","title":"Defined in","text":"<p>packages/types/lib/driver.ts:1180</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#postdismissalert","title":"postDismissAlert","text":"<p>\u25b8 <code>Optional</code> postDismissAlert(): <code>Promise</code>&lt;<code>void</code>&gt;</p> <p>Dismiss a simple dialog/alert</p> <p><code>See</code></p> <p>https://w3c.github.io/webdriver/#dismiss-alert</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#returns_143","title":"Returns","text":"<p><code>Promise</code>&lt;<code>void</code>&gt;</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#defined-in_172","title":"Defined in","text":"<p>packages/types/lib/driver.ts:1174</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#powerac","title":"powerAC","text":"<p>\u25b8 <code>Optional</code> powerAC(<code>state</code>): <code>Promise</code>&lt;<code>void</code>&gt;</p> <p>Set the AC-connected power state of the device</p> <p><code>Deprecated</code></p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#parameters_92","title":"Parameters","text":"Name Type Description <code>state</code> <code>string</code> whether the device is connected to power or not"},{"location":"reference/interfaces/appium_types.ExternalDriver/#returns_144","title":"Returns","text":"<p><code>Promise</code>&lt;<code>void</code>&gt;</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#defined-in_173","title":"Defined in","text":"<p>packages/types/lib/driver.ts:1394</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#powercapacity","title":"powerCapacity","text":"<p>\u25b8 <code>Optional</code> powerCapacity(<code>percent</code>): <code>Promise</code>&lt;<code>void</code>&gt;</p> <p>Set the simulated power capacity of the device</p> <p><code>Deprecated</code></p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#parameters_93","title":"Parameters","text":"Name Type Description <code>percent</code> <code>number</code> how full the battery should become"},{"location":"reference/interfaces/appium_types.ExternalDriver/#returns_145","title":"Returns","text":"<p><code>Promise</code>&lt;<code>void</code>&gt;</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#defined-in_174","title":"Defined in","text":"<p>packages/types/lib/driver.ts:1385</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#presskeycode","title":"pressKeyCode","text":"<p>\u25b8 <code>Optional</code> pressKeyCode(<code>keycode</code>, <code>metastate?</code>, <code>flags?</code>): <code>Promise</code>&lt;<code>void</code>&gt;</p> <p>Press a device hardware key by its code for the default duration</p> <p><code>Deprecated</code></p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#parameters_94","title":"Parameters","text":"Name Type Description <code>keycode</code> <code>number</code> the keycode <code>metastate?</code> <code>number</code> the code denoting the simultaneous pressing of any meta keys (shift etc) <code>flags?</code> <code>number</code> the code denoting the combination of extra flags"},{"location":"reference/interfaces/appium_types.ExternalDriver/#returns_146","title":"Returns","text":"<p><code>Promise</code>&lt;<code>void</code>&gt;</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#defined-in_175","title":"Defined in","text":"<p>packages/types/lib/driver.ts:1317</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#proxyactive","title":"proxyActive","text":"<p>\u25b8 proxyActive(<code>sessionId?</code>): <code>boolean</code></p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#parameters_95","title":"Parameters","text":"Name Type <code>sessionId?</code> <code>string</code>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#returns_147","title":"Returns","text":"<p><code>boolean</code></p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#inherited-from_70","title":"Inherited from","text":"<p>Driver.proxyActive</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#defined-in_176","title":"Defined in","text":"<p>packages/types/lib/driver.ts:649</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#proxycommand","title":"proxyCommand","text":"<p>\u25b8 <code>Optional</code> proxyCommand&lt;<code>T</code>&gt;(<code>url</code>, <code>method</code>, <code>body?</code>): <code>Promise</code>&lt;<code>T</code>&gt;</p> <p>Proxy a command to a connected WebDriver server</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#type-parameters_3","title":"Type parameters","text":"Name Type Description <code>T</code> <code>any</code> the type of the return value"},{"location":"reference/interfaces/appium_types.ExternalDriver/#parameters_96","title":"Parameters","text":"Name Type Description <code>url</code> <code>string</code> the incoming URL <code>method</code> <code>HTTPMethod</code> the incoming HTTP method <code>body?</code> <code>string</code> the incoming HTTP body"},{"location":"reference/interfaces/appium_types.ExternalDriver/#returns_148","title":"Returns","text":"<p><code>Promise</code>&lt;<code>T</code>&gt;</p> <p>The return value of the proxied command</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#defined-in_177","title":"Defined in","text":"<p>packages/types/lib/driver.ts:2200</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#proxyrouteisavoided","title":"proxyRouteIsAvoided","text":"<p>\u25b8 proxyRouteIsAvoided(<code>sessionId</code>, <code>method</code>, <code>url</code>): <code>boolean</code></p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#parameters_97","title":"Parameters","text":"Name Type <code>sessionId</code> <code>string</code> <code>method</code> <code>string</code> <code>url</code> <code>string</code>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#returns_149","title":"Returns","text":"<p><code>boolean</code></p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#inherited-from_71","title":"Inherited from","text":"<p>Driver.proxyRouteIsAvoided</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#defined-in_178","title":"Defined in","text":"<p>packages/types/lib/driver.ts:652</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#pullfile","title":"pullFile","text":"<p>\u25b8 <code>Optional</code> pullFile(<code>path</code>): <code>Promise</code>&lt;<code>string</code>&gt;</p> <p>Retrieve the data from a file on the device at a given path</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#parameters_98","title":"Parameters","text":"Name Type Description <code>path</code> <code>string</code> the remote path on the device to pull file data from"},{"location":"reference/interfaces/appium_types.ExternalDriver/#returns_150","title":"Returns","text":"<p><code>Promise</code>&lt;<code>string</code>&gt;</p> <p>The base64-encoded file data</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#defined-in_179","title":"Defined in","text":"<p>packages/types/lib/driver.ts:1536</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#pullfolder","title":"pullFolder","text":"<p>\u25b8 <code>Optional</code> pullFolder(<code>path</code>): <code>Promise</code>&lt;<code>string</code>&gt;</p> <p>Retrieve the data from a folder on the device at a given path</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#parameters_99","title":"Parameters","text":"Name Type Description <code>path</code> <code>string</code> the remote path of a directory on the device"},{"location":"reference/interfaces/appium_types.ExternalDriver/#returns_151","title":"Returns","text":"<p><code>Promise</code>&lt;<code>string</code>&gt;</p> <p>The base64-encoded zip file of the directory contents</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#defined-in_180","title":"Defined in","text":"<p>packages/types/lib/driver.ts:1545</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#pushfile","title":"pushFile","text":"<p>\u25b8 <code>Optional</code> pushFile(<code>path</code>, <code>data</code>): <code>Promise</code>&lt;<code>void</code>&gt;</p> <p>Push data to a file at a remote path on the device</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#parameters_100","title":"Parameters","text":"Name Type Description <code>path</code> <code>string</code> the remote path on the device to create the file at <code>data</code> <code>string</code> the base64-encoded data which will be decoded and written to <code>path</code>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#returns_152","title":"Returns","text":"<p><code>Promise</code>&lt;<code>void</code>&gt;</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#defined-in_181","title":"Defined in","text":"<p>packages/types/lib/driver.ts:1527</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#queryappstate","title":"queryAppState","text":"<p>\u25b8 <code>Optional</code> queryAppState(<code>appId</code>): <code>Promise</code>&lt;<code>0</code> | <code>1</code> | <code>3</code> | <code>4</code>&gt;</p> <p>Get the running state of an app</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#parameters_101","title":"Parameters","text":"Name Type Description <code>appId</code> <code>string</code> the package or bundle ID of the application"},{"location":"reference/interfaces/appium_types.ExternalDriver/#returns_153","title":"Returns","text":"<p><code>Promise</code>&lt;<code>0</code> | <code>1</code> | <code>3</code> | <code>4</code>&gt;</p> <p>A number representing the state. 0 means not installed, 1 means not running, 3 means running in the background, and 4 means running in the foreground</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#defined-in_182","title":"Defined in","text":"<p>packages/types/lib/driver.ts:1502</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#receiveasyncresponse","title":"receiveAsyncResponse","text":"<p>\u25b8 <code>Optional</code> receiveAsyncResponse(<code>response</code>): <code>Promise</code>&lt;<code>void</code>&gt;</p> <p>Collect the response of an async script execution? It's unclear what this is for. Don't use it.</p> <p><code>Deprecated</code></p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#parameters_102","title":"Parameters","text":"Name Type Description <code>response</code> <code>unknown</code> idk"},{"location":"reference/interfaces/appium_types.ExternalDriver/#returns_154","title":"Returns","text":"<p><code>Promise</code>&lt;<code>void</code>&gt;</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#defined-in_183","title":"Defined in","text":"<p>packages/types/lib/driver.ts:1720</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#refresh","title":"refresh","text":"<p>\u25b8 <code>Optional</code> refresh(): <code>Promise</code>&lt;<code>void</code>&gt;</p> <p>Refresh the page</p> <p><code>See</code></p> <p>https://w3c.github.io/webdriver/#refresh</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#returns_155","title":"Returns","text":"<p><code>Promise</code>&lt;<code>void</code>&gt;</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#defined-in_184","title":"Defined in","text":"<p>packages/types/lib/driver.ts:812</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#releaseactions","title":"releaseActions","text":"<p>\u25b8 <code>Optional</code> releaseActions(): <code>Promise</code>&lt;<code>void</code>&gt;</p> <p>Release all keys or buttons that are currently pressed</p> <p><code>See</code></p> <p>https://w3c.github.io/webdriver/#release-actions</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#returns_156","title":"Returns","text":"<p><code>Promise</code>&lt;<code>void</code>&gt;</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#defined-in_185","title":"Defined in","text":"<p>packages/types/lib/driver.ts:1168</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#removeallauthcredentials","title":"removeAllAuthCredentials","text":"<p>\u25b8 <code>Optional</code> removeAllAuthCredentials(): <code>Promise</code>&lt;<code>void</code>&gt;</p> <p>Remove all auth credentials</p> <p><code>See</code></p> <p>https://www.w3.org/TR/webauthn-2/#sctn-automation-remove-all-credentials</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#returns_157","title":"Returns","text":"<p><code>Promise</code>&lt;<code>void</code>&gt;</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#defined-in_186","title":"Defined in","text":"<p>packages/types/lib/driver.ts:2171</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#removeapp","title":"removeApp","text":"<p>\u25b8 <code>Optional</code> removeApp(<code>appId</code>, <code>options?</code>): <code>Promise</code>&lt;<code>void</code>&gt;</p> <p>Remove / uninstall an app</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#parameters_103","title":"Parameters","text":"Name Type Description <code>appId</code> <code>string</code> the package or bundle ID of the application <code>options?</code> <code>unknown</code> driver-specific launch options"},{"location":"reference/interfaces/appium_types.ExternalDriver/#returns_158","title":"Returns","text":"<p><code>Promise</code>&lt;<code>void</code>&gt;</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#defined-in_187","title":"Defined in","text":"<p>packages/types/lib/driver.ts:1477</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#removeauthcredential","title":"removeAuthCredential","text":"<p>\u25b8 <code>Optional</code> removeAuthCredential(<code>credentialId</code>, <code>authenticatorId</code>): <code>Promise</code>&lt;<code>void</code>&gt;</p> <p>Remove a specific auth credential</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#parameters_104","title":"Parameters","text":"Name Type Description <code>credentialId</code> <code>string</code> the credential ID <code>authenticatorId</code> <code>string</code> the authenticator ID"},{"location":"reference/interfaces/appium_types.ExternalDriver/#returns_159","title":"Returns","text":"<p><code>Promise</code>&lt;<code>void</code>&gt;</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#defined-in_188","title":"Defined in","text":"<p>packages/types/lib/driver.ts:2179</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#removevirtualauthenticator","title":"removeVirtualAuthenticator","text":"<p>\u25b8 <code>Optional</code> removeVirtualAuthenticator(<code>authenticatorId</code>): <code>Promise</code>&lt;<code>void</code>&gt;</p> <p>Remove a virtual authenticator</p> <p><code>See</code></p> <p>https://www.w3.org/TR/webauthn-2/#sctn-automation-remove-virtual-authenticator</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#parameters_105","title":"Parameters","text":"Name Type Description <code>authenticatorId</code> <code>string</code> the ID returned in the call to add the authenticator"},{"location":"reference/interfaces/appium_types.ExternalDriver/#returns_160","title":"Returns","text":"<p><code>Promise</code>&lt;<code>void</code>&gt;</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#defined-in_189","title":"Defined in","text":"<p>packages/types/lib/driver.ts:2135</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#replacevalue","title":"replaceValue","text":"<p>\u25b8 <code>Optional</code> replaceValue(<code>value</code>, <code>elementId</code>): <code>Promise</code>&lt;<code>void</code>&gt;</p> <p>Set the value of a text field but ensure the current value is replace and not appended</p> <p><code>Deprecated</code></p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#parameters_106","title":"Parameters","text":"Name Type Description <code>value</code> <code>string</code> the text to set <code>elementId</code> <code>string</code> the element to set it in"},{"location":"reference/interfaces/appium_types.ExternalDriver/#returns_161","title":"Returns","text":"<p><code>Promise</code>&lt;<code>void</code>&gt;</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#defined-in_190","title":"Defined in","text":"<p>packages/types/lib/driver.ts:1710</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#reset","title":"reset","text":"<p>\u25b8 reset(): <code>Promise</code>&lt;<code>void</code>&gt;</p> <p>Reset the current session (run the delete session and create session subroutines)</p> <p><code>Deprecated</code></p> <p>Use explicit session management commands instead</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#returns_162","title":"Returns","text":"<p><code>Promise</code>&lt;<code>void</code>&gt;</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#inherited-from_72","title":"Inherited from","text":"<p>Driver.reset</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#defined-in_191","title":"Defined in","text":"<p>packages/types/lib/driver.ts:717</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#scripttimeoutmjsonwp","title":"scriptTimeoutMJSONWP","text":"<p>\u25b8 scriptTimeoutMJSONWP(<code>ms</code>): <code>Promise</code>&lt;<code>void</code>&gt;</p> <p>Set the script timeout value that was sent in via the JSONWP</p> <p><code>Deprecated</code></p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#parameters_107","title":"Parameters","text":"Name Type Description <code>ms</code> <code>number</code> the timeout in ms"},{"location":"reference/interfaces/appium_types.ExternalDriver/#returns_163","title":"Returns","text":"<p><code>Promise</code>&lt;<code>void</code>&gt;</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#inherited-from_73","title":"Inherited from","text":"<p>Driver.scriptTimeoutMJSONWP</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#defined-in_192","title":"Defined in","text":"<p>packages/types/lib/driver.ts:122</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#scripttimeoutw3c","title":"scriptTimeoutW3C","text":"<p>\u25b8 scriptTimeoutW3C(<code>ms</code>): <code>Promise</code>&lt;<code>void</code>&gt;</p> <p>Set the script timeout value that was sent in via the W3C protocol</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#parameters_108","title":"Parameters","text":"Name Type Description <code>ms</code> <code>number</code> the timeout in ms"},{"location":"reference/interfaces/appium_types.ExternalDriver/#returns_164","title":"Returns","text":"<p><code>Promise</code>&lt;<code>void</code>&gt;</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#inherited-from_74","title":"Inherited from","text":"<p>Driver.scriptTimeoutW3C</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#defined-in_193","title":"Defined in","text":"<p>packages/types/lib/driver.ts:114</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#sendsms","title":"sendSMS","text":"<p>\u25b8 <code>Optional</code> sendSMS(<code>phoneNumber</code>, <code>message</code>): <code>Promise</code>&lt;<code>void</code>&gt;</p> <p>Simulate sending an SMS message from a certain phone number to the device</p> <p><code>Deprecated</code></p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#parameters_109","title":"Parameters","text":"Name Type Description <code>phoneNumber</code> <code>string</code> the number to pretend the message is from <code>message</code> <code>string</code> the SMS text"},{"location":"reference/interfaces/appium_types.ExternalDriver/#returns_165","title":"Returns","text":"<p><code>Promise</code>&lt;<code>void</code>&gt;</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#defined-in_194","title":"Defined in","text":"<p>packages/types/lib/driver.ts:1347</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#sessionexists","title":"sessionExists","text":"<p>\u25b8 sessionExists(<code>sessionId</code>): <code>boolean</code></p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#parameters_110","title":"Parameters","text":"Name Type <code>sessionId</code> <code>string</code>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#returns_166","title":"Returns","text":"<p><code>boolean</code></p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#inherited-from_75","title":"Inherited from","text":"<p>Driver.sessionExists</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#defined-in_195","title":"Defined in","text":"<p>packages/types/lib/driver.ts:643</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#setalerttext","title":"setAlertText","text":"<p>\u25b8 <code>Optional</code> setAlertText(<code>text</code>): <code>Promise</code>&lt;<code>void</code>&gt;</p> <p>Set the text field of an alert prompt</p> <p><code>See</code></p> <p>https://w3c.github.io/webdriver/#send-alert-text</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#parameters_111","title":"Parameters","text":"Name Type Description <code>text</code> <code>string</code> the text to send to the prompt"},{"location":"reference/interfaces/appium_types.ExternalDriver/#returns_167","title":"Returns","text":"<p><code>Promise</code>&lt;<code>void</code>&gt;</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#defined-in_196","title":"Defined in","text":"<p>packages/types/lib/driver.ts:1196</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#setclipboard","title":"setClipboard","text":"<p>\u25b8 <code>Optional</code> setClipboard(<code>content</code>, <code>contentType?</code>, <code>label?</code>): <code>Promise</code>&lt;<code>void</code>&gt;</p> <p>Set the contents of the device clipboard</p> <p><code>Deprecated</code></p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#parameters_112","title":"Parameters","text":"Name Type Description <code>content</code> <code>string</code> the text to set <code>contentType?</code> <code>string</code> the media type if not text <code>label?</code> <code>string</code> the label if not text"},{"location":"reference/interfaces/appium_types.ExternalDriver/#returns_168","title":"Returns","text":"<p><code>Promise</code>&lt;<code>void</code>&gt;</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#defined-in_197","title":"Defined in","text":"<p>packages/types/lib/driver.ts:1731</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#setcontext","title":"setContext","text":"<p>\u25b8 <code>Optional</code> setContext(<code>name</code>): <code>Promise</code>&lt;<code>void</code>&gt;</p> <p>Switch to a context by name</p> <p><code>See</code></p> <p>https://github.com/SeleniumHQ/mobile-spec/blob/master/spec-draft.md#webviews-and-other-contexts</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#parameters_113","title":"Parameters","text":"Name Type Description <code>name</code> <code>string</code> the context name"},{"location":"reference/interfaces/appium_types.ExternalDriver/#returns_169","title":"Returns","text":"<p><code>Promise</code>&lt;<code>void</code>&gt;</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#defined-in_198","title":"Defined in","text":"<p>packages/types/lib/driver.ts:2018</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#setcookie","title":"setCookie","text":"<p>\u25b8 <code>Optional</code> setCookie(<code>cookie</code>): <code>Promise</code>&lt;<code>void</code>&gt;</p> <p>Add a cookie to the browsing context</p> <p><code>See</code></p> <p>https://w3c.github.io/webdriver/#add-cookie</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#parameters_114","title":"Parameters","text":"Name Type Description <code>cookie</code> <code>Cookie</code> the cookie data including properties like name, value, path, domain, secure, httpOnly, expiry, and samesite"},{"location":"reference/interfaces/appium_types.ExternalDriver/#returns_170","title":"Returns","text":"<p><code>Promise</code>&lt;<code>void</code>&gt;</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#defined-in_199","title":"Defined in","text":"<p>packages/types/lib/driver.ts:1140</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#setframe","title":"setFrame","text":"<p>\u25b8 <code>Optional</code> setFrame(<code>id</code>): <code>Promise</code>&lt;<code>void</code>&gt;</p> <p>Switch the current browsing context to a frame</p> <p><code>See</code></p> <p>https://w3c.github.io/webdriver/#switch-to-frame</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#parameters_115","title":"Parameters","text":"Name Type Description <code>id</code> <code>null</code> | <code>string</code> | <code>number</code> the frame id, index, or <code>null</code> (indicating the top-level context)"},{"location":"reference/interfaces/appium_types.ExternalDriver/#returns_171","title":"Returns","text":"<p><code>Promise</code>&lt;<code>void</code>&gt;</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#defined-in_200","title":"Defined in","text":"<p>packages/types/lib/driver.ts:881</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#setgeolocation","title":"setGeoLocation","text":"<p>\u25b8 <code>Optional</code> setGeoLocation(<code>location</code>): <code>Promise</code>&lt;<code>void</code>&gt;</p> <p>Set the virtual geographical location of a device</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#parameters_116","title":"Parameters","text":"Name Type Description <code>location</code> <code>Partial</code>&lt;<code>Location</code>&gt; the location including latitude and longitude"},{"location":"reference/interfaces/appium_types.ExternalDriver/#returns_172","title":"Returns","text":"<p><code>Promise</code>&lt;<code>void</code>&gt;</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#defined-in_201","title":"Defined in","text":"<p>packages/types/lib/driver.ts:2000</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#setimplicitwait","title":"setImplicitWait","text":"<p>\u25b8 setImplicitWait(<code>ms</code>): <code>void</code></p> <p>A helper method (not a command) used to set the implicit wait value</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#parameters_117","title":"Parameters","text":"Name Type Description <code>ms</code> <code>number</code> the implicit wait in ms"},{"location":"reference/interfaces/appium_types.ExternalDriver/#returns_173","title":"Returns","text":"<p><code>void</code></p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#inherited-from_76","title":"Inherited from","text":"<p>Driver.setImplicitWait</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#defined-in_202","title":"Defined in","text":"<p>packages/types/lib/driver.ts:60</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#setnetworkconnection","title":"setNetworkConnection","text":"<p>\u25b8 <code>Optional</code> setNetworkConnection(<code>type</code>): <code>Promise</code>&lt;<code>void</code>&gt;</p> <p>Set the network connection of the device</p> <p><code>See</code></p> <p>https://github.com/SeleniumHQ/mobile-spec/blob/master/spec-draft.md#device-modes</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#parameters_118","title":"Parameters","text":"Name Type Description <code>type</code> <code>number</code> the bitmask representing network state"},{"location":"reference/interfaces/appium_types.ExternalDriver/#returns_174","title":"Returns","text":"<p><code>Promise</code>&lt;<code>void</code>&gt;</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#defined-in_203","title":"Defined in","text":"<p>packages/types/lib/driver.ts:2054</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#setnewcommandtimeout","title":"setNewCommandTimeout","text":"<p>\u25b8 setNewCommandTimeout(<code>ms</code>): <code>void</code></p> <p>Set the new command timeout</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#parameters_119","title":"Parameters","text":"Name Type Description <code>ms</code> <code>number</code> the timeout in ms"},{"location":"reference/interfaces/appium_types.ExternalDriver/#returns_175","title":"Returns","text":"<p><code>void</code></p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#inherited-from_77","title":"Inherited from","text":"<p>Driver.setNewCommandTimeout</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#defined-in_204","title":"Defined in","text":"<p>packages/types/lib/driver.ts:44</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#setorientation","title":"setOrientation","text":"<p>\u25b8 <code>Optional</code> setOrientation(<code>orientation</code>): <code>Promise</code>&lt;<code>void</code>&gt;</p> <p>Set the device orientation</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#parameters_120","title":"Parameters","text":"Name Type Description <code>orientation</code> <code>string</code> the orientation string"},{"location":"reference/interfaces/appium_types.ExternalDriver/#returns_176","title":"Returns","text":"<p><code>Promise</code>&lt;<code>void</code>&gt;</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#defined-in_205","title":"Defined in","text":"<p>packages/types/lib/driver.ts:1881</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#setrotation","title":"setRotation","text":"<p>\u25b8 <code>Optional</code> setRotation(<code>x</code>, <code>y</code>, <code>z</code>): <code>Promise</code>&lt;<code>void</code>&gt;</p> <p>Set the device rotation state</p> <p><code>See</code></p> <p>https://github.com/SeleniumHQ/mobile-spec/blob/master/spec-draft.md#device-rotation</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#parameters_121","title":"Parameters","text":"Name Type Description <code>x</code> <code>number</code> the degree to which the device is rotated around the x axis (0 &lt;= x &lt;= 360) <code>y</code> <code>number</code> the degree to which the device is rotated around the y axis (0 &lt;= y &lt;= 360) <code>z</code> <code>number</code> the degree to which the device is rotated around the z axis (0 &lt;= z &lt;= 360)"},{"location":"reference/interfaces/appium_types.ExternalDriver/#returns_177","title":"Returns","text":"<p><code>Promise</code>&lt;<code>void</code>&gt;</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#defined-in_206","title":"Defined in","text":"<p>packages/types/lib/driver.ts:2091</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#seturl","title":"setUrl","text":"<p>\u25b8 <code>Optional</code> setUrl(<code>url</code>): <code>Promise</code>&lt;<code>void</code>&gt;</p> <p>Navigate to a given url</p> <p><code>See</code></p> <p>https://w3c.github.io/webdriver/#navigate-to</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#parameters_122","title":"Parameters","text":"Name Type Description <code>url</code> <code>string</code> the url"},{"location":"reference/interfaces/appium_types.ExternalDriver/#returns_178","title":"Returns","text":"<p><code>Promise</code>&lt;<code>void</code>&gt;</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#defined-in_207","title":"Defined in","text":"<p>packages/types/lib/driver.ts:786</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#setuserauthverified","title":"setUserAuthVerified","text":"<p>\u25b8 <code>Optional</code> setUserAuthVerified(<code>isUserVerified</code>, <code>authenticatorId</code>): <code>Promise</code>&lt;<code>void</code>&gt;</p> <p>Set the isUserVerified property of an authenticator</p> <p><code>See</code></p> <p>https://www.w3.org/TR/webauthn-2/#sctn-automation-set-user-verified</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#parameters_123","title":"Parameters","text":"Name Type Description <code>isUserVerified</code> <code>boolean</code> the value of the isUserVerified property <code>authenticatorId</code> <code>string</code> the authenticator id"},{"location":"reference/interfaces/appium_types.ExternalDriver/#returns_179","title":"Returns","text":"<p><code>Promise</code>&lt;<code>void</code>&gt;</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#defined-in_208","title":"Defined in","text":"<p>packages/types/lib/driver.ts:2188</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#setvalue","title":"setValue","text":"<p>\u25b8 <code>Optional</code> setValue(<code>text</code>, <code>elementId</code>): <code>Promise</code>&lt;<code>void</code>&gt;</p> <p>Send keystrokes to an element (or otherwise set its value)</p> <p><code>See</code></p> <p>https://w3c.github.io/webdriver/#element-send-keys</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#parameters_124","title":"Parameters","text":"Name Type Description <code>text</code> <code>string</code> the text to send to the element <code>elementId</code> <code>string</code> the id of the element"},{"location":"reference/interfaces/appium_types.ExternalDriver/#returns_180","title":"Returns","text":"<p><code>Promise</code>&lt;<code>void</code>&gt;</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#defined-in_209","title":"Defined in","text":"<p>packages/types/lib/driver.ts:1088</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#setvalueimmediate","title":"setValueImmediate","text":"<p>\u25b8 <code>Optional</code> setValueImmediate(<code>value</code>, <code>elementId</code>): <code>Promise</code>&lt;<code>void</code>&gt;</p> <p>Set the value, but like, now? Don't use this.</p> <p><code>Deprecated</code></p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#parameters_125","title":"Parameters","text":"Name Type Description <code>value</code> <code>string</code> the value to set <code>elementId</code> <code>string</code> the element to set the value of"},{"location":"reference/interfaces/appium_types.ExternalDriver/#returns_181","title":"Returns","text":"<p><code>Promise</code>&lt;<code>void</code>&gt;</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#defined-in_210","title":"Defined in","text":"<p>packages/types/lib/driver.ts:1700</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#setwindow","title":"setWindow","text":"<p>\u25b8 <code>Optional</code> setWindow(<code>handle</code>): <code>Promise</code>&lt;<code>void</code>&gt;</p> <p>Switch to a specified window</p> <p><code>See</code></p> <p>https://w3c.github.io/webdriver/#switch-to-window</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#parameters_126","title":"Parameters","text":"Name Type Description <code>handle</code> <code>string</code> the window handle of the window to make active"},{"location":"reference/interfaces/appium_types.ExternalDriver/#returns_182","title":"Returns","text":"<p><code>Promise</code>&lt;<code>void</code>&gt;</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#defined-in_211","title":"Defined in","text":"<p>packages/types/lib/driver.ts:855</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#setwindowrect","title":"setWindowRect","text":"<p>\u25b8 <code>Optional</code> setWindowRect(<code>x</code>, <code>y</code>, <code>width</code>, <code>height</code>): <code>Promise</code>&lt;<code>Rect</code>&gt;</p> <p>Set the current window's size and position</p> <p><code>See</code></p> <p>https://w3c.github.io/webdriver/#set-window-rect</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#parameters_127","title":"Parameters","text":"Name Type Description <code>x</code> <code>number</code> the screen coordinate for the new left edge of the window <code>y</code> <code>number</code> the screen coordinate for the new top edge of the window <code>width</code> <code>number</code> the width in pixels to resize the window to <code>height</code> <code>number</code> the height in pixels to resize the window to"},{"location":"reference/interfaces/appium_types.ExternalDriver/#returns_183","title":"Returns","text":"<p><code>Promise</code>&lt;<code>Rect</code>&gt;</p> <p>The actual <code>Rect</code> of the window after running the command</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#defined-in_212","title":"Defined in","text":"<p>packages/types/lib/driver.ts:908</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#startactivity","title":"startActivity","text":"<p>\u25b8 <code>Optional</code> startActivity(<code>appPackage</code>, <code>appActivity</code>, <code>appWaitPackage?</code>, <code>appWaitActivity?</code>, <code>intentAction?</code>, <code>intentCategory?</code>, <code>intentFlags?</code>, <code>optionalIntentArguments?</code>, <code>dontStopAppOnReset?</code>): <code>Promise</code>&lt;<code>void</code>&gt;</p> <p>Start an Android activity within an app</p> <p><code>Deprecated</code></p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#parameters_128","title":"Parameters","text":"Name Type Description <code>appPackage</code> <code>string</code> the app package id <code>appActivity</code> <code>string</code> the activity name <code>appWaitPackage?</code> <code>string</code> the package id to wait for if different from the app package <code>appWaitActivity?</code> <code>string</code> the activity name to wait for being active if different from appActivity <code>intentAction?</code> <code>string</code> the action for the intent to use to start the activity <code>intentCategory?</code> <code>string</code> the category for the intent <code>intentFlags?</code> <code>string</code> - <code>optionalIntentArguments?</code> <code>string</code> additional arguments to be passed to launching the intent <code>dontStopAppOnReset?</code> <code>boolean</code> set to true to not stop the current app before launching the activity"},{"location":"reference/interfaces/appium_types.ExternalDriver/#returns_184","title":"Returns","text":"<p><code>Promise</code>&lt;<code>void</code>&gt;</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#defined-in_213","title":"Defined in","text":"<p>packages/types/lib/driver.ts:1599</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#startnewcommandtimeout","title":"startNewCommandTimeout","text":"<p>\u25b8 startNewCommandTimeout(): <code>Promise</code>&lt;<code>void</code>&gt;</p> <p>Start the timer for the New Command Timeout, which when it runs out, will stop the current session</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#returns_185","title":"Returns","text":"<p><code>Promise</code>&lt;<code>void</code>&gt;</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#inherited-from_78","title":"Inherited from","text":"<p>Driver.startNewCommandTimeout</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#defined-in_214","title":"Defined in","text":"<p>packages/types/lib/driver.ts:710</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#startrecordingscreen","title":"startRecordingScreen","text":"<p>\u25b8 <code>Optional</code> startRecordingScreen(<code>options?</code>): <code>Promise</code>&lt;<code>void</code>&gt;</p> <p>Direct Appium to start recording the device screen</p> <p><code>Deprecated</code></p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#parameters_129","title":"Parameters","text":"Name Type Description <code>options?</code> <code>StartScreenRecordOptions</code> parameters for screen recording"},{"location":"reference/interfaces/appium_types.ExternalDriver/#returns_186","title":"Returns","text":"<p><code>Promise</code>&lt;<code>void</code>&gt;</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#defined-in_215","title":"Defined in","text":"<p>packages/types/lib/driver.ts:1267</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#startunexpectedshutdown","title":"startUnexpectedShutdown","text":"<p>\u25b8 startUnexpectedShutdown(<code>err?</code>): <code>Promise</code>&lt;<code>void</code>&gt;</p> <p>Signify to any owning processes that this driver encountered an error which should cause the session to terminate immediately (for example an upstream service failed)</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#parameters_130","title":"Parameters","text":"Name Type Description <code>err?</code> <code>Error</code> the Error object which is causing the shutdown"},{"location":"reference/interfaces/appium_types.ExternalDriver/#returns_187","title":"Returns","text":"<p><code>Promise</code>&lt;<code>void</code>&gt;</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#inherited-from_79","title":"Inherited from","text":"<p>Driver.startUnexpectedShutdown</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#defined-in_216","title":"Defined in","text":"<p>packages/types/lib/driver.ts:704</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#stoprecordingscreen","title":"stopRecordingScreen","text":"<p>\u25b8 <code>Optional</code> stopRecordingScreen(<code>options?</code>): <code>Promise</code>&lt;<code>string</code>&gt;</p> <p>Direct Appium to stop screen recording and return the video</p> <p><code>Deprecated</code></p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#parameters_131","title":"Parameters","text":"Name Type Description <code>options?</code> <code>StopScreenRecordOptions</code> parameters for stopping like video Uploading"},{"location":"reference/interfaces/appium_types.ExternalDriver/#returns_188","title":"Returns","text":"<p><code>Promise</code>&lt;<code>string</code>&gt;</p> <p>The base64-encoded video data</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#defined-in_217","title":"Defined in","text":"<p>packages/types/lib/driver.ts:1278</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#submit","title":"submit","text":"<p>\u25b8 <code>Optional</code> submit(<code>elementId</code>): <code>Promise</code>&lt;<code>void</code>&gt;</p> <p>Submit the form an element is in</p> <p><code>Deprecated</code></p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#parameters_132","title":"Parameters","text":"Name Type Description <code>elementId</code> <code>string</code> the element ID"},{"location":"reference/interfaces/appium_types.ExternalDriver/#returns_189","title":"Returns","text":"<p><code>Promise</code>&lt;<code>void</code>&gt;</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#defined-in_218","title":"Defined in","text":"<p>packages/types/lib/driver.ts:1815</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#switchtoparentframe","title":"switchToParentFrame","text":"<p>\u25b8 <code>Optional</code> switchToParentFrame(): <code>Promise</code>&lt;<code>void</code>&gt;</p> <p>Set the current browsing context to the parent of the current context</p> <p><code>See</code></p> <p>https://w3c.github.io/webdriver/#switch-to-parent-frame</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#returns_190","title":"Returns","text":"<p><code>Promise</code>&lt;<code>void</code>&gt;</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#defined-in_219","title":"Defined in","text":"<p>packages/types/lib/driver.ts:887</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#terminateapp","title":"terminateApp","text":"<p>\u25b8 <code>Optional</code> terminateApp(<code>appId</code>, <code>options?</code>): <code>Promise</code>&lt;<code>void</code>&gt;</p> <p>Quit / terminate / stop a running application</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#parameters_133","title":"Parameters","text":"Name Type Description <code>appId</code> <code>string</code> the package or bundle ID of the application <code>options?</code> <code>unknown</code> driver-specific launch options"},{"location":"reference/interfaces/appium_types.ExternalDriver/#returns_191","title":"Returns","text":"<p><code>Promise</code>&lt;<code>void</code>&gt;</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#defined-in_220","title":"Defined in","text":"<p>packages/types/lib/driver.ts:1485</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#timeouts","title":"timeouts","text":"<p>\u25b8 timeouts(<code>type</code>, <code>ms</code>, <code>script?</code>, <code>pageLoad?</code>, <code>implicit?</code>): <code>Promise</code>&lt;<code>void</code>&gt;</p> <p>Set the various timeouts associated with a session</p> <p><code>See</code></p> <p>https://w3c.github.io/webdriver/#set-timeouts</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#parameters_134","title":"Parameters","text":"Name Type Description <code>type</code> <code>string</code> used only for the old (JSONWP) command, the type of the timeout <code>ms</code> <code>string</code> | <code>number</code> used only for the old (JSONWP) command, the ms for the timeout <code>script?</code> <code>number</code> the number in ms for the script timeout, used for the W3C command <code>pageLoad?</code> <code>number</code> the number in ms for the pageLoad timeout, used for the W3C command <code>implicit?</code> <code>string</code> | <code>number</code> the number in ms for the implicit wait timeout, used for the W3C command"},{"location":"reference/interfaces/appium_types.ExternalDriver/#returns_192","title":"Returns","text":"<p><code>Promise</code>&lt;<code>void</code>&gt;</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#inherited-from_80","title":"Inherited from","text":"<p>Driver.timeouts</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#defined-in_221","title":"Defined in","text":"<p>packages/types/lib/driver.ts:31</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#title","title":"title","text":"<p>\u25b8 <code>Optional</code> title(): <code>Promise</code>&lt;<code>string</code>&gt;</p> <p>Get the current page title</p> <p><code>See</code></p> <p>https://w3c.github.io/webdriver/#get-title</p> <p><code>Example</code></p> <p><pre><code>await driver.getTitle()\n</code></pre> <pre><code>driver.title\n</code></pre> <pre><code>driver.getTitle();\n</code></pre></p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#returns_193","title":"Returns","text":"<p><code>Promise</code>&lt;<code>string</code>&gt;</p> <p>The title</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#defined-in_222","title":"Defined in","text":"<p>packages/types/lib/driver.ts:831</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#toggledata","title":"toggleData","text":"<p>\u25b8 <code>Optional</code> toggleData(): <code>Promise</code>&lt;<code>void</code>&gt;</p> <p>Toggle cell network data</p> <p><code>Deprecated</code></p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#returns_194","title":"Returns","text":"<p><code>Promise</code>&lt;<code>void</code>&gt;</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#defined-in_223","title":"Defined in","text":"<p>packages/types/lib/driver.ts:1559</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#toggleenrolltouchid","title":"toggleEnrollTouchId","text":"<p>\u25b8 <code>Optional</code> toggleEnrollTouchId(<code>enabled</code>): <code>Promise</code>&lt;<code>void</code>&gt;</p> <p>Toggle whether the device is enrolled in the touch ID program</p> <p><code>Deprecated</code></p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#parameters_135","title":"Parameters","text":"Name Type Description <code>enabled</code> <code>boolean</code> whether to enable or disable the touch ID program"},{"location":"reference/interfaces/appium_types.ExternalDriver/#returns_195","title":"Returns","text":"<p><code>Promise</code>&lt;<code>void</code>&gt;</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#defined-in_224","title":"Defined in","text":"<p>packages/types/lib/driver.ts:1645</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#toggleflightmode","title":"toggleFlightMode","text":"<p>\u25b8 <code>Optional</code> toggleFlightMode(): <code>Promise</code>&lt;<code>void</code>&gt;</p> <p>Toggle airplane/flight mode for the device</p> <p><code>Deprecated</code></p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#returns_196","title":"Returns","text":"<p><code>Promise</code>&lt;<code>void</code>&gt;</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#defined-in_225","title":"Defined in","text":"<p>packages/types/lib/driver.ts:1552</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#togglelocationservices","title":"toggleLocationServices","text":"<p>\u25b8 <code>Optional</code> toggleLocationServices(): <code>Promise</code>&lt;<code>void</code>&gt;</p> <p>Toggle location services for the device</p> <p><code>Deprecated</code></p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#returns_197","title":"Returns","text":"<p><code>Promise</code>&lt;<code>void</code>&gt;</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#defined-in_226","title":"Defined in","text":"<p>packages/types/lib/driver.ts:1573</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#togglewifi","title":"toggleWiFi","text":"<p>\u25b8 <code>Optional</code> toggleWiFi(): <code>Promise</code>&lt;<code>void</code>&gt;</p> <p>Toggle WiFi radio status</p> <p><code>Deprecated</code></p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#returns_198","title":"Returns","text":"<p><code>Promise</code>&lt;<code>void</code>&gt;</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#defined-in_227","title":"Defined in","text":"<p>packages/types/lib/driver.ts:1566</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#touchdown","title":"touchDown","text":"<p>\u25b8 <code>Optional</code> touchDown(<code>x</code>, <code>y</code>): <code>Promise</code>&lt;<code>void</code>&gt;</p> <p>Perform a touch down event at the location specified</p> <p><code>Deprecated</code></p> <p>Use the Actions API instead</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#parameters_136","title":"Parameters","text":"Name Type Description <code>x</code> <code>number</code> the x coordinate <code>y</code> <code>number</code> the y coordinate"},{"location":"reference/interfaces/appium_types.ExternalDriver/#returns_199","title":"Returns","text":"<p><code>Promise</code>&lt;<code>void</code>&gt;</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#defined-in_228","title":"Defined in","text":"<p>packages/types/lib/driver.ts:1936</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#touchid","title":"touchId","text":"<p>\u25b8 <code>Optional</code> touchId(<code>match</code>): <code>Promise</code>&lt;<code>void</code>&gt;</p> <p>Trigger a touch/fingerprint match or match failure</p> <p><code>Deprecated</code></p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#parameters_137","title":"Parameters","text":"Name Type Description <code>match</code> <code>boolean</code> whether the match should be a success or failure"},{"location":"reference/interfaces/appium_types.ExternalDriver/#returns_200","title":"Returns","text":"<p><code>Promise</code>&lt;<code>void</code>&gt;</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#defined-in_229","title":"Defined in","text":"<p>packages/types/lib/driver.ts:1636</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#touchlongclick","title":"touchLongClick","text":"<p>\u25b8 <code>Optional</code> touchLongClick(<code>elementId</code>): <code>Promise</code>&lt;<code>void</code>&gt;</p> <p>Perform a long touch down event at the location specified</p> <p><code>Deprecated</code></p> <p>Use the Actions API instead</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#parameters_138","title":"Parameters","text":"Name Type Description <code>elementId</code> <code>string</code> the id of the element to long touch"},{"location":"reference/interfaces/appium_types.ExternalDriver/#returns_201","title":"Returns","text":"<p><code>Promise</code>&lt;<code>void</code>&gt;</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#defined-in_230","title":"Defined in","text":"<p>packages/types/lib/driver.ts:1965</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#touchmove","title":"touchMove","text":"<p>\u25b8 <code>Optional</code> touchMove(<code>x</code>, <code>y</code>): <code>Promise</code>&lt;<code>void</code>&gt;</p> <p>Perform a touch move event at the location specified</p> <p><code>Deprecated</code></p> <p>Use the Actions API instead</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#parameters_139","title":"Parameters","text":"Name Type Description <code>x</code> <code>number</code> the x coordinate <code>y</code> <code>number</code> the y coordinate"},{"location":"reference/interfaces/appium_types.ExternalDriver/#returns_202","title":"Returns","text":"<p><code>Promise</code>&lt;<code>void</code>&gt;</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#defined-in_231","title":"Defined in","text":"<p>packages/types/lib/driver.ts:1956</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#touchup","title":"touchUp","text":"<p>\u25b8 <code>Optional</code> touchUp(<code>x</code>, <code>y</code>): <code>Promise</code>&lt;<code>void</code>&gt;</p> <p>Perform a touch up event at the location specified</p> <p><code>Deprecated</code></p> <p>Use the Actions API instead</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#parameters_140","title":"Parameters","text":"Name Type Description <code>x</code> <code>number</code> the x coordinate <code>y</code> <code>number</code> the y coordinate"},{"location":"reference/interfaces/appium_types.ExternalDriver/#returns_203","title":"Returns","text":"<p><code>Promise</code>&lt;<code>void</code>&gt;</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#defined-in_232","title":"Defined in","text":"<p>packages/types/lib/driver.ts:1946</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#unlock","title":"unlock","text":"<p>\u25b8 <code>Optional</code> unlock(): <code>Promise</code>&lt;<code>void</code>&gt;</p> <p>Unlock the device</p> <p><code>Deprecated</code></p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#returns_204","title":"Returns","text":"<p><code>Promise</code>&lt;<code>void</code>&gt;</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#defined-in_233","title":"Defined in","text":"<p>packages/types/lib/driver.ts:1249</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#validatedesiredcaps","title":"validateDesiredCaps","text":"<p>\u25b8 validateDesiredCaps(<code>caps</code>): <code>boolean</code></p> <p>Validate the capabilities used to start a session</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#parameters_141","title":"Parameters","text":"Name Type Description <code>caps</code> <code>Partial</code>&lt;<code>ConstraintsToCaps</code>&lt;<code>C</code>&gt; &amp; <code>void</code>&gt; the capabilities"},{"location":"reference/interfaces/appium_types.ExternalDriver/#returns_205","title":"Returns","text":"<p><code>boolean</code></p> <p>Whether or not the capabilities are valid</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#inherited-from_81","title":"Inherited from","text":"<p>Driver.validateDesiredCaps</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#defined-in_234","title":"Defined in","text":"<p>packages/types/lib/driver.ts:743</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#validatelocatorstrategy","title":"validateLocatorStrategy","text":"<p>\u25b8 validateLocatorStrategy(<code>strategy</code>, <code>webContext?</code>): <code>void</code></p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#parameters_142","title":"Parameters","text":"Name Type <code>strategy</code> <code>string</code> <code>webContext?</code> <code>boolean</code>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#returns_206","title":"Returns","text":"<p><code>void</code></p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#inherited-from_82","title":"Inherited from","text":"<p>Driver.validateLocatorStrategy</p>"},{"location":"reference/interfaces/appium_types.ExternalDriver/#defined-in_235","title":"Defined in","text":"<p>packages/types/lib/driver.ts:648</p>"},{"location":"reference/interfaces/appium_types.ExtraDriverOpts/","title":"Interface: ExtraDriverOpts","text":"<p>@appium/types.ExtraDriverOpts</p>"},{"location":"reference/interfaces/appium_types.ExtraDriverOpts/#table-of-contents","title":"Table of contents","text":""},{"location":"reference/interfaces/appium_types.ExtraDriverOpts/#properties","title":"Properties","text":"<ul> <li>fastReset</li> <li>skipUninstall</li> </ul>"},{"location":"reference/interfaces/appium_types.ExtraDriverOpts/#properties_1","title":"Properties","text":""},{"location":"reference/interfaces/appium_types.ExtraDriverOpts/#fastreset","title":"fastReset","text":"<p>\u2022 <code>Optional</code> fastReset: <code>boolean</code></p>"},{"location":"reference/interfaces/appium_types.ExtraDriverOpts/#defined-in","title":"Defined in","text":"<p>packages/types/lib/driver.ts:2227</p>"},{"location":"reference/interfaces/appium_types.ExtraDriverOpts/#skipuninstall","title":"skipUninstall","text":"<p>\u2022 <code>Optional</code> skipUninstall: <code>boolean</code></p>"},{"location":"reference/interfaces/appium_types.ExtraDriverOpts/#defined-in_1","title":"Defined in","text":"<p>packages/types/lib/driver.ts:2228</p>"},{"location":"reference/interfaces/appium_types.IEventCommands/","title":"Interface: IEventCommands","text":"<p>@appium/types.IEventCommands</p>"},{"location":"reference/interfaces/appium_types.IEventCommands/#hierarchy","title":"Hierarchy","text":"<ul> <li><code>IEventCommands</code></li> </ul> <p>\u21b3 <code>Driver</code></p>"},{"location":"reference/interfaces/appium_types.IEventCommands/#table-of-contents","title":"Table of contents","text":""},{"location":"reference/interfaces/appium_types.IEventCommands/#methods","title":"Methods","text":"<ul> <li>getLogEvents</li> <li>logCustomEvent</li> </ul>"},{"location":"reference/interfaces/appium_types.IEventCommands/#methods_1","title":"Methods","text":""},{"location":"reference/interfaces/appium_types.IEventCommands/#getlogevents","title":"getLogEvents","text":"<p>\u25b8 getLogEvents(<code>type?</code>): <code>Promise</code>&lt;<code>Record</code>&lt;<code>string</code>, <code>number</code>&gt; | <code>EventHistory</code>&gt;</p> <p>Get a list of events that have occurred in the current session</p>"},{"location":"reference/interfaces/appium_types.IEventCommands/#parameters","title":"Parameters","text":"Name Type Description <code>type?</code> <code>string</code> | <code>string</code>[] filter the returned events by including one or more types"},{"location":"reference/interfaces/appium_types.IEventCommands/#returns","title":"Returns","text":"<p><code>Promise</code>&lt;<code>Record</code>&lt;<code>string</code>, <code>number</code>&gt; | <code>EventHistory</code>&gt;</p> <p>The event history for the session</p>"},{"location":"reference/interfaces/appium_types.IEventCommands/#defined-in","title":"Defined in","text":"<p>packages/types/lib/driver.ts:157</p>"},{"location":"reference/interfaces/appium_types.IEventCommands/#logcustomevent","title":"logCustomEvent","text":"<p>\u25b8 logCustomEvent(<code>vendor</code>, <code>event</code>): <code>Promise</code>&lt;<code>void</code>&gt;</p> <p>Add a custom-named event to the Appium event log</p>"},{"location":"reference/interfaces/appium_types.IEventCommands/#parameters_1","title":"Parameters","text":"Name Type Description <code>vendor</code> <code>string</code> the name of the vendor or tool the event belongs to, to namespace the event <code>event</code> <code>string</code> the name of the event itself"},{"location":"reference/interfaces/appium_types.IEventCommands/#returns_1","title":"Returns","text":"<p><code>Promise</code>&lt;<code>void</code>&gt;</p>"},{"location":"reference/interfaces/appium_types.IEventCommands/#defined-in_1","title":"Defined in","text":"<p>packages/types/lib/driver.ts:148</p>"},{"location":"reference/interfaces/appium_types.IExecuteCommands/","title":"Interface: IExecuteCommands","text":"<p>@appium/types.IExecuteCommands</p>"},{"location":"reference/interfaces/appium_types.IExecuteCommands/#hierarchy","title":"Hierarchy","text":"<ul> <li><code>IExecuteCommands</code></li> </ul> <p>\u21b3 <code>Driver</code></p>"},{"location":"reference/interfaces/appium_types.IExecuteCommands/#table-of-contents","title":"Table of contents","text":""},{"location":"reference/interfaces/appium_types.IExecuteCommands/#methods","title":"Methods","text":"<ul> <li>executeMethod</li> </ul>"},{"location":"reference/interfaces/appium_types.IExecuteCommands/#methods_1","title":"Methods","text":""},{"location":"reference/interfaces/appium_types.IExecuteCommands/#executemethod","title":"executeMethod","text":"<p>\u25b8 executeMethod(<code>script</code>, <code>args</code>): <code>Promise</code>&lt;<code>any</code>&gt;</p> <p>Call an <code>Execute Method</code> by its name with the given arguments. This method will check that the driver has registered the method matching the name, and send it the arguments.</p>"},{"location":"reference/interfaces/appium_types.IExecuteCommands/#parameters","title":"Parameters","text":"Name Type Description <code>script</code> <code>string</code> the name of the Execute Method <code>args</code> [<code>StringRecord</code>] | [] a singleton array containing an arguments object"},{"location":"reference/interfaces/appium_types.IExecuteCommands/#returns","title":"Returns","text":"<p><code>Promise</code>&lt;<code>any</code>&gt;</p> <p>The result of calling the Execute Method</p>"},{"location":"reference/interfaces/appium_types.IExecuteCommands/#defined-in","title":"Defined in","text":"<p>packages/types/lib/driver.ts:186</p>"},{"location":"reference/interfaces/appium_types.IFindCommands/","title":"Interface: IFindCommands&lt;Ctx&gt;","text":"<p>@appium/types.IFindCommands</p>"},{"location":"reference/interfaces/appium_types.IFindCommands/#type-parameters","title":"Type parameters","text":"Name Type <code>Ctx</code> <code>any</code>"},{"location":"reference/interfaces/appium_types.IFindCommands/#hierarchy","title":"Hierarchy","text":"<ul> <li><code>IFindCommands</code></li> </ul> <p>\u21b3 <code>Driver</code></p>"},{"location":"reference/interfaces/appium_types.IFindCommands/#table-of-contents","title":"Table of contents","text":""},{"location":"reference/interfaces/appium_types.IFindCommands/#methods","title":"Methods","text":"<ul> <li>findElOrEls</li> <li>findElOrElsWithProcessing</li> <li>findElement</li> <li>findElementFromElement</li> <li>findElementFromShadowRoot</li> <li>findElements</li> <li>findElementsFromElement</li> <li>findElementsFromShadowRoot</li> <li>getPageSource</li> </ul>"},{"location":"reference/interfaces/appium_types.IFindCommands/#methods_1","title":"Methods","text":""},{"location":"reference/interfaces/appium_types.IFindCommands/#findelorels","title":"findElOrEls","text":"<p>\u25b8 findElOrEls&lt;<code>Mult</code>&gt;(<code>strategy</code>, <code>selector</code>, <code>mult</code>, <code>context?</code>): <code>Promise</code>&lt;<code>Mult</code> extends <code>true</code> ? <code>Element</code>[] : <code>Element</code>&gt;</p> <p>A helper method that returns one or more UI elements based on the search criteria</p>"},{"location":"reference/interfaces/appium_types.IFindCommands/#type-parameters_1","title":"Type parameters","text":"Name Type <code>Mult</code> extends <code>boolean</code>"},{"location":"reference/interfaces/appium_types.IFindCommands/#parameters","title":"Parameters","text":"Name Type Description <code>strategy</code> <code>string</code> the locator strategy <code>selector</code> <code>string</code> the selector <code>mult</code> <code>Mult</code> whether or not we want to find multiple elements <code>context?</code> <code>Ctx</code> the element to use as the search context basis if desiredCapabilities"},{"location":"reference/interfaces/appium_types.IFindCommands/#returns","title":"Returns","text":"<p><code>Promise</code>&lt;<code>Mult</code> extends <code>true</code> ? <code>Element</code>[] : <code>Element</code>&gt;</p> <p>A single element or list of elements</p>"},{"location":"reference/interfaces/appium_types.IFindCommands/#defined-in","title":"Defined in","text":"<p>packages/types/lib/driver.ts:297</p>"},{"location":"reference/interfaces/appium_types.IFindCommands/#findelorelswithprocessing","title":"findElOrElsWithProcessing","text":"<p>\u25b8 findElOrElsWithProcessing&lt;<code>Mult</code>&gt;(<code>strategy</code>, <code>selector</code>, <code>mult</code>, <code>context?</code>): <code>Promise</code>&lt;<code>Mult</code> extends <code>true</code> ? <code>Element</code>[] : <code>Element</code>&gt;</p> <p>This is a wrapper for <code>findElOrEls</code> that validates locator strategies and implements the <code>appium:printPageSourceOnFindFailure</code> capability</p>"},{"location":"reference/interfaces/appium_types.IFindCommands/#type-parameters_2","title":"Type parameters","text":"Name Type <code>Mult</code> extends <code>boolean</code>"},{"location":"reference/interfaces/appium_types.IFindCommands/#parameters_1","title":"Parameters","text":"Name Type Description <code>strategy</code> <code>string</code> the locator strategy <code>selector</code> <code>string</code> the selector <code>mult</code> <code>Mult</code> whether or not we want to find multiple elements <code>context?</code> <code>Ctx</code> the element to use as the search context basis if desiredCapabilities"},{"location":"reference/interfaces/appium_types.IFindCommands/#returns_1","title":"Returns","text":"<p><code>Promise</code>&lt;<code>Mult</code> extends <code>true</code> ? <code>Element</code>[] : <code>Element</code>&gt;</p> <p>A single element or list of elements</p>"},{"location":"reference/interfaces/appium_types.IFindCommands/#defined-in_1","title":"Defined in","text":"<p>packages/types/lib/driver.ts:315</p>"},{"location":"reference/interfaces/appium_types.IFindCommands/#findelement","title":"findElement","text":"<p>\u25b8 findElement(<code>strategy</code>, <code>selector</code>): <code>Promise</code>&lt;<code>Element</code>&gt;</p> <p>Find a UI element given a locator strategy and a selector, erroring if it can't be found</p> <p><code>See</code></p> <p>https://w3c.github.io/webdriver/#find-element</p>"},{"location":"reference/interfaces/appium_types.IFindCommands/#parameters_2","title":"Parameters","text":"Name Type Description <code>strategy</code> <code>string</code> the locator strategy <code>selector</code> <code>string</code> the selector to combine with the strategy to find the specific element"},{"location":"reference/interfaces/appium_types.IFindCommands/#returns_2","title":"Returns","text":"<p><code>Promise</code>&lt;<code>Element</code>&gt;</p> <p>The element object encoding the element id which can be used in element-related commands</p>"},{"location":"reference/interfaces/appium_types.IFindCommands/#defined-in_2","title":"Defined in","text":"<p>packages/types/lib/driver.ts:213</p>"},{"location":"reference/interfaces/appium_types.IFindCommands/#findelementfromelement","title":"findElementFromElement","text":"<p>\u25b8 findElementFromElement(<code>strategy</code>, <code>selector</code>, <code>elementId</code>): <code>Promise</code>&lt;<code>Element</code>&gt;</p> <p>Find a UI element given a locator strategy and a selector, erroring if it can't be found. Only look for elements among the set of descendants of a given element</p> <p><code>See</code></p> <p>https://w3c.github.io/webdriver/#find-element-from-element</p>"},{"location":"reference/interfaces/appium_types.IFindCommands/#parameters_3","title":"Parameters","text":"Name Type Description <code>strategy</code> <code>string</code> the locator strategy <code>selector</code> <code>string</code> the selector to combine with the strategy to find the specific element <code>elementId</code> <code>string</code> the id of the element to use as the search basis"},{"location":"reference/interfaces/appium_types.IFindCommands/#returns_3","title":"Returns","text":"<p><code>Promise</code>&lt;<code>Element</code>&gt;</p> <p>The element object encoding the element id which can be used in element-related commands</p>"},{"location":"reference/interfaces/appium_types.IFindCommands/#defined-in_3","title":"Defined in","text":"<p>packages/types/lib/driver.ts:238</p>"},{"location":"reference/interfaces/appium_types.IFindCommands/#findelementfromshadowroot","title":"findElementFromShadowRoot","text":"<p>\u25b8 <code>Optional</code> findElementFromShadowRoot(<code>strategy</code>, <code>selector</code>, <code>shadowId</code>): <code>Promise</code>&lt;<code>Element</code>&gt;</p> <p>Find an element from a shadow root</p> <p><code>See</code></p> <p>https://w3c.github.io/webdriver/#find-element-from-shadow-root</p>"},{"location":"reference/interfaces/appium_types.IFindCommands/#parameters_4","title":"Parameters","text":"Name Type Description <code>strategy</code> <code>string</code> the locator strategy <code>selector</code> <code>string</code> the selector to combine with the strategy to find the specific elements <code>shadowId</code> <code>string</code> the id of the element to use as the search basis"},{"location":"reference/interfaces/appium_types.IFindCommands/#returns_4","title":"Returns","text":"<p><code>Promise</code>&lt;<code>Element</code>&gt;</p> <p>The element inside the shadow root matching the selector</p>"},{"location":"reference/interfaces/appium_types.IFindCommands/#defined-in_4","title":"Defined in","text":"<p>packages/types/lib/driver.ts:266</p>"},{"location":"reference/interfaces/appium_types.IFindCommands/#findelements","title":"findElements","text":"<p>\u25b8 findElements(<code>strategy</code>, <code>selector</code>): <code>Promise</code>&lt;<code>Element</code>[]&gt;</p> <p>Find a a list of all UI elements matching a given a locator strategy and a selector</p> <p><code>See</code></p> <p>https://w3c.github.io/webdriver/#find-elements</p>"},{"location":"reference/interfaces/appium_types.IFindCommands/#parameters_5","title":"Parameters","text":"Name Type Description <code>strategy</code> <code>string</code> the locator strategy <code>selector</code> <code>string</code> the selector to combine with the strategy to find the specific elements"},{"location":"reference/interfaces/appium_types.IFindCommands/#returns_5","title":"Returns","text":"<p><code>Promise</code>&lt;<code>Element</code>[]&gt;</p> <p>A possibly-empty list of element objects</p>"},{"location":"reference/interfaces/appium_types.IFindCommands/#defined-in_5","title":"Defined in","text":"<p>packages/types/lib/driver.ts:224</p>"},{"location":"reference/interfaces/appium_types.IFindCommands/#findelementsfromelement","title":"findElementsFromElement","text":"<p>\u25b8 findElementsFromElement(<code>strategy</code>, <code>selector</code>, <code>elementId</code>): <code>Promise</code>&lt;<code>Element</code>[]&gt;</p> <p>Find a a list of all UI elements matching a given a locator strategy and a selector. Only look for elements among the set of descendants of a given element</p> <p><code>See</code></p> <p>https://w3c.github.io/webdriver/#find-elements-from-element</p>"},{"location":"reference/interfaces/appium_types.IFindCommands/#parameters_6","title":"Parameters","text":"Name Type Description <code>strategy</code> <code>string</code> the locator strategy <code>selector</code> <code>string</code> the selector to combine with the strategy to find the specific elements <code>elementId</code> <code>string</code> the id of the element to use as the search basis"},{"location":"reference/interfaces/appium_types.IFindCommands/#returns_6","title":"Returns","text":"<p><code>Promise</code>&lt;<code>Element</code>[]&gt;</p> <p>A possibly-empty list of element objects</p>"},{"location":"reference/interfaces/appium_types.IFindCommands/#defined-in_6","title":"Defined in","text":"<p>packages/types/lib/driver.ts:251</p>"},{"location":"reference/interfaces/appium_types.IFindCommands/#findelementsfromshadowroot","title":"findElementsFromShadowRoot","text":"<p>\u25b8 <code>Optional</code> findElementsFromShadowRoot(<code>strategy</code>, <code>selector</code>, <code>shadowId</code>): <code>Promise</code>&lt;<code>Element</code>[]&gt;</p> <p>Find elements from a shadow root</p> <p><code>See</code></p> <p>https://w3c.github.io/webdriver/#find-element-from-shadow-root</p>"},{"location":"reference/interfaces/appium_types.IFindCommands/#parameters_7","title":"Parameters","text":"Name Type Description <code>strategy</code> <code>string</code> the locator strategy <code>selector</code> <code>string</code> the selector to combine with the strategy to find the specific elements <code>shadowId</code> <code>string</code> the id of the element to use as the search basis"},{"location":"reference/interfaces/appium_types.IFindCommands/#returns_7","title":"Returns","text":"<p><code>Promise</code>&lt;<code>Element</code>[]&gt;</p> <p>A possibly empty list of elements inside the shadow root matching the selector</p>"},{"location":"reference/interfaces/appium_types.IFindCommands/#defined-in_7","title":"Defined in","text":"<p>packages/types/lib/driver.ts:281</p>"},{"location":"reference/interfaces/appium_types.IFindCommands/#getpagesource","title":"getPageSource","text":"<p>\u25b8 getPageSource(): <code>Promise</code>&lt;<code>string</code>&gt;</p> <p>Get the current page/app source as HTML/XML</p> <p><code>See</code></p> <p>https://w3c.github.io/webdriver/#get-page-source</p>"},{"location":"reference/interfaces/appium_types.IFindCommands/#returns_8","title":"Returns","text":"<p><code>Promise</code>&lt;<code>string</code>&gt;</p> <p>The UI hierarchy in a platform-appropriate format (e.g., HTML for a web page)</p>"},{"location":"reference/interfaces/appium_types.IFindCommands/#defined-in_8","title":"Defined in","text":"<p>packages/types/lib/driver.ts:328</p>"},{"location":"reference/interfaces/appium_types.ILogCommands/","title":"Interface: ILogCommands&lt;C&gt;","text":"<p>@appium/types.ILogCommands</p>"},{"location":"reference/interfaces/appium_types.ILogCommands/#type-parameters","title":"Type parameters","text":"Name Type <code>C</code> extends <code>Constraints</code>"},{"location":"reference/interfaces/appium_types.ILogCommands/#hierarchy","title":"Hierarchy","text":"<ul> <li><code>ILogCommands</code></li> </ul> <p>\u21b3 <code>Driver</code></p>"},{"location":"reference/interfaces/appium_types.ILogCommands/#table-of-contents","title":"Table of contents","text":""},{"location":"reference/interfaces/appium_types.ILogCommands/#properties","title":"Properties","text":"<ul> <li>supportedLogTypes</li> </ul>"},{"location":"reference/interfaces/appium_types.ILogCommands/#methods","title":"Methods","text":"<ul> <li>getLog</li> <li>getLogTypes</li> </ul>"},{"location":"reference/interfaces/appium_types.ILogCommands/#properties_1","title":"Properties","text":""},{"location":"reference/interfaces/appium_types.ILogCommands/#supportedlogtypes","title":"supportedLogTypes","text":"<p>\u2022 supportedLogTypes: <code>Readonly</code>&lt;<code>LogDefRecord</code>&lt;<code>C</code>&gt;&gt;</p> <p>Definition of the available log types</p>"},{"location":"reference/interfaces/appium_types.ILogCommands/#defined-in","title":"Defined in","text":"<p>packages/types/lib/driver.ts:335</p>"},{"location":"reference/interfaces/appium_types.ILogCommands/#methods_1","title":"Methods","text":""},{"location":"reference/interfaces/appium_types.ILogCommands/#getlog","title":"getLog","text":"<p>\u25b8 getLog(<code>logType</code>): <code>Promise</code>&lt;<code>unknown</code>[]&gt;</p> <p>Get the log for a given log type.</p>"},{"location":"reference/interfaces/appium_types.ILogCommands/#parameters","title":"Parameters","text":"Name Type Description <code>logType</code> <code>string</code> Name/key of log type as defined in <code>supportedLogTypes</code>."},{"location":"reference/interfaces/appium_types.ILogCommands/#returns","title":"Returns","text":"<p><code>Promise</code>&lt;<code>unknown</code>[]&gt;</p>"},{"location":"reference/interfaces/appium_types.ILogCommands/#defined-in_1","title":"Defined in","text":"<p>packages/types/lib/driver.ts:347</p>"},{"location":"reference/interfaces/appium_types.ILogCommands/#getlogtypes","title":"getLogTypes","text":"<p>\u25b8 getLogTypes(): <code>Promise</code>&lt;<code>string</code>[]&gt;</p> <p>Get available log types as a list of strings</p>"},{"location":"reference/interfaces/appium_types.ILogCommands/#returns_1","title":"Returns","text":"<p><code>Promise</code>&lt;<code>string</code>[]&gt;</p>"},{"location":"reference/interfaces/appium_types.ILogCommands/#defined-in_2","title":"Defined in","text":"<p>packages/types/lib/driver.ts:340</p>"},{"location":"reference/interfaces/appium_types.ISessionCommands/","title":"Interface: ISessionCommands","text":"<p>@appium/types.ISessionCommands</p>"},{"location":"reference/interfaces/appium_types.ISessionCommands/#hierarchy","title":"Hierarchy","text":"<ul> <li><code>ISessionCommands</code></li> </ul> <p>\u21b3 <code>Driver</code></p>"},{"location":"reference/interfaces/appium_types.ISessionCommands/#table-of-contents","title":"Table of contents","text":""},{"location":"reference/interfaces/appium_types.ISessionCommands/#methods","title":"Methods","text":"<ul> <li>getSession</li> <li>getSessions</li> </ul>"},{"location":"reference/interfaces/appium_types.ISessionCommands/#methods_1","title":"Methods","text":""},{"location":"reference/interfaces/appium_types.ISessionCommands/#getsession","title":"getSession","text":"<p>\u25b8 getSession(): <code>Promise</code>&lt;<code>SingularSessionData</code>&lt;{ <code>app</code>: { <code>isString</code>: <code>true</code> = true } ; <code>autoLaunch</code>: { <code>isBoolean</code>: <code>true</code> = true } ; <code>autoWebview</code>: { <code>isBoolean</code>: <code>true</code> = true } ; <code>automationName</code>: { <code>isString</code>: <code>true</code> = true } ; <code>deviceName</code>: { <code>isString</code>: <code>true</code> = true } ; <code>eventTimings</code>: { <code>isBoolean</code>: <code>true</code> = true } ; <code>fullReset</code>: { <code>isBoolean</code>: <code>true</code> = true } ; <code>language</code>: { <code>isString</code>: <code>true</code> = true } ; <code>locale</code>: { <code>isString</code>: <code>true</code> = true } ; <code>newCommandTimeout</code>: { <code>isNumber</code>: <code>true</code> = true } ; <code>noReset</code>: { <code>isBoolean</code>: <code>true</code> = true } ; <code>orientation</code>: { <code>inclusion</code>: readonly [<code>\"LANDSCAPE\"</code>, <code>\"PORTRAIT\"</code>]  } ; <code>platformName</code>: { <code>isString</code>: <code>true</code> = true; <code>presence</code>: <code>true</code> = true } ; <code>platformVersion</code>: { <code>isString</code>: <code>true</code> = true } ; <code>printPageSourceOnFindFailure</code>: { <code>isBoolean</code>: <code>true</code> = true } ; <code>udid</code>: { <code>isString</code>: <code>true</code> = true } ; <code>webSocketUrl</code>: { <code>isString</code>: <code>true</code> = true }  }, <code>void</code>&gt;&gt;</p> <p>Get the data for the current session</p>"},{"location":"reference/interfaces/appium_types.ISessionCommands/#returns","title":"Returns","text":"<p><code>Promise</code>&lt;<code>SingularSessionData</code>&lt;{ <code>app</code>: { <code>isString</code>: <code>true</code> = true } ; <code>autoLaunch</code>: { <code>isBoolean</code>: <code>true</code> = true } ; <code>autoWebview</code>: { <code>isBoolean</code>: <code>true</code> = true } ; <code>automationName</code>: { <code>isString</code>: <code>true</code> = true } ; <code>deviceName</code>: { <code>isString</code>: <code>true</code> = true } ; <code>eventTimings</code>: { <code>isBoolean</code>: <code>true</code> = true } ; <code>fullReset</code>: { <code>isBoolean</code>: <code>true</code> = true } ; <code>language</code>: { <code>isString</code>: <code>true</code> = true } ; <code>locale</code>: { <code>isString</code>: <code>true</code> = true } ; <code>newCommandTimeout</code>: { <code>isNumber</code>: <code>true</code> = true } ; <code>noReset</code>: { <code>isBoolean</code>: <code>true</code> = true } ; <code>orientation</code>: { <code>inclusion</code>: readonly [<code>\"LANDSCAPE\"</code>, <code>\"PORTRAIT\"</code>]  } ; <code>platformName</code>: { <code>isString</code>: <code>true</code> = true; <code>presence</code>: <code>true</code> = true } ; <code>platformVersion</code>: { <code>isString</code>: <code>true</code> = true } ; <code>printPageSourceOnFindFailure</code>: { <code>isBoolean</code>: <code>true</code> = true } ; <code>udid</code>: { <code>isString</code>: <code>true</code> = true } ; <code>webSocketUrl</code>: { <code>isString</code>: <code>true</code> = true }  }, <code>void</code>&gt;&gt;</p> <p>A session data object</p>"},{"location":"reference/interfaces/appium_types.ISessionCommands/#defined-in","title":"Defined in","text":"<p>packages/types/lib/driver.ts:173</p>"},{"location":"reference/interfaces/appium_types.ISessionCommands/#getsessions","title":"getSessions","text":"<p>\u25b8 getSessions(): <code>Promise</code>&lt;<code>MultiSessionData</code>&lt;{ <code>app</code>: { <code>isString</code>: <code>true</code> = true } ; <code>autoLaunch</code>: { <code>isBoolean</code>: <code>true</code> = true } ; <code>autoWebview</code>: { <code>isBoolean</code>: <code>true</code> = true } ; <code>automationName</code>: { <code>isString</code>: <code>true</code> = true } ; <code>deviceName</code>: { <code>isString</code>: <code>true</code> = true } ; <code>eventTimings</code>: { <code>isBoolean</code>: <code>true</code> = true } ; <code>fullReset</code>: { <code>isBoolean</code>: <code>true</code> = true } ; <code>language</code>: { <code>isString</code>: <code>true</code> = true } ; <code>locale</code>: { <code>isString</code>: <code>true</code> = true } ; <code>newCommandTimeout</code>: { <code>isNumber</code>: <code>true</code> = true } ; <code>noReset</code>: { <code>isBoolean</code>: <code>true</code> = true } ; <code>orientation</code>: { <code>inclusion</code>: readonly [<code>\"LANDSCAPE\"</code>, <code>\"PORTRAIT\"</code>]  } ; <code>platformName</code>: { <code>isString</code>: <code>true</code> = true; <code>presence</code>: <code>true</code> = true } ; <code>platformVersion</code>: { <code>isString</code>: <code>true</code> = true } ; <code>printPageSourceOnFindFailure</code>: { <code>isBoolean</code>: <code>true</code> = true } ; <code>udid</code>: { <code>isString</code>: <code>true</code> = true } ; <code>webSocketUrl</code>: { <code>isString</code>: <code>true</code> = true }  }, <code>void</code>&gt;[]&gt;</p> <p>Get data for all sessions running on an Appium server</p>"},{"location":"reference/interfaces/appium_types.ISessionCommands/#returns_1","title":"Returns","text":"<p><code>Promise</code>&lt;<code>MultiSessionData</code>&lt;{ <code>app</code>: { <code>isString</code>: <code>true</code> = true } ; <code>autoLaunch</code>: { <code>isBoolean</code>: <code>true</code> = true } ; <code>autoWebview</code>: { <code>isBoolean</code>: <code>true</code> = true } ; <code>automationName</code>: { <code>isString</code>: <code>true</code> = true } ; <code>deviceName</code>: { <code>isString</code>: <code>true</code> = true } ; <code>eventTimings</code>: { <code>isBoolean</code>: <code>true</code> = true } ; <code>fullReset</code>: { <code>isBoolean</code>: <code>true</code> = true } ; <code>language</code>: { <code>isString</code>: <code>true</code> = true } ; <code>locale</code>: { <code>isString</code>: <code>true</code> = true } ; <code>newCommandTimeout</code>: { <code>isNumber</code>: <code>true</code> = true } ; <code>noReset</code>: { <code>isBoolean</code>: <code>true</code> = true } ; <code>orientation</code>: { <code>inclusion</code>: readonly [<code>\"LANDSCAPE\"</code>, <code>\"PORTRAIT\"</code>]  } ; <code>platformName</code>: { <code>isString</code>: <code>true</code> = true; <code>presence</code>: <code>true</code> = true } ; <code>platformVersion</code>: { <code>isString</code>: <code>true</code> = true } ; <code>printPageSourceOnFindFailure</code>: { <code>isBoolean</code>: <code>true</code> = true } ; <code>udid</code>: { <code>isString</code>: <code>true</code> = true } ; <code>webSocketUrl</code>: { <code>isString</code>: <code>true</code> = true }  }, <code>void</code>&gt;[]&gt;</p> <p>A list of session data objects</p>"},{"location":"reference/interfaces/appium_types.ISessionCommands/#defined-in_1","title":"Defined in","text":"<p>packages/types/lib/driver.ts:166</p>"},{"location":"reference/interfaces/appium_types.ISettingsCommands/","title":"Interface: ISettingsCommands","text":"<p>@appium/types.ISettingsCommands</p>"},{"location":"reference/interfaces/appium_types.ISettingsCommands/#hierarchy","title":"Hierarchy","text":"<ul> <li><code>ISettingsCommands</code></li> </ul> <p>\u21b3 <code>Driver</code></p>"},{"location":"reference/interfaces/appium_types.ISettingsCommands/#table-of-contents","title":"Table of contents","text":""},{"location":"reference/interfaces/appium_types.ISettingsCommands/#properties","title":"Properties","text":"<ul> <li>updateSettings</li> </ul>"},{"location":"reference/interfaces/appium_types.ISettingsCommands/#methods","title":"Methods","text":"<ul> <li>getSettings</li> </ul>"},{"location":"reference/interfaces/appium_types.ISettingsCommands/#properties_1","title":"Properties","text":""},{"location":"reference/interfaces/appium_types.ISettingsCommands/#updatesettings","title":"updateSettings","text":"<p>\u2022 updateSettings: (<code>settings</code>: <code>StringRecord</code>) =&gt; <code>Promise</code>&lt;<code>void</code>&gt;</p>"},{"location":"reference/interfaces/appium_types.ISettingsCommands/#type-declaration","title":"Type declaration","text":"<p>\u25b8 (<code>settings</code>): <code>Promise</code>&lt;<code>void</code>&gt;</p> <p>Update the session's settings dictionary with a new settings object</p>"},{"location":"reference/interfaces/appium_types.ISettingsCommands/#parameters","title":"Parameters","text":"Name Type Description <code>settings</code> <code>StringRecord</code> A key-value map of setting names to values. Settings not named in the map will not have their value adjusted."},{"location":"reference/interfaces/appium_types.ISettingsCommands/#returns","title":"Returns","text":"<p><code>Promise</code>&lt;<code>void</code>&gt;</p>"},{"location":"reference/interfaces/appium_types.ISettingsCommands/#defined-in","title":"Defined in","text":"<p>packages/types/lib/driver.ts:388</p>"},{"location":"reference/interfaces/appium_types.ISettingsCommands/#methods_1","title":"Methods","text":""},{"location":"reference/interfaces/appium_types.ISettingsCommands/#getsettings","title":"getSettings","text":"<p>\u25b8 getSettings(): <code>Promise</code>&lt;<code>StringRecord</code>&gt;</p> <p>Get the current settings for the session</p>"},{"location":"reference/interfaces/appium_types.ISettingsCommands/#returns_1","title":"Returns","text":"<p><code>Promise</code>&lt;<code>StringRecord</code>&gt;</p> <p>The settings object</p>"},{"location":"reference/interfaces/appium_types.ISettingsCommands/#defined-in_1","title":"Defined in","text":"<p>packages/types/lib/driver.ts:395</p>"},{"location":"reference/interfaces/appium_types.ITimeoutCommands/","title":"Interface: ITimeoutCommands","text":"<p>@appium/types.ITimeoutCommands</p>"},{"location":"reference/interfaces/appium_types.ITimeoutCommands/#hierarchy","title":"Hierarchy","text":"<ul> <li><code>ITimeoutCommands</code></li> </ul> <p>\u21b3 <code>Driver</code></p>"},{"location":"reference/interfaces/appium_types.ITimeoutCommands/#table-of-contents","title":"Table of contents","text":""},{"location":"reference/interfaces/appium_types.ITimeoutCommands/#methods","title":"Methods","text":"<ul> <li>getTimeouts</li> <li>implicitWait</li> <li>implicitWaitForCondition</li> <li>implicitWaitMJSONWP</li> <li>implicitWaitW3C</li> <li>newCommandTimeout</li> <li>pageLoadTimeoutMJSONWP</li> <li>pageLoadTimeoutW3C</li> <li>parseTimeoutArgument</li> <li>scriptTimeoutMJSONWP</li> <li>scriptTimeoutW3C</li> <li>setImplicitWait</li> <li>setNewCommandTimeout</li> <li>timeouts</li> </ul>"},{"location":"reference/interfaces/appium_types.ITimeoutCommands/#methods_1","title":"Methods","text":""},{"location":"reference/interfaces/appium_types.ITimeoutCommands/#gettimeouts","title":"getTimeouts","text":"<p>\u25b8 getTimeouts(): <code>Promise</code>&lt;<code>Record</code>&lt;<code>string</code>, <code>number</code>&gt;&gt;</p> <p>Get the current timeouts</p> <p><code>See</code></p> <p>https://w3c.github.io/webdriver/#get-timeouts</p>"},{"location":"reference/interfaces/appium_types.ITimeoutCommands/#returns","title":"Returns","text":"<p><code>Promise</code>&lt;<code>Record</code>&lt;<code>string</code>, <code>number</code>&gt;&gt;</p> <p>A map of timeout names to ms values</p>"},{"location":"reference/interfaces/appium_types.ITimeoutCommands/#defined-in","title":"Defined in","text":"<p>packages/types/lib/driver.ts:77</p>"},{"location":"reference/interfaces/appium_types.ITimeoutCommands/#implicitwait","title":"implicitWait","text":"<p>\u25b8 implicitWait(<code>ms</code>): <code>Promise</code>&lt;<code>void</code>&gt;</p> <p>Set the implicit wait timeout</p> <p><code>Deprecated</code></p> <p>Use <code>timeouts</code> instead</p>"},{"location":"reference/interfaces/appium_types.ITimeoutCommands/#parameters","title":"Parameters","text":"Name Type Description <code>ms</code> <code>string</code> | <code>number</code> the timeout in ms"},{"location":"reference/interfaces/appium_types.ITimeoutCommands/#returns_1","title":"Returns","text":"<p><code>Promise</code>&lt;<code>void</code>&gt;</p>"},{"location":"reference/interfaces/appium_types.ITimeoutCommands/#defined-in_1","title":"Defined in","text":"<p>packages/types/lib/driver.ts:53</p>"},{"location":"reference/interfaces/appium_types.ITimeoutCommands/#implicitwaitforcondition","title":"implicitWaitForCondition","text":"<p>\u25b8 implicitWaitForCondition(<code>condition</code>): <code>Promise</code>&lt;<code>unknown</code>&gt;</p> <p>Periodically retry an async function up until the currently set implicit wait timeout</p>"},{"location":"reference/interfaces/appium_types.ITimeoutCommands/#parameters_1","title":"Parameters","text":"Name Type Description <code>condition</code> () =&gt; <code>Promise</code>&lt;<code>any</code>&gt; the behaviour to retry until it returns truthy"},{"location":"reference/interfaces/appium_types.ITimeoutCommands/#returns_2","title":"Returns","text":"<p><code>Promise</code>&lt;<code>unknown</code>&gt;</p> <p>The return value of the condition</p>"},{"location":"reference/interfaces/appium_types.ITimeoutCommands/#defined-in_2","title":"Defined in","text":"<p>packages/types/lib/driver.ts:69</p>"},{"location":"reference/interfaces/appium_types.ITimeoutCommands/#implicitwaitmjsonwp","title":"implicitWaitMJSONWP","text":"<p>\u25b8 implicitWaitMJSONWP(<code>ms</code>): <code>Promise</code>&lt;<code>void</code>&gt;</p> <p>Set the implicit wait value that was sent in via the JSONWP</p> <p><code>Deprecated</code></p>"},{"location":"reference/interfaces/appium_types.ITimeoutCommands/#parameters_2","title":"Parameters","text":"Name Type Description <code>ms</code> <code>number</code> the timeout in ms"},{"location":"reference/interfaces/appium_types.ITimeoutCommands/#returns_3","title":"Returns","text":"<p><code>Promise</code>&lt;<code>void</code>&gt;</p>"},{"location":"reference/interfaces/appium_types.ITimeoutCommands/#defined-in_3","title":"Defined in","text":"<p>packages/types/lib/driver.ts:92</p>"},{"location":"reference/interfaces/appium_types.ITimeoutCommands/#implicitwaitw3c","title":"implicitWaitW3C","text":"<p>\u25b8 implicitWaitW3C(<code>ms</code>): <code>Promise</code>&lt;<code>void</code>&gt;</p> <p>Set the implicit wait value that was sent in via the W3C protocol</p>"},{"location":"reference/interfaces/appium_types.ITimeoutCommands/#parameters_3","title":"Parameters","text":"Name Type Description <code>ms</code> <code>number</code> the timeout in ms"},{"location":"reference/interfaces/appium_types.ITimeoutCommands/#returns_4","title":"Returns","text":"<p><code>Promise</code>&lt;<code>void</code>&gt;</p>"},{"location":"reference/interfaces/appium_types.ITimeoutCommands/#defined-in_4","title":"Defined in","text":"<p>packages/types/lib/driver.ts:84</p>"},{"location":"reference/interfaces/appium_types.ITimeoutCommands/#newcommandtimeout","title":"newCommandTimeout","text":"<p>\u25b8 newCommandTimeout(<code>ms</code>): <code>Promise</code>&lt;<code>void</code>&gt;</p> <p>Set Appium's new command timeout</p>"},{"location":"reference/interfaces/appium_types.ITimeoutCommands/#parameters_4","title":"Parameters","text":"Name Type Description <code>ms</code> <code>number</code> the timeout in ms"},{"location":"reference/interfaces/appium_types.ITimeoutCommands/#returns_5","title":"Returns","text":"<p><code>Promise</code>&lt;<code>void</code>&gt;</p>"},{"location":"reference/interfaces/appium_types.ITimeoutCommands/#defined-in_5","title":"Defined in","text":"<p>packages/types/lib/driver.ts:129</p>"},{"location":"reference/interfaces/appium_types.ITimeoutCommands/#pageloadtimeoutmjsonwp","title":"pageLoadTimeoutMJSONWP","text":"<p>\u25b8 pageLoadTimeoutMJSONWP(<code>ms</code>): <code>Promise</code>&lt;<code>void</code>&gt;</p> <p>Set the page load timeout value that was sent in via the JSONWP</p> <p><code>Deprecated</code></p>"},{"location":"reference/interfaces/appium_types.ITimeoutCommands/#parameters_5","title":"Parameters","text":"Name Type Description <code>ms</code> <code>number</code> the timeout in ms"},{"location":"reference/interfaces/appium_types.ITimeoutCommands/#returns_6","title":"Returns","text":"<p><code>Promise</code>&lt;<code>void</code>&gt;</p>"},{"location":"reference/interfaces/appium_types.ITimeoutCommands/#defined-in_6","title":"Defined in","text":"<p>packages/types/lib/driver.ts:107</p>"},{"location":"reference/interfaces/appium_types.ITimeoutCommands/#pageloadtimeoutw3c","title":"pageLoadTimeoutW3C","text":"<p>\u25b8 pageLoadTimeoutW3C(<code>ms</code>): <code>Promise</code>&lt;<code>void</code>&gt;</p> <p>Set the page load timeout value that was sent in via the W3C protocol</p>"},{"location":"reference/interfaces/appium_types.ITimeoutCommands/#parameters_6","title":"Parameters","text":"Name Type Description <code>ms</code> <code>number</code> the timeout in ms"},{"location":"reference/interfaces/appium_types.ITimeoutCommands/#returns_7","title":"Returns","text":"<p><code>Promise</code>&lt;<code>void</code>&gt;</p>"},{"location":"reference/interfaces/appium_types.ITimeoutCommands/#defined-in_7","title":"Defined in","text":"<p>packages/types/lib/driver.ts:99</p>"},{"location":"reference/interfaces/appium_types.ITimeoutCommands/#parsetimeoutargument","title":"parseTimeoutArgument","text":"<p>\u25b8 parseTimeoutArgument(<code>ms</code>): <code>number</code></p> <p>Get a timeout value from a number or a string</p>"},{"location":"reference/interfaces/appium_types.ITimeoutCommands/#parameters_7","title":"Parameters","text":"Name Type Description <code>ms</code> <code>string</code> | <code>number</code> the timeout value as a number or a string"},{"location":"reference/interfaces/appium_types.ITimeoutCommands/#returns_8","title":"Returns","text":"<p><code>number</code></p> <p>The timeout as a number in ms</p>"},{"location":"reference/interfaces/appium_types.ITimeoutCommands/#defined-in_8","title":"Defined in","text":"<p>packages/types/lib/driver.ts:138</p>"},{"location":"reference/interfaces/appium_types.ITimeoutCommands/#scripttimeoutmjsonwp","title":"scriptTimeoutMJSONWP","text":"<p>\u25b8 scriptTimeoutMJSONWP(<code>ms</code>): <code>Promise</code>&lt;<code>void</code>&gt;</p> <p>Set the script timeout value that was sent in via the JSONWP</p> <p><code>Deprecated</code></p>"},{"location":"reference/interfaces/appium_types.ITimeoutCommands/#parameters_8","title":"Parameters","text":"Name Type Description <code>ms</code> <code>number</code> the timeout in ms"},{"location":"reference/interfaces/appium_types.ITimeoutCommands/#returns_9","title":"Returns","text":"<p><code>Promise</code>&lt;<code>void</code>&gt;</p>"},{"location":"reference/interfaces/appium_types.ITimeoutCommands/#defined-in_9","title":"Defined in","text":"<p>packages/types/lib/driver.ts:122</p>"},{"location":"reference/interfaces/appium_types.ITimeoutCommands/#scripttimeoutw3c","title":"scriptTimeoutW3C","text":"<p>\u25b8 scriptTimeoutW3C(<code>ms</code>): <code>Promise</code>&lt;<code>void</code>&gt;</p> <p>Set the script timeout value that was sent in via the W3C protocol</p>"},{"location":"reference/interfaces/appium_types.ITimeoutCommands/#parameters_9","title":"Parameters","text":"Name Type Description <code>ms</code> <code>number</code> the timeout in ms"},{"location":"reference/interfaces/appium_types.ITimeoutCommands/#returns_10","title":"Returns","text":"<p><code>Promise</code>&lt;<code>void</code>&gt;</p>"},{"location":"reference/interfaces/appium_types.ITimeoutCommands/#defined-in_10","title":"Defined in","text":"<p>packages/types/lib/driver.ts:114</p>"},{"location":"reference/interfaces/appium_types.ITimeoutCommands/#setimplicitwait","title":"setImplicitWait","text":"<p>\u25b8 setImplicitWait(<code>ms</code>): <code>void</code></p> <p>A helper method (not a command) used to set the implicit wait value</p>"},{"location":"reference/interfaces/appium_types.ITimeoutCommands/#parameters_10","title":"Parameters","text":"Name Type Description <code>ms</code> <code>number</code> the implicit wait in ms"},{"location":"reference/interfaces/appium_types.ITimeoutCommands/#returns_11","title":"Returns","text":"<p><code>void</code></p>"},{"location":"reference/interfaces/appium_types.ITimeoutCommands/#defined-in_11","title":"Defined in","text":"<p>packages/types/lib/driver.ts:60</p>"},{"location":"reference/interfaces/appium_types.ITimeoutCommands/#setnewcommandtimeout","title":"setNewCommandTimeout","text":"<p>\u25b8 setNewCommandTimeout(<code>ms</code>): <code>void</code></p> <p>Set the new command timeout</p>"},{"location":"reference/interfaces/appium_types.ITimeoutCommands/#parameters_11","title":"Parameters","text":"Name Type Description <code>ms</code> <code>number</code> the timeout in ms"},{"location":"reference/interfaces/appium_types.ITimeoutCommands/#returns_12","title":"Returns","text":"<p><code>void</code></p>"},{"location":"reference/interfaces/appium_types.ITimeoutCommands/#defined-in_12","title":"Defined in","text":"<p>packages/types/lib/driver.ts:44</p>"},{"location":"reference/interfaces/appium_types.ITimeoutCommands/#timeouts","title":"timeouts","text":"<p>\u25b8 timeouts(<code>type</code>, <code>ms</code>, <code>script?</code>, <code>pageLoad?</code>, <code>implicit?</code>): <code>Promise</code>&lt;<code>void</code>&gt;</p> <p>Set the various timeouts associated with a session</p> <p><code>See</code></p> <p>https://w3c.github.io/webdriver/#set-timeouts</p>"},{"location":"reference/interfaces/appium_types.ITimeoutCommands/#parameters_12","title":"Parameters","text":"Name Type Description <code>type</code> <code>string</code> used only for the old (JSONWP) command, the type of the timeout <code>ms</code> <code>string</code> | <code>number</code> used only for the old (JSONWP) command, the ms for the timeout <code>script?</code> <code>number</code> the number in ms for the script timeout, used for the W3C command <code>pageLoad?</code> <code>number</code> the number in ms for the pageLoad timeout, used for the W3C command <code>implicit?</code> <code>string</code> | <code>number</code> the number in ms for the implicit wait timeout, used for the W3C command"},{"location":"reference/interfaces/appium_types.ITimeoutCommands/#returns_13","title":"Returns","text":"<p><code>Promise</code>&lt;<code>void</code>&gt;</p>"},{"location":"reference/interfaces/appium_types.ITimeoutCommands/#defined-in_13","title":"Defined in","text":"<p>packages/types/lib/driver.ts:31</p>"},{"location":"reference/interfaces/appium_types.Location/","title":"Interface: Location","text":"<p>@appium/types.Location</p>"},{"location":"reference/interfaces/appium_types.Location/#table-of-contents","title":"Table of contents","text":""},{"location":"reference/interfaces/appium_types.Location/#properties","title":"Properties","text":"<ul> <li>altitude</li> <li>latitude</li> <li>longitude</li> </ul>"},{"location":"reference/interfaces/appium_types.Location/#properties_1","title":"Properties","text":""},{"location":"reference/interfaces/appium_types.Location/#altitude","title":"altitude","text":"<p>\u2022 <code>Optional</code> altitude: <code>number</code></p>"},{"location":"reference/interfaces/appium_types.Location/#defined-in","title":"Defined in","text":"<p>packages/types/lib/driver.ts:552</p>"},{"location":"reference/interfaces/appium_types.Location/#latitude","title":"latitude","text":"<p>\u2022 latitude: <code>number</code></p>"},{"location":"reference/interfaces/appium_types.Location/#defined-in_1","title":"Defined in","text":"<p>packages/types/lib/driver.ts:550</p>"},{"location":"reference/interfaces/appium_types.Location/#longitude","title":"longitude","text":"<p>\u2022 longitude: <code>number</code></p>"},{"location":"reference/interfaces/appium_types.Location/#defined-in_2","title":"Defined in","text":"<p>packages/types/lib/driver.ts:551</p>"},{"location":"reference/interfaces/appium_types.LogDef/","title":"Interface: LogDef&lt;C, T&gt;","text":"<p>@appium/types.LogDef</p> <p>A definition of a log type</p>"},{"location":"reference/interfaces/appium_types.LogDef/#type-parameters","title":"Type parameters","text":"Name Type <code>C</code> extends <code>Constraints</code> <code>T</code> <code>unknown</code>"},{"location":"reference/interfaces/appium_types.LogDef/#table-of-contents","title":"Table of contents","text":""},{"location":"reference/interfaces/appium_types.LogDef/#properties","title":"Properties","text":"<ul> <li>description</li> <li>getter</li> </ul>"},{"location":"reference/interfaces/appium_types.LogDef/#properties_1","title":"Properties","text":""},{"location":"reference/interfaces/appium_types.LogDef/#description","title":"description","text":"<p>\u2022 description: <code>string</code></p> <p>Description of the log type.</p> <p>The only place this is used is in error messages if the client provides an invalid log type via <code>getLog</code>.</p>"},{"location":"reference/interfaces/appium_types.LogDef/#defined-in","title":"Defined in","text":"<p>packages/types/lib/driver.ts:372</p>"},{"location":"reference/interfaces/appium_types.LogDef/#getter","title":"getter","text":"<p>\u2022 getter: (<code>driver</code>: <code>Driver</code>&lt;<code>C</code>, <code>StringRecord</code>, <code>any</code>&gt;) =&gt; <code>Promise</code>&lt;<code>T</code>[]&gt;</p>"},{"location":"reference/interfaces/appium_types.LogDef/#type-declaration","title":"Type declaration","text":"<p>\u25b8 (<code>driver</code>): <code>Promise</code>&lt;<code>T</code>[]&gt;</p> <p>Returns all the log data for the given type</p> <p>This implementation should drain, truncate or otherwise reset the log buffer.</p>"},{"location":"reference/interfaces/appium_types.LogDef/#parameters","title":"Parameters","text":"Name Type <code>driver</code> <code>Driver</code>&lt;<code>C</code>, <code>StringRecord</code>, <code>any</code>&gt;"},{"location":"reference/interfaces/appium_types.LogDef/#returns","title":"Returns","text":"<p><code>Promise</code>&lt;<code>T</code>[]&gt;</p>"},{"location":"reference/interfaces/appium_types.LogDef/#defined-in_1","title":"Defined in","text":"<p>packages/types/lib/driver.ts:378</p>"},{"location":"reference/interfaces/appium_types.LogFilterRegex/","title":"Interface: LogFilterRegex","text":"<p>@appium/types.LogFilterRegex</p> <p>Log filter with regular expression</p>"},{"location":"reference/interfaces/appium_types.LogFilterRegex/#indexable","title":"Indexable","text":"<p>\u25aa [k: <code>string</code>]: <code>unknown</code></p>"},{"location":"reference/interfaces/appium_types.LogFilterRegex/#table-of-contents","title":"Table of contents","text":""},{"location":"reference/interfaces/appium_types.LogFilterRegex/#properties","title":"Properties","text":"<ul> <li>pattern</li> </ul>"},{"location":"reference/interfaces/appium_types.LogFilterRegex/#properties_1","title":"Properties","text":""},{"location":"reference/interfaces/appium_types.LogFilterRegex/#pattern","title":"pattern","text":"<p>\u2022 pattern: <code>string</code></p> <p>Regex pattern to match</p>"},{"location":"reference/interfaces/appium_types.LogFilterRegex/#defined-in","title":"Defined in","text":"<p>packages/types/lib/appium-config.ts:221</p>"},{"location":"reference/interfaces/appium_types.LogFilterText/","title":"Interface: LogFilterText","text":"<p>@appium/types.LogFilterText</p> <p>Log filter with plain text</p>"},{"location":"reference/interfaces/appium_types.LogFilterText/#indexable","title":"Indexable","text":"<p>\u25aa [k: <code>string</code>]: <code>unknown</code></p>"},{"location":"reference/interfaces/appium_types.LogFilterText/#table-of-contents","title":"Table of contents","text":""},{"location":"reference/interfaces/appium_types.LogFilterText/#properties","title":"Properties","text":"<ul> <li>text</li> </ul>"},{"location":"reference/interfaces/appium_types.LogFilterText/#properties_1","title":"Properties","text":""},{"location":"reference/interfaces/appium_types.LogFilterText/#text","title":"text","text":"<p>\u2022 text: <code>string</code></p> <p>Text to match</p>"},{"location":"reference/interfaces/appium_types.LogFilterText/#defined-in","title":"Defined in","text":"<p>packages/types/lib/appium-config.ts:211</p>"},{"location":"reference/interfaces/appium_types.MethodDef/","title":"Interface: MethodDef&lt;Ext&gt;","text":"<p>@appium/types.MethodDef</p> <p>The definition of an extension method, which will be provided via Appium's API.</p>"},{"location":"reference/interfaces/appium_types.MethodDef/#type-parameters","title":"Type parameters","text":"Name Type <code>Ext</code> extends <code>Plugin</code> | <code>Driver</code>"},{"location":"reference/interfaces/appium_types.MethodDef/#table-of-contents","title":"Table of contents","text":""},{"location":"reference/interfaces/appium_types.MethodDef/#properties","title":"Properties","text":"<ul> <li>command</li> <li>neverProxy</li> <li>payloadParams</li> </ul>"},{"location":"reference/interfaces/appium_types.MethodDef/#properties_1","title":"Properties","text":""},{"location":"reference/interfaces/appium_types.MethodDef/#command","title":"command","text":"<p>\u2022 <code>Optional</code> <code>Readonly</code> command: <code>NonNullable</code>&lt;{ [Key in string | number | symbol]: Required&lt;Ext&gt;[Key] extends (Ext extends Plugin ? PluginCommand&lt;ExternalDriver&lt;Object&gt;, any[], any&gt; : Ext extends Driver&lt;Object, StringRecord, any&gt; ? DriverCommand&lt;any, unknown&gt; : never) ? Key : never }[keyof <code>Ext</code>]&gt;</p> <p>Name of the command.</p>"},{"location":"reference/interfaces/appium_types.MethodDef/#defined-in","title":"Defined in","text":"<p>packages/types/lib/index.ts:91</p>"},{"location":"reference/interfaces/appium_types.MethodDef/#neverproxy","title":"neverProxy","text":"<p>\u2022 <code>Optional</code> <code>Readonly</code> neverProxy: <code>boolean</code></p> <p>If true, this <code>Method</code> will never proxy.</p>"},{"location":"reference/interfaces/appium_types.MethodDef/#defined-in_1","title":"Defined in","text":"<p>packages/types/lib/index.ts:98</p>"},{"location":"reference/interfaces/appium_types.MethodDef/#payloadparams","title":"payloadParams","text":"<p>\u2022 <code>Optional</code> <code>Readonly</code> payloadParams: <code>PayloadParams</code></p> <p>Specifies shape of payload</p>"},{"location":"reference/interfaces/appium_types.MethodDef/#defined-in_2","title":"Defined in","text":"<p>packages/types/lib/index.ts:102</p>"},{"location":"reference/interfaces/appium_types.MultiSessionData/","title":"Interface: MultiSessionData&lt;C, Extra&gt;","text":"<p>@appium/types.MultiSessionData</p>"},{"location":"reference/interfaces/appium_types.MultiSessionData/#type-parameters","title":"Type parameters","text":"Name Type <code>C</code> extends <code>Constraints</code> = <code>BaseDriverCapConstraints</code> <code>Extra</code> extends <code>StringRecord</code> | <code>void</code> = <code>void</code>"},{"location":"reference/interfaces/appium_types.MultiSessionData/#table-of-contents","title":"Table of contents","text":""},{"location":"reference/interfaces/appium_types.MultiSessionData/#properties","title":"Properties","text":"<ul> <li>capabilities</li> <li>id</li> </ul>"},{"location":"reference/interfaces/appium_types.MultiSessionData/#properties_1","title":"Properties","text":""},{"location":"reference/interfaces/appium_types.MultiSessionData/#capabilities","title":"capabilities","text":"<p>\u2022 capabilities: <code>Partial</code>&lt;<code>ConstraintsToCaps</code>&lt;<code>C</code>&gt; &amp; <code>Extra</code>&gt;</p>"},{"location":"reference/interfaces/appium_types.MultiSessionData/#defined-in","title":"Defined in","text":"<p>packages/types/lib/driver.ts:194</p>"},{"location":"reference/interfaces/appium_types.MultiSessionData/#id","title":"id","text":"<p>\u2022 id: <code>string</code></p>"},{"location":"reference/interfaces/appium_types.MultiSessionData/#defined-in_1","title":"Defined in","text":"<p>packages/types/lib/driver.ts:193</p>"},{"location":"reference/interfaces/appium_types.NewWindow/","title":"Interface: NewWindow","text":"<p>@appium/types.NewWindow</p>"},{"location":"reference/interfaces/appium_types.NewWindow/#table-of-contents","title":"Table of contents","text":""},{"location":"reference/interfaces/appium_types.NewWindow/#properties","title":"Properties","text":"<ul> <li>handle</li> <li>type</li> </ul>"},{"location":"reference/interfaces/appium_types.NewWindow/#properties_1","title":"Properties","text":""},{"location":"reference/interfaces/appium_types.NewWindow/#handle","title":"handle","text":"<p>\u2022 handle: <code>string</code></p>"},{"location":"reference/interfaces/appium_types.NewWindow/#defined-in","title":"Defined in","text":"<p>packages/types/lib/driver.ts:500</p>"},{"location":"reference/interfaces/appium_types.NewWindow/#type","title":"type","text":"<p>\u2022 type: <code>NewWindowType</code></p>"},{"location":"reference/interfaces/appium_types.NewWindow/#defined-in_1","title":"Defined in","text":"<p>packages/types/lib/driver.ts:501</p>"},{"location":"reference/interfaces/appium_types.NodeconfigConfig/","title":"Interface: NodeconfigConfig","text":"<p>@appium/types.NodeconfigConfig</p> <p>Path to configuration JSON file to register Appium as a node with Selenium Grid 3; otherwise the configuration itself</p>"},{"location":"reference/interfaces/appium_types.NodeconfigConfig/#indexable","title":"Indexable","text":"<p>\u25aa [k: <code>string</code>]: <code>unknown</code></p>"},{"location":"reference/interfaces/appium_types.PayloadParams/","title":"Interface: PayloadParams","text":"<p>@appium/types.PayloadParams</p> <p>Defines the shape of a payload for a <code>MethodDef</code>.</p>"},{"location":"reference/interfaces/appium_types.PayloadParams/#table-of-contents","title":"Table of contents","text":""},{"location":"reference/interfaces/appium_types.PayloadParams/#properties","title":"Properties","text":"<ul> <li>makeArgs</li> <li>optional</li> <li>required</li> <li>unwrap</li> <li>validate</li> <li>wrap</li> </ul>"},{"location":"reference/interfaces/appium_types.PayloadParams/#properties_1","title":"Properties","text":""},{"location":"reference/interfaces/appium_types.PayloadParams/#makeargs","title":"makeArgs","text":"<p>\u2022 <code>Optional</code> makeArgs: (<code>obj</code>: <code>any</code>) =&gt; <code>any</code></p>"},{"location":"reference/interfaces/appium_types.PayloadParams/#type-declaration","title":"Type declaration","text":"<p>\u25b8 (<code>obj</code>): <code>any</code></p>"},{"location":"reference/interfaces/appium_types.PayloadParams/#parameters","title":"Parameters","text":"Name Type <code>obj</code> <code>any</code>"},{"location":"reference/interfaces/appium_types.PayloadParams/#returns","title":"Returns","text":"<p><code>any</code></p>"},{"location":"reference/interfaces/appium_types.PayloadParams/#defined-in","title":"Defined in","text":"<p>packages/types/lib/index.ts:135</p>"},{"location":"reference/interfaces/appium_types.PayloadParams/#optional","title":"optional","text":"<p>\u2022 <code>Optional</code> optional: readonly <code>string</code>[] | readonly readonly string[][]</p>"},{"location":"reference/interfaces/appium_types.PayloadParams/#defined-in_1","title":"Defined in","text":"<p>packages/types/lib/index.ts:133</p>"},{"location":"reference/interfaces/appium_types.PayloadParams/#required","title":"required","text":"<p>\u2022 <code>Optional</code> required: readonly <code>string</code>[] | readonly readonly string[][]</p>"},{"location":"reference/interfaces/appium_types.PayloadParams/#defined-in_2","title":"Defined in","text":"<p>packages/types/lib/index.ts:132</p>"},{"location":"reference/interfaces/appium_types.PayloadParams/#unwrap","title":"unwrap","text":"<p>\u2022 <code>Optional</code> unwrap: <code>string</code></p>"},{"location":"reference/interfaces/appium_types.PayloadParams/#defined-in_3","title":"Defined in","text":"<p>packages/types/lib/index.ts:131</p>"},{"location":"reference/interfaces/appium_types.PayloadParams/#validate","title":"validate","text":"<p>\u2022 <code>Optional</code> validate: (<code>obj</code>: <code>any</code>, <code>protocol</code>: <code>string</code>) =&gt; <code>undefined</code> | <code>string</code> | <code>boolean</code></p>"},{"location":"reference/interfaces/appium_types.PayloadParams/#type-declaration_1","title":"Type declaration","text":"<p>\u25b8 (<code>obj</code>, <code>protocol</code>): <code>undefined</code> | <code>string</code> | <code>boolean</code></p>"},{"location":"reference/interfaces/appium_types.PayloadParams/#parameters_1","title":"Parameters","text":"Name Type <code>obj</code> <code>any</code> <code>protocol</code> <code>string</code>"},{"location":"reference/interfaces/appium_types.PayloadParams/#returns_1","title":"Returns","text":"<p><code>undefined</code> | <code>string</code> | <code>boolean</code></p>"},{"location":"reference/interfaces/appium_types.PayloadParams/#defined-in_4","title":"Defined in","text":"<p>packages/types/lib/index.ts:134</p>"},{"location":"reference/interfaces/appium_types.PayloadParams/#wrap","title":"wrap","text":"<p>\u2022 <code>Optional</code> wrap: <code>string</code></p>"},{"location":"reference/interfaces/appium_types.PayloadParams/#defined-in_5","title":"Defined in","text":"<p>packages/types/lib/index.ts:130</p>"},{"location":"reference/interfaces/appium_types.Plugin/","title":"Interface: Plugin","text":"<p>@appium/types.Plugin</p> <p>An instance of a \"plugin\" extension.</p> <p>Likewise, the <code>prototype</code> of a <code>Plugin</code> class.</p>"},{"location":"reference/interfaces/appium_types.Plugin/#table-of-contents","title":"Table of contents","text":""},{"location":"reference/interfaces/appium_types.Plugin/#properties","title":"Properties","text":"<ul> <li>cliArgs</li> <li>handle</li> <li>logger</li> <li>name</li> <li>onUnexpectedShutdown</li> </ul>"},{"location":"reference/interfaces/appium_types.Plugin/#properties_1","title":"Properties","text":""},{"location":"reference/interfaces/appium_types.Plugin/#cliargs","title":"cliArgs","text":"<p>\u2022 cliArgs: <code>Record</code>&lt;<code>string</code>, <code>any</code>&gt;</p> <p>CLI args for this plugin (if any are accepted and provided).</p>"},{"location":"reference/interfaces/appium_types.Plugin/#defined-in","title":"Defined in","text":"<p>packages/types/lib/plugin.ts:44</p>"},{"location":"reference/interfaces/appium_types.Plugin/#handle","title":"handle","text":"<p>\u2022 <code>Optional</code> handle: <code>PluginCommand</code>&lt;<code>ExternalDriver</code>&lt;{ <code>app</code>: { <code>isString</code>: <code>true</code> = true } ; <code>autoLaunch</code>: { <code>isBoolean</code>: <code>true</code> = true } ; <code>autoWebview</code>: { <code>isBoolean</code>: <code>true</code> = true } ; <code>automationName</code>: { <code>isString</code>: <code>true</code> = true } ; <code>deviceName</code>: { <code>isString</code>: <code>true</code> = true } ; <code>eventTimings</code>: { <code>isBoolean</code>: <code>true</code> = true } ; <code>fullReset</code>: { <code>isBoolean</code>: <code>true</code> = true } ; <code>language</code>: { <code>isString</code>: <code>true</code> = true } ; <code>locale</code>: { <code>isString</code>: <code>true</code> = true } ; <code>newCommandTimeout</code>: { <code>isNumber</code>: <code>true</code> = true } ; <code>noReset</code>: { <code>isBoolean</code>: <code>true</code> = true } ; <code>orientation</code>: { <code>inclusion</code>: readonly [<code>\"LANDSCAPE\"</code>, <code>\"PORTRAIT\"</code>]  } ; <code>platformName</code>: { <code>isString</code>: <code>true</code> = true; <code>presence</code>: <code>true</code> = true } ; <code>platformVersion</code>: { <code>isString</code>: <code>true</code> = true } ; <code>printPageSourceOnFindFailure</code>: { <code>isBoolean</code>: <code>true</code> = true } ; <code>udid</code>: { <code>isString</code>: <code>true</code> = true } ; <code>webSocketUrl</code>: { <code>isString</code>: <code>true</code> = true }  }&gt;, [cmdName: string, ...args: any[]], <code>void</code>&gt;</p> <p>Handle an Appium command, optionally running and using or throwing away the value of the original Appium behavior (or the behavior of the next plugin in a plugin chain).</p>"},{"location":"reference/interfaces/appium_types.Plugin/#defined-in_1","title":"Defined in","text":"<p>packages/types/lib/plugin.ts:53</p>"},{"location":"reference/interfaces/appium_types.Plugin/#logger","title":"logger","text":"<p>\u2022 logger: <code>AppiumLogger</code></p> <p>A logger with prefix identifying the plugin</p>"},{"location":"reference/interfaces/appium_types.Plugin/#defined-in_2","title":"Defined in","text":"<p>packages/types/lib/plugin.ts:40</p>"},{"location":"reference/interfaces/appium_types.Plugin/#name","title":"name","text":"<p>\u2022 name: <code>string</code></p> <p>Name of the plugin.  Derived from the metadata.</p>"},{"location":"reference/interfaces/appium_types.Plugin/#defined-in_3","title":"Defined in","text":"<p>packages/types/lib/plugin.ts:36</p>"},{"location":"reference/interfaces/appium_types.Plugin/#onunexpectedshutdown","title":"onUnexpectedShutdown","text":"<p>\u2022 <code>Optional</code> onUnexpectedShutdown: (<code>driver</code>: <code>ExternalDriver</code>&lt;{ <code>app</code>: { <code>isString</code>: <code>true</code> = true } ; <code>autoLaunch</code>: { <code>isBoolean</code>: <code>true</code> = true } ; <code>autoWebview</code>: { <code>isBoolean</code>: <code>true</code> = true } ; <code>automationName</code>: { <code>isString</code>: <code>true</code> = true } ; <code>deviceName</code>: { <code>isString</code>: <code>true</code> = true } ; <code>eventTimings</code>: { <code>isBoolean</code>: <code>true</code> = true } ; <code>fullReset</code>: { <code>isBoolean</code>: <code>true</code> = true } ; <code>language</code>: { <code>isString</code>: <code>true</code> = true } ; <code>locale</code>: { <code>isString</code>: <code>true</code> = true } ; <code>newCommandTimeout</code>: { <code>isNumber</code>: <code>true</code> = true } ; <code>noReset</code>: { <code>isBoolean</code>: <code>true</code> = true } ; <code>orientation</code>: { <code>inclusion</code>: readonly [<code>\"LANDSCAPE\"</code>, <code>\"PORTRAIT\"</code>]  } ; <code>platformName</code>: { <code>isString</code>: <code>true</code> = true; <code>presence</code>: <code>true</code> = true } ; <code>platformVersion</code>: { <code>isString</code>: <code>true</code> = true } ; <code>printPageSourceOnFindFailure</code>: { <code>isBoolean</code>: <code>true</code> = true } ; <code>udid</code>: { <code>isString</code>: <code>true</code> = true } ; <code>webSocketUrl</code>: { <code>isString</code>: <code>true</code> = true }  }&gt;, <code>cause</code>: <code>string</code> | <code>Error</code>) =&gt; <code>Promise</code>&lt;<code>void</code>&gt;</p>"},{"location":"reference/interfaces/appium_types.Plugin/#type-declaration","title":"Type declaration","text":"<p>\u25b8 (<code>driver</code>, <code>cause</code>): <code>Promise</code>&lt;<code>void</code>&gt;</p> <p>Listener for unexpected server shutdown, which allows a plugin to do cleanup or take custom actions.</p>"},{"location":"reference/interfaces/appium_types.Plugin/#parameters","title":"Parameters","text":"Name Type <code>driver</code> <code>ExternalDriver</code>&lt;{ <code>app</code>: { <code>isString</code>: <code>true</code> = true } ; <code>autoLaunch</code>: { <code>isBoolean</code>: <code>true</code> = true } ; <code>autoWebview</code>: { <code>isBoolean</code>: <code>true</code> = true } ; <code>automationName</code>: { <code>isString</code>: <code>true</code> = true } ; <code>deviceName</code>: { <code>isString</code>: <code>true</code> = true } ; <code>eventTimings</code>: { <code>isBoolean</code>: <code>true</code> = true } ; <code>fullReset</code>: { <code>isBoolean</code>: <code>true</code> = true } ; <code>language</code>: { <code>isString</code>: <code>true</code> = true } ; <code>locale</code>: { <code>isString</code>: <code>true</code> = true } ; <code>newCommandTimeout</code>: { <code>isNumber</code>: <code>true</code> = true } ; <code>noReset</code>: { <code>isBoolean</code>: <code>true</code> = true } ; <code>orientation</code>: { <code>inclusion</code>: readonly [<code>\"LANDSCAPE\"</code>, <code>\"PORTRAIT\"</code>]  } ; <code>platformName</code>: { <code>isString</code>: <code>true</code> = true; <code>presence</code>: <code>true</code> = true } ; <code>platformVersion</code>: { <code>isString</code>: <code>true</code> = true } ; <code>printPageSourceOnFindFailure</code>: { <code>isBoolean</code>: <code>true</code> = true } ; <code>udid</code>: { <code>isString</code>: <code>true</code> = true } ; <code>webSocketUrl</code>: { <code>isString</code>: <code>true</code> = true }  }&gt; <code>cause</code> <code>string</code> | <code>Error</code>"},{"location":"reference/interfaces/appium_types.Plugin/#returns","title":"Returns","text":"<p><code>Promise</code>&lt;<code>void</code>&gt;</p>"},{"location":"reference/interfaces/appium_types.Plugin/#defined-in_4","title":"Defined in","text":"<p>packages/types/lib/plugin.ts:48</p>"},{"location":"reference/interfaces/appium_types.PluginConfig/","title":"Interface: PluginConfig","text":"<p>@appium/types.PluginConfig</p> <p>Plugin-specific configuration. Keys should correspond to plugin package names</p>"},{"location":"reference/interfaces/appium_types.PluginConfig/#indexable","title":"Indexable","text":"<p>\u25aa [k: <code>string</code>]: <code>unknown</code></p>"},{"location":"reference/interfaces/appium_types.PluginStatic/","title":"Interface: PluginStatic&lt;P&gt;","text":"<p>@appium/types.PluginStatic</p> <p>The interface describing the constructor and static properties of a Plugin.</p>"},{"location":"reference/interfaces/appium_types.PluginStatic/#type-parameters","title":"Type parameters","text":"Name Type <code>P</code> extends <code>Plugin</code>"},{"location":"reference/interfaces/appium_types.PluginStatic/#table-of-contents","title":"Table of contents","text":""},{"location":"reference/interfaces/appium_types.PluginStatic/#properties","title":"Properties","text":"<ul> <li>executeMethodMap</li> <li>newMethodMap</li> <li>updateServer</li> </ul>"},{"location":"reference/interfaces/appium_types.PluginStatic/#properties_1","title":"Properties","text":""},{"location":"reference/interfaces/appium_types.PluginStatic/#executemethodmap","title":"executeMethodMap","text":"<p>\u2022 <code>Optional</code> executeMethodMap: <code>Readonly</code>&lt;<code>Record</code>&lt;<code>string</code>, <code>Readonly</code>&lt;<code>ExecuteMethodDef</code>&lt;<code>P</code>&gt;&gt;&gt;&gt;</p>"},{"location":"reference/interfaces/appium_types.PluginStatic/#defined-in","title":"Defined in","text":"<p>packages/types/lib/plugin.ts:24</p>"},{"location":"reference/interfaces/appium_types.PluginStatic/#newmethodmap","title":"newMethodMap","text":"<p>\u2022 <code>Optional</code> newMethodMap: <code>Readonly</code>&lt;<code>Record</code>&lt;<code>string</code>, { <code>DELETE?</code>: <code>MethodDef</code>&lt;<code>P</code>&gt; ; <code>GET?</code>: <code>MethodDef</code>&lt;<code>P</code>&gt; ; <code>POST?</code>: <code>MethodDef</code>&lt;<code>P</code>&gt;  }&gt;&gt;</p> <p>Plugins can define new methods for the Appium server to map to command names, of the same format as used in Appium's <code>routes.js</code>, for example, this would be a valid <code>newMethodMap</code>:</p> <p><code>Example</code></p> <pre><code>{\n*   '/session/:sessionId/new_method': {\n*     GET: {command: 'getNewThing'},\n*     POST: {command: 'setNewThing', payloadParams: {required: ['someParam']}}\n*   }\n* }\n</code></pre>"},{"location":"reference/interfaces/appium_types.PluginStatic/#defined-in_1","title":"Defined in","text":"<p>packages/types/lib/plugin.ts:23</p>"},{"location":"reference/interfaces/appium_types.PluginStatic/#updateserver","title":"updateServer","text":"<p>\u2022 <code>Optional</code> updateServer: <code>UpdateServerCallback</code></p> <p>Allows a plugin to modify the Appium server instance.</p>"},{"location":"reference/interfaces/appium_types.PluginStatic/#defined-in_2","title":"Defined in","text":"<p>packages/types/lib/plugin.ts:11</p>"},{"location":"reference/interfaces/appium_types.Rect/","title":"Interface: Rect","text":"<p>@appium/types.Rect</p>"},{"location":"reference/interfaces/appium_types.Rect/#table-of-contents","title":"Table of contents","text":""},{"location":"reference/interfaces/appium_types.Rect/#properties","title":"Properties","text":"<ul> <li>height</li> <li>width</li> <li>x</li> <li>y</li> </ul>"},{"location":"reference/interfaces/appium_types.Rect/#properties_1","title":"Properties","text":""},{"location":"reference/interfaces/appium_types.Rect/#height","title":"height","text":"<p>\u2022 height: <code>number</code></p>"},{"location":"reference/interfaces/appium_types.Rect/#defined-in","title":"Defined in","text":"<p>packages/types/lib/driver.ts:494</p>"},{"location":"reference/interfaces/appium_types.Rect/#width","title":"width","text":"<p>\u2022 width: <code>number</code></p>"},{"location":"reference/interfaces/appium_types.Rect/#defined-in_1","title":"Defined in","text":"<p>packages/types/lib/driver.ts:493</p>"},{"location":"reference/interfaces/appium_types.Rect/#x","title":"x","text":"<p>\u2022 x: <code>number</code></p>"},{"location":"reference/interfaces/appium_types.Rect/#defined-in_2","title":"Defined in","text":"<p>packages/types/lib/driver.ts:491</p>"},{"location":"reference/interfaces/appium_types.Rect/#y","title":"y","text":"<p>\u2022 y: <code>number</code></p>"},{"location":"reference/interfaces/appium_types.Rect/#defined-in_3","title":"Defined in","text":"<p>packages/types/lib/driver.ts:492</p>"},{"location":"reference/interfaces/appium_types.Rotation/","title":"Interface: Rotation","text":"<p>@appium/types.Rotation</p>"},{"location":"reference/interfaces/appium_types.Rotation/#table-of-contents","title":"Table of contents","text":""},{"location":"reference/interfaces/appium_types.Rotation/#properties","title":"Properties","text":"<ul> <li>x</li> <li>y</li> <li>z</li> </ul>"},{"location":"reference/interfaces/appium_types.Rotation/#properties_1","title":"Properties","text":""},{"location":"reference/interfaces/appium_types.Rotation/#x","title":"x","text":"<p>\u2022 x: <code>number</code></p>"},{"location":"reference/interfaces/appium_types.Rotation/#defined-in","title":"Defined in","text":"<p>packages/types/lib/driver.ts:556</p>"},{"location":"reference/interfaces/appium_types.Rotation/#y","title":"y","text":"<p>\u2022 y: <code>number</code></p>"},{"location":"reference/interfaces/appium_types.Rotation/#defined-in_1","title":"Defined in","text":"<p>packages/types/lib/driver.ts:557</p>"},{"location":"reference/interfaces/appium_types.Rotation/#z","title":"z","text":"<p>\u2022 z: <code>number</code></p>"},{"location":"reference/interfaces/appium_types.Rotation/#defined-in_2","title":"Defined in","text":"<p>packages/types/lib/driver.ts:558</p>"},{"location":"reference/interfaces/appium_types.ServerConfig/","title":"Interface: ServerConfig","text":"<p>@appium/types.ServerConfig</p> <p>Configuration when running Appium as a server</p>"},{"location":"reference/interfaces/appium_types.ServerConfig/#table-of-contents","title":"Table of contents","text":""},{"location":"reference/interfaces/appium_types.ServerConfig/#properties","title":"Properties","text":"<ul> <li>address</li> <li>allow-cors</li> <li>allow-insecure</li> <li>base-path</li> <li>callback-address</li> <li>callback-port</li> <li>debug-log-spacing</li> <li>default-capabilities</li> <li>deny-insecure</li> <li>driver</li> <li>keep-alive-timeout</li> <li>local-timezone</li> <li>log</li> <li>log-filters</li> <li>log-level</li> <li>log-no-colors</li> <li>log-timestamp</li> <li>long-stacktrace</li> <li>no-perms-check</li> <li>nodeconfig</li> <li>plugin</li> <li>port</li> <li>relaxed-security</li> <li>session-override</li> <li>strict-caps</li> <li>tmp</li> <li>trace-dir</li> <li>use-drivers</li> <li>use-plugins</li> <li>webhook</li> </ul>"},{"location":"reference/interfaces/appium_types.ServerConfig/#properties_1","title":"Properties","text":""},{"location":"reference/interfaces/appium_types.ServerConfig/#address","title":"address","text":"<p>\u2022 <code>Optional</code> address: <code>string</code></p>"},{"location":"reference/interfaces/appium_types.ServerConfig/#defined-in","title":"Defined in","text":"<p>packages/types/lib/appium-config.ts:161</p>"},{"location":"reference/interfaces/appium_types.ServerConfig/#allow-cors","title":"allow-cors","text":"<p>\u2022 <code>Optional</code> allow-cors: <code>boolean</code></p>"},{"location":"reference/interfaces/appium_types.ServerConfig/#defined-in_1","title":"Defined in","text":"<p>packages/types/lib/appium-config.ts:162</p>"},{"location":"reference/interfaces/appium_types.ServerConfig/#allow-insecure","title":"allow-insecure","text":"<p>\u2022 <code>Optional</code> allow-insecure: <code>AllowInsecureConfig</code></p>"},{"location":"reference/interfaces/appium_types.ServerConfig/#defined-in_2","title":"Defined in","text":"<p>packages/types/lib/appium-config.ts:163</p>"},{"location":"reference/interfaces/appium_types.ServerConfig/#base-path","title":"base-path","text":"<p>\u2022 <code>Optional</code> base-path: <code>string</code></p>"},{"location":"reference/interfaces/appium_types.ServerConfig/#defined-in_3","title":"Defined in","text":"<p>packages/types/lib/appium-config.ts:164</p>"},{"location":"reference/interfaces/appium_types.ServerConfig/#callback-address","title":"callback-address","text":"<p>\u2022 <code>Optional</code> callback-address: <code>string</code></p>"},{"location":"reference/interfaces/appium_types.ServerConfig/#defined-in_4","title":"Defined in","text":"<p>packages/types/lib/appium-config.ts:165</p>"},{"location":"reference/interfaces/appium_types.ServerConfig/#callback-port","title":"callback-port","text":"<p>\u2022 <code>Optional</code> callback-port: <code>number</code></p>"},{"location":"reference/interfaces/appium_types.ServerConfig/#defined-in_5","title":"Defined in","text":"<p>packages/types/lib/appium-config.ts:166</p>"},{"location":"reference/interfaces/appium_types.ServerConfig/#debug-log-spacing","title":"debug-log-spacing","text":"<p>\u2022 <code>Optional</code> debug-log-spacing: <code>boolean</code></p>"},{"location":"reference/interfaces/appium_types.ServerConfig/#defined-in_6","title":"Defined in","text":"<p>packages/types/lib/appium-config.ts:167</p>"},{"location":"reference/interfaces/appium_types.ServerConfig/#default-capabilities","title":"default-capabilities","text":"<p>\u2022 <code>Optional</code> default-capabilities: <code>DefaultCapabilitiesConfig</code></p>"},{"location":"reference/interfaces/appium_types.ServerConfig/#defined-in_7","title":"Defined in","text":"<p>packages/types/lib/appium-config.ts:168</p>"},{"location":"reference/interfaces/appium_types.ServerConfig/#deny-insecure","title":"deny-insecure","text":"<p>\u2022 <code>Optional</code> deny-insecure: <code>DenyInsecureConfig</code></p>"},{"location":"reference/interfaces/appium_types.ServerConfig/#defined-in_8","title":"Defined in","text":"<p>packages/types/lib/appium-config.ts:169</p>"},{"location":"reference/interfaces/appium_types.ServerConfig/#driver","title":"driver","text":"<p>\u2022 <code>Optional</code> driver: <code>DriverConfig</code></p>"},{"location":"reference/interfaces/appium_types.ServerConfig/#defined-in_9","title":"Defined in","text":"<p>packages/types/lib/appium-config.ts:170</p>"},{"location":"reference/interfaces/appium_types.ServerConfig/#keep-alive-timeout","title":"keep-alive-timeout","text":"<p>\u2022 <code>Optional</code> keep-alive-timeout: <code>number</code></p>"},{"location":"reference/interfaces/appium_types.ServerConfig/#defined-in_10","title":"Defined in","text":"<p>packages/types/lib/appium-config.ts:171</p>"},{"location":"reference/interfaces/appium_types.ServerConfig/#local-timezone","title":"local-timezone","text":"<p>\u2022 <code>Optional</code> local-timezone: <code>boolean</code></p>"},{"location":"reference/interfaces/appium_types.ServerConfig/#defined-in_11","title":"Defined in","text":"<p>packages/types/lib/appium-config.ts:172</p>"},{"location":"reference/interfaces/appium_types.ServerConfig/#log","title":"log","text":"<p>\u2022 <code>Optional</code> log: <code>string</code></p>"},{"location":"reference/interfaces/appium_types.ServerConfig/#defined-in_12","title":"Defined in","text":"<p>packages/types/lib/appium-config.ts:173</p>"},{"location":"reference/interfaces/appium_types.ServerConfig/#log-filters","title":"log-filters","text":"<p>\u2022 <code>Optional</code> log-filters: <code>LogFiltersConfig</code></p>"},{"location":"reference/interfaces/appium_types.ServerConfig/#defined-in_13","title":"Defined in","text":"<p>packages/types/lib/appium-config.ts:174</p>"},{"location":"reference/interfaces/appium_types.ServerConfig/#log-level","title":"log-level","text":"<p>\u2022 <code>Optional</code> log-level: <code>LogLevelConfig</code></p>"},{"location":"reference/interfaces/appium_types.ServerConfig/#defined-in_14","title":"Defined in","text":"<p>packages/types/lib/appium-config.ts:175</p>"},{"location":"reference/interfaces/appium_types.ServerConfig/#log-no-colors","title":"log-no-colors","text":"<p>\u2022 <code>Optional</code> log-no-colors: <code>boolean</code></p>"},{"location":"reference/interfaces/appium_types.ServerConfig/#defined-in_15","title":"Defined in","text":"<p>packages/types/lib/appium-config.ts:176</p>"},{"location":"reference/interfaces/appium_types.ServerConfig/#log-timestamp","title":"log-timestamp","text":"<p>\u2022 <code>Optional</code> log-timestamp: <code>boolean</code></p>"},{"location":"reference/interfaces/appium_types.ServerConfig/#defined-in_16","title":"Defined in","text":"<p>packages/types/lib/appium-config.ts:177</p>"},{"location":"reference/interfaces/appium_types.ServerConfig/#long-stacktrace","title":"long-stacktrace","text":"<p>\u2022 <code>Optional</code> long-stacktrace: <code>boolean</code></p>"},{"location":"reference/interfaces/appium_types.ServerConfig/#defined-in_17","title":"Defined in","text":"<p>packages/types/lib/appium-config.ts:178</p>"},{"location":"reference/interfaces/appium_types.ServerConfig/#no-perms-check","title":"no-perms-check","text":"<p>\u2022 <code>Optional</code> no-perms-check: <code>boolean</code></p>"},{"location":"reference/interfaces/appium_types.ServerConfig/#defined-in_18","title":"Defined in","text":"<p>packages/types/lib/appium-config.ts:179</p>"},{"location":"reference/interfaces/appium_types.ServerConfig/#nodeconfig","title":"nodeconfig","text":"<p>\u2022 <code>Optional</code> nodeconfig: <code>NodeconfigConfig</code></p>"},{"location":"reference/interfaces/appium_types.ServerConfig/#defined-in_19","title":"Defined in","text":"<p>packages/types/lib/appium-config.ts:180</p>"},{"location":"reference/interfaces/appium_types.ServerConfig/#plugin","title":"plugin","text":"<p>\u2022 <code>Optional</code> plugin: <code>PluginConfig</code></p>"},{"location":"reference/interfaces/appium_types.ServerConfig/#defined-in_20","title":"Defined in","text":"<p>packages/types/lib/appium-config.ts:181</p>"},{"location":"reference/interfaces/appium_types.ServerConfig/#port","title":"port","text":"<p>\u2022 <code>Optional</code> port: <code>number</code></p>"},{"location":"reference/interfaces/appium_types.ServerConfig/#defined-in_21","title":"Defined in","text":"<p>packages/types/lib/appium-config.ts:182</p>"},{"location":"reference/interfaces/appium_types.ServerConfig/#relaxed-security","title":"relaxed-security","text":"<p>\u2022 <code>Optional</code> relaxed-security: <code>boolean</code></p>"},{"location":"reference/interfaces/appium_types.ServerConfig/#defined-in_22","title":"Defined in","text":"<p>packages/types/lib/appium-config.ts:183</p>"},{"location":"reference/interfaces/appium_types.ServerConfig/#session-override","title":"session-override","text":"<p>\u2022 <code>Optional</code> session-override: <code>boolean</code></p>"},{"location":"reference/interfaces/appium_types.ServerConfig/#defined-in_23","title":"Defined in","text":"<p>packages/types/lib/appium-config.ts:184</p>"},{"location":"reference/interfaces/appium_types.ServerConfig/#strict-caps","title":"strict-caps","text":"<p>\u2022 <code>Optional</code> strict-caps: <code>boolean</code></p>"},{"location":"reference/interfaces/appium_types.ServerConfig/#defined-in_24","title":"Defined in","text":"<p>packages/types/lib/appium-config.ts:185</p>"},{"location":"reference/interfaces/appium_types.ServerConfig/#tmp","title":"tmp","text":"<p>\u2022 <code>Optional</code> tmp: <code>string</code></p>"},{"location":"reference/interfaces/appium_types.ServerConfig/#defined-in_25","title":"Defined in","text":"<p>packages/types/lib/appium-config.ts:186</p>"},{"location":"reference/interfaces/appium_types.ServerConfig/#trace-dir","title":"trace-dir","text":"<p>\u2022 <code>Optional</code> trace-dir: <code>string</code></p>"},{"location":"reference/interfaces/appium_types.ServerConfig/#defined-in_26","title":"Defined in","text":"<p>packages/types/lib/appium-config.ts:187</p>"},{"location":"reference/interfaces/appium_types.ServerConfig/#use-drivers","title":"use-drivers","text":"<p>\u2022 <code>Optional</code> use-drivers: <code>UseDriversConfig</code></p>"},{"location":"reference/interfaces/appium_types.ServerConfig/#defined-in_27","title":"Defined in","text":"<p>packages/types/lib/appium-config.ts:188</p>"},{"location":"reference/interfaces/appium_types.ServerConfig/#use-plugins","title":"use-plugins","text":"<p>\u2022 <code>Optional</code> use-plugins: <code>UsePluginsConfig</code></p>"},{"location":"reference/interfaces/appium_types.ServerConfig/#defined-in_28","title":"Defined in","text":"<p>packages/types/lib/appium-config.ts:189</p>"},{"location":"reference/interfaces/appium_types.ServerConfig/#webhook","title":"webhook","text":"<p>\u2022 <code>Optional</code> webhook: <code>string</code></p>"},{"location":"reference/interfaces/appium_types.ServerConfig/#defined-in_29","title":"Defined in","text":"<p>packages/types/lib/appium-config.ts:190</p>"},{"location":"reference/interfaces/appium_types.SessionHandler/","title":"Interface: SessionHandler&lt;CreateResult, DeleteResult, C, Extra&gt;","text":"<p>@appium/types.SessionHandler</p>"},{"location":"reference/interfaces/appium_types.SessionHandler/#type-parameters","title":"Type parameters","text":"Name Type <code>CreateResult</code> <code>CreateResult</code> <code>DeleteResult</code> <code>DeleteResult</code> <code>C</code> extends <code>Constraints</code> = <code>BaseDriverCapConstraints</code> <code>Extra</code> extends <code>StringRecord</code> | <code>void</code> = <code>void</code>"},{"location":"reference/interfaces/appium_types.SessionHandler/#hierarchy","title":"Hierarchy","text":"<ul> <li><code>SessionHandler</code></li> </ul> <p>\u21b3 <code>Driver</code></p>"},{"location":"reference/interfaces/appium_types.SessionHandler/#table-of-contents","title":"Table of contents","text":""},{"location":"reference/interfaces/appium_types.SessionHandler/#methods","title":"Methods","text":"<ul> <li>createSession</li> <li>deleteSession</li> </ul>"},{"location":"reference/interfaces/appium_types.SessionHandler/#methods_1","title":"Methods","text":""},{"location":"reference/interfaces/appium_types.SessionHandler/#createsession","title":"createSession","text":"<p>\u25b8 createSession(<code>w3cCaps1</code>, <code>w3cCaps2?</code>, <code>w3cCaps3?</code>, <code>driverData?</code>): <code>Promise</code>&lt;<code>CreateResult</code>&gt;</p> <p>Start a new automation session</p> <p><code>See</code></p> <p>https://w3c.github.io/webdriver/#new-session</p> <p><code>Remarks</code></p> <p>The shape of this method is strange because it used to support both JSONWP and W3C capabilities. This will likely change in the future to simplify.</p>"},{"location":"reference/interfaces/appium_types.SessionHandler/#parameters","title":"Parameters","text":"Name Type Description <code>w3cCaps1</code> <code>W3CCapabilities</code>&lt;<code>C</code>, <code>Extra</code>&gt; the new session capabilities <code>w3cCaps2?</code> <code>W3CCapabilities</code>&lt;<code>C</code>, <code>Extra</code>&gt; another place the new session capabilities could be sent (typically left undefined) <code>w3cCaps3?</code> <code>W3CCapabilities</code>&lt;<code>C</code>, <code>Extra</code>&gt; another place the new session capabilities could be sent (typically left undefined) <code>driverData?</code> <code>DriverData</code>[] a list of DriverData objects representing other sessions running for this driver on the same Appium server. This information can be used to help ensure no conflict of resources"},{"location":"reference/interfaces/appium_types.SessionHandler/#returns","title":"Returns","text":"<p><code>Promise</code>&lt;<code>CreateResult</code>&gt;</p> <p>The capabilities object representing the created session</p>"},{"location":"reference/interfaces/appium_types.SessionHandler/#defined-in","title":"Defined in","text":"<p>packages/types/lib/driver.ts:421</p>"},{"location":"reference/interfaces/appium_types.SessionHandler/#deletesession","title":"deleteSession","text":"<p>\u25b8 deleteSession(<code>sessionId?</code>, <code>driverData?</code>): <code>Promise</code>&lt;<code>DeleteResult</code>&gt;</p> <p>Stop an automation session</p> <p><code>See</code></p> <p>https://w3c.github.io/webdriver/#delete-session</p>"},{"location":"reference/interfaces/appium_types.SessionHandler/#parameters_1","title":"Parameters","text":"Name Type Description <code>sessionId?</code> <code>string</code> the id of the session that is to be deleted <code>driverData?</code> <code>DriverData</code>[] the driver data for other currently-running sessions"},{"location":"reference/interfaces/appium_types.SessionHandler/#returns_1","title":"Returns","text":"<p><code>Promise</code>&lt;<code>DeleteResult</code>&gt;</p>"},{"location":"reference/interfaces/appium_types.SessionHandler/#defined-in_1","title":"Defined in","text":"<p>packages/types/lib/driver.ts:435</p>"},{"location":"reference/interfaces/appium_types.StandardCapabilities/","title":"Interface: StandardCapabilities","text":"<p>@appium/types.StandardCapabilities</p>"},{"location":"reference/interfaces/appium_types.StandardCapabilities/#table-of-contents","title":"Table of contents","text":""},{"location":"reference/interfaces/appium_types.StandardCapabilities/#properties","title":"Properties","text":"<ul> <li>acceptInsecureCerts</li> <li>browserName</li> <li>browserVersion</li> <li>pageLoadStrategy</li> <li>platformName</li> <li>proxy</li> <li>setWindowRect</li> <li>strictFileInteractability</li> <li>timeouts</li> <li>unhandledPromptBehavior</li> <li>webSocketUrl</li> </ul>"},{"location":"reference/interfaces/appium_types.StandardCapabilities/#properties_1","title":"Properties","text":""},{"location":"reference/interfaces/appium_types.StandardCapabilities/#acceptinsecurecerts","title":"acceptInsecureCerts","text":"<p>\u2022 <code>Optional</code> acceptInsecureCerts: <code>boolean</code></p> <p>Indicates whether untrusted and self-signed TLS certificates are implicitly trusted on navigation for the duration of the session.</p>"},{"location":"reference/interfaces/appium_types.StandardCapabilities/#defined-in","title":"Defined in","text":"<p>packages/types/lib/standard-caps.ts:36</p>"},{"location":"reference/interfaces/appium_types.StandardCapabilities/#browsername","title":"browserName","text":"<p>\u2022 <code>Optional</code> browserName: <code>string</code></p> <p>Identifies the user agent.</p>"},{"location":"reference/interfaces/appium_types.StandardCapabilities/#defined-in_1","title":"Defined in","text":"<p>packages/types/lib/standard-caps.ts:24</p>"},{"location":"reference/interfaces/appium_types.StandardCapabilities/#browserversion","title":"browserVersion","text":"<p>\u2022 <code>Optional</code> browserVersion: <code>string</code></p> <p>Identifies the version of the user agent.</p>"},{"location":"reference/interfaces/appium_types.StandardCapabilities/#defined-in_2","title":"Defined in","text":"<p>packages/types/lib/standard-caps.ts:28</p>"},{"location":"reference/interfaces/appium_types.StandardCapabilities/#pageloadstrategy","title":"pageLoadStrategy","text":"<p>\u2022 <code>Optional</code> pageLoadStrategy: <code>PageLoadingStrategy</code></p> <p>Defines the current session\u2019s page load strategy.</p>"},{"location":"reference/interfaces/appium_types.StandardCapabilities/#defined-in_3","title":"Defined in","text":"<p>packages/types/lib/standard-caps.ts:40</p>"},{"location":"reference/interfaces/appium_types.StandardCapabilities/#platformname","title":"platformName","text":"<p>\u2022 <code>Optional</code> platformName: <code>string</code></p> <p>Identifies the operating system of the endpoint node.</p>"},{"location":"reference/interfaces/appium_types.StandardCapabilities/#defined-in_4","title":"Defined in","text":"<p>packages/types/lib/standard-caps.ts:32</p>"},{"location":"reference/interfaces/appium_types.StandardCapabilities/#proxy","title":"proxy","text":"<p>\u2022 <code>Optional</code> proxy: <code>ProxyObject</code></p> <p>Defines the current session\u2019s proxy configuration.</p>"},{"location":"reference/interfaces/appium_types.StandardCapabilities/#defined-in_5","title":"Defined in","text":"<p>packages/types/lib/standard-caps.ts:44</p>"},{"location":"reference/interfaces/appium_types.StandardCapabilities/#setwindowrect","title":"setWindowRect","text":"<p>\u2022 <code>Optional</code> setWindowRect: <code>boolean</code></p> <p>Indicates whether the remote end supports all of the resizing and repositioning commands.</p>"},{"location":"reference/interfaces/appium_types.StandardCapabilities/#defined-in_6","title":"Defined in","text":"<p>packages/types/lib/standard-caps.ts:48</p>"},{"location":"reference/interfaces/appium_types.StandardCapabilities/#strictfileinteractability","title":"strictFileInteractability","text":"<p>\u2022 <code>Optional</code> strictFileInteractability: <code>boolean</code></p> <p>Defines the current session\u2019s strict file interactability.</p>"},{"location":"reference/interfaces/appium_types.StandardCapabilities/#defined-in_7","title":"Defined in","text":"<p>packages/types/lib/standard-caps.ts:56</p>"},{"location":"reference/interfaces/appium_types.StandardCapabilities/#timeouts","title":"timeouts","text":"<p>\u2022 <code>Optional</code> timeouts: <code>Timeouts</code></p> <p>Describes the timeouts imposed on certain session operations.</p>"},{"location":"reference/interfaces/appium_types.StandardCapabilities/#defined-in_8","title":"Defined in","text":"<p>packages/types/lib/standard-caps.ts:52</p>"},{"location":"reference/interfaces/appium_types.StandardCapabilities/#unhandledpromptbehavior","title":"unhandledPromptBehavior","text":"<p>\u2022 <code>Optional</code> unhandledPromptBehavior: <code>string</code></p> <p>Describes the current session\u2019s user prompt handler. Defaults to the dismiss and notify state.</p>"},{"location":"reference/interfaces/appium_types.StandardCapabilities/#defined-in_9","title":"Defined in","text":"<p>packages/types/lib/standard-caps.ts:60</p>"},{"location":"reference/interfaces/appium_types.StandardCapabilities/#websocketurl","title":"webSocketUrl","text":"<p>\u2022 <code>Optional</code> webSocketUrl: <code>boolean</code></p> <p>WebDriver clients opt in to a bidirectional connection by requesting a capability with the name \"webSocketUrl\" and value true.</p>"},{"location":"reference/interfaces/appium_types.StandardCapabilities/#defined-in_10","title":"Defined in","text":"<p>packages/types/lib/standard-caps.ts:64</p>"},{"location":"reference/interfaces/appium_types.StartScreenRecordOptions/","title":"Interface: StartScreenRecordOptions","text":"<p>@appium/types.StartScreenRecordOptions</p>"},{"location":"reference/interfaces/appium_types.StartScreenRecordOptions/#table-of-contents","title":"Table of contents","text":""},{"location":"reference/interfaces/appium_types.StartScreenRecordOptions/#properties","title":"Properties","text":"<ul> <li>bitRate</li> <li>bugReport</li> <li>forceRestart</li> <li>method</li> <li>password</li> <li>remotePath</li> <li>timeLimit</li> <li>username</li> <li>videoFps</li> <li>videoQuality</li> <li>videoScale</li> <li>videoSize</li> <li>videoType</li> </ul>"},{"location":"reference/interfaces/appium_types.StartScreenRecordOptions/#properties_1","title":"Properties","text":""},{"location":"reference/interfaces/appium_types.StartScreenRecordOptions/#bitrate","title":"bitRate","text":"<p>\u2022 <code>Optional</code> bitRate: <code>string</code></p>"},{"location":"reference/interfaces/appium_types.StartScreenRecordOptions/#defined-in","title":"Defined in","text":"<p>packages/types/lib/driver.ts:528</p>"},{"location":"reference/interfaces/appium_types.StartScreenRecordOptions/#bugreport","title":"bugReport","text":"<p>\u2022 <code>Optional</code> bugReport: <code>string</code></p>"},{"location":"reference/interfaces/appium_types.StartScreenRecordOptions/#defined-in_1","title":"Defined in","text":"<p>packages/types/lib/driver.ts:530</p>"},{"location":"reference/interfaces/appium_types.StartScreenRecordOptions/#forcerestart","title":"forceRestart","text":"<p>\u2022 <code>Optional</code> forceRestart: <code>boolean</code></p>"},{"location":"reference/interfaces/appium_types.StartScreenRecordOptions/#defined-in_2","title":"Defined in","text":"<p>packages/types/lib/driver.ts:522</p>"},{"location":"reference/interfaces/appium_types.StartScreenRecordOptions/#method","title":"method","text":"<p>\u2022 <code>Optional</code> method: <code>string</code></p>"},{"location":"reference/interfaces/appium_types.StartScreenRecordOptions/#defined-in_3","title":"Defined in","text":"<p>packages/types/lib/driver.ts:521</p>"},{"location":"reference/interfaces/appium_types.StartScreenRecordOptions/#password","title":"password","text":"<p>\u2022 <code>Optional</code> password: <code>string</code></p>"},{"location":"reference/interfaces/appium_types.StartScreenRecordOptions/#defined-in_4","title":"Defined in","text":"<p>packages/types/lib/driver.ts:520</p>"},{"location":"reference/interfaces/appium_types.StartScreenRecordOptions/#remotepath","title":"remotePath","text":"<p>\u2022 <code>Optional</code> remotePath: <code>string</code></p>"},{"location":"reference/interfaces/appium_types.StartScreenRecordOptions/#defined-in_5","title":"Defined in","text":"<p>packages/types/lib/driver.ts:518</p>"},{"location":"reference/interfaces/appium_types.StartScreenRecordOptions/#timelimit","title":"timeLimit","text":"<p>\u2022 <code>Optional</code> timeLimit: <code>string</code></p>"},{"location":"reference/interfaces/appium_types.StartScreenRecordOptions/#defined-in_6","title":"Defined in","text":"<p>packages/types/lib/driver.ts:523</p>"},{"location":"reference/interfaces/appium_types.StartScreenRecordOptions/#username","title":"username","text":"<p>\u2022 <code>Optional</code> username: <code>string</code></p>"},{"location":"reference/interfaces/appium_types.StartScreenRecordOptions/#defined-in_7","title":"Defined in","text":"<p>packages/types/lib/driver.ts:519</p>"},{"location":"reference/interfaces/appium_types.StartScreenRecordOptions/#videofps","title":"videoFps","text":"<p>\u2022 <code>Optional</code> videoFps: <code>string</code></p>"},{"location":"reference/interfaces/appium_types.StartScreenRecordOptions/#defined-in_8","title":"Defined in","text":"<p>packages/types/lib/driver.ts:526</p>"},{"location":"reference/interfaces/appium_types.StartScreenRecordOptions/#videoquality","title":"videoQuality","text":"<p>\u2022 <code>Optional</code> videoQuality: <code>string</code></p>"},{"location":"reference/interfaces/appium_types.StartScreenRecordOptions/#defined-in_9","title":"Defined in","text":"<p>packages/types/lib/driver.ts:525</p>"},{"location":"reference/interfaces/appium_types.StartScreenRecordOptions/#videoscale","title":"videoScale","text":"<p>\u2022 <code>Optional</code> videoScale: <code>string</code></p>"},{"location":"reference/interfaces/appium_types.StartScreenRecordOptions/#defined-in_10","title":"Defined in","text":"<p>packages/types/lib/driver.ts:527</p>"},{"location":"reference/interfaces/appium_types.StartScreenRecordOptions/#videosize","title":"videoSize","text":"<p>\u2022 <code>Optional</code> videoSize: <code>string</code></p>"},{"location":"reference/interfaces/appium_types.StartScreenRecordOptions/#defined-in_11","title":"Defined in","text":"<p>packages/types/lib/driver.ts:529</p>"},{"location":"reference/interfaces/appium_types.StartScreenRecordOptions/#videotype","title":"videoType","text":"<p>\u2022 <code>Optional</code> videoType: <code>string</code></p>"},{"location":"reference/interfaces/appium_types.StartScreenRecordOptions/#defined-in_12","title":"Defined in","text":"<p>packages/types/lib/driver.ts:524</p>"},{"location":"reference/interfaces/appium_types.StopScreenRecordOptions/","title":"Interface: StopScreenRecordOptions","text":"<p>@appium/types.StopScreenRecordOptions</p>"},{"location":"reference/interfaces/appium_types.StopScreenRecordOptions/#table-of-contents","title":"Table of contents","text":""},{"location":"reference/interfaces/appium_types.StopScreenRecordOptions/#properties","title":"Properties","text":"<ul> <li>fileFieldName</li> <li>formFields</li> <li>headers</li> <li>method</li> <li>pass</li> <li>remotePath</li> <li>user</li> </ul>"},{"location":"reference/interfaces/appium_types.StopScreenRecordOptions/#properties_1","title":"Properties","text":""},{"location":"reference/interfaces/appium_types.StopScreenRecordOptions/#filefieldname","title":"fileFieldName","text":"<p>\u2022 <code>Optional</code> fileFieldName: <code>string</code></p>"},{"location":"reference/interfaces/appium_types.StopScreenRecordOptions/#defined-in","title":"Defined in","text":"<p>packages/types/lib/driver.ts:539</p>"},{"location":"reference/interfaces/appium_types.StopScreenRecordOptions/#formfields","title":"formFields","text":"<p>\u2022 formFields: <code>Record</code>&lt;<code>string</code>, <code>string</code>&gt; | <code>ObjectEntries</code>&lt;<code>Record</code>&lt;<code>string</code>, <code>string</code>&gt;&gt;</p>"},{"location":"reference/interfaces/appium_types.StopScreenRecordOptions/#defined-in_1","title":"Defined in","text":"<p>packages/types/lib/driver.ts:540</p>"},{"location":"reference/interfaces/appium_types.StopScreenRecordOptions/#headers","title":"headers","text":"<p>\u2022 <code>Optional</code> headers: <code>Record</code>&lt;<code>string</code>, <code>string</code>&gt;</p>"},{"location":"reference/interfaces/appium_types.StopScreenRecordOptions/#defined-in_2","title":"Defined in","text":"<p>packages/types/lib/driver.ts:538</p>"},{"location":"reference/interfaces/appium_types.StopScreenRecordOptions/#method","title":"method","text":"<p>\u2022 <code>Optional</code> method: <code>string</code></p>"},{"location":"reference/interfaces/appium_types.StopScreenRecordOptions/#defined-in_3","title":"Defined in","text":"<p>packages/types/lib/driver.ts:537</p>"},{"location":"reference/interfaces/appium_types.StopScreenRecordOptions/#pass","title":"pass","text":"<p>\u2022 <code>Optional</code> pass: <code>string</code></p>"},{"location":"reference/interfaces/appium_types.StopScreenRecordOptions/#defined-in_4","title":"Defined in","text":"<p>packages/types/lib/driver.ts:536</p>"},{"location":"reference/interfaces/appium_types.StopScreenRecordOptions/#remotepath","title":"remotePath","text":"<p>\u2022 <code>Optional</code> remotePath: <code>string</code></p>"},{"location":"reference/interfaces/appium_types.StopScreenRecordOptions/#defined-in_5","title":"Defined in","text":"<p>packages/types/lib/driver.ts:534</p>"},{"location":"reference/interfaces/appium_types.StopScreenRecordOptions/#user","title":"user","text":"<p>\u2022 <code>Optional</code> user: <code>string</code></p>"},{"location":"reference/interfaces/appium_types.StopScreenRecordOptions/#defined-in_6","title":"Defined in","text":"<p>packages/types/lib/driver.ts:535</p>"},{"location":"reference/modules/appium/","title":"Module: appium","text":""},{"location":"reference/modules/appium/#table-of-contents","title":"Table of contents","text":""},{"location":"reference/modules/appium/#interfaces","title":"Interfaces","text":"<ul> <li>ServerInitData</li> </ul>"},{"location":"reference/modules/appium/#type-aliases","title":"Type Aliases","text":"<ul> <li>Args</li> <li>CliCommand</li> <li>CliExtensionCommand</li> <li>CliExtensionSubcommand</li> <li>DriverClass</li> <li>DriverCommand</li> <li>DriverNameMap</li> <li>DriverType</li> <li>ExtCommandInitResult</li> <li>InitResult</li> <li>ParsedArgs</li> <li>PluginClass</li> <li>PluginCommand</li> <li>PluginNameMap</li> <li>PluginType</li> <li>ServerCommand</li> </ul>"},{"location":"reference/modules/appium/#functions","title":"Functions","text":"<ul> <li>finalizeSchema</li> <li>getSchema</li> <li>init</li> <li>main</li> <li>readConfigFile</li> <li>resolveAppiumHome</li> <li>validate</li> </ul>"},{"location":"reference/modules/appium/#type-aliases_1","title":"Type Aliases","text":""},{"location":"reference/modules/appium/#args","title":"Args","text":"<p>\u01ac Args&lt;<code>Cmd</code>, <code>SubCmd</code>&gt;: <code>Cmd</code> extends <code>ServerCommand</code> ? <code>SetOptional</code>&lt;<code>CommonArgs</code>&lt;<code>Cmd</code>&gt;, keyof <code>ServerArgs</code>&gt; : <code>ParsedArgs</code>&lt;<code>Cmd</code>, <code>SubCmd</code>&gt;</p> <p>Like <code>ParsedArgs</code> except server arguments are all optional.</p> <p>May have defaults applied; may contain config values; may contain computed args.</p>"},{"location":"reference/modules/appium/#type-parameters","title":"Type parameters","text":"Name Type <code>Cmd</code> extends <code>CliCommand</code> = <code>ServerCommand</code> <code>SubCmd</code> extends <code>CliExtensionSubcommand</code> | <code>void</code> = <code>void</code>"},{"location":"reference/modules/appium/#defined-in","title":"Defined in","text":"<p>packages/appium/types/cli.ts:179</p>"},{"location":"reference/modules/appium/#clicommand","title":"CliCommand","text":"<p>\u01ac CliCommand: <code>ServerCommand</code> | <code>CliExtensionCommand</code></p> <p>Possible commands for the <code>appium</code> CLI.</p>"},{"location":"reference/modules/appium/#defined-in_1","title":"Defined in","text":"<p>packages/appium/types/cli.ts:16</p>"},{"location":"reference/modules/appium/#cliextensioncommand","title":"CliExtensionCommand","text":"<p>\u01ac CliExtensionCommand: <code>DriverCommand</code> | <code>PluginCommand</code></p> <p>Extension-specific commands</p>"},{"location":"reference/modules/appium/#defined-in_2","title":"Defined in","text":"<p>packages/appium/types/cli.ts:11</p>"},{"location":"reference/modules/appium/#cliextensionsubcommand","title":"CliExtensionSubcommand","text":"<p>\u01ac CliExtensionSubcommand: <code>\"install\"</code> | <code>\"list\"</code> | <code>\"run\"</code> | <code>\"uninstall\"</code> | <code>\"update\"</code></p> <p>Possible subcommands of CliCommandDriver or CliCommandPlugin.</p>"},{"location":"reference/modules/appium/#defined-in_3","title":"Defined in","text":"<p>packages/appium/types/cli.ts:22</p>"},{"location":"reference/modules/appium/#driverclass","title":"DriverClass","text":"<p>\u01ac DriverClass&lt;&gt;: <code>DriverClass</code></p>"},{"location":"reference/modules/appium/#defined-in_4","title":"Defined in","text":"<p>packages/appium/lib/main.js:398</p>"},{"location":"reference/modules/appium/#drivercommand","title":"DriverCommand","text":"<p>\u01ac DriverCommand: <code>DriverType</code></p>"},{"location":"reference/modules/appium/#defined-in_5","title":"Defined in","text":"<p>packages/appium/types/cli.ts:5</p>"},{"location":"reference/modules/appium/#drivernamemap","title":"DriverNameMap","text":"<p>\u01ac DriverNameMap&lt;&gt;: <code>Map</code>&lt;<code>DriverClass</code>, <code>string</code>&gt;</p>"},{"location":"reference/modules/appium/#defined-in_6","title":"Defined in","text":"<p>packages/appium/lib/extension/index.js:104</p>"},{"location":"reference/modules/appium/#drivertype","title":"DriverType","text":"<p>\u01ac DriverType: <code>\"driver\"</code></p> <p>The string referring to a \"driver\"-type extension</p>"},{"location":"reference/modules/appium/#defined-in_7","title":"Defined in","text":"<p>packages/types/build/lib/index.d.ts:134</p>"},{"location":"reference/modules/appium/#extcommandinitresult","title":"ExtCommandInitResult","text":"<p>\u01ac ExtCommandInitResult&lt;&gt;: <code>Object</code></p>"},{"location":"reference/modules/appium/#defined-in_8","title":"Defined in","text":"<p>packages/appium/lib/main.js:412</p>"},{"location":"reference/modules/appium/#initresult","title":"InitResult","text":"<p>\u01ac InitResult&lt;<code>Cmd</code>&gt;: <code>Cmd</code> extends <code>ServerCommand</code> ? <code>ServerInitData</code> &amp; <code>ExtensionConfigs</code> : <code>ExtCommandInitResult</code></p>"},{"location":"reference/modules/appium/#type-parameters_1","title":"Type parameters","text":"Name <code>Cmd</code>"},{"location":"reference/modules/appium/#defined-in_9","title":"Defined in","text":"<p>packages/appium/lib/main.js:423</p>"},{"location":"reference/modules/appium/#parsedargs","title":"ParsedArgs","text":"<p>\u01ac ParsedArgs&lt;<code>Cmd</code>, <code>SubCmd</code>&gt;: <code>CommonArgs</code>&lt;<code>Cmd</code>, <code>SubCmd</code>&gt;</p> <p>Fully-parsed arguments, containing defaults, computed args, and config file values.</p>"},{"location":"reference/modules/appium/#type-parameters_2","title":"Type parameters","text":"Name Type <code>Cmd</code> extends <code>CliCommand</code> = <code>ServerCommand</code> <code>SubCmd</code> extends <code>CliExtensionSubcommand</code> | <code>void</code> = <code>void</code>"},{"location":"reference/modules/appium/#defined-in_10","title":"Defined in","text":"<p>packages/appium/types/cli.ts:169</p>"},{"location":"reference/modules/appium/#pluginclass","title":"PluginClass","text":"<p>\u01ac PluginClass&lt;&gt;: <code>PluginClass</code></p>"},{"location":"reference/modules/appium/#defined-in_11","title":"Defined in","text":"<p>packages/appium/lib/main.js:399</p>"},{"location":"reference/modules/appium/#plugincommand","title":"PluginCommand","text":"<p>\u01ac PluginCommand: <code>PluginType</code></p>"},{"location":"reference/modules/appium/#defined-in_12","title":"Defined in","text":"<p>packages/appium/types/cli.ts:6</p>"},{"location":"reference/modules/appium/#pluginnamemap","title":"PluginNameMap","text":"<p>\u01ac PluginNameMap&lt;&gt;: <code>Map</code>&lt;<code>PluginClass</code>, <code>string</code>&gt;</p>"},{"location":"reference/modules/appium/#defined-in_13","title":"Defined in","text":"<p>packages/appium/lib/extension/index.js:99</p>"},{"location":"reference/modules/appium/#plugintype","title":"PluginType","text":"<p>\u01ac PluginType: <code>\"plugin\"</code></p> <p>The string referring to a \"plugin\"-type extension</p>"},{"location":"reference/modules/appium/#defined-in_14","title":"Defined in","text":"<p>packages/types/build/lib/index.d.ts:139</p>"},{"location":"reference/modules/appium/#servercommand","title":"ServerCommand","text":"<p>\u01ac ServerCommand: <code>\"server\"</code></p>"},{"location":"reference/modules/appium/#defined-in_15","title":"Defined in","text":"<p>packages/appium/types/cli.ts:4</p>"},{"location":"reference/modules/appium/#functions_1","title":"Functions","text":""},{"location":"reference/modules/appium/#finalizeschema","title":"finalizeSchema","text":"<p>\u25b8 finalizeSchema(): <code>Readonly</code>&lt;<code>Record</code>&lt;<code>string</code>, <code>StrictSchemaObject</code>&gt;&gt;</p> <p>Call this when no more schemas will be registered.</p> <p>This does three things: 1. It combines all schemas from extensions into the Appium config schema,    then adds the result to the <code>Ajv</code> instance. 2. It adds schemas for each argument/property for validation purposes.    The CLI uses these schemas to validate specific arguments. 3. The schemas are validated against JSON schema draft-07 (which is the    only one supported at this time)</p> <p>Any method in this instance that needs to interact with the <code>Ajv</code> instance will throw if this method has not been called.</p> <p>If the instance has already been finalized, this is a no-op.</p> <p><code>Throws</code></p> <p>If the schema is not valid</p>"},{"location":"reference/modules/appium/#returns","title":"Returns","text":"<p><code>Readonly</code>&lt;<code>Record</code>&lt;<code>string</code>, <code>StrictSchemaObject</code>&gt;&gt;</p> <p>Record of schema IDs to full schema objects</p>"},{"location":"reference/modules/appium/#defined-in_16","title":"Defined in","text":"<p>packages/appium/lib/schema/schema.js:183</p>"},{"location":"reference/modules/appium/#getschema","title":"getSchema","text":"<p>\u25b8 getSchema(<code>ref?</code>): <code>SchemaObject</code></p> <p>Retrieves the schema itself</p> <p><code>Throws</code></p> <p>If the schema has not yet been finalized</p>"},{"location":"reference/modules/appium/#parameters","title":"Parameters","text":"Name Type Default value Description <code>ref?</code> <code>string</code> <code>APPIUM_CONFIG_SCHEMA_ID</code> Schema ID"},{"location":"reference/modules/appium/#returns_1","title":"Returns","text":"<p><code>SchemaObject</code></p>"},{"location":"reference/modules/appium/#defined-in_17","title":"Defined in","text":"<p>packages/appium/lib/schema/schema.js:498</p>"},{"location":"reference/modules/appium/#init","title":"init","text":"<p>\u25b8 init&lt;<code>Cmd</code>, <code>SubCmd</code>&gt;(<code>args?</code>): <code>Promise</code>&lt;<code>InitResult</code>&lt;<code>Cmd</code>&gt;&gt;</p> <p>Initializes Appium, but does not start the server.</p> <p>Use this to get at the configuration schema.</p> <p>If <code>args</code> contains a non-empty <code>subcommand</code> which is not <code>server</code>, this function will return an empty object.</p> <p><code>Example</code></p> <pre><code>import {init, getSchema} from 'appium';\nconst options = {}; // config object\nawait init(options);\nconst schema = getSchema(); // entire config schema including plugins and drivers\n</code></pre>"},{"location":"reference/modules/appium/#type-parameters_3","title":"Type parameters","text":"Name Type <code>Cmd</code> extends <code>CliCommand</code> = <code>\"server\"</code> <code>SubCmd</code> extends <code>void</code> | <code>CliExtensionSubcommand</code> = <code>void</code>"},{"location":"reference/modules/appium/#parameters_1","title":"Parameters","text":"Name Type Description <code>args?</code> <code>Args</code>&lt;<code>Cmd</code>, <code>SubCmd</code>&gt; Partial args (progammatic usage only)"},{"location":"reference/modules/appium/#returns_2","title":"Returns","text":"<p><code>Promise</code>&lt;<code>InitResult</code>&lt;<code>Cmd</code>&gt;&gt;</p>"},{"location":"reference/modules/appium/#defined-in_18","title":"Defined in","text":"<p>packages/appium/lib/main.js:170</p>"},{"location":"reference/modules/appium/#main","title":"main","text":"<p>\u25b8 main&lt;<code>Cmd</code>, <code>SubCmd</code>&gt;(<code>args?</code>): <code>Promise</code>&lt;<code>Cmd</code> extends <code>\"server\"</code> ? <code>AppiumServer</code> : <code>void</code>&gt;</p> <p>Initializes Appium's config.  Starts server if appropriate and resolves the server instance if so; otherwise resolves w/ <code>undefined</code>.</p>"},{"location":"reference/modules/appium/#type-parameters_4","title":"Type parameters","text":"Name Type <code>Cmd</code> extends <code>CliCommand</code> = <code>\"server\"</code> <code>SubCmd</code> extends <code>void</code> | <code>CliExtensionSubcommand</code> = <code>void</code>"},{"location":"reference/modules/appium/#parameters_2","title":"Parameters","text":"Name Type Description <code>args?</code> <code>Args</code>&lt;<code>Cmd</code>, <code>SubCmd</code>&gt; Arguments from CLI or otherwise"},{"location":"reference/modules/appium/#returns_3","title":"Returns","text":"<p><code>Promise</code>&lt;<code>Cmd</code> extends <code>\"server\"</code> ? <code>AppiumServer</code> : <code>void</code>&gt;</p>"},{"location":"reference/modules/appium/#defined-in_19","title":"Defined in","text":"<p>packages/appium/lib/main.js:282</p>"},{"location":"reference/modules/appium/#readconfigfile","title":"readConfigFile","text":"<p>\u25b8 readConfigFile(<code>filepath?</code>, <code>opts?</code>): <code>Promise</code>&lt;<code>ReadConfigFileResult</code>&gt;</p> <p>Given an optional path, read a config file. Validates the config file.</p> <p>Call validate if you already have a config object.</p>"},{"location":"reference/modules/appium/#parameters_3","title":"Parameters","text":"Name Type Description <code>filepath?</code> <code>string</code> Path to config file, if we have one <code>opts?</code> <code>ReadConfigFileOptions</code> Options"},{"location":"reference/modules/appium/#returns_4","title":"Returns","text":"<p><code>Promise</code>&lt;<code>ReadConfigFileResult</code>&gt;</p> <p>Contains config and filepath, if found, and any errors</p>"},{"location":"reference/modules/appium/#defined-in_20","title":"Defined in","text":"<p>packages/appium/lib/config-file.js:101</p>"},{"location":"reference/modules/appium/#resolveappiumhome","title":"resolveAppiumHome","text":"<p>\u25b8 resolveAppiumHome(<code>cwd?</code>): <code>Promise</code>&lt;<code>string</code>&gt;</p>"},{"location":"reference/modules/appium/#parameters_4","title":"Parameters","text":"Name Type <code>cwd?</code> <code>string</code>"},{"location":"reference/modules/appium/#returns_5","title":"Returns","text":"<p><code>Promise</code>&lt;<code>string</code>&gt;</p>"},{"location":"reference/modules/appium/#defined-in_21","title":"Defined in","text":"<p>packages/support/build/lib/env.d.ts:41</p>"},{"location":"reference/modules/appium/#validate","title":"validate","text":"<p>\u25b8 validate(<code>value</code>, <code>ref?</code>): <code>ErrorObject</code>&lt;<code>string</code>, <code>Record</code>&lt;<code>string</code>, <code>any</code>&gt;, <code>any</code>&gt;[]</p> <p>Given an object, validates it against the Appium config schema. If errors occur, the returned array will be non-empty.</p>"},{"location":"reference/modules/appium/#parameters_5","title":"Parameters","text":"Name Type Default value Description <code>value</code> <code>any</code> <code>undefined</code> The value (hopefully an object) to validate against the schema <code>ref?</code> <code>string</code> <code>APPIUM_CONFIG_SCHEMA_ID</code> Schema ID or ref."},{"location":"reference/modules/appium/#returns_6","title":"Returns","text":"<p><code>ErrorObject</code>&lt;<code>string</code>, <code>Record</code>&lt;<code>string</code>, <code>any</code>&gt;, <code>any</code>&gt;[]</p> <p>Array of errors, if any.</p>"},{"location":"reference/modules/appium/#defined-in_22","title":"Defined in","text":"<p>packages/appium/lib/schema/schema.js:528</p>"},{"location":"reference/modules/appium_base_driver-1/","title":"Module: @appium/base-driver","text":""},{"location":"reference/modules/appium_base_driver-1/#table-of-contents","title":"Table of contents","text":""},{"location":"reference/modules/appium_base_driver-1/#references","title":"References","text":"<ul> <li>default</li> <li>errorFromMJSONWPStatusCode</li> </ul>"},{"location":"reference/modules/appium_base_driver-1/#classes","title":"Classes","text":"<ul> <li>BaseDriver</li> <li>DeviceSettings</li> <li>DriverCore</li> <li>JWProxy</li> </ul>"},{"location":"reference/modules/appium_base_driver-1/#interfaces","title":"Interfaces","text":"<ul> <li>ServerOpts</li> </ul>"},{"location":"reference/modules/appium_base_driver-1/#variables","title":"Variables","text":"<ul> <li>ALL_COMMANDS</li> <li>CREATE_SESSION_COMMAND</li> <li>DEFAULT_BASE_PATH</li> <li>DEFAULT_WS_PATHNAME_PREFIX</li> <li>DELETE_SESSION_COMMAND</li> <li>GET_STATUS_COMMAND</li> <li>METHOD_MAP</li> <li>NO_SESSION_ID_COMMANDS</li> <li>PREFIXED_APPIUM_OPTS_CAP</li> <li>PROTOCOLS</li> <li>STANDARD_CAPS</li> <li>STATIC_DIR</li> <li>errors</li> <li>statusCodes</li> </ul>"},{"location":"reference/modules/appium_base_driver-1/#functions","title":"Functions","text":"<ul> <li>checkParams</li> <li>determineProtocol</li> <li>errorFromCode</li> <li>errorFromW3CJsonCode</li> <li>getSummaryByCode</li> <li>isErrorType</li> <li>isSessionCommand</li> <li>isStandardCap</li> <li>makeArgs</li> <li>normalizeBasePath</li> <li>processCapabilities</li> <li>promoteAppiumOptions</li> <li>routeConfiguringFunction</li> <li>routeToCommandName</li> <li>server</li> <li>validateCaps</li> <li>validateExecuteMethodParams</li> </ul>"},{"location":"reference/modules/appium_base_driver-1/#references_1","title":"References","text":""},{"location":"reference/modules/appium_base_driver-1/#default","title":"default","text":"<p>Renames and re-exports BaseDriver</p>"},{"location":"reference/modules/appium_base_driver-1/#errorfrommjsonwpstatuscode","title":"errorFromMJSONWPStatusCode","text":"<p>Renames and re-exports errorFromCode</p>"},{"location":"reference/modules/appium_base_driver-1/#variables_1","title":"Variables","text":""},{"location":"reference/modules/appium_base_driver-1/#all_commands","title":"ALL_COMMANDS","text":"<p>\u2022 ALL_COMMANDS: <code>any</code>[] = <code>[]</code></p>"},{"location":"reference/modules/appium_base_driver-1/#defined-in","title":"Defined in","text":"<p>packages/base-driver/lib/protocol/routes.js:922</p>"},{"location":"reference/modules/appium_base_driver-1/#create_session_command","title":"CREATE_SESSION_COMMAND","text":"<p>\u2022 <code>Const</code> CREATE_SESSION_COMMAND: <code>\"createSession\"</code></p>"},{"location":"reference/modules/appium_base_driver-1/#defined-in_1","title":"Defined in","text":"<p>packages/base-driver/lib/protocol/protocol.js:17</p>"},{"location":"reference/modules/appium_base_driver-1/#default_base_path","title":"DEFAULT_BASE_PATH","text":"<p>\u2022 <code>Const</code> DEFAULT_BASE_PATH: <code>\"\"</code></p>"},{"location":"reference/modules/appium_base_driver-1/#defined-in_2","title":"Defined in","text":"<p>packages/base-driver/lib/constants.js:18</p>"},{"location":"reference/modules/appium_base_driver-1/#default_ws_pathname_prefix","title":"DEFAULT_WS_PATHNAME_PREFIX","text":"<p>\u2022 <code>Const</code> DEFAULT_WS_PATHNAME_PREFIX: <code>\"/ws\"</code></p>"},{"location":"reference/modules/appium_base_driver-1/#defined-in_3","title":"Defined in","text":"<p>packages/base-driver/lib/express/websocket.js:6</p>"},{"location":"reference/modules/appium_base_driver-1/#delete_session_command","title":"DELETE_SESSION_COMMAND","text":"<p>\u2022 <code>Const</code> DELETE_SESSION_COMMAND: <code>\"deleteSession\"</code></p>"},{"location":"reference/modules/appium_base_driver-1/#defined-in_4","title":"Defined in","text":"<p>packages/base-driver/lib/protocol/protocol.js:18</p>"},{"location":"reference/modules/appium_base_driver-1/#get_status_command","title":"GET_STATUS_COMMAND","text":"<p>\u2022 <code>Const</code> GET_STATUS_COMMAND: <code>\"getStatus\"</code></p>"},{"location":"reference/modules/appium_base_driver-1/#defined-in_5","title":"Defined in","text":"<p>packages/base-driver/lib/protocol/protocol.js:19</p>"},{"location":"reference/modules/appium_base_driver-1/#method_map","title":"METHOD_MAP","text":"<p>\u2022 <code>Const</code> METHOD_MAP: <code>Object</code></p> <p>define the routes, mapping of HTTP methods to particular driver commands, and any parameters that are expected in a request parameters can be <code>required</code> or <code>optional</code></p>"},{"location":"reference/modules/appium_base_driver-1/#type-declaration","title":"Type declaration","text":"Name Type <code>/session</code> { <code>POST</code>: { <code>command</code>: <code>\"createSession\"</code> = 'createSession'; <code>payloadParams</code>: { <code>optional</code>: readonly [<code>\"desiredCapabilities\"</code>, <code>\"requiredCapabilities\"</code>, <code>\"capabilities\"</code>] ; <code>validate</code>: (<code>jsonObj</code>: <code>any</code>) =&gt; <code>false</code> | <code>\"we require one of \\\"desiredCapabilities\\\" or \\\"capabilities\\\" object\"</code>  }  }  } <code>/session.POST</code> { <code>command</code>: <code>\"createSession\"</code> = 'createSession'; <code>payloadParams</code>: { <code>optional</code>: readonly [<code>\"desiredCapabilities\"</code>, <code>\"requiredCapabilities\"</code>, <code>\"capabilities\"</code>] ; <code>validate</code>: (<code>jsonObj</code>: <code>any</code>) =&gt; <code>false</code> | <code>\"we require one of \\\"desiredCapabilities\\\" or \\\"capabilities\\\" object\"</code>  }  } <code>/session.POST.command</code> <code>\"createSession\"</code> <code>/session.POST.payloadParams</code> { <code>optional</code>: readonly [<code>\"desiredCapabilities\"</code>, <code>\"requiredCapabilities\"</code>, <code>\"capabilities\"</code>] ; <code>validate</code>: (<code>jsonObj</code>: <code>any</code>) =&gt; <code>false</code> | <code>\"we require one of \\\"desiredCapabilities\\\" or \\\"capabilities\\\" object\"</code>  } <code>/session.POST.payloadParams.optional</code> readonly [<code>\"desiredCapabilities\"</code>, <code>\"requiredCapabilities\"</code>, <code>\"capabilities\"</code>] <code>/session.POST.payloadParams.validate</code> (<code>jsonObj</code>: <code>any</code>) =&gt; <code>false</code> | <code>\"we require one of \\\"desiredCapabilities\\\" or \\\"capabilities\\\" object\"</code> <code>/session/:sessionId</code> { <code>DELETE</code>: { <code>command</code>: <code>\"deleteSession\"</code> = 'deleteSession' } ; <code>GET</code>: { <code>command</code>: <code>\"getSession\"</code> = 'getSession' }  } <code>/session/:sessionId.DELETE</code> { <code>command</code>: <code>\"deleteSession\"</code> = 'deleteSession' } <code>/session/:sessionId.DELETE.command</code> <code>\"deleteSession\"</code> <code>/session/:sessionId.GET</code> { <code>command</code>: <code>\"getSession\"</code> = 'getSession' } <code>/session/:sessionId.GET.command</code> <code>\"getSession\"</code> <code>/session/:sessionId/:vendor/cdp/execute</code> { <code>POST</code>: { <code>command</code>: <code>\"executeCdp\"</code> = 'executeCdp'; <code>payloadParams</code>: { <code>required</code>: readonly [<code>\"cmd\"</code>, <code>\"params\"</code>]  }  }  } <code>/session/:sessionId/:vendor/cdp/execute.POST</code> { <code>command</code>: <code>\"executeCdp\"</code> = 'executeCdp'; <code>payloadParams</code>: { <code>required</code>: readonly [<code>\"cmd\"</code>, <code>\"params\"</code>]  }  } <code>/session/:sessionId/:vendor/cdp/execute.POST.command</code> <code>\"executeCdp\"</code> <code>/session/:sessionId/:vendor/cdp/execute.POST.payloadParams</code> { <code>required</code>: readonly [<code>\"cmd\"</code>, <code>\"params\"</code>]  } <code>/session/:sessionId/:vendor/cdp/execute.POST.payloadParams.required</code> readonly [<code>\"cmd\"</code>, <code>\"params\"</code>] <code>/session/:sessionId/accept_alert</code> { <code>POST</code>: { <code>command</code>: <code>\"postAcceptAlert\"</code> = 'postAcceptAlert' }  } <code>/session/:sessionId/accept_alert.POST</code> { <code>command</code>: <code>\"postAcceptAlert\"</code> = 'postAcceptAlert' } <code>/session/:sessionId/accept_alert.POST.command</code> <code>\"postAcceptAlert\"</code> <code>/session/:sessionId/actions</code> { <code>DELETE</code>: { <code>command</code>: <code>\"releaseActions\"</code> = 'releaseActions' } ; <code>POST</code>: { <code>command</code>: <code>\"performActions\"</code> = 'performActions'; <code>payloadParams</code>: { <code>required</code>: readonly [<code>\"actions\"</code>]  }  }  } <code>/session/:sessionId/actions.DELETE</code> { <code>command</code>: <code>\"releaseActions\"</code> = 'releaseActions' } <code>/session/:sessionId/actions.DELETE.command</code> <code>\"releaseActions\"</code> <code>/session/:sessionId/actions.POST</code> { <code>command</code>: <code>\"performActions\"</code> = 'performActions'; <code>payloadParams</code>: { <code>required</code>: readonly [<code>\"actions\"</code>]  }  } <code>/session/:sessionId/actions.POST.command</code> <code>\"performActions\"</code> <code>/session/:sessionId/actions.POST.payloadParams</code> { <code>required</code>: readonly [<code>\"actions\"</code>]  } <code>/session/:sessionId/actions.POST.payloadParams.required</code> readonly [<code>\"actions\"</code>] <code>/session/:sessionId/alert/accept</code> { <code>POST</code>: { <code>command</code>: <code>\"postAcceptAlert\"</code> = 'postAcceptAlert' }  } <code>/session/:sessionId/alert/accept.POST</code> { <code>command</code>: <code>\"postAcceptAlert\"</code> = 'postAcceptAlert' } <code>/session/:sessionId/alert/accept.POST.command</code> <code>\"postAcceptAlert\"</code> <code>/session/:sessionId/alert/dismiss</code> { <code>POST</code>: { <code>command</code>: <code>\"postDismissAlert\"</code> = 'postDismissAlert' }  } <code>/session/:sessionId/alert/dismiss.POST</code> { <code>command</code>: <code>\"postDismissAlert\"</code> = 'postDismissAlert' } <code>/session/:sessionId/alert/dismiss.POST.command</code> <code>\"postDismissAlert\"</code> <code>/session/:sessionId/alert/text</code> { <code>GET</code>: { <code>command</code>: <code>\"getAlertText\"</code> = 'getAlertText' } ; <code>POST</code>: { <code>command</code>: <code>\"setAlertText\"</code> = 'setAlertText'; <code>payloadParams</code>: { <code>makeArgs</code>: (<code>jsonObj</code>: <code>any</code>) =&gt; <code>any</code>[] ; <code>optional</code>: <code>string</code>[] ; <code>validate</code>: (<code>jsonObj</code>: <code>any</code>) =&gt; <code>false</code> | <code>\"either \\\"text\\\" or \\\"value\\\" must be set\"</code>  } = SET_ALERT_TEXT_PAYLOAD_PARAMS }  } <code>/session/:sessionId/alert/text.GET</code> { <code>command</code>: <code>\"getAlertText\"</code> = 'getAlertText' } <code>/session/:sessionId/alert/text.GET.command</code> <code>\"getAlertText\"</code> <code>/session/:sessionId/alert/text.POST</code> { <code>command</code>: <code>\"setAlertText\"</code> = 'setAlertText'; <code>payloadParams</code>: { <code>makeArgs</code>: (<code>jsonObj</code>: <code>any</code>) =&gt; <code>any</code>[] ; <code>optional</code>: <code>string</code>[] ; <code>validate</code>: (<code>jsonObj</code>: <code>any</code>) =&gt; <code>false</code> | <code>\"either \\\"text\\\" or \\\"value\\\" must be set\"</code>  } = SET_ALERT_TEXT_PAYLOAD_PARAMS } <code>/session/:sessionId/alert/text.POST.command</code> <code>\"setAlertText\"</code> <code>/session/:sessionId/alert/text.POST.payloadParams</code> { <code>makeArgs</code>: (<code>jsonObj</code>: <code>any</code>) =&gt; <code>any</code>[] ; <code>optional</code>: <code>string</code>[] ; <code>validate</code>: (<code>jsonObj</code>: <code>any</code>) =&gt; <code>false</code> | <code>\"either \\\"text\\\" or \\\"value\\\" must be set\"</code>  } <code>/session/:sessionId/alert/text.POST.payloadParams.makeArgs</code> (<code>jsonObj</code>: <code>any</code>) =&gt; <code>any</code>[] <code>/session/:sessionId/alert/text.POST.payloadParams.optional</code> <code>string</code>[] <code>/session/:sessionId/alert/text.POST.payloadParams.validate</code> (<code>jsonObj</code>: <code>any</code>) =&gt; <code>false</code> | <code>\"either \\\"text\\\" or \\\"value\\\" must be set\"</code> <code>/session/:sessionId/alert_text</code> { <code>GET</code>: { <code>command</code>: <code>\"getAlertText\"</code> = 'getAlertText' } ; <code>POST</code>: { <code>command</code>: <code>\"setAlertText\"</code> = 'setAlertText'; <code>payloadParams</code>: { <code>makeArgs</code>: (<code>jsonObj</code>: <code>any</code>) =&gt; <code>any</code>[] ; <code>optional</code>: <code>string</code>[] ; <code>validate</code>: (<code>jsonObj</code>: <code>any</code>) =&gt; <code>false</code> | <code>\"either \\\"text\\\" or \\\"value\\\" must be set\"</code>  } = SET_ALERT_TEXT_PAYLOAD_PARAMS }  } <code>/session/:sessionId/alert_text.GET</code> { <code>command</code>: <code>\"getAlertText\"</code> = 'getAlertText' } <code>/session/:sessionId/alert_text.GET.command</code> <code>\"getAlertText\"</code> <code>/session/:sessionId/alert_text.POST</code> { <code>command</code>: <code>\"setAlertText\"</code> = 'setAlertText'; <code>payloadParams</code>: { <code>makeArgs</code>: (<code>jsonObj</code>: <code>any</code>) =&gt; <code>any</code>[] ; <code>optional</code>: <code>string</code>[] ; <code>validate</code>: (<code>jsonObj</code>: <code>any</code>) =&gt; <code>false</code> | <code>\"either \\\"text\\\" or \\\"value\\\" must be set\"</code>  } = SET_ALERT_TEXT_PAYLOAD_PARAMS } <code>/session/:sessionId/alert_text.POST.command</code> <code>\"setAlertText\"</code> <code>/session/:sessionId/alert_text.POST.payloadParams</code> { <code>makeArgs</code>: (<code>jsonObj</code>: <code>any</code>) =&gt; <code>any</code>[] ; <code>optional</code>: <code>string</code>[] ; <code>validate</code>: (<code>jsonObj</code>: <code>any</code>) =&gt; <code>false</code> | <code>\"either \\\"text\\\" or \\\"value\\\" must be set\"</code>  } <code>/session/:sessionId/alert_text.POST.payloadParams.makeArgs</code> (<code>jsonObj</code>: <code>any</code>) =&gt; <code>any</code>[] <code>/session/:sessionId/alert_text.POST.payloadParams.optional</code> <code>string</code>[] <code>/session/:sessionId/alert_text.POST.payloadParams.validate</code> (<code>jsonObj</code>: <code>any</code>) =&gt; <code>false</code> | <code>\"either \\\"text\\\" or \\\"value\\\" must be set\"</code> <code>/session/:sessionId/appium/app/background</code> { <code>POST</code>: { <code>command</code>: <code>\"background\"</code> = 'background'; <code>deprecated</code>: <code>true</code> = true; <code>payloadParams</code>: { <code>required</code>: readonly [<code>\"seconds\"</code>]  }  }  } <code>/session/:sessionId/appium/app/background.POST</code> { <code>command</code>: <code>\"background\"</code> = 'background'; <code>deprecated</code>: <code>true</code> = true; <code>payloadParams</code>: { <code>required</code>: readonly [<code>\"seconds\"</code>]  }  } <code>/session/:sessionId/appium/app/background.POST.command</code> <code>\"background\"</code> <code>/session/:sessionId/appium/app/background.POST.deprecated</code> <code>true</code> <code>/session/:sessionId/appium/app/background.POST.payloadParams</code> { <code>required</code>: readonly [<code>\"seconds\"</code>]  } <code>/session/:sessionId/appium/app/background.POST.payloadParams.required</code> readonly [<code>\"seconds\"</code>] <code>/session/:sessionId/appium/app/close</code> { <code>POST</code>: { <code>command</code>: <code>\"closeApp\"</code> = 'closeApp'; <code>deprecated</code>: <code>true</code> = true }  } <code>/session/:sessionId/appium/app/close.POST</code> { <code>command</code>: <code>\"closeApp\"</code> = 'closeApp'; <code>deprecated</code>: <code>true</code> = true } <code>/session/:sessionId/appium/app/close.POST.command</code> <code>\"closeApp\"</code> <code>/session/:sessionId/appium/app/close.POST.deprecated</code> <code>true</code> <code>/session/:sessionId/appium/app/end_test_coverage</code> { <code>POST</code>: { <code>command</code>: <code>\"endCoverage\"</code> = 'endCoverage'; <code>deprecated</code>: <code>true</code> = true; <code>payloadParams</code>: { <code>required</code>: readonly [<code>\"intent\"</code>, <code>\"path\"</code>]  }  }  } <code>/session/:sessionId/appium/app/end_test_coverage.POST</code> { <code>command</code>: <code>\"endCoverage\"</code> = 'endCoverage'; <code>deprecated</code>: <code>true</code> = true; <code>payloadParams</code>: { <code>required</code>: readonly [<code>\"intent\"</code>, <code>\"path\"</code>]  }  } <code>/session/:sessionId/appium/app/end_test_coverage.POST.command</code> <code>\"endCoverage\"</code> <code>/session/:sessionId/appium/app/end_test_coverage.POST.deprecated</code> <code>true</code> <code>/session/:sessionId/appium/app/end_test_coverage.POST.payloadParams</code> { <code>required</code>: readonly [<code>\"intent\"</code>, <code>\"path\"</code>]  } <code>/session/:sessionId/appium/app/end_test_coverage.POST.payloadParams.required</code> readonly [<code>\"intent\"</code>, <code>\"path\"</code>] <code>/session/:sessionId/appium/app/launch</code> { <code>POST</code>: { <code>command</code>: <code>\"launchApp\"</code> = 'launchApp'; <code>deprecated</code>: <code>true</code> = true }  } <code>/session/:sessionId/appium/app/launch.POST</code> { <code>command</code>: <code>\"launchApp\"</code> = 'launchApp'; <code>deprecated</code>: <code>true</code> = true } <code>/session/:sessionId/appium/app/launch.POST.command</code> <code>\"launchApp\"</code> <code>/session/:sessionId/appium/app/launch.POST.deprecated</code> <code>true</code> <code>/session/:sessionId/appium/app/reset</code> { <code>POST</code>: { <code>command</code>: <code>\"reset\"</code> = 'reset'; <code>deprecated</code>: <code>true</code> = true }  } <code>/session/:sessionId/appium/app/reset.POST</code> { <code>command</code>: <code>\"reset\"</code> = 'reset'; <code>deprecated</code>: <code>true</code> = true } <code>/session/:sessionId/appium/app/reset.POST.command</code> <code>\"reset\"</code> <code>/session/:sessionId/appium/app/reset.POST.deprecated</code> <code>true</code> <code>/session/:sessionId/appium/app/strings</code> { <code>POST</code>: { <code>command</code>: <code>\"getStrings\"</code> = 'getStrings'; <code>deprecated</code>: <code>true</code> = true; <code>payloadParams</code>: { <code>optional</code>: readonly [<code>\"language\"</code>, <code>\"stringFile\"</code>]  }  }  } <code>/session/:sessionId/appium/app/strings.POST</code> { <code>command</code>: <code>\"getStrings\"</code> = 'getStrings'; <code>deprecated</code>: <code>true</code> = true; <code>payloadParams</code>: { <code>optional</code>: readonly [<code>\"language\"</code>, <code>\"stringFile\"</code>]  }  } <code>/session/:sessionId/appium/app/strings.POST.command</code> <code>\"getStrings\"</code> <code>/session/:sessionId/appium/app/strings.POST.deprecated</code> <code>true</code> <code>/session/:sessionId/appium/app/strings.POST.payloadParams</code> { <code>optional</code>: readonly [<code>\"language\"</code>, <code>\"stringFile\"</code>]  } <code>/session/:sessionId/appium/app/strings.POST.payloadParams.optional</code> readonly [<code>\"language\"</code>, <code>\"stringFile\"</code>] <code>/session/:sessionId/appium/device/activate_app</code> { <code>POST</code>: { <code>command</code>: <code>\"activateApp\"</code> = 'activateApp'; <code>payloadParams</code>: { <code>optional</code>: readonly [<code>\"options\"</code>] ; <code>required</code>: readonly [readonly [<code>\"appId\"</code>], readonly [<code>\"bundleId\"</code>]]  }  }  } <code>/session/:sessionId/appium/device/activate_app.POST</code> { <code>command</code>: <code>\"activateApp\"</code> = 'activateApp'; <code>payloadParams</code>: { <code>optional</code>: readonly [<code>\"options\"</code>] ; <code>required</code>: readonly [readonly [<code>\"appId\"</code>], readonly [<code>\"bundleId\"</code>]]  }  } <code>/session/:sessionId/appium/device/activate_app.POST.command</code> <code>\"activateApp\"</code> <code>/session/:sessionId/appium/device/activate_app.POST.payloadParams</code> { <code>optional</code>: readonly [<code>\"options\"</code>] ; <code>required</code>: readonly [readonly [<code>\"appId\"</code>], readonly [<code>\"bundleId\"</code>]]  } <code>/session/:sessionId/appium/device/activate_app.POST.payloadParams.optional</code> readonly [<code>\"options\"</code>] <code>/session/:sessionId/appium/device/activate_app.POST.payloadParams.required</code> readonly [readonly [<code>\"appId\"</code>], readonly [<code>\"bundleId\"</code>]] <code>/session/:sessionId/appium/device/app_installed</code> { <code>POST</code>: { <code>command</code>: <code>\"isAppInstalled\"</code> = 'isAppInstalled'; <code>payloadParams</code>: { <code>required</code>: readonly [readonly [<code>\"appId\"</code>], readonly [<code>\"bundleId\"</code>]]  }  }  } <code>/session/:sessionId/appium/device/app_installed.POST</code> { <code>command</code>: <code>\"isAppInstalled\"</code> = 'isAppInstalled'; <code>payloadParams</code>: { <code>required</code>: readonly [readonly [<code>\"appId\"</code>], readonly [<code>\"bundleId\"</code>]]  }  } <code>/session/:sessionId/appium/device/app_installed.POST.command</code> <code>\"isAppInstalled\"</code> <code>/session/:sessionId/appium/device/app_installed.POST.payloadParams</code> { <code>required</code>: readonly [readonly [<code>\"appId\"</code>], readonly [<code>\"bundleId\"</code>]]  } <code>/session/:sessionId/appium/device/app_installed.POST.payloadParams.required</code> readonly [readonly [<code>\"appId\"</code>], readonly [<code>\"bundleId\"</code>]] <code>/session/:sessionId/appium/device/app_state</code> { <code>GET</code>: { <code>command</code>: <code>\"queryAppState\"</code> = 'queryAppState'; <code>payloadParams</code>: { <code>required</code>: readonly [readonly [<code>\"appId\"</code>], readonly [<code>\"bundleId\"</code>]]  }  } ; <code>POST</code>: { <code>command</code>: <code>\"queryAppState\"</code> = 'queryAppState'; <code>deprecated</code>: <code>true</code> = true; <code>payloadParams</code>: { <code>required</code>: readonly [readonly [<code>\"appId\"</code>], readonly [<code>\"bundleId\"</code>]]  }  }  } <code>/session/:sessionId/appium/device/app_state.GET</code> { <code>command</code>: <code>\"queryAppState\"</code> = 'queryAppState'; <code>payloadParams</code>: { <code>required</code>: readonly [readonly [<code>\"appId\"</code>], readonly [<code>\"bundleId\"</code>]]  }  } <code>/session/:sessionId/appium/device/app_state.GET.command</code> <code>\"queryAppState\"</code> <code>/session/:sessionId/appium/device/app_state.GET.payloadParams</code> { <code>required</code>: readonly [readonly [<code>\"appId\"</code>], readonly [<code>\"bundleId\"</code>]]  } <code>/session/:sessionId/appium/device/app_state.GET.payloadParams.required</code> readonly [readonly [<code>\"appId\"</code>], readonly [<code>\"bundleId\"</code>]] <code>/session/:sessionId/appium/device/app_state.POST</code> { <code>command</code>: <code>\"queryAppState\"</code> = 'queryAppState'; <code>deprecated</code>: <code>true</code> = true; <code>payloadParams</code>: { <code>required</code>: readonly [readonly [<code>\"appId\"</code>], readonly [<code>\"bundleId\"</code>]]  }  } <code>/session/:sessionId/appium/device/app_state.POST.command</code> <code>\"queryAppState\"</code> <code>/session/:sessionId/appium/device/app_state.POST.deprecated</code> <code>true</code> <code>/session/:sessionId/appium/device/app_state.POST.payloadParams</code> { <code>required</code>: readonly [readonly [<code>\"appId\"</code>], readonly [<code>\"bundleId\"</code>]]  } <code>/session/:sessionId/appium/device/app_state.POST.payloadParams.required</code> readonly [readonly [<code>\"appId\"</code>], readonly [<code>\"bundleId\"</code>]] <code>/session/:sessionId/appium/device/current_activity</code> { <code>GET</code>: { <code>command</code>: <code>\"getCurrentActivity\"</code> = 'getCurrentActivity'; <code>deprecated</code>: <code>true</code> = true }  } <code>/session/:sessionId/appium/device/current_activity.GET</code> { <code>command</code>: <code>\"getCurrentActivity\"</code> = 'getCurrentActivity'; <code>deprecated</code>: <code>true</code> = true } <code>/session/:sessionId/appium/device/current_activity.GET.command</code> <code>\"getCurrentActivity\"</code> <code>/session/:sessionId/appium/device/current_activity.GET.deprecated</code> <code>true</code> <code>/session/:sessionId/appium/device/current_package</code> { <code>GET</code>: { <code>command</code>: <code>\"getCurrentPackage\"</code> = 'getCurrentPackage'; <code>deprecated</code>: <code>true</code> = true }  } <code>/session/:sessionId/appium/device/current_package.GET</code> { <code>command</code>: <code>\"getCurrentPackage\"</code> = 'getCurrentPackage'; <code>deprecated</code>: <code>true</code> = true } <code>/session/:sessionId/appium/device/current_package.GET.command</code> <code>\"getCurrentPackage\"</code> <code>/session/:sessionId/appium/device/current_package.GET.deprecated</code> <code>true</code> <code>/session/:sessionId/appium/device/display_density</code> { <code>GET</code>: { <code>command</code>: <code>\"getDisplayDensity\"</code> = 'getDisplayDensity'; <code>deprecated</code>: <code>true</code> = true }  } <code>/session/:sessionId/appium/device/display_density.GET</code> { <code>command</code>: <code>\"getDisplayDensity\"</code> = 'getDisplayDensity'; <code>deprecated</code>: <code>true</code> = true } <code>/session/:sessionId/appium/device/display_density.GET.command</code> <code>\"getDisplayDensity\"</code> <code>/session/:sessionId/appium/device/display_density.GET.deprecated</code> <code>true</code> <code>/session/:sessionId/appium/device/finger_print</code> { <code>POST</code>: { <code>command</code>: <code>\"fingerprint\"</code> = 'fingerprint'; <code>deprecated</code>: <code>true</code> = true; <code>payloadParams</code>: { <code>required</code>: readonly [<code>\"fingerprintId\"</code>]  }  }  } <code>/session/:sessionId/appium/device/finger_print.POST</code> { <code>command</code>: <code>\"fingerprint\"</code> = 'fingerprint'; <code>deprecated</code>: <code>true</code> = true; <code>payloadParams</code>: { <code>required</code>: readonly [<code>\"fingerprintId\"</code>]  }  } <code>/session/:sessionId/appium/device/finger_print.POST.command</code> <code>\"fingerprint\"</code> <code>/session/:sessionId/appium/device/finger_print.POST.deprecated</code> <code>true</code> <code>/session/:sessionId/appium/device/finger_print.POST.payloadParams</code> { <code>required</code>: readonly [<code>\"fingerprintId\"</code>]  } <code>/session/:sessionId/appium/device/finger_print.POST.payloadParams.required</code> readonly [<code>\"fingerprintId\"</code>] <code>/session/:sessionId/appium/device/get_clipboard</code> { <code>POST</code>: { <code>command</code>: <code>\"getClipboard\"</code> = 'getClipboard'; <code>deprecated</code>: <code>true</code> = true; <code>payloadParams</code>: { <code>optional</code>: readonly [<code>\"contentType\"</code>]  }  }  } <code>/session/:sessionId/appium/device/get_clipboard.POST</code> { <code>command</code>: <code>\"getClipboard\"</code> = 'getClipboard'; <code>deprecated</code>: <code>true</code> = true; <code>payloadParams</code>: { <code>optional</code>: readonly [<code>\"contentType\"</code>]  }  } <code>/session/:sessionId/appium/device/get_clipboard.POST.command</code> <code>\"getClipboard\"</code> <code>/session/:sessionId/appium/device/get_clipboard.POST.deprecated</code> <code>true</code> <code>/session/:sessionId/appium/device/get_clipboard.POST.payloadParams</code> { <code>optional</code>: readonly [<code>\"contentType\"</code>]  } <code>/session/:sessionId/appium/device/get_clipboard.POST.payloadParams.optional</code> readonly [<code>\"contentType\"</code>] <code>/session/:sessionId/appium/device/gsm_call</code> { <code>POST</code>: { <code>command</code>: <code>\"gsmCall\"</code> = 'gsmCall'; <code>deprecated</code>: <code>true</code> = true; <code>payloadParams</code>: { <code>required</code>: readonly [<code>\"phoneNumber\"</code>, <code>\"action\"</code>]  }  }  } <code>/session/:sessionId/appium/device/gsm_call.POST</code> { <code>command</code>: <code>\"gsmCall\"</code> = 'gsmCall'; <code>deprecated</code>: <code>true</code> = true; <code>payloadParams</code>: { <code>required</code>: readonly [<code>\"phoneNumber\"</code>, <code>\"action\"</code>]  }  } <code>/session/:sessionId/appium/device/gsm_call.POST.command</code> <code>\"gsmCall\"</code> <code>/session/:sessionId/appium/device/gsm_call.POST.deprecated</code> <code>true</code> <code>/session/:sessionId/appium/device/gsm_call.POST.payloadParams</code> { <code>required</code>: readonly [<code>\"phoneNumber\"</code>, <code>\"action\"</code>]  } <code>/session/:sessionId/appium/device/gsm_call.POST.payloadParams.required</code> readonly [<code>\"phoneNumber\"</code>, <code>\"action\"</code>] <code>/session/:sessionId/appium/device/gsm_signal</code> { <code>POST</code>: { <code>command</code>: <code>\"gsmSignal\"</code> = 'gsmSignal'; <code>deprecated</code>: <code>true</code> = true; <code>payloadParams</code>: { <code>required</code>: readonly [<code>\"signalStrength\"</code>]  }  }  } <code>/session/:sessionId/appium/device/gsm_signal.POST</code> { <code>command</code>: <code>\"gsmSignal\"</code> = 'gsmSignal'; <code>deprecated</code>: <code>true</code> = true; <code>payloadParams</code>: { <code>required</code>: readonly [<code>\"signalStrength\"</code>]  }  } <code>/session/:sessionId/appium/device/gsm_signal.POST.command</code> <code>\"gsmSignal\"</code> <code>/session/:sessionId/appium/device/gsm_signal.POST.deprecated</code> <code>true</code> <code>/session/:sessionId/appium/device/gsm_signal.POST.payloadParams</code> { <code>required</code>: readonly [<code>\"signalStrength\"</code>]  } <code>/session/:sessionId/appium/device/gsm_signal.POST.payloadParams.required</code> readonly [<code>\"signalStrength\"</code>] <code>/session/:sessionId/appium/device/gsm_voice</code> { <code>POST</code>: { <code>command</code>: <code>\"gsmVoice\"</code> = 'gsmVoice'; <code>deprecated</code>: <code>true</code> = true; <code>payloadParams</code>: { <code>required</code>: readonly [<code>\"state\"</code>]  }  }  } <code>/session/:sessionId/appium/device/gsm_voice.POST</code> { <code>command</code>: <code>\"gsmVoice\"</code> = 'gsmVoice'; <code>deprecated</code>: <code>true</code> = true; <code>payloadParams</code>: { <code>required</code>: readonly [<code>\"state\"</code>]  }  } <code>/session/:sessionId/appium/device/gsm_voice.POST.command</code> <code>\"gsmVoice\"</code> <code>/session/:sessionId/appium/device/gsm_voice.POST.deprecated</code> <code>true</code> <code>/session/:sessionId/appium/device/gsm_voice.POST.payloadParams</code> { <code>required</code>: readonly [<code>\"state\"</code>]  } <code>/session/:sessionId/appium/device/gsm_voice.POST.payloadParams.required</code> readonly [<code>\"state\"</code>] <code>/session/:sessionId/appium/device/hide_keyboard</code> { <code>POST</code>: { <code>command</code>: <code>\"hideKeyboard\"</code> = 'hideKeyboard'; <code>payloadParams</code>: { <code>optional</code>: readonly [<code>\"strategy\"</code>, <code>\"key\"</code>, <code>\"keyCode\"</code>, <code>\"keyName\"</code>]  }  }  } <code>/session/:sessionId/appium/device/hide_keyboard.POST</code> { <code>command</code>: <code>\"hideKeyboard\"</code> = 'hideKeyboard'; <code>payloadParams</code>: { <code>optional</code>: readonly [<code>\"strategy\"</code>, <code>\"key\"</code>, <code>\"keyCode\"</code>, <code>\"keyName\"</code>]  }  } <code>/session/:sessionId/appium/device/hide_keyboard.POST.command</code> <code>\"hideKeyboard\"</code> <code>/session/:sessionId/appium/device/hide_keyboard.POST.payloadParams</code> { <code>optional</code>: readonly [<code>\"strategy\"</code>, <code>\"key\"</code>, <code>\"keyCode\"</code>, <code>\"keyName\"</code>]  } <code>/session/:sessionId/appium/device/hide_keyboard.POST.payloadParams.optional</code> readonly [<code>\"strategy\"</code>, <code>\"key\"</code>, <code>\"keyCode\"</code>, <code>\"keyName\"</code>] <code>/session/:sessionId/appium/device/install_app</code> { <code>POST</code>: { <code>command</code>: <code>\"installApp\"</code> = 'installApp'; <code>payloadParams</code>: { <code>optional</code>: readonly [<code>\"options\"</code>] ; <code>required</code>: readonly [<code>\"appPath\"</code>]  }  }  } <code>/session/:sessionId/appium/device/install_app.POST</code> { <code>command</code>: <code>\"installApp\"</code> = 'installApp'; <code>payloadParams</code>: { <code>optional</code>: readonly [<code>\"options\"</code>] ; <code>required</code>: readonly [<code>\"appPath\"</code>]  }  } <code>/session/:sessionId/appium/device/install_app.POST.command</code> <code>\"installApp\"</code> <code>/session/:sessionId/appium/device/install_app.POST.payloadParams</code> { <code>optional</code>: readonly [<code>\"options\"</code>] ; <code>required</code>: readonly [<code>\"appPath\"</code>]  } <code>/session/:sessionId/appium/device/install_app.POST.payloadParams.optional</code> readonly [<code>\"options\"</code>] <code>/session/:sessionId/appium/device/install_app.POST.payloadParams.required</code> readonly [<code>\"appPath\"</code>] <code>/session/:sessionId/appium/device/is_keyboard_shown</code> { <code>GET</code>: { <code>command</code>: <code>\"isKeyboardShown\"</code> = 'isKeyboardShown' }  } <code>/session/:sessionId/appium/device/is_keyboard_shown.GET</code> { <code>command</code>: <code>\"isKeyboardShown\"</code> = 'isKeyboardShown' } <code>/session/:sessionId/appium/device/is_keyboard_shown.GET.command</code> <code>\"isKeyboardShown\"</code> <code>/session/:sessionId/appium/device/is_locked</code> { <code>POST</code>: { <code>command</code>: <code>\"isLocked\"</code> = 'isLocked'; <code>deprecated</code>: <code>true</code> = true }  } <code>/session/:sessionId/appium/device/is_locked.POST</code> { <code>command</code>: <code>\"isLocked\"</code> = 'isLocked'; <code>deprecated</code>: <code>true</code> = true } <code>/session/:sessionId/appium/device/is_locked.POST.command</code> <code>\"isLocked\"</code> <code>/session/:sessionId/appium/device/is_locked.POST.deprecated</code> <code>true</code> <code>/session/:sessionId/appium/device/keyevent</code> { <code>POST</code>: { <code>command</code>: <code>\"keyevent\"</code> = 'keyevent'; <code>deprecated</code>: <code>true</code> = true; <code>payloadParams</code>: { <code>optional</code>: readonly [<code>\"metastate\"</code>] ; <code>required</code>: readonly [<code>\"keycode\"</code>]  }  }  } <code>/session/:sessionId/appium/device/keyevent.POST</code> { <code>command</code>: <code>\"keyevent\"</code> = 'keyevent'; <code>deprecated</code>: <code>true</code> = true; <code>payloadParams</code>: { <code>optional</code>: readonly [<code>\"metastate\"</code>] ; <code>required</code>: readonly [<code>\"keycode\"</code>]  }  } <code>/session/:sessionId/appium/device/keyevent.POST.command</code> <code>\"keyevent\"</code> <code>/session/:sessionId/appium/device/keyevent.POST.deprecated</code> <code>true</code> <code>/session/:sessionId/appium/device/keyevent.POST.payloadParams</code> { <code>optional</code>: readonly [<code>\"metastate\"</code>] ; <code>required</code>: readonly [<code>\"keycode\"</code>]  } <code>/session/:sessionId/appium/device/keyevent.POST.payloadParams.optional</code> readonly [<code>\"metastate\"</code>] <code>/session/:sessionId/appium/device/keyevent.POST.payloadParams.required</code> readonly [<code>\"keycode\"</code>] <code>/session/:sessionId/appium/device/lock</code> { <code>POST</code>: { <code>command</code>: <code>\"lock\"</code> = 'lock'; <code>deprecated</code>: <code>true</code> = true; <code>payloadParams</code>: { <code>optional</code>: readonly [<code>\"seconds\"</code>]  }  }  } <code>/session/:sessionId/appium/device/lock.POST</code> { <code>command</code>: <code>\"lock\"</code> = 'lock'; <code>deprecated</code>: <code>true</code> = true; <code>payloadParams</code>: { <code>optional</code>: readonly [<code>\"seconds\"</code>]  }  } <code>/session/:sessionId/appium/device/lock.POST.command</code> <code>\"lock\"</code> <code>/session/:sessionId/appium/device/lock.POST.deprecated</code> <code>true</code> <code>/session/:sessionId/appium/device/lock.POST.payloadParams</code> { <code>optional</code>: readonly [<code>\"seconds\"</code>]  } <code>/session/:sessionId/appium/device/lock.POST.payloadParams.optional</code> readonly [<code>\"seconds\"</code>] <code>/session/:sessionId/appium/device/long_press_keycode</code> { <code>POST</code>: { <code>command</code>: <code>\"longPressKeyCode\"</code> = 'longPressKeyCode'; <code>deprecated</code>: <code>true</code> = true; <code>payloadParams</code>: { <code>optional</code>: readonly [<code>\"metastate\"</code>, <code>\"flags\"</code>] ; <code>required</code>: readonly [<code>\"keycode\"</code>]  }  }  } <code>/session/:sessionId/appium/device/long_press_keycode.POST</code> { <code>command</code>: <code>\"longPressKeyCode\"</code> = 'longPressKeyCode'; <code>deprecated</code>: <code>true</code> = true; <code>payloadParams</code>: { <code>optional</code>: readonly [<code>\"metastate\"</code>, <code>\"flags\"</code>] ; <code>required</code>: readonly [<code>\"keycode\"</code>]  }  } <code>/session/:sessionId/appium/device/long_press_keycode.POST.command</code> <code>\"longPressKeyCode\"</code> <code>/session/:sessionId/appium/device/long_press_keycode.POST.deprecated</code> <code>true</code> <code>/session/:sessionId/appium/device/long_press_keycode.POST.payloadParams</code> { <code>optional</code>: readonly [<code>\"metastate\"</code>, <code>\"flags\"</code>] ; <code>required</code>: readonly [<code>\"keycode\"</code>]  } <code>/session/:sessionId/appium/device/long_press_keycode.POST.payloadParams.optional</code> readonly [<code>\"metastate\"</code>, <code>\"flags\"</code>] <code>/session/:sessionId/appium/device/long_press_keycode.POST.payloadParams.required</code> readonly [<code>\"keycode\"</code>] <code>/session/:sessionId/appium/device/network_speed</code> { <code>POST</code>: { <code>command</code>: <code>\"networkSpeed\"</code> = 'networkSpeed'; <code>deprecated</code>: <code>true</code> = true; <code>payloadParams</code>: { <code>required</code>: readonly [<code>\"netspeed\"</code>]  }  }  } <code>/session/:sessionId/appium/device/network_speed.POST</code> { <code>command</code>: <code>\"networkSpeed\"</code> = 'networkSpeed'; <code>deprecated</code>: <code>true</code> = true; <code>payloadParams</code>: { <code>required</code>: readonly [<code>\"netspeed\"</code>]  }  } <code>/session/:sessionId/appium/device/network_speed.POST.command</code> <code>\"networkSpeed\"</code> <code>/session/:sessionId/appium/device/network_speed.POST.deprecated</code> <code>true</code> <code>/session/:sessionId/appium/device/network_speed.POST.payloadParams</code> { <code>required</code>: readonly [<code>\"netspeed\"</code>]  } <code>/session/:sessionId/appium/device/network_speed.POST.payloadParams.required</code> readonly [<code>\"netspeed\"</code>] <code>/session/:sessionId/appium/device/open_notifications</code> { <code>POST</code>: { <code>command</code>: <code>\"openNotifications\"</code> = 'openNotifications'; <code>deprecated</code>: <code>true</code> = true }  } <code>/session/:sessionId/appium/device/open_notifications.POST</code> { <code>command</code>: <code>\"openNotifications\"</code> = 'openNotifications'; <code>deprecated</code>: <code>true</code> = true } <code>/session/:sessionId/appium/device/open_notifications.POST.command</code> <code>\"openNotifications\"</code> <code>/session/:sessionId/appium/device/open_notifications.POST.deprecated</code> <code>true</code> <code>/session/:sessionId/appium/device/power_ac</code> { <code>POST</code>: { <code>command</code>: <code>\"powerAC\"</code> = 'powerAC'; <code>deprecated</code>: <code>true</code> = true; <code>payloadParams</code>: { <code>required</code>: readonly [<code>\"state\"</code>]  }  }  } <code>/session/:sessionId/appium/device/power_ac.POST</code> { <code>command</code>: <code>\"powerAC\"</code> = 'powerAC'; <code>deprecated</code>: <code>true</code> = true; <code>payloadParams</code>: { <code>required</code>: readonly [<code>\"state\"</code>]  }  } <code>/session/:sessionId/appium/device/power_ac.POST.command</code> <code>\"powerAC\"</code> <code>/session/:sessionId/appium/device/power_ac.POST.deprecated</code> <code>true</code> <code>/session/:sessionId/appium/device/power_ac.POST.payloadParams</code> { <code>required</code>: readonly [<code>\"state\"</code>]  } <code>/session/:sessionId/appium/device/power_ac.POST.payloadParams.required</code> readonly [<code>\"state\"</code>] <code>/session/:sessionId/appium/device/power_capacity</code> { <code>POST</code>: { <code>command</code>: <code>\"powerCapacity\"</code> = 'powerCapacity'; <code>deprecated</code>: <code>true</code> = true; <code>payloadParams</code>: { <code>required</code>: readonly [<code>\"percent\"</code>]  }  }  } <code>/session/:sessionId/appium/device/power_capacity.POST</code> { <code>command</code>: <code>\"powerCapacity\"</code> = 'powerCapacity'; <code>deprecated</code>: <code>true</code> = true; <code>payloadParams</code>: { <code>required</code>: readonly [<code>\"percent\"</code>]  }  } <code>/session/:sessionId/appium/device/power_capacity.POST.command</code> <code>\"powerCapacity\"</code> <code>/session/:sessionId/appium/device/power_capacity.POST.deprecated</code> <code>true</code> <code>/session/:sessionId/appium/device/power_capacity.POST.payloadParams</code> { <code>required</code>: readonly [<code>\"percent\"</code>]  } <code>/session/:sessionId/appium/device/power_capacity.POST.payloadParams.required</code> readonly [<code>\"percent\"</code>] <code>/session/:sessionId/appium/device/press_keycode</code> { <code>POST</code>: { <code>command</code>: <code>\"pressKeyCode\"</code> = 'pressKeyCode'; <code>deprecated</code>: <code>true</code> = true; <code>payloadParams</code>: { <code>optional</code>: readonly [<code>\"metastate\"</code>, <code>\"flags\"</code>] ; <code>required</code>: readonly [<code>\"keycode\"</code>]  }  }  } <code>/session/:sessionId/appium/device/press_keycode.POST</code> { <code>command</code>: <code>\"pressKeyCode\"</code> = 'pressKeyCode'; <code>deprecated</code>: <code>true</code> = true; <code>payloadParams</code>: { <code>optional</code>: readonly [<code>\"metastate\"</code>, <code>\"flags\"</code>] ; <code>required</code>: readonly [<code>\"keycode\"</code>]  }  } <code>/session/:sessionId/appium/device/press_keycode.POST.command</code> <code>\"pressKeyCode\"</code> <code>/session/:sessionId/appium/device/press_keycode.POST.deprecated</code> <code>true</code> <code>/session/:sessionId/appium/device/press_keycode.POST.payloadParams</code> { <code>optional</code>: readonly [<code>\"metastate\"</code>, <code>\"flags\"</code>] ; <code>required</code>: readonly [<code>\"keycode\"</code>]  } <code>/session/:sessionId/appium/device/press_keycode.POST.payloadParams.optional</code> readonly [<code>\"metastate\"</code>, <code>\"flags\"</code>] <code>/session/:sessionId/appium/device/press_keycode.POST.payloadParams.required</code> readonly [<code>\"keycode\"</code>] <code>/session/:sessionId/appium/device/pull_file</code> { <code>POST</code>: { <code>command</code>: <code>\"pullFile\"</code> = 'pullFile'; <code>payloadParams</code>: { <code>required</code>: readonly [<code>\"path\"</code>]  }  }  } <code>/session/:sessionId/appium/device/pull_file.POST</code> { <code>command</code>: <code>\"pullFile\"</code> = 'pullFile'; <code>payloadParams</code>: { <code>required</code>: readonly [<code>\"path\"</code>]  }  } <code>/session/:sessionId/appium/device/pull_file.POST.command</code> <code>\"pullFile\"</code> <code>/session/:sessionId/appium/device/pull_file.POST.payloadParams</code> { <code>required</code>: readonly [<code>\"path\"</code>]  } <code>/session/:sessionId/appium/device/pull_file.POST.payloadParams.required</code> readonly [<code>\"path\"</code>] <code>/session/:sessionId/appium/device/pull_folder</code> { <code>POST</code>: { <code>command</code>: <code>\"pullFolder\"</code> = 'pullFolder'; <code>payloadParams</code>: { <code>required</code>: readonly [<code>\"path\"</code>]  }  }  } <code>/session/:sessionId/appium/device/pull_folder.POST</code> { <code>command</code>: <code>\"pullFolder\"</code> = 'pullFolder'; <code>payloadParams</code>: { <code>required</code>: readonly [<code>\"path\"</code>]  }  } <code>/session/:sessionId/appium/device/pull_folder.POST.command</code> <code>\"pullFolder\"</code> <code>/session/:sessionId/appium/device/pull_folder.POST.payloadParams</code> { <code>required</code>: readonly [<code>\"path\"</code>]  } <code>/session/:sessionId/appium/device/pull_folder.POST.payloadParams.required</code> readonly [<code>\"path\"</code>] <code>/session/:sessionId/appium/device/push_file</code> { <code>POST</code>: { <code>command</code>: <code>\"pushFile\"</code> = 'pushFile'; <code>payloadParams</code>: { <code>required</code>: readonly [<code>\"path\"</code>, <code>\"data\"</code>]  }  }  } <code>/session/:sessionId/appium/device/push_file.POST</code> { <code>command</code>: <code>\"pushFile\"</code> = 'pushFile'; <code>payloadParams</code>: { <code>required</code>: readonly [<code>\"path\"</code>, <code>\"data\"</code>]  }  } <code>/session/:sessionId/appium/device/push_file.POST.command</code> <code>\"pushFile\"</code> <code>/session/:sessionId/appium/device/push_file.POST.payloadParams</code> { <code>required</code>: readonly [<code>\"path\"</code>, <code>\"data\"</code>]  } <code>/session/:sessionId/appium/device/push_file.POST.payloadParams.required</code> readonly [<code>\"path\"</code>, <code>\"data\"</code>] <code>/session/:sessionId/appium/device/remove_app</code> { <code>POST</code>: { <code>command</code>: <code>\"removeApp\"</code> = 'removeApp'; <code>payloadParams</code>: { <code>optional</code>: readonly [<code>\"options\"</code>] ; <code>required</code>: readonly [readonly [<code>\"appId\"</code>], readonly [<code>\"bundleId\"</code>]]  }  }  } <code>/session/:sessionId/appium/device/remove_app.POST</code> { <code>command</code>: <code>\"removeApp\"</code> = 'removeApp'; <code>payloadParams</code>: { <code>optional</code>: readonly [<code>\"options\"</code>] ; <code>required</code>: readonly [readonly [<code>\"appId\"</code>], readonly [<code>\"bundleId\"</code>]]  }  } <code>/session/:sessionId/appium/device/remove_app.POST.command</code> <code>\"removeApp\"</code> <code>/session/:sessionId/appium/device/remove_app.POST.payloadParams</code> { <code>optional</code>: readonly [<code>\"options\"</code>] ; <code>required</code>: readonly [readonly [<code>\"appId\"</code>], readonly [<code>\"bundleId\"</code>]]  } <code>/session/:sessionId/appium/device/remove_app.POST.payloadParams.optional</code> readonly [<code>\"options\"</code>] <code>/session/:sessionId/appium/device/remove_app.POST.payloadParams.required</code> readonly [readonly [<code>\"appId\"</code>], readonly [<code>\"bundleId\"</code>]] <code>/session/:sessionId/appium/device/rotate</code> { <code>POST</code>: { <code>command</code>: <code>\"mobileRotation\"</code> = 'mobileRotation'; <code>deprecated</code>: <code>true</code> = true; <code>payloadParams</code>: { <code>optional</code>: readonly [<code>\"element\"</code>] ; <code>required</code>: readonly [<code>\"x\"</code>, <code>\"y\"</code>, <code>\"radius\"</code>, <code>\"rotation\"</code>, <code>\"touchCount\"</code>, <code>\"duration\"</code>]  }  }  } <code>/session/:sessionId/appium/device/rotate.POST</code> { <code>command</code>: <code>\"mobileRotation\"</code> = 'mobileRotation'; <code>deprecated</code>: <code>true</code> = true; <code>payloadParams</code>: { <code>optional</code>: readonly [<code>\"element\"</code>] ; <code>required</code>: readonly [<code>\"x\"</code>, <code>\"y\"</code>, <code>\"radius\"</code>, <code>\"rotation\"</code>, <code>\"touchCount\"</code>, <code>\"duration\"</code>]  }  } <code>/session/:sessionId/appium/device/rotate.POST.command</code> <code>\"mobileRotation\"</code> <code>/session/:sessionId/appium/device/rotate.POST.deprecated</code> <code>true</code> <code>/session/:sessionId/appium/device/rotate.POST.payloadParams</code> { <code>optional</code>: readonly [<code>\"element\"</code>] ; <code>required</code>: readonly [<code>\"x\"</code>, <code>\"y\"</code>, <code>\"radius\"</code>, <code>\"rotation\"</code>, <code>\"touchCount\"</code>, <code>\"duration\"</code>]  } <code>/session/:sessionId/appium/device/rotate.POST.payloadParams.optional</code> readonly [<code>\"element\"</code>] <code>/session/:sessionId/appium/device/rotate.POST.payloadParams.required</code> readonly [<code>\"x\"</code>, <code>\"y\"</code>, <code>\"radius\"</code>, <code>\"rotation\"</code>, <code>\"touchCount\"</code>, <code>\"duration\"</code>] <code>/session/:sessionId/appium/device/send_sms</code> { <code>POST</code>: { <code>command</code>: <code>\"sendSMS\"</code> = 'sendSMS'; <code>deprecated</code>: <code>true</code> = true; <code>payloadParams</code>: { <code>required</code>: readonly [<code>\"phoneNumber\"</code>, <code>\"message\"</code>]  }  }  } <code>/session/:sessionId/appium/device/send_sms.POST</code> { <code>command</code>: <code>\"sendSMS\"</code> = 'sendSMS'; <code>deprecated</code>: <code>true</code> = true; <code>payloadParams</code>: { <code>required</code>: readonly [<code>\"phoneNumber\"</code>, <code>\"message\"</code>]  }  } <code>/session/:sessionId/appium/device/send_sms.POST.command</code> <code>\"sendSMS\"</code> <code>/session/:sessionId/appium/device/send_sms.POST.deprecated</code> <code>true</code> <code>/session/:sessionId/appium/device/send_sms.POST.payloadParams</code> { <code>required</code>: readonly [<code>\"phoneNumber\"</code>, <code>\"message\"</code>]  } <code>/session/:sessionId/appium/device/send_sms.POST.payloadParams.required</code> readonly [<code>\"phoneNumber\"</code>, <code>\"message\"</code>] <code>/session/:sessionId/appium/device/set_clipboard</code> { <code>POST</code>: { <code>command</code>: <code>\"setClipboard\"</code> = 'setClipboard'; <code>deprecated</code>: <code>true</code> = true; <code>payloadParams</code>: { <code>optional</code>: readonly [<code>\"contentType\"</code>, <code>\"label\"</code>] ; <code>required</code>: readonly [<code>\"content\"</code>]  }  }  } <code>/session/:sessionId/appium/device/set_clipboard.POST</code> { <code>command</code>: <code>\"setClipboard\"</code> = 'setClipboard'; <code>deprecated</code>: <code>true</code> = true; <code>payloadParams</code>: { <code>optional</code>: readonly [<code>\"contentType\"</code>, <code>\"label\"</code>] ; <code>required</code>: readonly [<code>\"content\"</code>]  }  } <code>/session/:sessionId/appium/device/set_clipboard.POST.command</code> <code>\"setClipboard\"</code> <code>/session/:sessionId/appium/device/set_clipboard.POST.deprecated</code> <code>true</code> <code>/session/:sessionId/appium/device/set_clipboard.POST.payloadParams</code> { <code>optional</code>: readonly [<code>\"contentType\"</code>, <code>\"label\"</code>] ; <code>required</code>: readonly [<code>\"content\"</code>]  } <code>/session/:sessionId/appium/device/set_clipboard.POST.payloadParams.optional</code> readonly [<code>\"contentType\"</code>, <code>\"label\"</code>] <code>/session/:sessionId/appium/device/set_clipboard.POST.payloadParams.required</code> readonly [<code>\"content\"</code>] <code>/session/:sessionId/appium/device/shake</code> { <code>POST</code>: { <code>command</code>: <code>\"mobileShake\"</code> = 'mobileShake'; <code>deprecated</code>: <code>true</code> = true }  } <code>/session/:sessionId/appium/device/shake.POST</code> { <code>command</code>: <code>\"mobileShake\"</code> = 'mobileShake'; <code>deprecated</code>: <code>true</code> = true } <code>/session/:sessionId/appium/device/shake.POST.command</code> <code>\"mobileShake\"</code> <code>/session/:sessionId/appium/device/shake.POST.deprecated</code> <code>true</code> <code>/session/:sessionId/appium/device/start_activity</code> { <code>POST</code>: { <code>command</code>: <code>\"startActivity\"</code> = 'startActivity'; <code>deprecated</code>: <code>true</code> = true; <code>payloadParams</code>: { <code>optional</code>: readonly [<code>\"appWaitPackage\"</code>, <code>\"appWaitActivity\"</code>, <code>\"intentAction\"</code>, <code>\"intentCategory\"</code>, <code>\"intentFlags\"</code>, <code>\"optionalIntentArguments\"</code>, <code>\"dontStopAppOnReset\"</code>] ; <code>required</code>: readonly [<code>\"appPackage\"</code>, <code>\"appActivity\"</code>]  }  }  } <code>/session/:sessionId/appium/device/start_activity.POST</code> { <code>command</code>: <code>\"startActivity\"</code> = 'startActivity'; <code>deprecated</code>: <code>true</code> = true; <code>payloadParams</code>: { <code>optional</code>: readonly [<code>\"appWaitPackage\"</code>, <code>\"appWaitActivity\"</code>, <code>\"intentAction\"</code>, <code>\"intentCategory\"</code>, <code>\"intentFlags\"</code>, <code>\"optionalIntentArguments\"</code>, <code>\"dontStopAppOnReset\"</code>] ; <code>required</code>: readonly [<code>\"appPackage\"</code>, <code>\"appActivity\"</code>]  }  } <code>/session/:sessionId/appium/device/start_activity.POST.command</code> <code>\"startActivity\"</code> <code>/session/:sessionId/appium/device/start_activity.POST.deprecated</code> <code>true</code> <code>/session/:sessionId/appium/device/start_activity.POST.payloadParams</code> { <code>optional</code>: readonly [<code>\"appWaitPackage\"</code>, <code>\"appWaitActivity\"</code>, <code>\"intentAction\"</code>, <code>\"intentCategory\"</code>, <code>\"intentFlags\"</code>, <code>\"optionalIntentArguments\"</code>, <code>\"dontStopAppOnReset\"</code>] ; <code>required</code>: readonly [<code>\"appPackage\"</code>, <code>\"appActivity\"</code>]  } <code>/session/:sessionId/appium/device/start_activity.POST.payloadParams.optional</code> readonly [<code>\"appWaitPackage\"</code>, <code>\"appWaitActivity\"</code>, <code>\"intentAction\"</code>, <code>\"intentCategory\"</code>, <code>\"intentFlags\"</code>, <code>\"optionalIntentArguments\"</code>, <code>\"dontStopAppOnReset\"</code>] <code>/session/:sessionId/appium/device/start_activity.POST.payloadParams.required</code> readonly [<code>\"appPackage\"</code>, <code>\"appActivity\"</code>] <code>/session/:sessionId/appium/device/system_bars</code> { <code>GET</code>: { <code>command</code>: <code>\"getSystemBars\"</code> = 'getSystemBars'; <code>deprecated</code>: <code>true</code> = true }  } <code>/session/:sessionId/appium/device/system_bars.GET</code> { <code>command</code>: <code>\"getSystemBars\"</code> = 'getSystemBars'; <code>deprecated</code>: <code>true</code> = true } <code>/session/:sessionId/appium/device/system_bars.GET.command</code> <code>\"getSystemBars\"</code> <code>/session/:sessionId/appium/device/system_bars.GET.deprecated</code> <code>true</code> <code>/session/:sessionId/appium/device/system_time</code> { <code>GET</code>: { <code>command</code>: <code>\"getDeviceTime\"</code> = 'getDeviceTime'; <code>payloadParams</code>: { <code>optional</code>: readonly [<code>\"format\"</code>]  }  } ; <code>POST</code>: { <code>command</code>: <code>\"getDeviceTime\"</code> = 'getDeviceTime'; <code>payloadParams</code>: { <code>optional</code>: readonly [<code>\"format\"</code>]  }  }  } <code>/session/:sessionId/appium/device/system_time.GET</code> { <code>command</code>: <code>\"getDeviceTime\"</code> = 'getDeviceTime'; <code>payloadParams</code>: { <code>optional</code>: readonly [<code>\"format\"</code>]  }  } <code>/session/:sessionId/appium/device/system_time.GET.command</code> <code>\"getDeviceTime\"</code> <code>/session/:sessionId/appium/device/system_time.GET.payloadParams</code> { <code>optional</code>: readonly [<code>\"format\"</code>]  } <code>/session/:sessionId/appium/device/system_time.GET.payloadParams.optional</code> readonly [<code>\"format\"</code>] <code>/session/:sessionId/appium/device/system_time.POST</code> { <code>command</code>: <code>\"getDeviceTime\"</code> = 'getDeviceTime'; <code>payloadParams</code>: { <code>optional</code>: readonly [<code>\"format\"</code>]  }  } <code>/session/:sessionId/appium/device/system_time.POST.command</code> <code>\"getDeviceTime\"</code> <code>/session/:sessionId/appium/device/system_time.POST.payloadParams</code> { <code>optional</code>: readonly [<code>\"format\"</code>]  } <code>/session/:sessionId/appium/device/system_time.POST.payloadParams.optional</code> readonly [<code>\"format\"</code>] <code>/session/:sessionId/appium/device/terminate_app</code> { <code>POST</code>: { <code>command</code>: <code>\"terminateApp\"</code> = 'terminateApp'; <code>payloadParams</code>: { <code>optional</code>: readonly [<code>\"options\"</code>] ; <code>required</code>: readonly [readonly [<code>\"appId\"</code>], readonly [<code>\"bundleId\"</code>]]  }  }  } <code>/session/:sessionId/appium/device/terminate_app.POST</code> { <code>command</code>: <code>\"terminateApp\"</code> = 'terminateApp'; <code>payloadParams</code>: { <code>optional</code>: readonly [<code>\"options\"</code>] ; <code>required</code>: readonly [readonly [<code>\"appId\"</code>], readonly [<code>\"bundleId\"</code>]]  }  } <code>/session/:sessionId/appium/device/terminate_app.POST.command</code> <code>\"terminateApp\"</code> <code>/session/:sessionId/appium/device/terminate_app.POST.payloadParams</code> { <code>optional</code>: readonly [<code>\"options\"</code>] ; <code>required</code>: readonly [readonly [<code>\"appId\"</code>], readonly [<code>\"bundleId\"</code>]]  } <code>/session/:sessionId/appium/device/terminate_app.POST.payloadParams.optional</code> readonly [<code>\"options\"</code>] <code>/session/:sessionId/appium/device/terminate_app.POST.payloadParams.required</code> readonly [readonly [<code>\"appId\"</code>], readonly [<code>\"bundleId\"</code>]] <code>/session/:sessionId/appium/device/toggle_airplane_mode</code> { <code>POST</code>: { <code>command</code>: <code>\"toggleFlightMode\"</code> = 'toggleFlightMode'; <code>deprecated</code>: <code>true</code> = true }  } <code>/session/:sessionId/appium/device/toggle_airplane_mode.POST</code> { <code>command</code>: <code>\"toggleFlightMode\"</code> = 'toggleFlightMode'; <code>deprecated</code>: <code>true</code> = true } <code>/session/:sessionId/appium/device/toggle_airplane_mode.POST.command</code> <code>\"toggleFlightMode\"</code> <code>/session/:sessionId/appium/device/toggle_airplane_mode.POST.deprecated</code> <code>true</code> <code>/session/:sessionId/appium/device/toggle_data</code> { <code>POST</code>: { <code>command</code>: <code>\"toggleData\"</code> = 'toggleData'; <code>deprecated</code>: <code>true</code> = true }  } <code>/session/:sessionId/appium/device/toggle_data.POST</code> { <code>command</code>: <code>\"toggleData\"</code> = 'toggleData'; <code>deprecated</code>: <code>true</code> = true } <code>/session/:sessionId/appium/device/toggle_data.POST.command</code> <code>\"toggleData\"</code> <code>/session/:sessionId/appium/device/toggle_data.POST.deprecated</code> <code>true</code> <code>/session/:sessionId/appium/device/toggle_location_services</code> { <code>POST</code>: { <code>command</code>: <code>\"toggleLocationServices\"</code> = 'toggleLocationServices'; <code>deprecated</code>: <code>true</code> = true }  } <code>/session/:sessionId/appium/device/toggle_location_services.POST</code> { <code>command</code>: <code>\"toggleLocationServices\"</code> = 'toggleLocationServices'; <code>deprecated</code>: <code>true</code> = true } <code>/session/:sessionId/appium/device/toggle_location_services.POST.command</code> <code>\"toggleLocationServices\"</code> <code>/session/:sessionId/appium/device/toggle_location_services.POST.deprecated</code> <code>true</code> <code>/session/:sessionId/appium/device/toggle_wifi</code> { <code>POST</code>: { <code>command</code>: <code>\"toggleWiFi\"</code> = 'toggleWiFi'; <code>deprecated</code>: <code>true</code> = true }  } <code>/session/:sessionId/appium/device/toggle_wifi.POST</code> { <code>command</code>: <code>\"toggleWiFi\"</code> = 'toggleWiFi'; <code>deprecated</code>: <code>true</code> = true } <code>/session/:sessionId/appium/device/toggle_wifi.POST.command</code> <code>\"toggleWiFi\"</code> <code>/session/:sessionId/appium/device/toggle_wifi.POST.deprecated</code> <code>true</code> <code>/session/:sessionId/appium/device/unlock</code> { <code>POST</code>: { <code>command</code>: <code>\"unlock\"</code> = 'unlock'; <code>deprecated</code>: <code>true</code> = true }  } <code>/session/:sessionId/appium/device/unlock.POST</code> { <code>command</code>: <code>\"unlock\"</code> = 'unlock'; <code>deprecated</code>: <code>true</code> = true } <code>/session/:sessionId/appium/device/unlock.POST.command</code> <code>\"unlock\"</code> <code>/session/:sessionId/appium/device/unlock.POST.deprecated</code> <code>true</code> <code>/session/:sessionId/appium/element/:elementId/replace_value</code> { <code>POST</code>: { <code>command</code>: <code>\"replaceValue\"</code> = 'replaceValue'; <code>deprecated</code>: <code>true</code> = true; <code>payloadParams</code>: { <code>required</code>: readonly [<code>\"text\"</code>]  }  }  } <code>/session/:sessionId/appium/element/:elementId/replace_value.POST</code> { <code>command</code>: <code>\"replaceValue\"</code> = 'replaceValue'; <code>deprecated</code>: <code>true</code> = true; <code>payloadParams</code>: { <code>required</code>: readonly [<code>\"text\"</code>]  }  } <code>/session/:sessionId/appium/element/:elementId/replace_value.POST.command</code> <code>\"replaceValue\"</code> <code>/session/:sessionId/appium/element/:elementId/replace_value.POST.deprecated</code> <code>true</code> <code>/session/:sessionId/appium/element/:elementId/replace_value.POST.payloadParams</code> { <code>required</code>: readonly [<code>\"text\"</code>]  } <code>/session/:sessionId/appium/element/:elementId/replace_value.POST.payloadParams.required</code> readonly [<code>\"text\"</code>] <code>/session/:sessionId/appium/element/:elementId/value</code> { <code>POST</code>: { <code>command</code>: <code>\"setValueImmediate\"</code> = 'setValueImmediate'; <code>deprecated</code>: <code>true</code> = true; <code>payloadParams</code>: { <code>required</code>: readonly [<code>\"text\"</code>]  }  }  } <code>/session/:sessionId/appium/element/:elementId/value.POST</code> { <code>command</code>: <code>\"setValueImmediate\"</code> = 'setValueImmediate'; <code>deprecated</code>: <code>true</code> = true; <code>payloadParams</code>: { <code>required</code>: readonly [<code>\"text\"</code>]  }  } <code>/session/:sessionId/appium/element/:elementId/value.POST.command</code> <code>\"setValueImmediate\"</code> <code>/session/:sessionId/appium/element/:elementId/value.POST.deprecated</code> <code>true</code> <code>/session/:sessionId/appium/element/:elementId/value.POST.payloadParams</code> { <code>required</code>: readonly [<code>\"text\"</code>]  } <code>/session/:sessionId/appium/element/:elementId/value.POST.payloadParams.required</code> readonly [<code>\"text\"</code>] <code>/session/:sessionId/appium/events</code> { <code>POST</code>: { <code>command</code>: <code>\"getLogEvents\"</code> = 'getLogEvents'; <code>payloadParams</code>: { <code>optional</code>: readonly [<code>\"type\"</code>]  }  }  } <code>/session/:sessionId/appium/events.POST</code> { <code>command</code>: <code>\"getLogEvents\"</code> = 'getLogEvents'; <code>payloadParams</code>: { <code>optional</code>: readonly [<code>\"type\"</code>]  }  } <code>/session/:sessionId/appium/events.POST.command</code> <code>\"getLogEvents\"</code> <code>/session/:sessionId/appium/events.POST.payloadParams</code> { <code>optional</code>: readonly [<code>\"type\"</code>]  } <code>/session/:sessionId/appium/events.POST.payloadParams.optional</code> readonly [<code>\"type\"</code>] <code>/session/:sessionId/appium/getPerformanceData</code> { <code>POST</code>: { <code>command</code>: <code>\"getPerformanceData\"</code> = 'getPerformanceData'; <code>deprecated</code>: <code>true</code> = true; <code>payloadParams</code>: { <code>optional</code>: readonly [<code>\"dataReadTimeout\"</code>] ; <code>required</code>: readonly [<code>\"packageName\"</code>, <code>\"dataType\"</code>]  }  }  } <code>/session/:sessionId/appium/getPerformanceData.POST</code> { <code>command</code>: <code>\"getPerformanceData\"</code> = 'getPerformanceData'; <code>deprecated</code>: <code>true</code> = true; <code>payloadParams</code>: { <code>optional</code>: readonly [<code>\"dataReadTimeout\"</code>] ; <code>required</code>: readonly [<code>\"packageName\"</code>, <code>\"dataType\"</code>]  }  } <code>/session/:sessionId/appium/getPerformanceData.POST.command</code> <code>\"getPerformanceData\"</code> <code>/session/:sessionId/appium/getPerformanceData.POST.deprecated</code> <code>true</code> <code>/session/:sessionId/appium/getPerformanceData.POST.payloadParams</code> { <code>optional</code>: readonly [<code>\"dataReadTimeout\"</code>] ; <code>required</code>: readonly [<code>\"packageName\"</code>, <code>\"dataType\"</code>]  } <code>/session/:sessionId/appium/getPerformanceData.POST.payloadParams.optional</code> readonly [<code>\"dataReadTimeout\"</code>] <code>/session/:sessionId/appium/getPerformanceData.POST.payloadParams.required</code> readonly [<code>\"packageName\"</code>, <code>\"dataType\"</code>] <code>/session/:sessionId/appium/log_event</code> { <code>POST</code>: { <code>command</code>: <code>\"logCustomEvent\"</code> = 'logCustomEvent'; <code>payloadParams</code>: { <code>required</code>: readonly [<code>\"vendor\"</code>, <code>\"event\"</code>]  }  }  } <code>/session/:sessionId/appium/log_event.POST</code> { <code>command</code>: <code>\"logCustomEvent\"</code> = 'logCustomEvent'; <code>payloadParams</code>: { <code>required</code>: readonly [<code>\"vendor\"</code>, <code>\"event\"</code>]  }  } <code>/session/:sessionId/appium/log_event.POST.command</code> <code>\"logCustomEvent\"</code> <code>/session/:sessionId/appium/log_event.POST.payloadParams</code> { <code>required</code>: readonly [<code>\"vendor\"</code>, <code>\"event\"</code>]  } <code>/session/:sessionId/appium/log_event.POST.payloadParams.required</code> readonly [<code>\"vendor\"</code>, <code>\"event\"</code>] <code>/session/:sessionId/appium/performanceData/types</code> { <code>POST</code>: { <code>command</code>: <code>\"getPerformanceDataTypes\"</code> = 'getPerformanceDataTypes'; <code>deprecated</code>: <code>true</code> = true }  } <code>/session/:sessionId/appium/performanceData/types.POST</code> { <code>command</code>: <code>\"getPerformanceDataTypes\"</code> = 'getPerformanceDataTypes'; <code>deprecated</code>: <code>true</code> = true } <code>/session/:sessionId/appium/performanceData/types.POST.command</code> <code>\"getPerformanceDataTypes\"</code> <code>/session/:sessionId/appium/performanceData/types.POST.deprecated</code> <code>true</code> <code>/session/:sessionId/appium/receive_async_response</code> { <code>POST</code>: { <code>command</code>: <code>\"receiveAsyncResponse\"</code> = 'receiveAsyncResponse'; <code>deprecated</code>: <code>true</code> = true; <code>payloadParams</code>: { <code>required</code>: readonly [<code>\"response\"</code>]  }  }  } <code>/session/:sessionId/appium/receive_async_response.POST</code> { <code>command</code>: <code>\"receiveAsyncResponse\"</code> = 'receiveAsyncResponse'; <code>deprecated</code>: <code>true</code> = true; <code>payloadParams</code>: { <code>required</code>: readonly [<code>\"response\"</code>]  }  } <code>/session/:sessionId/appium/receive_async_response.POST.command</code> <code>\"receiveAsyncResponse\"</code> <code>/session/:sessionId/appium/receive_async_response.POST.deprecated</code> <code>true</code> <code>/session/:sessionId/appium/receive_async_response.POST.payloadParams</code> { <code>required</code>: readonly [<code>\"response\"</code>]  } <code>/session/:sessionId/appium/receive_async_response.POST.payloadParams.required</code> readonly [<code>\"response\"</code>] <code>/session/:sessionId/appium/settings</code> { <code>GET</code>: { <code>command</code>: <code>\"getSettings\"</code> = 'getSettings' } ; <code>POST</code>: { <code>command</code>: <code>\"updateSettings\"</code> = 'updateSettings'; <code>payloadParams</code>: { <code>required</code>: readonly [<code>\"settings\"</code>]  }  }  } <code>/session/:sessionId/appium/settings.GET</code> { <code>command</code>: <code>\"getSettings\"</code> = 'getSettings' } <code>/session/:sessionId/appium/settings.GET.command</code> <code>\"getSettings\"</code> <code>/session/:sessionId/appium/settings.POST</code> { <code>command</code>: <code>\"updateSettings\"</code> = 'updateSettings'; <code>payloadParams</code>: { <code>required</code>: readonly [<code>\"settings\"</code>]  }  } <code>/session/:sessionId/appium/settings.POST.command</code> <code>\"updateSettings\"</code> <code>/session/:sessionId/appium/settings.POST.payloadParams</code> { <code>required</code>: readonly [<code>\"settings\"</code>]  } <code>/session/:sessionId/appium/settings.POST.payloadParams.required</code> readonly [<code>\"settings\"</code>] <code>/session/:sessionId/appium/simulator/toggle_touch_id_enrollment</code> { <code>POST</code>: { <code>command</code>: <code>\"toggleEnrollTouchId\"</code> = 'toggleEnrollTouchId'; <code>deprecated</code>: <code>true</code> = true; <code>payloadParams</code>: { <code>optional</code>: readonly [<code>\"enabled\"</code>]  }  }  } <code>/session/:sessionId/appium/simulator/toggle_touch_id_enrollment.POST</code> { <code>command</code>: <code>\"toggleEnrollTouchId\"</code> = 'toggleEnrollTouchId'; <code>deprecated</code>: <code>true</code> = true; <code>payloadParams</code>: { <code>optional</code>: readonly [<code>\"enabled\"</code>]  }  } <code>/session/:sessionId/appium/simulator/toggle_touch_id_enrollment.POST.command</code> <code>\"toggleEnrollTouchId\"</code> <code>/session/:sessionId/appium/simulator/toggle_touch_id_enrollment.POST.deprecated</code> <code>true</code> <code>/session/:sessionId/appium/simulator/toggle_touch_id_enrollment.POST.payloadParams</code> { <code>optional</code>: readonly [<code>\"enabled\"</code>]  } <code>/session/:sessionId/appium/simulator/toggle_touch_id_enrollment.POST.payloadParams.optional</code> readonly [<code>\"enabled\"</code>] <code>/session/:sessionId/appium/simulator/touch_id</code> { <code>POST</code>: { <code>command</code>: <code>\"touchId\"</code> = 'touchId'; <code>deprecated</code>: <code>true</code> = true; <code>payloadParams</code>: { <code>required</code>: readonly [<code>\"match\"</code>]  }  }  } <code>/session/:sessionId/appium/simulator/touch_id.POST</code> { <code>command</code>: <code>\"touchId\"</code> = 'touchId'; <code>deprecated</code>: <code>true</code> = true; <code>payloadParams</code>: { <code>required</code>: readonly [<code>\"match\"</code>]  }  } <code>/session/:sessionId/appium/simulator/touch_id.POST.command</code> <code>\"touchId\"</code> <code>/session/:sessionId/appium/simulator/touch_id.POST.deprecated</code> <code>true</code> <code>/session/:sessionId/appium/simulator/touch_id.POST.payloadParams</code> { <code>required</code>: readonly [<code>\"match\"</code>]  } <code>/session/:sessionId/appium/simulator/touch_id.POST.payloadParams.required</code> readonly [<code>\"match\"</code>] <code>/session/:sessionId/appium/start_recording_screen</code> { <code>POST</code>: { <code>command</code>: <code>\"startRecordingScreen\"</code> = 'startRecordingScreen'; <code>deprecated</code>: <code>true</code> = true; <code>payloadParams</code>: { <code>optional</code>: readonly [<code>\"options\"</code>]  }  }  } <code>/session/:sessionId/appium/start_recording_screen.POST</code> { <code>command</code>: <code>\"startRecordingScreen\"</code> = 'startRecordingScreen'; <code>deprecated</code>: <code>true</code> = true; <code>payloadParams</code>: { <code>optional</code>: readonly [<code>\"options\"</code>]  }  } <code>/session/:sessionId/appium/start_recording_screen.POST.command</code> <code>\"startRecordingScreen\"</code> <code>/session/:sessionId/appium/start_recording_screen.POST.deprecated</code> <code>true</code> <code>/session/:sessionId/appium/start_recording_screen.POST.payloadParams</code> { <code>optional</code>: readonly [<code>\"options\"</code>]  } <code>/session/:sessionId/appium/start_recording_screen.POST.payloadParams.optional</code> readonly [<code>\"options\"</code>] <code>/session/:sessionId/appium/stop_recording_screen</code> { <code>POST</code>: { <code>command</code>: <code>\"stopRecordingScreen\"</code> = 'stopRecordingScreen'; <code>deprecated</code>: <code>true</code> = true; <code>payloadParams</code>: { <code>optional</code>: readonly [<code>\"options\"</code>]  }  }  } <code>/session/:sessionId/appium/stop_recording_screen.POST</code> { <code>command</code>: <code>\"stopRecordingScreen\"</code> = 'stopRecordingScreen'; <code>deprecated</code>: <code>true</code> = true; <code>payloadParams</code>: { <code>optional</code>: readonly [<code>\"options\"</code>]  }  } <code>/session/:sessionId/appium/stop_recording_screen.POST.command</code> <code>\"stopRecordingScreen\"</code> <code>/session/:sessionId/appium/stop_recording_screen.POST.deprecated</code> <code>true</code> <code>/session/:sessionId/appium/stop_recording_screen.POST.payloadParams</code> { <code>optional</code>: readonly [<code>\"options\"</code>]  } <code>/session/:sessionId/appium/stop_recording_screen.POST.payloadParams.optional</code> readonly [<code>\"options\"</code>] <code>/session/:sessionId/application_cache/status</code> { <code>GET</code>: {} = {} } <code>/session/:sessionId/application_cache/status.GET</code> {} <code>/session/:sessionId/back</code> { <code>POST</code>: { <code>command</code>: <code>\"back\"</code> = 'back' }  } <code>/session/:sessionId/back.POST</code> { <code>command</code>: <code>\"back\"</code> = 'back' } <code>/session/:sessionId/back.POST.command</code> <code>\"back\"</code> <code>/session/:sessionId/buttondown</code> { <code>POST</code>: { <code>command</code>: <code>\"buttonDown\"</code> = 'buttonDown'; <code>deprecated</code>: <code>true</code> = true; <code>payloadParams</code>: { <code>optional</code>: readonly [<code>\"button\"</code>]  }  }  } <code>/session/:sessionId/buttondown.POST</code> { <code>command</code>: <code>\"buttonDown\"</code> = 'buttonDown'; <code>deprecated</code>: <code>true</code> = true; <code>payloadParams</code>: { <code>optional</code>: readonly [<code>\"button\"</code>]  }  } <code>/session/:sessionId/buttondown.POST.command</code> <code>\"buttonDown\"</code> <code>/session/:sessionId/buttondown.POST.deprecated</code> <code>true</code> <code>/session/:sessionId/buttondown.POST.payloadParams</code> { <code>optional</code>: readonly [<code>\"button\"</code>]  } <code>/session/:sessionId/buttondown.POST.payloadParams.optional</code> readonly [<code>\"button\"</code>] <code>/session/:sessionId/buttonup</code> { <code>POST</code>: { <code>command</code>: <code>\"buttonUp\"</code> = 'buttonUp'; <code>deprecated</code>: <code>true</code> = true; <code>payloadParams</code>: { <code>optional</code>: readonly [<code>\"button\"</code>]  }  }  } <code>/session/:sessionId/buttonup.POST</code> { <code>command</code>: <code>\"buttonUp\"</code> = 'buttonUp'; <code>deprecated</code>: <code>true</code> = true; <code>payloadParams</code>: { <code>optional</code>: readonly [<code>\"button\"</code>]  }  } <code>/session/:sessionId/buttonup.POST.command</code> <code>\"buttonUp\"</code> <code>/session/:sessionId/buttonup.POST.deprecated</code> <code>true</code> <code>/session/:sessionId/buttonup.POST.payloadParams</code> { <code>optional</code>: readonly [<code>\"button\"</code>]  } <code>/session/:sessionId/buttonup.POST.payloadParams.optional</code> readonly [<code>\"button\"</code>] <code>/session/:sessionId/click</code> { <code>POST</code>: { <code>command</code>: <code>\"clickCurrent\"</code> = 'clickCurrent'; <code>deprecated</code>: <code>true</code> = true; <code>payloadParams</code>: { <code>optional</code>: readonly [<code>\"button\"</code>]  }  }  } <code>/session/:sessionId/click.POST</code> { <code>command</code>: <code>\"clickCurrent\"</code> = 'clickCurrent'; <code>deprecated</code>: <code>true</code> = true; <code>payloadParams</code>: { <code>optional</code>: readonly [<code>\"button\"</code>]  }  } <code>/session/:sessionId/click.POST.command</code> <code>\"clickCurrent\"</code> <code>/session/:sessionId/click.POST.deprecated</code> <code>true</code> <code>/session/:sessionId/click.POST.payloadParams</code> { <code>optional</code>: readonly [<code>\"button\"</code>]  } <code>/session/:sessionId/click.POST.payloadParams.optional</code> readonly [<code>\"button\"</code>] <code>/session/:sessionId/context</code> { <code>GET</code>: { <code>command</code>: <code>\"getCurrentContext\"</code> = 'getCurrentContext' } ; <code>POST</code>: { <code>command</code>: <code>\"setContext\"</code> = 'setContext'; <code>payloadParams</code>: { <code>required</code>: readonly [<code>\"name\"</code>]  }  }  } <code>/session/:sessionId/context.GET</code> { <code>command</code>: <code>\"getCurrentContext\"</code> = 'getCurrentContext' } <code>/session/:sessionId/context.GET.command</code> <code>\"getCurrentContext\"</code> <code>/session/:sessionId/context.POST</code> { <code>command</code>: <code>\"setContext\"</code> = 'setContext'; <code>payloadParams</code>: { <code>required</code>: readonly [<code>\"name\"</code>]  }  } <code>/session/:sessionId/context.POST.command</code> <code>\"setContext\"</code> <code>/session/:sessionId/context.POST.payloadParams</code> { <code>required</code>: readonly [<code>\"name\"</code>]  } <code>/session/:sessionId/context.POST.payloadParams.required</code> readonly [<code>\"name\"</code>] <code>/session/:sessionId/contexts</code> { <code>GET</code>: { <code>command</code>: <code>\"getContexts\"</code> = 'getContexts' }  } <code>/session/:sessionId/contexts.GET</code> { <code>command</code>: <code>\"getContexts\"</code> = 'getContexts' } <code>/session/:sessionId/contexts.GET.command</code> <code>\"getContexts\"</code> <code>/session/:sessionId/cookie</code> { <code>DELETE</code>: { <code>command</code>: <code>\"deleteCookies\"</code> = 'deleteCookies' } ; <code>GET</code>: { <code>command</code>: <code>\"getCookies\"</code> = 'getCookies' } ; <code>POST</code>: { <code>command</code>: <code>\"setCookie\"</code> = 'setCookie'; <code>payloadParams</code>: { <code>required</code>: readonly [<code>\"cookie\"</code>]  }  }  } <code>/session/:sessionId/cookie.DELETE</code> { <code>command</code>: <code>\"deleteCookies\"</code> = 'deleteCookies' } <code>/session/:sessionId/cookie.DELETE.command</code> <code>\"deleteCookies\"</code> <code>/session/:sessionId/cookie.GET</code> { <code>command</code>: <code>\"getCookies\"</code> = 'getCookies' } <code>/session/:sessionId/cookie.GET.command</code> <code>\"getCookies\"</code> <code>/session/:sessionId/cookie.POST</code> { <code>command</code>: <code>\"setCookie\"</code> = 'setCookie'; <code>payloadParams</code>: { <code>required</code>: readonly [<code>\"cookie\"</code>]  }  } <code>/session/:sessionId/cookie.POST.command</code> <code>\"setCookie\"</code> <code>/session/:sessionId/cookie.POST.payloadParams</code> { <code>required</code>: readonly [<code>\"cookie\"</code>]  } <code>/session/:sessionId/cookie.POST.payloadParams.required</code> readonly [<code>\"cookie\"</code>] <code>/session/:sessionId/cookie/:name</code> { <code>DELETE</code>: { <code>command</code>: <code>\"deleteCookie\"</code> = 'deleteCookie' } ; <code>GET</code>: { <code>command</code>: <code>\"getCookie\"</code> = 'getCookie' }  } <code>/session/:sessionId/cookie/:name.DELETE</code> { <code>command</code>: <code>\"deleteCookie\"</code> = 'deleteCookie' } <code>/session/:sessionId/cookie/:name.DELETE.command</code> <code>\"deleteCookie\"</code> <code>/session/:sessionId/cookie/:name.GET</code> { <code>command</code>: <code>\"getCookie\"</code> = 'getCookie' } <code>/session/:sessionId/cookie/:name.GET.command</code> <code>\"getCookie\"</code> <code>/session/:sessionId/dismiss_alert</code> { <code>POST</code>: { <code>command</code>: <code>\"postDismissAlert\"</code> = 'postDismissAlert' }  } <code>/session/:sessionId/dismiss_alert.POST</code> { <code>command</code>: <code>\"postDismissAlert\"</code> = 'postDismissAlert' } <code>/session/:sessionId/dismiss_alert.POST.command</code> <code>\"postDismissAlert\"</code> <code>/session/:sessionId/doubleclick</code> { <code>POST</code>: { <code>command</code>: <code>\"doubleClick\"</code> = 'doubleClick'; <code>deprecated</code>: <code>true</code> = true }  } <code>/session/:sessionId/doubleclick.POST</code> { <code>command</code>: <code>\"doubleClick\"</code> = 'doubleClick'; <code>deprecated</code>: <code>true</code> = true } <code>/session/:sessionId/doubleclick.POST.command</code> <code>\"doubleClick\"</code> <code>/session/:sessionId/doubleclick.POST.deprecated</code> <code>true</code> <code>/session/:sessionId/element</code> { <code>POST</code>: { <code>command</code>: <code>\"findElement\"</code> = 'findElement'; <code>payloadParams</code>: { <code>required</code>: readonly [<code>\"using\"</code>, <code>\"value\"</code>]  }  }  } <code>/session/:sessionId/element.POST</code> { <code>command</code>: <code>\"findElement\"</code> = 'findElement'; <code>payloadParams</code>: { <code>required</code>: readonly [<code>\"using\"</code>, <code>\"value\"</code>]  }  } <code>/session/:sessionId/element.POST.command</code> <code>\"findElement\"</code> <code>/session/:sessionId/element.POST.payloadParams</code> { <code>required</code>: readonly [<code>\"using\"</code>, <code>\"value\"</code>]  } <code>/session/:sessionId/element.POST.payloadParams.required</code> readonly [<code>\"using\"</code>, <code>\"value\"</code>] <code>/session/:sessionId/element/:elementId</code> { <code>GET</code>: {} = {} } <code>/session/:sessionId/element/:elementId.GET</code> {} <code>/session/:sessionId/element/:elementId/attribute/:name</code> { <code>GET</code>: { <code>command</code>: <code>\"getAttribute\"</code> = 'getAttribute' }  } <code>/session/:sessionId/element/:elementId/attribute/:name.GET</code> { <code>command</code>: <code>\"getAttribute\"</code> = 'getAttribute' } <code>/session/:sessionId/element/:elementId/attribute/:name.GET.command</code> <code>\"getAttribute\"</code> <code>/session/:sessionId/element/:elementId/clear</code> { <code>POST</code>: { <code>command</code>: <code>\"clear\"</code> = 'clear' }  } <code>/session/:sessionId/element/:elementId/clear.POST</code> { <code>command</code>: <code>\"clear\"</code> = 'clear' } <code>/session/:sessionId/element/:elementId/clear.POST.command</code> <code>\"clear\"</code> <code>/session/:sessionId/element/:elementId/click</code> { <code>POST</code>: { <code>command</code>: <code>\"click\"</code> = 'click' }  } <code>/session/:sessionId/element/:elementId/click.POST</code> { <code>command</code>: <code>\"click\"</code> = 'click' } <code>/session/:sessionId/element/:elementId/click.POST.command</code> <code>\"click\"</code> <code>/session/:sessionId/element/:elementId/css/:propertyName</code> { <code>GET</code>: { <code>command</code>: <code>\"getCssProperty\"</code> = 'getCssProperty' }  } <code>/session/:sessionId/element/:elementId/css/:propertyName.GET</code> { <code>command</code>: <code>\"getCssProperty\"</code> = 'getCssProperty' } <code>/session/:sessionId/element/:elementId/css/:propertyName.GET.command</code> <code>\"getCssProperty\"</code> <code>/session/:sessionId/element/:elementId/displayed</code> { <code>GET</code>: { <code>command</code>: <code>\"elementDisplayed\"</code> = 'elementDisplayed' }  } <code>/session/:sessionId/element/:elementId/displayed.GET</code> { <code>command</code>: <code>\"elementDisplayed\"</code> = 'elementDisplayed' } <code>/session/:sessionId/element/:elementId/displayed.GET.command</code> <code>\"elementDisplayed\"</code> <code>/session/:sessionId/element/:elementId/element</code> { <code>POST</code>: { <code>command</code>: <code>\"findElementFromElement\"</code> = 'findElementFromElement'; <code>payloadParams</code>: { <code>required</code>: readonly [<code>\"using\"</code>, <code>\"value\"</code>]  }  }  } <code>/session/:sessionId/element/:elementId/element.POST</code> { <code>command</code>: <code>\"findElementFromElement\"</code> = 'findElementFromElement'; <code>payloadParams</code>: { <code>required</code>: readonly [<code>\"using\"</code>, <code>\"value\"</code>]  }  } <code>/session/:sessionId/element/:elementId/element.POST.command</code> <code>\"findElementFromElement\"</code> <code>/session/:sessionId/element/:elementId/element.POST.payloadParams</code> { <code>required</code>: readonly [<code>\"using\"</code>, <code>\"value\"</code>]  } <code>/session/:sessionId/element/:elementId/element.POST.payloadParams.required</code> readonly [<code>\"using\"</code>, <code>\"value\"</code>] <code>/session/:sessionId/element/:elementId/elements</code> { <code>POST</code>: { <code>command</code>: <code>\"findElementsFromElement\"</code> = 'findElementsFromElement'; <code>payloadParams</code>: { <code>required</code>: readonly [<code>\"using\"</code>, <code>\"value\"</code>]  }  }  } <code>/session/:sessionId/element/:elementId/elements.POST</code> { <code>command</code>: <code>\"findElementsFromElement\"</code> = 'findElementsFromElement'; <code>payloadParams</code>: { <code>required</code>: readonly [<code>\"using\"</code>, <code>\"value\"</code>]  }  } <code>/session/:sessionId/element/:elementId/elements.POST.command</code> <code>\"findElementsFromElement\"</code> <code>/session/:sessionId/element/:elementId/elements.POST.payloadParams</code> { <code>required</code>: readonly [<code>\"using\"</code>, <code>\"value\"</code>]  } <code>/session/:sessionId/element/:elementId/elements.POST.payloadParams.required</code> readonly [<code>\"using\"</code>, <code>\"value\"</code>] <code>/session/:sessionId/element/:elementId/enabled</code> { <code>GET</code>: { <code>command</code>: <code>\"elementEnabled\"</code> = 'elementEnabled' }  } <code>/session/:sessionId/element/:elementId/enabled.GET</code> { <code>command</code>: <code>\"elementEnabled\"</code> = 'elementEnabled' } <code>/session/:sessionId/element/:elementId/enabled.GET.command</code> <code>\"elementEnabled\"</code> <code>/session/:sessionId/element/:elementId/equals/:otherId</code> { <code>GET</code>: { <code>command</code>: <code>\"equalsElement\"</code> = 'equalsElement'; <code>deprecated</code>: <code>true</code> = true }  } <code>/session/:sessionId/element/:elementId/equals/:otherId.GET</code> { <code>command</code>: <code>\"equalsElement\"</code> = 'equalsElement'; <code>deprecated</code>: <code>true</code> = true } <code>/session/:sessionId/element/:elementId/equals/:otherId.GET.command</code> <code>\"equalsElement\"</code> <code>/session/:sessionId/element/:elementId/equals/:otherId.GET.deprecated</code> <code>true</code> <code>/session/:sessionId/element/:elementId/location</code> { <code>GET</code>: { <code>command</code>: <code>\"getLocation\"</code> = 'getLocation'; <code>deprecated</code>: <code>true</code> = true }  } <code>/session/:sessionId/element/:elementId/location.GET</code> { <code>command</code>: <code>\"getLocation\"</code> = 'getLocation'; <code>deprecated</code>: <code>true</code> = true } <code>/session/:sessionId/element/:elementId/location.GET.command</code> <code>\"getLocation\"</code> <code>/session/:sessionId/element/:elementId/location.GET.deprecated</code> <code>true</code> <code>/session/:sessionId/element/:elementId/location_in_view</code> { <code>GET</code>: { <code>command</code>: <code>\"getLocationInView\"</code> = 'getLocationInView'; <code>deprecated</code>: <code>true</code> = true }  } <code>/session/:sessionId/element/:elementId/location_in_view.GET</code> { <code>command</code>: <code>\"getLocationInView\"</code> = 'getLocationInView'; <code>deprecated</code>: <code>true</code> = true } <code>/session/:sessionId/element/:elementId/location_in_view.GET.command</code> <code>\"getLocationInView\"</code> <code>/session/:sessionId/element/:elementId/location_in_view.GET.deprecated</code> <code>true</code> <code>/session/:sessionId/element/:elementId/name</code> { <code>GET</code>: { <code>command</code>: <code>\"getName\"</code> = 'getName' }  } <code>/session/:sessionId/element/:elementId/name.GET</code> { <code>command</code>: <code>\"getName\"</code> = 'getName' } <code>/session/:sessionId/element/:elementId/name.GET.command</code> <code>\"getName\"</code> <code>/session/:sessionId/element/:elementId/pageIndex</code> { <code>GET</code>: { <code>command</code>: <code>\"getPageIndex\"</code> = 'getPageIndex'; <code>deprecated</code>: <code>true</code> = true }  } <code>/session/:sessionId/element/:elementId/pageIndex.GET</code> { <code>command</code>: <code>\"getPageIndex\"</code> = 'getPageIndex'; <code>deprecated</code>: <code>true</code> = true } <code>/session/:sessionId/element/:elementId/pageIndex.GET.command</code> <code>\"getPageIndex\"</code> <code>/session/:sessionId/element/:elementId/pageIndex.GET.deprecated</code> <code>true</code> <code>/session/:sessionId/element/:elementId/property/:name</code> { <code>GET</code>: { <code>command</code>: <code>\"getProperty\"</code> = 'getProperty' }  } <code>/session/:sessionId/element/:elementId/property/:name.GET</code> { <code>command</code>: <code>\"getProperty\"</code> = 'getProperty' } <code>/session/:sessionId/element/:elementId/property/:name.GET.command</code> <code>\"getProperty\"</code> <code>/session/:sessionId/element/:elementId/rect</code> { <code>GET</code>: { <code>command</code>: <code>\"getElementRect\"</code> = 'getElementRect' }  } <code>/session/:sessionId/element/:elementId/rect.GET</code> { <code>command</code>: <code>\"getElementRect\"</code> = 'getElementRect' } <code>/session/:sessionId/element/:elementId/rect.GET.command</code> <code>\"getElementRect\"</code> <code>/session/:sessionId/element/:elementId/screenshot</code> { <code>GET</code>: { <code>command</code>: <code>\"getElementScreenshot\"</code> = 'getElementScreenshot' }  } <code>/session/:sessionId/element/:elementId/screenshot.GET</code> { <code>command</code>: <code>\"getElementScreenshot\"</code> = 'getElementScreenshot' } <code>/session/:sessionId/element/:elementId/screenshot.GET.command</code> <code>\"getElementScreenshot\"</code> <code>/session/:sessionId/element/:elementId/selected</code> { <code>GET</code>: { <code>command</code>: <code>\"elementSelected\"</code> = 'elementSelected' }  } <code>/session/:sessionId/element/:elementId/selected.GET</code> { <code>command</code>: <code>\"elementSelected\"</code> = 'elementSelected' } <code>/session/:sessionId/element/:elementId/selected.GET.command</code> <code>\"elementSelected\"</code> <code>/session/:sessionId/element/:elementId/shadow</code> { <code>GET</code>: { <code>command</code>: <code>\"elementShadowRoot\"</code> = 'elementShadowRoot' }  } <code>/session/:sessionId/element/:elementId/shadow.GET</code> { <code>command</code>: <code>\"elementShadowRoot\"</code> = 'elementShadowRoot' } <code>/session/:sessionId/element/:elementId/shadow.GET.command</code> <code>\"elementShadowRoot\"</code> <code>/session/:sessionId/element/:elementId/size</code> { <code>GET</code>: { <code>command</code>: <code>\"getSize\"</code> = 'getSize'; <code>deprecated</code>: <code>true</code> = true }  } <code>/session/:sessionId/element/:elementId/size.GET</code> { <code>command</code>: <code>\"getSize\"</code> = 'getSize'; <code>deprecated</code>: <code>true</code> = true } <code>/session/:sessionId/element/:elementId/size.GET.command</code> <code>\"getSize\"</code> <code>/session/:sessionId/element/:elementId/size.GET.deprecated</code> <code>true</code> <code>/session/:sessionId/element/:elementId/submit</code> { <code>POST</code>: { <code>command</code>: <code>\"submit\"</code> = 'submit'; <code>deprecated</code>: <code>true</code> = true }  } <code>/session/:sessionId/element/:elementId/submit.POST</code> { <code>command</code>: <code>\"submit\"</code> = 'submit'; <code>deprecated</code>: <code>true</code> = true } <code>/session/:sessionId/element/:elementId/submit.POST.command</code> <code>\"submit\"</code> <code>/session/:sessionId/element/:elementId/submit.POST.deprecated</code> <code>true</code> <code>/session/:sessionId/element/:elementId/text</code> { <code>GET</code>: { <code>command</code>: <code>\"getText\"</code> = 'getText' }  } <code>/session/:sessionId/element/:elementId/text.GET</code> { <code>command</code>: <code>\"getText\"</code> = 'getText' } <code>/session/:sessionId/element/:elementId/text.GET.command</code> <code>\"getText\"</code> <code>/session/:sessionId/element/:elementId/value</code> { <code>POST</code>: { <code>command</code>: <code>\"setValue\"</code> = 'setValue'; <code>payloadParams</code>: { <code>makeArgs</code>: (<code>jsonObj</code>: <code>any</code>) =&gt; <code>any</code>[] ; <code>optional</code>: readonly [<code>\"value\"</code>, <code>\"text\"</code>] ; <code>validate</code>: (<code>jsonObj</code>: <code>any</code>) =&gt; <code>false</code> | <code>\"we require one of \\\"text\\\" or \\\"value\\\" params\"</code>  }  }  } <code>/session/:sessionId/element/:elementId/value.POST</code> { <code>command</code>: <code>\"setValue\"</code> = 'setValue'; <code>payloadParams</code>: { <code>makeArgs</code>: (<code>jsonObj</code>: <code>any</code>) =&gt; <code>any</code>[] ; <code>optional</code>: readonly [<code>\"value\"</code>, <code>\"text\"</code>] ; <code>validate</code>: (<code>jsonObj</code>: <code>any</code>) =&gt; <code>false</code> | <code>\"we require one of \\\"text\\\" or \\\"value\\\" params\"</code>  }  } <code>/session/:sessionId/element/:elementId/value.POST.command</code> <code>\"setValue\"</code> <code>/session/:sessionId/element/:elementId/value.POST.payloadParams</code> { <code>makeArgs</code>: (<code>jsonObj</code>: <code>any</code>) =&gt; <code>any</code>[] ; <code>optional</code>: readonly [<code>\"value\"</code>, <code>\"text\"</code>] ; <code>validate</code>: (<code>jsonObj</code>: <code>any</code>) =&gt; <code>false</code> | <code>\"we require one of \\\"text\\\" or \\\"value\\\" params\"</code>  } <code>/session/:sessionId/element/:elementId/value.POST.payloadParams.makeArgs</code> (<code>jsonObj</code>: <code>any</code>) =&gt; <code>any</code>[] <code>/session/:sessionId/element/:elementId/value.POST.payloadParams.optional</code> readonly [<code>\"value\"</code>, <code>\"text\"</code>] <code>/session/:sessionId/element/:elementId/value.POST.payloadParams.validate</code> (<code>jsonObj</code>: <code>any</code>) =&gt; <code>false</code> | <code>\"we require one of \\\"text\\\" or \\\"value\\\" params\"</code> <code>/session/:sessionId/element/active</code> { <code>GET</code>: { <code>command</code>: <code>\"active\"</code> = 'active' } ; <code>POST</code>: { <code>command</code>: <code>\"active\"</code> = 'active' }  } <code>/session/:sessionId/element/active.GET</code> { <code>command</code>: <code>\"active\"</code> = 'active' } <code>/session/:sessionId/element/active.GET.command</code> <code>\"active\"</code> <code>/session/:sessionId/element/active.POST</code> { <code>command</code>: <code>\"active\"</code> = 'active' } <code>/session/:sessionId/element/active.POST.command</code> <code>\"active\"</code> <code>/session/:sessionId/elements</code> { <code>POST</code>: { <code>command</code>: <code>\"findElements\"</code> = 'findElements'; <code>payloadParams</code>: { <code>required</code>: readonly [<code>\"using\"</code>, <code>\"value\"</code>]  }  }  } <code>/session/:sessionId/elements.POST</code> { <code>command</code>: <code>\"findElements\"</code> = 'findElements'; <code>payloadParams</code>: { <code>required</code>: readonly [<code>\"using\"</code>, <code>\"value\"</code>]  }  } <code>/session/:sessionId/elements.POST.command</code> <code>\"findElements\"</code> <code>/session/:sessionId/elements.POST.payloadParams</code> { <code>required</code>: readonly [<code>\"using\"</code>, <code>\"value\"</code>]  } <code>/session/:sessionId/elements.POST.payloadParams.required</code> readonly [<code>\"using\"</code>, <code>\"value\"</code>] <code>/session/:sessionId/execute</code> { <code>POST</code>: { <code>command</code>: <code>\"execute\"</code> = 'execute'; <code>payloadParams</code>: { <code>required</code>: readonly [<code>\"script\"</code>, <code>\"args\"</code>]  }  }  } <code>/session/:sessionId/execute.POST</code> { <code>command</code>: <code>\"execute\"</code> = 'execute'; <code>payloadParams</code>: { <code>required</code>: readonly [<code>\"script\"</code>, <code>\"args\"</code>]  }  } <code>/session/:sessionId/execute.POST.command</code> <code>\"execute\"</code> <code>/session/:sessionId/execute.POST.payloadParams</code> { <code>required</code>: readonly [<code>\"script\"</code>, <code>\"args\"</code>]  } <code>/session/:sessionId/execute.POST.payloadParams.required</code> readonly [<code>\"script\"</code>, <code>\"args\"</code>] <code>/session/:sessionId/execute/async</code> { <code>POST</code>: { <code>command</code>: <code>\"executeAsync\"</code> = 'executeAsync'; <code>payloadParams</code>: { <code>required</code>: readonly [<code>\"script\"</code>, <code>\"args\"</code>]  }  }  } <code>/session/:sessionId/execute/async.POST</code> { <code>command</code>: <code>\"executeAsync\"</code> = 'executeAsync'; <code>payloadParams</code>: { <code>required</code>: readonly [<code>\"script\"</code>, <code>\"args\"</code>]  }  } <code>/session/:sessionId/execute/async.POST.command</code> <code>\"executeAsync\"</code> <code>/session/:sessionId/execute/async.POST.payloadParams</code> { <code>required</code>: readonly [<code>\"script\"</code>, <code>\"args\"</code>]  } <code>/session/:sessionId/execute/async.POST.payloadParams.required</code> readonly [<code>\"script\"</code>, <code>\"args\"</code>] <code>/session/:sessionId/execute/sync</code> { <code>POST</code>: { <code>command</code>: <code>\"execute\"</code> = 'execute'; <code>payloadParams</code>: { <code>required</code>: readonly [<code>\"script\"</code>, <code>\"args\"</code>]  }  }  } <code>/session/:sessionId/execute/sync.POST</code> { <code>command</code>: <code>\"execute\"</code> = 'execute'; <code>payloadParams</code>: { <code>required</code>: readonly [<code>\"script\"</code>, <code>\"args\"</code>]  }  } <code>/session/:sessionId/execute/sync.POST.command</code> <code>\"execute\"</code> <code>/session/:sessionId/execute/sync.POST.payloadParams</code> { <code>required</code>: readonly [<code>\"script\"</code>, <code>\"args\"</code>]  } <code>/session/:sessionId/execute/sync.POST.payloadParams.required</code> readonly [<code>\"script\"</code>, <code>\"args\"</code>] <code>/session/:sessionId/execute_async</code> { <code>POST</code>: { <code>command</code>: <code>\"executeAsync\"</code> = 'executeAsync'; <code>payloadParams</code>: { <code>required</code>: readonly [<code>\"script\"</code>, <code>\"args\"</code>]  }  }  } <code>/session/:sessionId/execute_async.POST</code> { <code>command</code>: <code>\"executeAsync\"</code> = 'executeAsync'; <code>payloadParams</code>: { <code>required</code>: readonly [<code>\"script\"</code>, <code>\"args\"</code>]  }  } <code>/session/:sessionId/execute_async.POST.command</code> <code>\"executeAsync\"</code> <code>/session/:sessionId/execute_async.POST.payloadParams</code> { <code>required</code>: readonly [<code>\"script\"</code>, <code>\"args\"</code>]  } <code>/session/:sessionId/execute_async.POST.payloadParams.required</code> readonly [<code>\"script\"</code>, <code>\"args\"</code>] <code>/session/:sessionId/forward</code> { <code>POST</code>: { <code>command</code>: <code>\"forward\"</code> = 'forward' }  } <code>/session/:sessionId/forward.POST</code> { <code>command</code>: <code>\"forward\"</code> = 'forward' } <code>/session/:sessionId/forward.POST.command</code> <code>\"forward\"</code> <code>/session/:sessionId/frame</code> { <code>POST</code>: { <code>command</code>: <code>\"setFrame\"</code> = 'setFrame'; <code>payloadParams</code>: { <code>required</code>: readonly [<code>\"id\"</code>]  }  }  } <code>/session/:sessionId/frame.POST</code> { <code>command</code>: <code>\"setFrame\"</code> = 'setFrame'; <code>payloadParams</code>: { <code>required</code>: readonly [<code>\"id\"</code>]  }  } <code>/session/:sessionId/frame.POST.command</code> <code>\"setFrame\"</code> <code>/session/:sessionId/frame.POST.payloadParams</code> { <code>required</code>: readonly [<code>\"id\"</code>]  } <code>/session/:sessionId/frame.POST.payloadParams.required</code> readonly [<code>\"id\"</code>] <code>/session/:sessionId/frame/parent</code> { <code>POST</code>: { <code>command</code>: <code>\"switchToParentFrame\"</code> = 'switchToParentFrame' }  } <code>/session/:sessionId/frame/parent.POST</code> { <code>command</code>: <code>\"switchToParentFrame\"</code> = 'switchToParentFrame' } <code>/session/:sessionId/frame/parent.POST.command</code> <code>\"switchToParentFrame\"</code> <code>/session/:sessionId/ime/activate</code> { <code>POST</code>: { <code>command</code>: <code>\"activateIMEEngine\"</code> = 'activateIMEEngine'; <code>deprecated</code>: <code>true</code> = true; <code>payloadParams</code>: { <code>required</code>: readonly [<code>\"engine\"</code>]  }  }  } <code>/session/:sessionId/ime/activate.POST</code> { <code>command</code>: <code>\"activateIMEEngine\"</code> = 'activateIMEEngine'; <code>deprecated</code>: <code>true</code> = true; <code>payloadParams</code>: { <code>required</code>: readonly [<code>\"engine\"</code>]  }  } <code>/session/:sessionId/ime/activate.POST.command</code> <code>\"activateIMEEngine\"</code> <code>/session/:sessionId/ime/activate.POST.deprecated</code> <code>true</code> <code>/session/:sessionId/ime/activate.POST.payloadParams</code> { <code>required</code>: readonly [<code>\"engine\"</code>]  } <code>/session/:sessionId/ime/activate.POST.payloadParams.required</code> readonly [<code>\"engine\"</code>] <code>/session/:sessionId/ime/activated</code> { <code>GET</code>: { <code>command</code>: <code>\"isIMEActivated\"</code> = 'isIMEActivated'; <code>deprecated</code>: <code>true</code> = true }  } <code>/session/:sessionId/ime/activated.GET</code> { <code>command</code>: <code>\"isIMEActivated\"</code> = 'isIMEActivated'; <code>deprecated</code>: <code>true</code> = true } <code>/session/:sessionId/ime/activated.GET.command</code> <code>\"isIMEActivated\"</code> <code>/session/:sessionId/ime/activated.GET.deprecated</code> <code>true</code> <code>/session/:sessionId/ime/active_engine</code> { <code>GET</code>: { <code>command</code>: <code>\"getActiveIMEEngine\"</code> = 'getActiveIMEEngine'; <code>deprecated</code>: <code>true</code> = true }  } <code>/session/:sessionId/ime/active_engine.GET</code> { <code>command</code>: <code>\"getActiveIMEEngine\"</code> = 'getActiveIMEEngine'; <code>deprecated</code>: <code>true</code> = true } <code>/session/:sessionId/ime/active_engine.GET.command</code> <code>\"getActiveIMEEngine\"</code> <code>/session/:sessionId/ime/active_engine.GET.deprecated</code> <code>true</code> <code>/session/:sessionId/ime/available_engines</code> { <code>GET</code>: { <code>command</code>: <code>\"availableIMEEngines\"</code> = 'availableIMEEngines'; <code>deprecated</code>: <code>true</code> = true }  } <code>/session/:sessionId/ime/available_engines.GET</code> { <code>command</code>: <code>\"availableIMEEngines\"</code> = 'availableIMEEngines'; <code>deprecated</code>: <code>true</code> = true } <code>/session/:sessionId/ime/available_engines.GET.command</code> <code>\"availableIMEEngines\"</code> <code>/session/:sessionId/ime/available_engines.GET.deprecated</code> <code>true</code> <code>/session/:sessionId/ime/deactivate</code> { <code>POST</code>: { <code>command</code>: <code>\"deactivateIMEEngine\"</code> = 'deactivateIMEEngine'; <code>deprecated</code>: <code>true</code> = true }  } <code>/session/:sessionId/ime/deactivate.POST</code> { <code>command</code>: <code>\"deactivateIMEEngine\"</code> = 'deactivateIMEEngine'; <code>deprecated</code>: <code>true</code> = true } <code>/session/:sessionId/ime/deactivate.POST.command</code> <code>\"deactivateIMEEngine\"</code> <code>/session/:sessionId/ime/deactivate.POST.deprecated</code> <code>true</code> <code>/session/:sessionId/keys</code> { <code>POST</code>: { <code>command</code>: <code>\"keys\"</code> = 'keys'; <code>deprecated</code>: <code>true</code> = true; <code>payloadParams</code>: { <code>required</code>: readonly [<code>\"value\"</code>]  }  }  } <code>/session/:sessionId/keys.POST</code> { <code>command</code>: <code>\"keys\"</code> = 'keys'; <code>deprecated</code>: <code>true</code> = true; <code>payloadParams</code>: { <code>required</code>: readonly [<code>\"value\"</code>]  }  } <code>/session/:sessionId/keys.POST.command</code> <code>\"keys\"</code> <code>/session/:sessionId/keys.POST.deprecated</code> <code>true</code> <code>/session/:sessionId/keys.POST.payloadParams</code> { <code>required</code>: readonly [<code>\"value\"</code>]  } <code>/session/:sessionId/keys.POST.payloadParams.required</code> readonly [<code>\"value\"</code>] <code>/session/:sessionId/local_storage</code> { <code>DELETE</code>: { <code>deprecated</code>: <code>true</code> = true } ; <code>GET</code>: { <code>deprecated</code>: <code>true</code> = true } ; <code>POST</code>: { <code>deprecated</code>: <code>true</code> = true }  } <code>/session/:sessionId/local_storage.DELETE</code> { <code>deprecated</code>: <code>true</code> = true } <code>/session/:sessionId/local_storage.DELETE.deprecated</code> <code>true</code> <code>/session/:sessionId/local_storage.GET</code> { <code>deprecated</code>: <code>true</code> = true } <code>/session/:sessionId/local_storage.GET.deprecated</code> <code>true</code> <code>/session/:sessionId/local_storage.POST</code> { <code>deprecated</code>: <code>true</code> = true } <code>/session/:sessionId/local_storage.POST.deprecated</code> <code>true</code> <code>/session/:sessionId/local_storage/key/:key</code> { <code>DELETE</code>: { <code>deprecated</code>: <code>true</code> = true } ; <code>GET</code>: { <code>deprecated</code>: <code>true</code> = true }  } <code>/session/:sessionId/local_storage/key/:key.DELETE</code> { <code>deprecated</code>: <code>true</code> = true } <code>/session/:sessionId/local_storage/key/:key.DELETE.deprecated</code> <code>true</code> <code>/session/:sessionId/local_storage/key/:key.GET</code> { <code>deprecated</code>: <code>true</code> = true } <code>/session/:sessionId/local_storage/key/:key.GET.deprecated</code> <code>true</code> <code>/session/:sessionId/local_storage/size</code> { <code>GET</code>: { <code>deprecated</code>: <code>true</code> = true }  } <code>/session/:sessionId/local_storage/size.GET</code> { <code>deprecated</code>: <code>true</code> = true } <code>/session/:sessionId/local_storage/size.GET.deprecated</code> <code>true</code> <code>/session/:sessionId/location</code> { <code>GET</code>: { <code>command</code>: <code>\"getGeoLocation\"</code> = 'getGeoLocation' } ; <code>POST</code>: { <code>command</code>: <code>\"setGeoLocation\"</code> = 'setGeoLocation'; <code>payloadParams</code>: { <code>required</code>: readonly [<code>\"location\"</code>]  }  }  } <code>/session/:sessionId/location.GET</code> { <code>command</code>: <code>\"getGeoLocation\"</code> = 'getGeoLocation' } <code>/session/:sessionId/location.GET.command</code> <code>\"getGeoLocation\"</code> <code>/session/:sessionId/location.POST</code> { <code>command</code>: <code>\"setGeoLocation\"</code> = 'setGeoLocation'; <code>payloadParams</code>: { <code>required</code>: readonly [<code>\"location\"</code>]  }  } <code>/session/:sessionId/location.POST.command</code> <code>\"setGeoLocation\"</code> <code>/session/:sessionId/location.POST.payloadParams</code> { <code>required</code>: readonly [<code>\"location\"</code>]  } <code>/session/:sessionId/location.POST.payloadParams.required</code> readonly [<code>\"location\"</code>] <code>/session/:sessionId/log</code> { <code>POST</code>: { <code>command</code>: <code>\"getLog\"</code> = 'getLog'; <code>payloadParams</code>: { <code>required</code>: readonly [<code>\"type\"</code>]  }  }  } <code>/session/:sessionId/log.POST</code> { <code>command</code>: <code>\"getLog\"</code> = 'getLog'; <code>payloadParams</code>: { <code>required</code>: readonly [<code>\"type\"</code>]  }  } <code>/session/:sessionId/log.POST.command</code> <code>\"getLog\"</code> <code>/session/:sessionId/log.POST.payloadParams</code> { <code>required</code>: readonly [<code>\"type\"</code>]  } <code>/session/:sessionId/log.POST.payloadParams.required</code> readonly [<code>\"type\"</code>] <code>/session/:sessionId/log/types</code> { <code>GET</code>: { <code>command</code>: <code>\"getLogTypes\"</code> = 'getLogTypes' }  } <code>/session/:sessionId/log/types.GET</code> { <code>command</code>: <code>\"getLogTypes\"</code> = 'getLogTypes' } <code>/session/:sessionId/log/types.GET.command</code> <code>\"getLogTypes\"</code> <code>/session/:sessionId/moveto</code> { <code>POST</code>: { <code>command</code>: <code>\"moveTo\"</code> = 'moveTo'; <code>deprecated</code>: <code>true</code> = true; <code>payloadParams</code>: { <code>optional</code>: readonly [<code>\"element\"</code>, <code>\"xoffset\"</code>, <code>\"yoffset\"</code>]  }  }  } <code>/session/:sessionId/moveto.POST</code> { <code>command</code>: <code>\"moveTo\"</code> = 'moveTo'; <code>deprecated</code>: <code>true</code> = true; <code>payloadParams</code>: { <code>optional</code>: readonly [<code>\"element\"</code>, <code>\"xoffset\"</code>, <code>\"yoffset\"</code>]  }  } <code>/session/:sessionId/moveto.POST.command</code> <code>\"moveTo\"</code> <code>/session/:sessionId/moveto.POST.deprecated</code> <code>true</code> <code>/session/:sessionId/moveto.POST.payloadParams</code> { <code>optional</code>: readonly [<code>\"element\"</code>, <code>\"xoffset\"</code>, <code>\"yoffset\"</code>]  } <code>/session/:sessionId/moveto.POST.payloadParams.optional</code> readonly [<code>\"element\"</code>, <code>\"xoffset\"</code>, <code>\"yoffset\"</code>] <code>/session/:sessionId/network_connection</code> { <code>GET</code>: { <code>command</code>: <code>\"getNetworkConnection\"</code> = 'getNetworkConnection' } ; <code>POST</code>: { <code>command</code>: <code>\"setNetworkConnection\"</code> = 'setNetworkConnection'; <code>payloadParams</code>: { <code>required</code>: readonly [<code>\"type\"</code>] ; <code>unwrap</code>: <code>\"parameters\"</code> = 'parameters' }  }  } <code>/session/:sessionId/network_connection.GET</code> { <code>command</code>: <code>\"getNetworkConnection\"</code> = 'getNetworkConnection' } <code>/session/:sessionId/network_connection.GET.command</code> <code>\"getNetworkConnection\"</code> <code>/session/:sessionId/network_connection.POST</code> { <code>command</code>: <code>\"setNetworkConnection\"</code> = 'setNetworkConnection'; <code>payloadParams</code>: { <code>required</code>: readonly [<code>\"type\"</code>] ; <code>unwrap</code>: <code>\"parameters\"</code> = 'parameters' }  } <code>/session/:sessionId/network_connection.POST.command</code> <code>\"setNetworkConnection\"</code> <code>/session/:sessionId/network_connection.POST.payloadParams</code> { <code>required</code>: readonly [<code>\"type\"</code>] ; <code>unwrap</code>: <code>\"parameters\"</code> = 'parameters' } <code>/session/:sessionId/network_connection.POST.payloadParams.required</code> readonly [<code>\"type\"</code>] <code>/session/:sessionId/network_connection.POST.payloadParams.unwrap</code> <code>\"parameters\"</code> <code>/session/:sessionId/orientation</code> { <code>GET</code>: { <code>command</code>: <code>\"getOrientation\"</code> = 'getOrientation' } ; <code>POST</code>: { <code>command</code>: <code>\"setOrientation\"</code> = 'setOrientation'; <code>payloadParams</code>: { <code>required</code>: readonly [<code>\"orientation\"</code>]  }  }  } <code>/session/:sessionId/orientation.GET</code> { <code>command</code>: <code>\"getOrientation\"</code> = 'getOrientation' } <code>/session/:sessionId/orientation.GET.command</code> <code>\"getOrientation\"</code> <code>/session/:sessionId/orientation.POST</code> { <code>command</code>: <code>\"setOrientation\"</code> = 'setOrientation'; <code>payloadParams</code>: { <code>required</code>: readonly [<code>\"orientation\"</code>]  }  } <code>/session/:sessionId/orientation.POST.command</code> <code>\"setOrientation\"</code> <code>/session/:sessionId/orientation.POST.payloadParams</code> { <code>required</code>: readonly [<code>\"orientation\"</code>]  } <code>/session/:sessionId/orientation.POST.payloadParams.required</code> readonly [<code>\"orientation\"</code>] <code>/session/:sessionId/receive_async_response</code> { <code>POST</code>: { <code>command</code>: <code>\"receiveAsyncResponse\"</code> = 'receiveAsyncResponse'; <code>payloadParams</code>: { <code>required</code>: readonly [<code>\"status\"</code>, <code>\"value\"</code>]  }  }  } <code>/session/:sessionId/receive_async_response.POST</code> { <code>command</code>: <code>\"receiveAsyncResponse\"</code> = 'receiveAsyncResponse'; <code>payloadParams</code>: { <code>required</code>: readonly [<code>\"status\"</code>, <code>\"value\"</code>]  }  } <code>/session/:sessionId/receive_async_response.POST.command</code> <code>\"receiveAsyncResponse\"</code> <code>/session/:sessionId/receive_async_response.POST.payloadParams</code> { <code>required</code>: readonly [<code>\"status\"</code>, <code>\"value\"</code>]  } <code>/session/:sessionId/receive_async_response.POST.payloadParams.required</code> readonly [<code>\"status\"</code>, <code>\"value\"</code>] <code>/session/:sessionId/refresh</code> { <code>POST</code>: { <code>command</code>: <code>\"refresh\"</code> = 'refresh' }  } <code>/session/:sessionId/refresh.POST</code> { <code>command</code>: <code>\"refresh\"</code> = 'refresh' } <code>/session/:sessionId/refresh.POST.command</code> <code>\"refresh\"</code> <code>/session/:sessionId/rotation</code> { <code>GET</code>: { <code>command</code>: <code>\"getRotation\"</code> = 'getRotation' } ; <code>POST</code>: { <code>command</code>: <code>\"setRotation\"</code> = 'setRotation'; <code>payloadParams</code>: { <code>required</code>: readonly [<code>\"x\"</code>, <code>\"y\"</code>, <code>\"z\"</code>]  }  }  } <code>/session/:sessionId/rotation.GET</code> { <code>command</code>: <code>\"getRotation\"</code> = 'getRotation' } <code>/session/:sessionId/rotation.GET.command</code> <code>\"getRotation\"</code> <code>/session/:sessionId/rotation.POST</code> { <code>command</code>: <code>\"setRotation\"</code> = 'setRotation'; <code>payloadParams</code>: { <code>required</code>: readonly [<code>\"x\"</code>, <code>\"y\"</code>, <code>\"z\"</code>]  }  } <code>/session/:sessionId/rotation.POST.command</code> <code>\"setRotation\"</code> <code>/session/:sessionId/rotation.POST.payloadParams</code> { <code>required</code>: readonly [<code>\"x\"</code>, <code>\"y\"</code>, <code>\"z\"</code>]  } <code>/session/:sessionId/rotation.POST.payloadParams.required</code> readonly [<code>\"x\"</code>, <code>\"y\"</code>, <code>\"z\"</code>] <code>/session/:sessionId/screenshot</code> { <code>GET</code>: { <code>command</code>: <code>\"getScreenshot\"</code> = 'getScreenshot' }  } <code>/session/:sessionId/screenshot.GET</code> { <code>command</code>: <code>\"getScreenshot\"</code> = 'getScreenshot' } <code>/session/:sessionId/screenshot.GET.command</code> <code>\"getScreenshot\"</code> <code>/session/:sessionId/screenshot/:elementId</code> { <code>GET</code>: { <code>command</code>: <code>\"getElementScreenshot\"</code> = 'getElementScreenshot' }  } <code>/session/:sessionId/screenshot/:elementId.GET</code> { <code>command</code>: <code>\"getElementScreenshot\"</code> = 'getElementScreenshot' } <code>/session/:sessionId/screenshot/:elementId.GET.command</code> <code>\"getElementScreenshot\"</code> <code>/session/:sessionId/se/log</code> { <code>POST</code>: { <code>command</code>: <code>\"getLog\"</code> = 'getLog'; <code>payloadParams</code>: { <code>required</code>: readonly [<code>\"type\"</code>]  }  }  } <code>/session/:sessionId/se/log.POST</code> { <code>command</code>: <code>\"getLog\"</code> = 'getLog'; <code>payloadParams</code>: { <code>required</code>: readonly [<code>\"type\"</code>]  }  } <code>/session/:sessionId/se/log.POST.command</code> <code>\"getLog\"</code> <code>/session/:sessionId/se/log.POST.payloadParams</code> { <code>required</code>: readonly [<code>\"type\"</code>]  } <code>/session/:sessionId/se/log.POST.payloadParams.required</code> readonly [<code>\"type\"</code>] <code>/session/:sessionId/se/log/types</code> { <code>GET</code>: { <code>command</code>: <code>\"getLogTypes\"</code> = 'getLogTypes' }  } <code>/session/:sessionId/se/log/types.GET</code> { <code>command</code>: <code>\"getLogTypes\"</code> = 'getLogTypes' } <code>/session/:sessionId/se/log/types.GET.command</code> <code>\"getLogTypes\"</code> <code>/session/:sessionId/session_storage</code> { <code>DELETE</code>: { <code>deprecated</code>: <code>true</code> = true } ; <code>GET</code>: { <code>deprecated</code>: <code>true</code> = true } ; <code>POST</code>: { <code>deprecated</code>: <code>true</code> = true }  } <code>/session/:sessionId/session_storage.DELETE</code> { <code>deprecated</code>: <code>true</code> = true } <code>/session/:sessionId/session_storage.DELETE.deprecated</code> <code>true</code> <code>/session/:sessionId/session_storage.GET</code> { <code>deprecated</code>: <code>true</code> = true } <code>/session/:sessionId/session_storage.GET.deprecated</code> <code>true</code> <code>/session/:sessionId/session_storage.POST</code> { <code>deprecated</code>: <code>true</code> = true } <code>/session/:sessionId/session_storage.POST.deprecated</code> <code>true</code> <code>/session/:sessionId/session_storage/key/:key</code> { <code>DELETE</code>: { <code>deprecated</code>: <code>true</code> = true } ; <code>GET</code>: { <code>deprecated</code>: <code>true</code> = true }  } <code>/session/:sessionId/session_storage/key/:key.DELETE</code> { <code>deprecated</code>: <code>true</code> = true } <code>/session/:sessionId/session_storage/key/:key.DELETE.deprecated</code> <code>true</code> <code>/session/:sessionId/session_storage/key/:key.GET</code> { <code>deprecated</code>: <code>true</code> = true } <code>/session/:sessionId/session_storage/key/:key.GET.deprecated</code> <code>true</code> <code>/session/:sessionId/session_storage/size</code> { <code>GET</code>: { <code>deprecated</code>: <code>true</code> = true }  } <code>/session/:sessionId/session_storage/size.GET</code> { <code>deprecated</code>: <code>true</code> = true } <code>/session/:sessionId/session_storage/size.GET.deprecated</code> <code>true</code> <code>/session/:sessionId/shadow/:shadowId/element</code> { <code>POST</code>: { <code>command</code>: <code>\"findElementFromShadowRoot\"</code> = 'findElementFromShadowRoot'; <code>payloadParams</code>: { <code>required</code>: readonly [<code>\"using\"</code>, <code>\"value\"</code>]  }  }  } <code>/session/:sessionId/shadow/:shadowId/element.POST</code> { <code>command</code>: <code>\"findElementFromShadowRoot\"</code> = 'findElementFromShadowRoot'; <code>payloadParams</code>: { <code>required</code>: readonly [<code>\"using\"</code>, <code>\"value\"</code>]  }  } <code>/session/:sessionId/shadow/:shadowId/element.POST.command</code> <code>\"findElementFromShadowRoot\"</code> <code>/session/:sessionId/shadow/:shadowId/element.POST.payloadParams</code> { <code>required</code>: readonly [<code>\"using\"</code>, <code>\"value\"</code>]  } <code>/session/:sessionId/shadow/:shadowId/element.POST.payloadParams.required</code> readonly [<code>\"using\"</code>, <code>\"value\"</code>] <code>/session/:sessionId/shadow/:shadowId/elements</code> { <code>POST</code>: { <code>command</code>: <code>\"findElementsFromShadowRoot\"</code> = 'findElementsFromShadowRoot'; <code>payloadParams</code>: { <code>required</code>: readonly [<code>\"using\"</code>, <code>\"value\"</code>]  }  }  } <code>/session/:sessionId/shadow/:shadowId/elements.POST</code> { <code>command</code>: <code>\"findElementsFromShadowRoot\"</code> = 'findElementsFromShadowRoot'; <code>payloadParams</code>: { <code>required</code>: readonly [<code>\"using\"</code>, <code>\"value\"</code>]  }  } <code>/session/:sessionId/shadow/:shadowId/elements.POST.command</code> <code>\"findElementsFromShadowRoot\"</code> <code>/session/:sessionId/shadow/:shadowId/elements.POST.payloadParams</code> { <code>required</code>: readonly [<code>\"using\"</code>, <code>\"value\"</code>]  } <code>/session/:sessionId/shadow/:shadowId/elements.POST.payloadParams.required</code> readonly [<code>\"using\"</code>, <code>\"value\"</code>] <code>/session/:sessionId/source</code> { <code>GET</code>: { <code>command</code>: <code>\"getPageSource\"</code> = 'getPageSource' }  } <code>/session/:sessionId/source.GET</code> { <code>command</code>: <code>\"getPageSource\"</code> = 'getPageSource' } <code>/session/:sessionId/source.GET.command</code> <code>\"getPageSource\"</code> <code>/session/:sessionId/timeouts</code> { <code>GET</code>: { <code>command</code>: <code>\"getTimeouts\"</code> = 'getTimeouts' } ; <code>POST</code>: { <code>command</code>: <code>\"timeouts\"</code> = 'timeouts'; <code>payloadParams</code>: { <code>optional</code>: readonly [<code>\"type\"</code>, <code>\"ms\"</code>, <code>\"script\"</code>, <code>\"pageLoad\"</code>, <code>\"implicit\"</code>] ; <code>validate</code>: (<code>jsonObj</code>: <code>any</code>, <code>protocolName</code>: <code>any</code>) =&gt; <code>undefined</code> | <code>\"W3C protocol expects any of script, pageLoad or implicit to be set\"</code> | <code>\"MJSONWP protocol requires type and ms\"</code>  }  }  } <code>/session/:sessionId/timeouts.GET</code> { <code>command</code>: <code>\"getTimeouts\"</code> = 'getTimeouts' } <code>/session/:sessionId/timeouts.GET.command</code> <code>\"getTimeouts\"</code> <code>/session/:sessionId/timeouts.POST</code> { <code>command</code>: <code>\"timeouts\"</code> = 'timeouts'; <code>payloadParams</code>: { <code>optional</code>: readonly [<code>\"type\"</code>, <code>\"ms\"</code>, <code>\"script\"</code>, <code>\"pageLoad\"</code>, <code>\"implicit\"</code>] ; <code>validate</code>: (<code>jsonObj</code>: <code>any</code>, <code>protocolName</code>: <code>any</code>) =&gt; <code>undefined</code> | <code>\"W3C protocol expects any of script, pageLoad or implicit to be set\"</code> | <code>\"MJSONWP protocol requires type and ms\"</code>  }  } <code>/session/:sessionId/timeouts.POST.command</code> <code>\"timeouts\"</code> <code>/session/:sessionId/timeouts.POST.payloadParams</code> { <code>optional</code>: readonly [<code>\"type\"</code>, <code>\"ms\"</code>, <code>\"script\"</code>, <code>\"pageLoad\"</code>, <code>\"implicit\"</code>] ; <code>validate</code>: (<code>jsonObj</code>: <code>any</code>, <code>protocolName</code>: <code>any</code>) =&gt; <code>undefined</code> | <code>\"W3C protocol expects any of script, pageLoad or implicit to be set\"</code> | <code>\"MJSONWP protocol requires type and ms\"</code>  } <code>/session/:sessionId/timeouts.POST.payloadParams.optional</code> readonly [<code>\"type\"</code>, <code>\"ms\"</code>, <code>\"script\"</code>, <code>\"pageLoad\"</code>, <code>\"implicit\"</code>] <code>/session/:sessionId/timeouts.POST.payloadParams.validate</code> (<code>jsonObj</code>: <code>any</code>, <code>protocolName</code>: <code>any</code>) =&gt; <code>undefined</code> | <code>\"W3C protocol expects any of script, pageLoad or implicit to be set\"</code> | <code>\"MJSONWP protocol requires type and ms\"</code> <code>/session/:sessionId/timeouts/async_script</code> { <code>POST</code>: { <code>command</code>: <code>\"asyncScriptTimeout\"</code> = 'asyncScriptTimeout'; <code>deprecated</code>: <code>true</code> = true; <code>payloadParams</code>: { <code>required</code>: readonly [<code>\"ms\"</code>]  }  }  } <code>/session/:sessionId/timeouts/async_script.POST</code> { <code>command</code>: <code>\"asyncScriptTimeout\"</code> = 'asyncScriptTimeout'; <code>deprecated</code>: <code>true</code> = true; <code>payloadParams</code>: { <code>required</code>: readonly [<code>\"ms\"</code>]  }  } <code>/session/:sessionId/timeouts/async_script.POST.command</code> <code>\"asyncScriptTimeout\"</code> <code>/session/:sessionId/timeouts/async_script.POST.deprecated</code> <code>true</code> <code>/session/:sessionId/timeouts/async_script.POST.payloadParams</code> { <code>required</code>: readonly [<code>\"ms\"</code>]  } <code>/session/:sessionId/timeouts/async_script.POST.payloadParams.required</code> readonly [<code>\"ms\"</code>] <code>/session/:sessionId/timeouts/implicit_wait</code> { <code>POST</code>: { <code>command</code>: <code>\"implicitWait\"</code> = 'implicitWait'; <code>deprecated</code>: <code>true</code> = true; <code>payloadParams</code>: { <code>required</code>: readonly [<code>\"ms\"</code>]  }  }  } <code>/session/:sessionId/timeouts/implicit_wait.POST</code> { <code>command</code>: <code>\"implicitWait\"</code> = 'implicitWait'; <code>deprecated</code>: <code>true</code> = true; <code>payloadParams</code>: { <code>required</code>: readonly [<code>\"ms\"</code>]  }  } <code>/session/:sessionId/timeouts/implicit_wait.POST.command</code> <code>\"implicitWait\"</code> <code>/session/:sessionId/timeouts/implicit_wait.POST.deprecated</code> <code>true</code> <code>/session/:sessionId/timeouts/implicit_wait.POST.payloadParams</code> { <code>required</code>: readonly [<code>\"ms\"</code>]  } <code>/session/:sessionId/timeouts/implicit_wait.POST.payloadParams.required</code> readonly [<code>\"ms\"</code>] <code>/session/:sessionId/title</code> { <code>GET</code>: { <code>command</code>: <code>\"title\"</code> = 'title' }  } <code>/session/:sessionId/title.GET</code> { <code>command</code>: <code>\"title\"</code> = 'title' } <code>/session/:sessionId/title.GET.command</code> <code>\"title\"</code> <code>/session/:sessionId/touch/click</code> { <code>POST</code>: { <code>command</code>: <code>\"click\"</code> = 'click'; <code>deprecated</code>: <code>true</code> = true; <code>payloadParams</code>: { <code>required</code>: readonly [<code>\"element\"</code>]  }  }  } <code>/session/:sessionId/touch/click.POST</code> { <code>command</code>: <code>\"click\"</code> = 'click'; <code>deprecated</code>: <code>true</code> = true; <code>payloadParams</code>: { <code>required</code>: readonly [<code>\"element\"</code>]  }  } <code>/session/:sessionId/touch/click.POST.command</code> <code>\"click\"</code> <code>/session/:sessionId/touch/click.POST.deprecated</code> <code>true</code> <code>/session/:sessionId/touch/click.POST.payloadParams</code> { <code>required</code>: readonly [<code>\"element\"</code>]  } <code>/session/:sessionId/touch/click.POST.payloadParams.required</code> readonly [<code>\"element\"</code>] <code>/session/:sessionId/touch/doubleclick</code> { <code>POST</code>: {} = {} } <code>/session/:sessionId/touch/doubleclick.POST</code> {} <code>/session/:sessionId/touch/down</code> { <code>POST</code>: { <code>command</code>: <code>\"touchDown\"</code> = 'touchDown'; <code>deprecated</code>: <code>true</code> = true; <code>payloadParams</code>: { <code>required</code>: readonly [<code>\"x\"</code>, <code>\"y\"</code>]  }  }  } <code>/session/:sessionId/touch/down.POST</code> { <code>command</code>: <code>\"touchDown\"</code> = 'touchDown'; <code>deprecated</code>: <code>true</code> = true; <code>payloadParams</code>: { <code>required</code>: readonly [<code>\"x\"</code>, <code>\"y\"</code>]  }  } <code>/session/:sessionId/touch/down.POST.command</code> <code>\"touchDown\"</code> <code>/session/:sessionId/touch/down.POST.deprecated</code> <code>true</code> <code>/session/:sessionId/touch/down.POST.payloadParams</code> { <code>required</code>: readonly [<code>\"x\"</code>, <code>\"y\"</code>]  } <code>/session/:sessionId/touch/down.POST.payloadParams.required</code> readonly [<code>\"x\"</code>, <code>\"y\"</code>] <code>/session/:sessionId/touch/flick</code> { <code>POST</code>: { <code>command</code>: <code>\"flick\"</code> = 'flick'; <code>deprecated</code>: <code>true</code> = true; <code>payloadParams</code>: { <code>optional</code>: readonly [<code>\"element\"</code>, <code>\"xspeed\"</code>, <code>\"yspeed\"</code>, <code>\"xoffset\"</code>, <code>\"yoffset\"</code>, <code>\"speed\"</code>]  }  }  } <code>/session/:sessionId/touch/flick.POST</code> { <code>command</code>: <code>\"flick\"</code> = 'flick'; <code>deprecated</code>: <code>true</code> = true; <code>payloadParams</code>: { <code>optional</code>: readonly [<code>\"element\"</code>, <code>\"xspeed\"</code>, <code>\"yspeed\"</code>, <code>\"xoffset\"</code>, <code>\"yoffset\"</code>, <code>\"speed\"</code>]  }  } <code>/session/:sessionId/touch/flick.POST.command</code> <code>\"flick\"</code> <code>/session/:sessionId/touch/flick.POST.deprecated</code> <code>true</code> <code>/session/:sessionId/touch/flick.POST.payloadParams</code> { <code>optional</code>: readonly [<code>\"element\"</code>, <code>\"xspeed\"</code>, <code>\"yspeed\"</code>, <code>\"xoffset\"</code>, <code>\"yoffset\"</code>, <code>\"speed\"</code>]  } <code>/session/:sessionId/touch/flick.POST.payloadParams.optional</code> readonly [<code>\"element\"</code>, <code>\"xspeed\"</code>, <code>\"yspeed\"</code>, <code>\"xoffset\"</code>, <code>\"yoffset\"</code>, <code>\"speed\"</code>] <code>/session/:sessionId/touch/longclick</code> { <code>POST</code>: { <code>command</code>: <code>\"touchLongClick\"</code> = 'touchLongClick'; <code>deprecated</code>: <code>true</code> = true; <code>payloadParams</code>: { <code>required</code>: readonly [<code>\"elements\"</code>]  }  }  } <code>/session/:sessionId/touch/longclick.POST</code> { <code>command</code>: <code>\"touchLongClick\"</code> = 'touchLongClick'; <code>deprecated</code>: <code>true</code> = true; <code>payloadParams</code>: { <code>required</code>: readonly [<code>\"elements\"</code>]  }  } <code>/session/:sessionId/touch/longclick.POST.command</code> <code>\"touchLongClick\"</code> <code>/session/:sessionId/touch/longclick.POST.deprecated</code> <code>true</code> <code>/session/:sessionId/touch/longclick.POST.payloadParams</code> { <code>required</code>: readonly [<code>\"elements\"</code>]  } <code>/session/:sessionId/touch/longclick.POST.payloadParams.required</code> readonly [<code>\"elements\"</code>] <code>/session/:sessionId/touch/move</code> { <code>POST</code>: { <code>command</code>: <code>\"touchMove\"</code> = 'touchMove'; <code>deprecated</code>: <code>true</code> = true; <code>payloadParams</code>: { <code>required</code>: readonly [<code>\"x\"</code>, <code>\"y\"</code>]  }  }  } <code>/session/:sessionId/touch/move.POST</code> { <code>command</code>: <code>\"touchMove\"</code> = 'touchMove'; <code>deprecated</code>: <code>true</code> = true; <code>payloadParams</code>: { <code>required</code>: readonly [<code>\"x\"</code>, <code>\"y\"</code>]  }  } <code>/session/:sessionId/touch/move.POST.command</code> <code>\"touchMove\"</code> <code>/session/:sessionId/touch/move.POST.deprecated</code> <code>true</code> <code>/session/:sessionId/touch/move.POST.payloadParams</code> { <code>required</code>: readonly [<code>\"x\"</code>, <code>\"y\"</code>]  } <code>/session/:sessionId/touch/move.POST.payloadParams.required</code> readonly [<code>\"x\"</code>, <code>\"y\"</code>] <code>/session/:sessionId/touch/multi/perform</code> { <code>POST</code>: { <code>command</code>: <code>\"performMultiAction\"</code> = 'performMultiAction'; <code>deprecated</code>: <code>true</code> = true; <code>payloadParams</code>: { <code>optional</code>: readonly [<code>\"elementId\"</code>] ; <code>required</code>: readonly [<code>\"actions\"</code>]  }  }  } <code>/session/:sessionId/touch/multi/perform.POST</code> { <code>command</code>: <code>\"performMultiAction\"</code> = 'performMultiAction'; <code>deprecated</code>: <code>true</code> = true; <code>payloadParams</code>: { <code>optional</code>: readonly [<code>\"elementId\"</code>] ; <code>required</code>: readonly [<code>\"actions\"</code>]  }  } <code>/session/:sessionId/touch/multi/perform.POST.command</code> <code>\"performMultiAction\"</code> <code>/session/:sessionId/touch/multi/perform.POST.deprecated</code> <code>true</code> <code>/session/:sessionId/touch/multi/perform.POST.payloadParams</code> { <code>optional</code>: readonly [<code>\"elementId\"</code>] ; <code>required</code>: readonly [<code>\"actions\"</code>]  } <code>/session/:sessionId/touch/multi/perform.POST.payloadParams.optional</code> readonly [<code>\"elementId\"</code>] <code>/session/:sessionId/touch/multi/perform.POST.payloadParams.required</code> readonly [<code>\"actions\"</code>] <code>/session/:sessionId/touch/perform</code> { <code>POST</code>: { <code>command</code>: <code>\"performTouch\"</code> = 'performTouch'; <code>deprecated</code>: <code>true</code> = true; <code>payloadParams</code>: { <code>required</code>: readonly [<code>\"actions\"</code>] ; <code>wrap</code>: <code>\"actions\"</code> = 'actions' }  }  } <code>/session/:sessionId/touch/perform.POST</code> { <code>command</code>: <code>\"performTouch\"</code> = 'performTouch'; <code>deprecated</code>: <code>true</code> = true; <code>payloadParams</code>: { <code>required</code>: readonly [<code>\"actions\"</code>] ; <code>wrap</code>: <code>\"actions\"</code> = 'actions' }  } <code>/session/:sessionId/touch/perform.POST.command</code> <code>\"performTouch\"</code> <code>/session/:sessionId/touch/perform.POST.deprecated</code> <code>true</code> <code>/session/:sessionId/touch/perform.POST.payloadParams</code> { <code>required</code>: readonly [<code>\"actions\"</code>] ; <code>wrap</code>: <code>\"actions\"</code> = 'actions' } <code>/session/:sessionId/touch/perform.POST.payloadParams.required</code> readonly [<code>\"actions\"</code>] <code>/session/:sessionId/touch/perform.POST.payloadParams.wrap</code> <code>\"actions\"</code> <code>/session/:sessionId/touch/scroll</code> { <code>POST</code>: { <code>deprecated</code>: <code>true</code> = true }  } <code>/session/:sessionId/touch/scroll.POST</code> { <code>deprecated</code>: <code>true</code> = true } <code>/session/:sessionId/touch/scroll.POST.deprecated</code> <code>true</code> <code>/session/:sessionId/touch/up</code> { <code>POST</code>: { <code>command</code>: <code>\"touchUp\"</code> = 'touchUp'; <code>deprecated</code>: <code>true</code> = true; <code>payloadParams</code>: { <code>required</code>: readonly [<code>\"x\"</code>, <code>\"y\"</code>]  }  }  } <code>/session/:sessionId/touch/up.POST</code> { <code>command</code>: <code>\"touchUp\"</code> = 'touchUp'; <code>deprecated</code>: <code>true</code> = true; <code>payloadParams</code>: { <code>required</code>: readonly [<code>\"x\"</code>, <code>\"y\"</code>]  }  } <code>/session/:sessionId/touch/up.POST.command</code> <code>\"touchUp\"</code> <code>/session/:sessionId/touch/up.POST.deprecated</code> <code>true</code> <code>/session/:sessionId/touch/up.POST.payloadParams</code> { <code>required</code>: readonly [<code>\"x\"</code>, <code>\"y\"</code>]  } <code>/session/:sessionId/touch/up.POST.payloadParams.required</code> readonly [<code>\"x\"</code>, <code>\"y\"</code>] <code>/session/:sessionId/url</code> { <code>GET</code>: { <code>command</code>: <code>\"getUrl\"</code> = 'getUrl' } ; <code>POST</code>: { <code>command</code>: <code>\"setUrl\"</code> = 'setUrl'; <code>payloadParams</code>: { <code>required</code>: readonly [<code>\"url\"</code>]  }  }  } <code>/session/:sessionId/url.GET</code> { <code>command</code>: <code>\"getUrl\"</code> = 'getUrl' } <code>/session/:sessionId/url.GET.command</code> <code>\"getUrl\"</code> <code>/session/:sessionId/url.POST</code> { <code>command</code>: <code>\"setUrl\"</code> = 'setUrl'; <code>payloadParams</code>: { <code>required</code>: readonly [<code>\"url\"</code>]  }  } <code>/session/:sessionId/url.POST.command</code> <code>\"setUrl\"</code> <code>/session/:sessionId/url.POST.payloadParams</code> { <code>required</code>: readonly [<code>\"url\"</code>]  } <code>/session/:sessionId/url.POST.payloadParams.required</code> readonly [<code>\"url\"</code>] <code>/session/:sessionId/webauthn/authenticator</code> { <code>POST</code>: { <code>command</code>: <code>\"addVirtualAuthenticator\"</code> = 'addVirtualAuthenticator'; <code>payloadParams</code>: { <code>optional</code>: readonly [<code>\"hasResidentKey\"</code>, <code>\"hasUserVerification\"</code>, <code>\"isUserConsenting\"</code>, <code>\"isUserVerified\"</code>] ; <code>required</code>: readonly [<code>\"protocol\"</code>, <code>\"transport\"</code>]  }  }  } <code>/session/:sessionId/webauthn/authenticator.POST</code> { <code>command</code>: <code>\"addVirtualAuthenticator\"</code> = 'addVirtualAuthenticator'; <code>payloadParams</code>: { <code>optional</code>: readonly [<code>\"hasResidentKey\"</code>, <code>\"hasUserVerification\"</code>, <code>\"isUserConsenting\"</code>, <code>\"isUserVerified\"</code>] ; <code>required</code>: readonly [<code>\"protocol\"</code>, <code>\"transport\"</code>]  }  } <code>/session/:sessionId/webauthn/authenticator.POST.command</code> <code>\"addVirtualAuthenticator\"</code> <code>/session/:sessionId/webauthn/authenticator.POST.payloadParams</code> { <code>optional</code>: readonly [<code>\"hasResidentKey\"</code>, <code>\"hasUserVerification\"</code>, <code>\"isUserConsenting\"</code>, <code>\"isUserVerified\"</code>] ; <code>required</code>: readonly [<code>\"protocol\"</code>, <code>\"transport\"</code>]  } <code>/session/:sessionId/webauthn/authenticator.POST.payloadParams.optional</code> readonly [<code>\"hasResidentKey\"</code>, <code>\"hasUserVerification\"</code>, <code>\"isUserConsenting\"</code>, <code>\"isUserVerified\"</code>] <code>/session/:sessionId/webauthn/authenticator.POST.payloadParams.required</code> readonly [<code>\"protocol\"</code>, <code>\"transport\"</code>] <code>/session/:sessionId/webauthn/authenticator/:authenticatorId</code> { <code>DELETE</code>: { <code>command</code>: <code>\"removeVirtualAuthenticator\"</code> = 'removeVirtualAuthenticator' }  } <code>/session/:sessionId/webauthn/authenticator/:authenticatorId.DELETE</code> { <code>command</code>: <code>\"removeVirtualAuthenticator\"</code> = 'removeVirtualAuthenticator' } <code>/session/:sessionId/webauthn/authenticator/:authenticatorId.DELETE.command</code> <code>\"removeVirtualAuthenticator\"</code> <code>/session/:sessionId/webauthn/authenticator/:authenticatorId/credential</code> { <code>POST</code>: { <code>command</code>: <code>\"addAuthCredential\"</code> = 'addAuthCredential'; <code>payloadParams</code>: { <code>optional</code>: readonly [<code>\"userHandle\"</code>, <code>\"signCount\"</code>] ; <code>required</code>: readonly [<code>\"credentialId\"</code>, <code>\"isResidentCredential\"</code>, <code>\"rpId\"</code>, <code>\"privateKey\"</code>]  }  }  } <code>/session/:sessionId/webauthn/authenticator/:authenticatorId/credential.POST</code> { <code>command</code>: <code>\"addAuthCredential\"</code> = 'addAuthCredential'; <code>payloadParams</code>: { <code>optional</code>: readonly [<code>\"userHandle\"</code>, <code>\"signCount\"</code>] ; <code>required</code>: readonly [<code>\"credentialId\"</code>, <code>\"isResidentCredential\"</code>, <code>\"rpId\"</code>, <code>\"privateKey\"</code>]  }  } <code>/session/:sessionId/webauthn/authenticator/:authenticatorId/credential.POST.command</code> <code>\"addAuthCredential\"</code> <code>/session/:sessionId/webauthn/authenticator/:authenticatorId/credential.POST.payloadParams</code> { <code>optional</code>: readonly [<code>\"userHandle\"</code>, <code>\"signCount\"</code>] ; <code>required</code>: readonly [<code>\"credentialId\"</code>, <code>\"isResidentCredential\"</code>, <code>\"rpId\"</code>, <code>\"privateKey\"</code>]  } <code>/session/:sessionId/webauthn/authenticator/:authenticatorId/credential.POST.payloadParams.optional</code> readonly [<code>\"userHandle\"</code>, <code>\"signCount\"</code>] <code>/session/:sessionId/webauthn/authenticator/:authenticatorId/credential.POST.payloadParams.required</code> readonly [<code>\"credentialId\"</code>, <code>\"isResidentCredential\"</code>, <code>\"rpId\"</code>, <code>\"privateKey\"</code>] <code>/session/:sessionId/webauthn/authenticator/:authenticatorId/credentials</code> { <code>DELETE</code>: { <code>command</code>: <code>\"removeAllAuthCredentials\"</code> = 'removeAllAuthCredentials' } ; <code>GET</code>: { <code>command</code>: <code>\"getAuthCredential\"</code> = 'getAuthCredential' }  } <code>/session/:sessionId/webauthn/authenticator/:authenticatorId/credentials.DELETE</code> { <code>command</code>: <code>\"removeAllAuthCredentials\"</code> = 'removeAllAuthCredentials' } <code>/session/:sessionId/webauthn/authenticator/:authenticatorId/credentials.DELETE.command</code> <code>\"removeAllAuthCredentials\"</code> <code>/session/:sessionId/webauthn/authenticator/:authenticatorId/credentials.GET</code> { <code>command</code>: <code>\"getAuthCredential\"</code> = 'getAuthCredential' } <code>/session/:sessionId/webauthn/authenticator/:authenticatorId/credentials.GET.command</code> <code>\"getAuthCredential\"</code> <code>/session/:sessionId/webauthn/authenticator/:authenticatorId/credentials/:credentialId</code> { <code>DELETE</code>: { <code>command</code>: <code>\"removeAuthCredential\"</code> = 'removeAuthCredential' }  } <code>/session/:sessionId/webauthn/authenticator/:authenticatorId/credentials/:credentialId.DELETE</code> { <code>command</code>: <code>\"removeAuthCredential\"</code> = 'removeAuthCredential' } <code>/session/:sessionId/webauthn/authenticator/:authenticatorId/credentials/:credentialId.DELETE.command</code> <code>\"removeAuthCredential\"</code> <code>/session/:sessionId/webauthn/authenticator/:authenticatorId/uv</code> { <code>POST</code>: { <code>command</code>: <code>\"setUserAuthVerified\"</code> = 'setUserAuthVerified'; <code>payloadParams</code>: { <code>required</code>: readonly [<code>\"isUserVerified\"</code>]  }  }  } <code>/session/:sessionId/webauthn/authenticator/:authenticatorId/uv.POST</code> { <code>command</code>: <code>\"setUserAuthVerified\"</code> = 'setUserAuthVerified'; <code>payloadParams</code>: { <code>required</code>: readonly [<code>\"isUserVerified\"</code>]  }  } <code>/session/:sessionId/webauthn/authenticator/:authenticatorId/uv.POST.command</code> <code>\"setUserAuthVerified\"</code> <code>/session/:sessionId/webauthn/authenticator/:authenticatorId/uv.POST.payloadParams</code> { <code>required</code>: readonly [<code>\"isUserVerified\"</code>]  } <code>/session/:sessionId/webauthn/authenticator/:authenticatorId/uv.POST.payloadParams.required</code> readonly [<code>\"isUserVerified\"</code>] <code>/session/:sessionId/window</code> { <code>DELETE</code>: { <code>command</code>: <code>\"closeWindow\"</code> = 'closeWindow' } ; <code>GET</code>: { <code>command</code>: <code>\"getWindowHandle\"</code> = 'getWindowHandle' } ; <code>POST</code>: { <code>command</code>: <code>\"setWindow\"</code> = 'setWindow'; <code>payloadParams</code>: { <code>makeArgs</code>: (<code>jsonObj</code>: <code>any</code>) =&gt; <code>any</code>[] ; <code>optional</code>: readonly [<code>\"name\"</code>, <code>\"handle\"</code>] ; <code>validate</code>: (<code>jsonObj</code>: <code>any</code>) =&gt; <code>false</code> | <code>\"we require one of \\\"name\\\" or \\\"handle\\\" to be set\"</code>  }  }  } <code>/session/:sessionId/window.DELETE</code> { <code>command</code>: <code>\"closeWindow\"</code> = 'closeWindow' } <code>/session/:sessionId/window.DELETE.command</code> <code>\"closeWindow\"</code> <code>/session/:sessionId/window.GET</code> { <code>command</code>: <code>\"getWindowHandle\"</code> = 'getWindowHandle' } <code>/session/:sessionId/window.GET.command</code> <code>\"getWindowHandle\"</code> <code>/session/:sessionId/window.POST</code> { <code>command</code>: <code>\"setWindow\"</code> = 'setWindow'; <code>payloadParams</code>: { <code>makeArgs</code>: (<code>jsonObj</code>: <code>any</code>) =&gt; <code>any</code>[] ; <code>optional</code>: readonly [<code>\"name\"</code>, <code>\"handle\"</code>] ; <code>validate</code>: (<code>jsonObj</code>: <code>any</code>) =&gt; <code>false</code> | <code>\"we require one of \\\"name\\\" or \\\"handle\\\" to be set\"</code>  }  } <code>/session/:sessionId/window.POST.command</code> <code>\"setWindow\"</code> <code>/session/:sessionId/window.POST.payloadParams</code> { <code>makeArgs</code>: (<code>jsonObj</code>: <code>any</code>) =&gt; <code>any</code>[] ; <code>optional</code>: readonly [<code>\"name\"</code>, <code>\"handle\"</code>] ; <code>validate</code>: (<code>jsonObj</code>: <code>any</code>) =&gt; <code>false</code> | <code>\"we require one of \\\"name\\\" or \\\"handle\\\" to be set\"</code>  } <code>/session/:sessionId/window.POST.payloadParams.makeArgs</code> (<code>jsonObj</code>: <code>any</code>) =&gt; <code>any</code>[] <code>/session/:sessionId/window.POST.payloadParams.optional</code> readonly [<code>\"name\"</code>, <code>\"handle\"</code>] <code>/session/:sessionId/window.POST.payloadParams.validate</code> (<code>jsonObj</code>: <code>any</code>) =&gt; <code>false</code> | <code>\"we require one of \\\"name\\\" or \\\"handle\\\" to be set\"</code> <code>/session/:sessionId/window/:windowhandle/maximize</code> { <code>POST</code>: { <code>command</code>: <code>\"maximizeWindow\"</code> = 'maximizeWindow' }  } <code>/session/:sessionId/window/:windowhandle/maximize.POST</code> { <code>command</code>: <code>\"maximizeWindow\"</code> = 'maximizeWindow' } <code>/session/:sessionId/window/:windowhandle/maximize.POST.command</code> <code>\"maximizeWindow\"</code> <code>/session/:sessionId/window/:windowhandle/position</code> { <code>GET</code>: { <code>deprecated</code>: <code>true</code> = true } ; <code>POST</code>: { <code>deprecated</code>: <code>true</code> = true }  } <code>/session/:sessionId/window/:windowhandle/position.GET</code> { <code>deprecated</code>: <code>true</code> = true } <code>/session/:sessionId/window/:windowhandle/position.GET.deprecated</code> <code>true</code> <code>/session/:sessionId/window/:windowhandle/position.POST</code> { <code>deprecated</code>: <code>true</code> = true } <code>/session/:sessionId/window/:windowhandle/position.POST.deprecated</code> <code>true</code> <code>/session/:sessionId/window/:windowhandle/size</code> { <code>GET</code>: { <code>command</code>: <code>\"getWindowSize\"</code> = 'getWindowSize'; <code>deprecated</code>: <code>true</code> = true }  } <code>/session/:sessionId/window/:windowhandle/size.GET</code> { <code>command</code>: <code>\"getWindowSize\"</code> = 'getWindowSize'; <code>deprecated</code>: <code>true</code> = true } <code>/session/:sessionId/window/:windowhandle/size.GET.command</code> <code>\"getWindowSize\"</code> <code>/session/:sessionId/window/:windowhandle/size.GET.deprecated</code> <code>true</code> <code>/session/:sessionId/window/fullscreen</code> { <code>POST</code>: { <code>command</code>: <code>\"fullScreenWindow\"</code> = 'fullScreenWindow' }  } <code>/session/:sessionId/window/fullscreen.POST</code> { <code>command</code>: <code>\"fullScreenWindow\"</code> = 'fullScreenWindow' } <code>/session/:sessionId/window/fullscreen.POST.command</code> <code>\"fullScreenWindow\"</code> <code>/session/:sessionId/window/handle</code> { <code>GET</code>: { <code>command</code>: <code>\"getWindowHandle\"</code> = 'getWindowHandle' }  } <code>/session/:sessionId/window/handle.GET</code> { <code>command</code>: <code>\"getWindowHandle\"</code> = 'getWindowHandle' } <code>/session/:sessionId/window/handle.GET.command</code> <code>\"getWindowHandle\"</code> <code>/session/:sessionId/window/handles</code> { <code>GET</code>: { <code>command</code>: <code>\"getWindowHandles\"</code> = 'getWindowHandles' }  } <code>/session/:sessionId/window/handles.GET</code> { <code>command</code>: <code>\"getWindowHandles\"</code> = 'getWindowHandles' } <code>/session/:sessionId/window/handles.GET.command</code> <code>\"getWindowHandles\"</code> <code>/session/:sessionId/window/maximize</code> { <code>POST</code>: { <code>command</code>: <code>\"maximizeWindow\"</code> = 'maximizeWindow' }  } <code>/session/:sessionId/window/maximize.POST</code> { <code>command</code>: <code>\"maximizeWindow\"</code> = 'maximizeWindow' } <code>/session/:sessionId/window/maximize.POST.command</code> <code>\"maximizeWindow\"</code> <code>/session/:sessionId/window/minimize</code> { <code>POST</code>: { <code>command</code>: <code>\"minimizeWindow\"</code> = 'minimizeWindow' }  } <code>/session/:sessionId/window/minimize.POST</code> { <code>command</code>: <code>\"minimizeWindow\"</code> = 'minimizeWindow' } <code>/session/:sessionId/window/minimize.POST.command</code> <code>\"minimizeWindow\"</code> <code>/session/:sessionId/window/new</code> { <code>POST</code>: { <code>command</code>: <code>\"createNewWindow\"</code> = 'createNewWindow'; <code>payloadParams</code>: { <code>optional</code>: readonly [<code>\"type\"</code>]  }  }  } <code>/session/:sessionId/window/new.POST</code> { <code>command</code>: <code>\"createNewWindow\"</code> = 'createNewWindow'; <code>payloadParams</code>: { <code>optional</code>: readonly [<code>\"type\"</code>]  }  } <code>/session/:sessionId/window/new.POST.command</code> <code>\"createNewWindow\"</code> <code>/session/:sessionId/window/new.POST.payloadParams</code> { <code>optional</code>: readonly [<code>\"type\"</code>]  } <code>/session/:sessionId/window/new.POST.payloadParams.optional</code> readonly [<code>\"type\"</code>] <code>/session/:sessionId/window/rect</code> { <code>GET</code>: { <code>command</code>: <code>\"getWindowRect\"</code> = 'getWindowRect' } ; <code>POST</code>: { <code>command</code>: <code>\"setWindowRect\"</code> = 'setWindowRect'; <code>payloadParams</code>: { <code>required</code>: readonly [<code>\"x\"</code>, <code>\"y\"</code>, <code>\"width\"</code>, <code>\"height\"</code>]  }  }  } <code>/session/:sessionId/window/rect.GET</code> { <code>command</code>: <code>\"getWindowRect\"</code> = 'getWindowRect' } <code>/session/:sessionId/window/rect.GET.command</code> <code>\"getWindowRect\"</code> <code>/session/:sessionId/window/rect.POST</code> { <code>command</code>: <code>\"setWindowRect\"</code> = 'setWindowRect'; <code>payloadParams</code>: { <code>required</code>: readonly [<code>\"x\"</code>, <code>\"y\"</code>, <code>\"width\"</code>, <code>\"height\"</code>]  }  } <code>/session/:sessionId/window/rect.POST.command</code> <code>\"setWindowRect\"</code> <code>/session/:sessionId/window/rect.POST.payloadParams</code> { <code>required</code>: readonly [<code>\"x\"</code>, <code>\"y\"</code>, <code>\"width\"</code>, <code>\"height\"</code>]  } <code>/session/:sessionId/window/rect.POST.payloadParams.required</code> readonly [<code>\"x\"</code>, <code>\"y\"</code>, <code>\"width\"</code>, <code>\"height\"</code>] <code>/session/:sessionId/window_handle</code> { <code>GET</code>: { <code>command</code>: <code>\"getWindowHandle\"</code> = 'getWindowHandle' }  } <code>/session/:sessionId/window_handle.GET</code> { <code>command</code>: <code>\"getWindowHandle\"</code> = 'getWindowHandle' } <code>/session/:sessionId/window_handle.GET.command</code> <code>\"getWindowHandle\"</code> <code>/session/:sessionId/window_handles</code> { <code>GET</code>: { <code>command</code>: <code>\"getWindowHandles\"</code> = 'getWindowHandles' }  } <code>/session/:sessionId/window_handles.GET</code> { <code>command</code>: <code>\"getWindowHandles\"</code> = 'getWindowHandles' } <code>/session/:sessionId/window_handles.GET.command</code> <code>\"getWindowHandles\"</code> <code>/sessions</code> { <code>GET</code>: { <code>command</code>: <code>\"getSessions\"</code> = 'getSessions' }  } <code>/sessions.GET</code> { <code>command</code>: <code>\"getSessions\"</code> = 'getSessions' } <code>/sessions.GET.command</code> <code>\"getSessions\"</code> <code>/status</code> { <code>GET</code>: { <code>command</code>: <code>\"getStatus\"</code> = 'getStatus' }  } <code>/status.GET</code> { <code>command</code>: <code>\"getStatus\"</code> = 'getStatus' } <code>/status.GET.command</code> <code>\"getStatus\"</code> <code>session/:sessionId/element/:elementId/computedlabel</code> { <code>GET</code>: { <code>command</code>: <code>\"getComputedLabel\"</code> = 'getComputedLabel' }  } <code>session/:sessionId/element/:elementId/computedlabel.GET</code> { <code>command</code>: <code>\"getComputedLabel\"</code> = 'getComputedLabel' } <code>session/:sessionId/element/:elementId/computedlabel.GET.command</code> <code>\"getComputedLabel\"</code> <code>session/:sessionId/element/:elementId/computedrole</code> { <code>GET</code>: { <code>command</code>: <code>\"getComputedRole\"</code> = 'getComputedRole' }  } <code>session/:sessionId/element/:elementId/computedrole.GET</code> { <code>command</code>: <code>\"getComputedRole\"</code> = 'getComputedRole' } <code>session/:sessionId/element/:elementId/computedrole.GET.command</code> <code>\"getComputedRole\"</code>"},{"location":"reference/modules/appium_base_driver-1/#defined-in_6","title":"Defined in","text":"<p>packages/base-driver/lib/protocol/routes.js:22</p>"},{"location":"reference/modules/appium_base_driver-1/#no_session_id_commands","title":"NO_SESSION_ID_COMMANDS","text":"<p>\u2022 <code>Const</code> NO_SESSION_ID_COMMANDS: <code>string</code>[]</p>"},{"location":"reference/modules/appium_base_driver-1/#defined-in_7","title":"Defined in","text":"<p>packages/base-driver/lib/protocol/routes.js:1006</p>"},{"location":"reference/modules/appium_base_driver-1/#prefixed_appium_opts_cap","title":"PREFIXED_APPIUM_OPTS_CAP","text":"<p>\u2022 <code>Const</code> PREFIXED_APPIUM_OPTS_CAP: <code>string</code></p>"},{"location":"reference/modules/appium_base_driver-1/#defined-in_8","title":"Defined in","text":"<p>packages/base-driver/lib/basedriver/capabilities.js:10</p>"},{"location":"reference/modules/appium_base_driver-1/#protocols","title":"PROTOCOLS","text":"<p>\u2022 <code>Const</code> PROTOCOLS: <code>Object</code></p>"},{"location":"reference/modules/appium_base_driver-1/#type-declaration_1","title":"Type declaration","text":"Name Type <code>MJSONWP</code> <code>string</code> <code>W3C</code> <code>string</code>"},{"location":"reference/modules/appium_base_driver-1/#defined-in_9","title":"Defined in","text":"<p>packages/base-driver/lib/constants.js:12</p>"},{"location":"reference/modules/appium_base_driver-1/#standard_caps","title":"STANDARD_CAPS","text":"<p>\u2022 <code>Const</code> STANDARD_CAPS: <code>Readonly</code>&lt;<code>Set</code>&lt;keyof <code>StandardCapabilities</code>&gt;&gt;</p> <p>Standard, non-prefixed capabilities</p> <p><code>See</code></p> <p>https://www.w3.org/TR/webdriver/#dfn-table-of-standard-capabilities)</p>"},{"location":"reference/modules/appium_base_driver-1/#defined-in_10","title":"Defined in","text":"<p>packages/base-driver/lib/basedriver/capabilities.js:95</p>"},{"location":"reference/modules/appium_base_driver-1/#static_dir","title":"STATIC_DIR","text":"<p>\u2022 STATIC_DIR: <code>string</code></p>"},{"location":"reference/modules/appium_base_driver-1/#defined-in_11","title":"Defined in","text":"<p>packages/base-driver/lib/express/static.js:7</p>"},{"location":"reference/modules/appium_base_driver-1/#errors","title":"errors","text":"<p>\u2022 <code>Const</code> errors: <code>Object</code></p>"},{"location":"reference/modules/appium_base_driver-1/#type-declaration_2","title":"Type declaration","text":"Name Type <code>BadParametersError</code> typeof <code>BadParametersError</code> <code>ElementClickInterceptedError</code> typeof <code>ElementClickInterceptedError</code> <code>ElementIsNotSelectableError</code> typeof <code>ElementIsNotSelectableError</code> <code>ElementNotInteractableError</code> typeof <code>ElementNotInteractableError</code> <code>ElementNotVisibleError</code> typeof <code>ElementNotVisibleError</code> <code>IMEEngineActivationFailedError</code> typeof <code>IMEEngineActivationFailedError</code> <code>IMENotAvailableError</code> typeof <code>IMENotAvailableError</code> <code>InsecureCertificateError</code> typeof <code>InsecureCertificateError</code> <code>InvalidArgumentError</code> typeof <code>InvalidArgumentError</code> <code>InvalidContextError</code> typeof <code>InvalidContextError</code> <code>InvalidCookieDomainError</code> typeof <code>InvalidCookieDomainError</code> <code>InvalidCoordinatesError</code> typeof <code>InvalidCoordinatesError</code> <code>InvalidElementCoordinatesError</code> typeof <code>InvalidElementCoordinatesError</code> <code>InvalidElementStateError</code> typeof <code>InvalidElementStateError</code> <code>InvalidSelectorError</code> typeof <code>InvalidSelectorError</code> <code>JavaScriptError</code> typeof <code>JavaScriptError</code> <code>MoveTargetOutOfBoundsError</code> typeof <code>MoveTargetOutOfBoundsError</code> <code>NoAlertOpenError</code> typeof <code>NoAlertOpenError</code> <code>NoSuchAlertError</code> typeof <code>NoSuchAlertError</code> <code>NoSuchContextError</code> typeof <code>NoSuchContextError</code> <code>NoSuchCookieError</code> typeof <code>NoSuchCookieError</code> <code>NoSuchDriverError</code> typeof <code>NoSuchDriverError</code> <code>NoSuchElementError</code> typeof <code>NoSuchElementError</code> <code>NoSuchFrameError</code> typeof <code>NoSuchFrameError</code> <code>NoSuchWindowError</code> typeof <code>NoSuchWindowError</code> <code>NotImplementedError</code> typeof <code>NotImplementedError</code> <code>NotYetImplementedError</code> typeof <code>NotYetImplementedError</code> <code>ProxyRequestError</code> typeof <code>ProxyRequestError</code> <code>ScriptTimeoutError</code> typeof <code>ScriptTimeoutError</code> <code>SessionNotCreatedError</code> typeof <code>SessionNotCreatedError</code> <code>StaleElementReferenceError</code> typeof <code>StaleElementReferenceError</code> <code>TimeoutError</code> typeof <code>TimeoutError</code> <code>UnableToCaptureScreen</code> typeof <code>UnableToCaptureScreen</code> <code>UnableToSetCookieError</code> typeof <code>UnableToSetCookieError</code> <code>UnexpectedAlertOpenError</code> typeof <code>UnexpectedAlertOpenError</code> <code>UnknownCommandError</code> typeof <code>UnknownCommandError</code> <code>UnknownError</code> typeof <code>UnknownError</code> <code>UnknownMethodError</code> typeof <code>UnknownMethodError</code> <code>UnsupportedOperationError</code> typeof <code>UnsupportedOperationError</code> <code>XPathLookupError</code> typeof <code>XPathLookupError</code>"},{"location":"reference/modules/appium_base_driver-1/#defined-in_12","title":"Defined in","text":"<p>packages/base-driver/lib/protocol/errors.js:919</p>"},{"location":"reference/modules/appium_base_driver-1/#statuscodes","title":"statusCodes","text":"<p>\u2022 <code>Const</code> statusCodes: <code>Object</code></p>"},{"location":"reference/modules/appium_base_driver-1/#type-declaration_3","title":"Type declaration","text":"Name Type <code>ElementIsNotSelectable</code> { <code>code</code>: <code>number</code> = 15; <code>summary</code>: <code>string</code> = 'An attempt was made to select an element that cannot be selected.' } <code>ElementIsNotSelectable.code</code> <code>number</code> <code>ElementIsNotSelectable.summary</code> <code>string</code> <code>ElementNotVisible</code> { <code>code</code>: <code>number</code> = 11; <code>summary</code>: <code>string</code> = 'An element command could not be completed because the element is not visible on the page.' } <code>ElementNotVisible.code</code> <code>number</code> <code>ElementNotVisible.summary</code> <code>string</code> <code>IMEEngineActivationFailed</code> { <code>code</code>: <code>number</code> = 31; <code>summary</code>: <code>string</code> = 'An IME engine could not be started.' } <code>IMEEngineActivationFailed.code</code> <code>number</code> <code>IMEEngineActivationFailed.summary</code> <code>string</code> <code>IMENotAvailable</code> { <code>code</code>: <code>number</code> = 30; <code>summary</code>: <code>string</code> = 'IME was not available.' } <code>IMENotAvailable.code</code> <code>number</code> <code>IMENotAvailable.summary</code> <code>string</code> <code>InvalidCookieDomain</code> { <code>code</code>: <code>number</code> = 24; <code>summary</code>: <code>string</code> = 'An illegal attempt was made to set a cookie under a different domain than the current page.' } <code>InvalidCookieDomain.code</code> <code>number</code> <code>InvalidCookieDomain.summary</code> <code>string</code> <code>InvalidElementCoordinates</code> { <code>code</code>: <code>number</code> = 29; <code>summary</code>: <code>string</code> = 'The coordinates provided to an interactions operation are invalid.' } <code>InvalidElementCoordinates.code</code> <code>number</code> <code>InvalidElementCoordinates.summary</code> <code>string</code> <code>InvalidElementState</code> { <code>code</code>: <code>number</code> = 12; <code>summary</code>: <code>string</code> = 'An element command could not be completed because the element is in an invalid state (e.g. attempting to click a disabled element).' } <code>InvalidElementState.code</code> <code>number</code> <code>InvalidElementState.summary</code> <code>string</code> <code>InvalidSelector</code> { <code>code</code>: <code>number</code> = 32; <code>summary</code>: <code>string</code> = 'Argument was an invalid selector (e.g. XPath/CSS).' } <code>InvalidSelector.code</code> <code>number</code> <code>InvalidSelector.summary</code> <code>string</code> <code>JavaScriptError</code> { <code>code</code>: <code>number</code> = 17; <code>summary</code>: <code>string</code> = 'An error occurred while executing user supplied JavaScript.' } <code>JavaScriptError.code</code> <code>number</code> <code>JavaScriptError.summary</code> <code>string</code> <code>MoveTargetOutOfBounds</code> { <code>code</code>: <code>number</code> = 34; <code>summary</code>: <code>string</code> = 'Target provided for a move action is out of bounds.' } <code>MoveTargetOutOfBounds.code</code> <code>number</code> <code>MoveTargetOutOfBounds.summary</code> <code>string</code> <code>NoAlertOpenError</code> { <code>code</code>: <code>number</code> = 27; <code>summary</code>: <code>string</code> = 'An attempt was made to operate on a modal dialog when one was not open.' } <code>NoAlertOpenError.code</code> <code>number</code> <code>NoAlertOpenError.summary</code> <code>string</code> <code>NoSuchContext</code> { <code>code</code>: <code>number</code> = 35; <code>summary</code>: <code>string</code> = 'No such context found.' } <code>NoSuchContext.code</code> <code>number</code> <code>NoSuchContext.summary</code> <code>string</code> <code>NoSuchDriver</code> { <code>code</code>: <code>number</code> = 6; <code>summary</code>: <code>string</code> = 'A session is either terminated or not started' } <code>NoSuchDriver.code</code> <code>number</code> <code>NoSuchDriver.summary</code> <code>string</code> <code>NoSuchElement</code> { <code>code</code>: <code>number</code> = 7; <code>summary</code>: <code>string</code> = 'An element could not be located on the page using the given search parameters.' } <code>NoSuchElement.code</code> <code>number</code> <code>NoSuchElement.summary</code> <code>string</code> <code>NoSuchFrame</code> { <code>code</code>: <code>number</code> = 8; <code>summary</code>: <code>string</code> = 'A request to switch to a frame could not be satisfied because the frame could not be found.' } <code>NoSuchFrame.code</code> <code>number</code> <code>NoSuchFrame.summary</code> <code>string</code> <code>NoSuchWindow</code> { <code>code</code>: <code>number</code> = 23; <code>summary</code>: <code>string</code> = 'A request to switch to a different window could not be satisfied because the window could not be found.' } <code>NoSuchWindow.code</code> <code>number</code> <code>NoSuchWindow.summary</code> <code>string</code> <code>ScriptTimeout</code> { <code>code</code>: <code>number</code> = 28; <code>summary</code>: <code>string</code> = 'A script did not complete before its timeout expired.' } <code>ScriptTimeout.code</code> <code>number</code> <code>ScriptTimeout.summary</code> <code>string</code> <code>SessionNotCreatedException</code> { <code>code</code>: <code>number</code> = 33; <code>summary</code>: <code>string</code> = 'A new session could not be created.' } <code>SessionNotCreatedException.code</code> <code>number</code> <code>SessionNotCreatedException.summary</code> <code>string</code> <code>StaleElementReference</code> { <code>code</code>: <code>number</code> = 10; <code>summary</code>: <code>string</code> = 'An element command failed because the referenced element is no longer attached to the DOM.' } <code>StaleElementReference.code</code> <code>number</code> <code>StaleElementReference.summary</code> <code>string</code> <code>Success</code> { <code>code</code>: <code>number</code> = 0; <code>summary</code>: <code>string</code> = 'The command executed successfully.' } <code>Success.code</code> <code>number</code> <code>Success.summary</code> <code>string</code> <code>Timeout</code> { <code>code</code>: <code>number</code> = 21; <code>summary</code>: <code>string</code> = 'An operation did not complete before its timeout expired.' } <code>Timeout.code</code> <code>number</code> <code>Timeout.summary</code> <code>string</code> <code>UnableToSetCookie</code> { <code>code</code>: <code>number</code> = 25; <code>summary</code>: <code>string</code> = \"A request to set a cookie's value could not be satisfied.\" } <code>UnableToSetCookie.code</code> <code>number</code> <code>UnableToSetCookie.summary</code> <code>string</code> <code>UnexpectedAlertOpen</code> { <code>code</code>: <code>number</code> = 26; <code>summary</code>: <code>string</code> = 'A modal dialog was open, blocking this operation' } <code>UnexpectedAlertOpen.code</code> <code>number</code> <code>UnexpectedAlertOpen.summary</code> <code>string</code> <code>UnknownCommand</code> { <code>code</code>: <code>number</code> = 9; <code>summary</code>: <code>string</code> = 'The requested resource could not be found, or a request was received using an HTTP method that is not supported by the mapped resource.' } <code>UnknownCommand.code</code> <code>number</code> <code>UnknownCommand.summary</code> <code>string</code> <code>UnknownError</code> { <code>code</code>: <code>number</code> = 13; <code>summary</code>: <code>string</code> = 'An unknown server-side error occurred while processing the command.' } <code>UnknownError.code</code> <code>number</code> <code>UnknownError.summary</code> <code>string</code> <code>XPathLookupError</code> { <code>code</code>: <code>number</code> = 19; <code>summary</code>: <code>string</code> = 'An error occurred while searching for an element by XPath.' } <code>XPathLookupError.code</code> <code>number</code> <code>XPathLookupError.summary</code> <code>string</code>"},{"location":"reference/modules/appium_base_driver-1/#defined-in_13","title":"Defined in","text":"<p>packages/base-driver/lib/jsonwp-status/status.js:3</p>"},{"location":"reference/modules/appium_base_driver-1/#functions_1","title":"Functions","text":""},{"location":"reference/modules/appium_base_driver-1/#checkparams","title":"checkParams","text":"<p>\u25b8 checkParams(<code>paramSets</code>, <code>jsonObj</code>, <code>protocol</code>): <code>void</code></p>"},{"location":"reference/modules/appium_base_driver-1/#parameters","title":"Parameters","text":"Name Type <code>paramSets</code> <code>any</code> <code>jsonObj</code> <code>any</code> <code>protocol</code> <code>any</code>"},{"location":"reference/modules/appium_base_driver-1/#returns","title":"Returns","text":"<p><code>void</code></p>"},{"location":"reference/modules/appium_base_driver-1/#defined-in_14","title":"Defined in","text":"<p>packages/base-driver/lib/protocol/protocol.js:100</p>"},{"location":"reference/modules/appium_base_driver-1/#determineprotocol","title":"determineProtocol","text":"<p>\u25b8 determineProtocol(<code>createSessionArgs</code>): <code>string</code></p>"},{"location":"reference/modules/appium_base_driver-1/#parameters_1","title":"Parameters","text":"Name Type <code>createSessionArgs</code> <code>any</code>"},{"location":"reference/modules/appium_base_driver-1/#returns_1","title":"Returns","text":"<p><code>string</code></p>"},{"location":"reference/modules/appium_base_driver-1/#defined-in_15","title":"Defined in","text":"<p>packages/base-driver/lib/protocol/protocol.js:24</p>"},{"location":"reference/modules/appium_base_driver-1/#errorfromcode","title":"errorFromCode","text":"<p>\u25b8 errorFromCode(<code>code</code>, <code>value?</code>): <code>ProtocolError</code></p> <p>Retrieve an error derived from MJSONWP status</p>"},{"location":"reference/modules/appium_base_driver-1/#parameters_2","title":"Parameters","text":"Name Type Default value Description <code>code</code> <code>number</code> <code>undefined</code> JSONWP status code <code>value</code> <code>any</code> <code>''</code> The error message, or an object with a <code>message</code> property"},{"location":"reference/modules/appium_base_driver-1/#returns_2","title":"Returns","text":"<p><code>ProtocolError</code></p> <p>The error that is associated with provided JSONWP status code</p>"},{"location":"reference/modules/appium_base_driver-1/#defined-in_16","title":"Defined in","text":"<p>packages/base-driver/lib/protocol/errors.js:1012</p>"},{"location":"reference/modules/appium_base_driver-1/#errorfromw3cjsoncode","title":"errorFromW3CJsonCode","text":"<p>\u25b8 errorFromW3CJsonCode(<code>code</code>, <code>message</code>, <code>stacktrace?</code>): <code>ProtocolError</code></p> <p>Retrieve an error derived from W3C JSON Code</p>"},{"location":"reference/modules/appium_base_driver-1/#parameters_3","title":"Parameters","text":"Name Type Default value Description <code>code</code> <code>string</code> <code>undefined</code> W3C error string (see https://www.w3.org/TR/webdriver/#handling-errors <code>JSON Error Code</code> column) <code>message</code> <code>string</code> <code>undefined</code> the error message <code>stacktrace</code> <code>null</code> | <code>string</code> <code>null</code> an optional error stacktrace"},{"location":"reference/modules/appium_base_driver-1/#returns_3","title":"Returns","text":"<p><code>ProtocolError</code></p> <p>The error that is associated with the W3C error string</p>"},{"location":"reference/modules/appium_base_driver-1/#defined-in_17","title":"Defined in","text":"<p>packages/base-driver/lib/protocol/errors.js:1031</p>"},{"location":"reference/modules/appium_base_driver-1/#getsummarybycode","title":"getSummaryByCode","text":"<p>\u25b8 getSummaryByCode(<code>code</code>): <code>string</code></p>"},{"location":"reference/modules/appium_base_driver-1/#parameters_4","title":"Parameters","text":"Name Type <code>code</code> <code>any</code>"},{"location":"reference/modules/appium_base_driver-1/#returns_4","title":"Returns","text":"<p><code>string</code></p>"},{"location":"reference/modules/appium_base_driver-1/#defined-in_18","title":"Defined in","text":"<p>packages/base-driver/lib/jsonwp-status/status.js:117</p>"},{"location":"reference/modules/appium_base_driver-1/#iserrortype","title":"isErrorType","text":"<p>\u25b8 isErrorType(<code>err</code>, <code>type</code>): <code>boolean</code></p>"},{"location":"reference/modules/appium_base_driver-1/#parameters_5","title":"Parameters","text":"Name Type <code>err</code> <code>any</code> <code>type</code> <code>any</code>"},{"location":"reference/modules/appium_base_driver-1/#returns_5","title":"Returns","text":"<p><code>boolean</code></p>"},{"location":"reference/modules/appium_base_driver-1/#defined-in_19","title":"Defined in","text":"<p>packages/base-driver/lib/protocol/errors.js:986</p>"},{"location":"reference/modules/appium_base_driver-1/#issessioncommand","title":"isSessionCommand","text":"<p>\u25b8 isSessionCommand(<code>command</code>): <code>boolean</code></p>"},{"location":"reference/modules/appium_base_driver-1/#parameters_6","title":"Parameters","text":"Name Type <code>command</code> <code>any</code>"},{"location":"reference/modules/appium_base_driver-1/#returns_6","title":"Returns","text":"<p><code>boolean</code></p>"},{"location":"reference/modules/appium_base_driver-1/#defined-in_20","title":"Defined in","text":"<p>packages/base-driver/lib/protocol/protocol.js:43</p>"},{"location":"reference/modules/appium_base_driver-1/#isstandardcap","title":"isStandardCap","text":"<p>\u25b8 isStandardCap(<code>cap</code>): <code>boolean</code></p>"},{"location":"reference/modules/appium_base_driver-1/#parameters_7","title":"Parameters","text":"Name Type <code>cap</code> <code>string</code>"},{"location":"reference/modules/appium_base_driver-1/#returns_7","title":"Returns","text":"<p><code>boolean</code></p>"},{"location":"reference/modules/appium_base_driver-1/#defined-in_21","title":"Defined in","text":"<p>packages/base-driver/lib/basedriver/capabilities.js:118</p>"},{"location":"reference/modules/appium_base_driver-1/#makeargs","title":"makeArgs","text":"<p>\u25b8 makeArgs(<code>requestParams</code>, <code>jsonObj</code>, <code>payloadParams</code>, <code>protocol</code>): <code>any</code></p>"},{"location":"reference/modules/appium_base_driver-1/#parameters_8","title":"Parameters","text":"Name Type <code>requestParams</code> <code>any</code> <code>jsonObj</code> <code>any</code> <code>payloadParams</code> <code>any</code> <code>protocol</code> <code>any</code>"},{"location":"reference/modules/appium_base_driver-1/#returns_8","title":"Returns","text":"<p><code>any</code></p>"},{"location":"reference/modules/appium_base_driver-1/#defined-in_22","title":"Defined in","text":"<p>packages/base-driver/lib/protocol/protocol.js:168</p>"},{"location":"reference/modules/appium_base_driver-1/#normalizebasepath","title":"normalizeBasePath","text":"<p>\u25b8 normalizeBasePath(<code>basePath</code>): <code>string</code></p> <p>Normalize base path string</p>"},{"location":"reference/modules/appium_base_driver-1/#parameters_9","title":"Parameters","text":"Name Type <code>basePath</code> <code>string</code>"},{"location":"reference/modules/appium_base_driver-1/#returns_9","title":"Returns","text":"<p><code>string</code></p>"},{"location":"reference/modules/appium_base_driver-1/#defined-in_23","title":"Defined in","text":"<p>packages/base-driver/lib/express/server.js:248</p>"},{"location":"reference/modules/appium_base_driver-1/#processcapabilities","title":"processCapabilities","text":"<p>\u25b8 processCapabilities&lt;<code>C</code>&gt;(<code>w3cCaps</code>, <code>constraints?</code>, <code>shouldValidateCaps?</code>): <code>Partial</code>&lt;<code>ConstraintsToCaps</code>&lt;<code>C</code>&gt; &amp; <code>void</code>&gt;</p>"},{"location":"reference/modules/appium_base_driver-1/#type-parameters","title":"Type parameters","text":"Name Type <code>C</code> extends <code>Readonly</code>&lt;<code>Record</code>&lt;<code>string</code>, <code>Constraint</code>&gt;&gt;"},{"location":"reference/modules/appium_base_driver-1/#parameters_10","title":"Parameters","text":"Name Type Default value <code>w3cCaps</code> <code>W3CCapabilities</code>&lt;<code>C</code>, <code>void</code>&gt; <code>undefined</code> <code>constraints?</code> <code>C</code> <code>undefined</code> <code>shouldValidateCaps?</code> <code>boolean</code> <code>true</code>"},{"location":"reference/modules/appium_base_driver-1/#returns_10","title":"Returns","text":"<p><code>Partial</code>&lt;<code>ConstraintsToCaps</code>&lt;<code>C</code>&gt; &amp; <code>void</code>&gt;</p>"},{"location":"reference/modules/appium_base_driver-1/#defined-in_24","title":"Defined in","text":"<p>packages/base-driver/lib/basedriver/capabilities.js:311</p>"},{"location":"reference/modules/appium_base_driver-1/#promoteappiumoptions","title":"promoteAppiumOptions","text":"<p>\u25b8 promoteAppiumOptions&lt;<code>C</code>&gt;(<code>originalCaps</code>): <code>W3CCapabilities</code>&lt;<code>C</code>, <code>void</code>&gt;</p> <p>Return a copy of a capabilities object which has taken everything within the 'options' capability and promoted it to the top level.</p>"},{"location":"reference/modules/appium_base_driver-1/#type-parameters_1","title":"Type parameters","text":"Name Type <code>C</code> extends <code>Readonly</code>&lt;<code>Record</code>&lt;<code>string</code>, <code>Constraint</code>&gt;&gt;"},{"location":"reference/modules/appium_base_driver-1/#parameters_11","title":"Parameters","text":"Name Type <code>originalCaps</code> <code>W3CCapabilities</code>&lt;<code>C</code>, <code>void</code>&gt;"},{"location":"reference/modules/appium_base_driver-1/#returns_11","title":"Returns","text":"<p><code>W3CCapabilities</code>&lt;<code>C</code>, <code>void</code>&gt;</p> <p>the capabilities with 'options' promoted if necessary</p>"},{"location":"reference/modules/appium_base_driver-1/#defined-in_25","title":"Defined in","text":"<p>packages/base-driver/lib/basedriver/capabilities.js:344</p>"},{"location":"reference/modules/appium_base_driver-1/#routeconfiguringfunction","title":"routeConfiguringFunction","text":"<p>\u25b8 routeConfiguringFunction(<code>driver</code>): <code>RouteConfiguringFunction</code></p>"},{"location":"reference/modules/appium_base_driver-1/#parameters_12","title":"Parameters","text":"Name Type <code>driver</code> <code>Core</code>&lt;typeof <code>BASE_DESIRED_CAP_CONSTRAINTS</code>&gt;"},{"location":"reference/modules/appium_base_driver-1/#returns_12","title":"Returns","text":"<p><code>RouteConfiguringFunction</code></p>"},{"location":"reference/modules/appium_base_driver-1/#defined-in_26","title":"Defined in","text":"<p>packages/base-driver/lib/protocol/protocol.js:251</p>"},{"location":"reference/modules/appium_base_driver-1/#routetocommandname","title":"routeToCommandName","text":"<p>\u25b8 routeToCommandName(<code>endpoint</code>, <code>method</code>, <code>basePath?</code>): <code>undefined</code> | <code>string</code></p>"},{"location":"reference/modules/appium_base_driver-1/#parameters_13","title":"Parameters","text":"Name Type Default value <code>endpoint</code> <code>string</code> <code>undefined</code> <code>method</code> <code>HTTPMethod</code> <code>undefined</code> <code>basePath?</code> <code>string</code> <code>DEFAULT_BASE_PATH</code>"},{"location":"reference/modules/appium_base_driver-1/#returns_13","title":"Returns","text":"<p><code>undefined</code> | <code>string</code></p>"},{"location":"reference/modules/appium_base_driver-1/#defined-in_27","title":"Defined in","text":"<p>packages/base-driver/lib/protocol/routes.js:969</p>"},{"location":"reference/modules/appium_base_driver-1/#server","title":"server","text":"<p>\u25b8 server(<code>opts</code>): <code>Promise</code>&lt;<code>AppiumServer</code>&gt;</p>"},{"location":"reference/modules/appium_base_driver-1/#parameters_14","title":"Parameters","text":"Name Type <code>opts</code> <code>ServerOpts</code>"},{"location":"reference/modules/appium_base_driver-1/#returns_14","title":"Returns","text":"<p><code>Promise</code>&lt;<code>AppiumServer</code>&gt;</p>"},{"location":"reference/modules/appium_base_driver-1/#defined-in_28","title":"Defined in","text":"<p>packages/base-driver/lib/express/server.js:38</p>"},{"location":"reference/modules/appium_base_driver-1/#validatecaps","title":"validateCaps","text":"<p>\u25b8 validateCaps&lt;<code>C</code>&gt;(<code>caps</code>, <code>constraints?</code>, <code>opts?</code>): <code>Partial</code>&lt;<code>ConstraintsToCaps</code>&lt;<code>C</code>&gt; &amp; <code>void</code>&gt;</p>"},{"location":"reference/modules/appium_base_driver-1/#type-parameters_2","title":"Type parameters","text":"Name Type <code>C</code> extends <code>Readonly</code>&lt;<code>Record</code>&lt;<code>string</code>, <code>Constraint</code>&gt;&gt; = {}"},{"location":"reference/modules/appium_base_driver-1/#parameters_15","title":"Parameters","text":"Name Type <code>caps</code> <code>Partial</code>&lt;<code>ConstraintsToCaps</code>&lt;<code>C</code>&gt; &amp; <code>void</code>&gt; <code>constraints?</code> <code>C</code> <code>opts?</code> <code>ValidateCapsOpts</code>"},{"location":"reference/modules/appium_base_driver-1/#returns_15","title":"Returns","text":"<p><code>Partial</code>&lt;<code>ConstraintsToCaps</code>&lt;<code>C</code>&gt; &amp; <code>void</code>&gt;</p>"},{"location":"reference/modules/appium_base_driver-1/#defined-in_29","title":"Defined in","text":"<p>packages/base-driver/lib/basedriver/capabilities.js:49</p>"},{"location":"reference/modules/appium_base_driver-1/#validateexecutemethodparams","title":"validateExecuteMethodParams","text":"<p>\u25b8 validateExecuteMethodParams(<code>params</code>, <code>paramSpec</code>): <code>any</code></p>"},{"location":"reference/modules/appium_base_driver-1/#parameters_16","title":"Parameters","text":"Name Type <code>params</code> <code>any</code> <code>paramSpec</code> <code>any</code>"},{"location":"reference/modules/appium_base_driver-1/#returns_16","title":"Returns","text":"<p><code>any</code></p>"},{"location":"reference/modules/appium_base_driver-1/#defined-in_30","title":"Defined in","text":"<p>packages/base-driver/lib/protocol/protocol.js:218</p>"},{"location":"reference/modules/appium_base_plugin/","title":"Module: @appium/base-plugin","text":""},{"location":"reference/modules/appium_base_plugin/#table-of-contents","title":"Table of contents","text":""},{"location":"reference/modules/appium_base_plugin/#references","title":"References","text":"<ul> <li>default</li> </ul>"},{"location":"reference/modules/appium_base_plugin/#classes","title":"Classes","text":"<ul> <li>BasePlugin</li> </ul>"},{"location":"reference/modules/appium_base_plugin/#interfaces","title":"Interfaces","text":"<ul> <li>Plugin</li> </ul>"},{"location":"reference/modules/appium_base_plugin/#type-aliases","title":"Type Aliases","text":"<ul> <li>Driver</li> <li>NextPluginCallback</li> <li>PluginClass</li> </ul>"},{"location":"reference/modules/appium_base_plugin/#references_1","title":"References","text":""},{"location":"reference/modules/appium_base_plugin/#default","title":"default","text":"<p>Renames and re-exports BasePlugin</p>"},{"location":"reference/modules/appium_base_plugin/#type-aliases_1","title":"Type Aliases","text":""},{"location":"reference/modules/appium_base_plugin/#driver","title":"Driver","text":"<p>\u01ac Driver&lt;&gt;: <code>Driver</code></p>"},{"location":"reference/modules/appium_base_plugin/#defined-in","title":"Defined in","text":"<p>packages/base-plugin/lib/plugin.js:90</p>"},{"location":"reference/modules/appium_base_plugin/#nextplugincallback","title":"NextPluginCallback","text":"<p>\u01ac NextPluginCallback: () =&gt; <code>Promise</code>&lt;<code>void</code>&gt;</p>"},{"location":"reference/modules/appium_base_plugin/#type-declaration","title":"Type declaration","text":"<p>\u25b8 (): <code>Promise</code>&lt;<code>void</code>&gt;</p> <p>A reference to an async function which encapsulates what would normally happen if this plugin were not handling a command. Used by PluginInterface.handle.</p> <p>Given <code>next()</code> is a <code>NextPluginCallback</code>: if this is the only plugin handling the command, <code>await next()</code> would therefore trigger the normal handling logic in the driver which is in use. If another plugin is registered, it would run that plugin's <code>handle</code> method and return the result for use here. Note that if this plugin does not call <code>await next()</code>, then the normal command logic will not be run, and this plugin is responsible for managing new command timeouts and command logging, for example: <code>driver.stopNewCommandTimeout()</code> -- before running plugin logic <code>driver.startNewCommandTimeout()</code> -- after running plugin logic <code>driver._eventHistory.commands.push({cmd: cmdName, startTime, endTime})</code> -- after running plugin logic</p>"},{"location":"reference/modules/appium_base_plugin/#returns","title":"Returns","text":"<p><code>Promise</code>&lt;<code>void</code>&gt;</p>"},{"location":"reference/modules/appium_base_plugin/#defined-in_1","title":"Defined in","text":"<p>packages/types/build/lib/plugin.d.ts:69</p>"},{"location":"reference/modules/appium_base_plugin/#pluginclass","title":"PluginClass","text":"<p>\u01ac PluginClass&lt;&gt;: <code>PluginClass</code></p>"},{"location":"reference/modules/appium_base_plugin/#defined-in_2","title":"Defined in","text":"<p>packages/base-plugin/lib/plugin.js:91</p>"},{"location":"reference/modules/appium_execute_driver_plugin-1/","title":"Module: @appium/execute-driver-plugin","text":""},{"location":"reference/modules/appium_execute_driver_plugin-1/#table-of-contents","title":"Table of contents","text":""},{"location":"reference/modules/appium_execute_driver_plugin-1/#references","title":"References","text":"<ul> <li>default</li> </ul>"},{"location":"reference/modules/appium_execute_driver_plugin-1/#classes","title":"Classes","text":"<ul> <li>ExecuteDriverPlugin</li> </ul>"},{"location":"reference/modules/appium_execute_driver_plugin-1/#references_1","title":"References","text":""},{"location":"reference/modules/appium_execute_driver_plugin-1/#default","title":"default","text":"<p>Renames and re-exports ExecuteDriverPlugin</p>"},{"location":"reference/modules/appium_fake_driver-1/","title":"Module: @appium/fake-driver","text":""},{"location":"reference/modules/appium_fake_driver-1/#table-of-contents","title":"Table of contents","text":""},{"location":"reference/modules/appium_fake_driver-1/#classes","title":"Classes","text":"<ul> <li>FakeDriver</li> </ul>"},{"location":"reference/modules/appium_fake_driver-1/#type-aliases","title":"Type Aliases","text":"<ul> <li>FakeDriverCaps</li> <li>W3CFakeDriverCaps</li> </ul>"},{"location":"reference/modules/appium_fake_driver-1/#functions","title":"Functions","text":"<ul> <li>main</li> <li>startServer</li> </ul>"},{"location":"reference/modules/appium_fake_driver-1/#type-aliases_1","title":"Type Aliases","text":""},{"location":"reference/modules/appium_fake_driver-1/#fakedrivercaps","title":"FakeDriverCaps","text":"<p>\u01ac FakeDriverCaps: <code>DriverCaps</code>&lt;<code>FakeDriverConstraints</code>&gt;</p> <p>Capabilities for FakeDriver</p>"},{"location":"reference/modules/appium_fake_driver-1/#defined-in","title":"Defined in","text":"<p>packages/fake-driver/lib/types.ts:14</p>"},{"location":"reference/modules/appium_fake_driver-1/#w3cfakedrivercaps","title":"W3CFakeDriverCaps","text":"<p>\u01ac W3CFakeDriverCaps: <code>W3CDriverCaps</code>&lt;<code>FakeDriverConstraints</code>&gt;</p> <p>W3C-style caps for FakeDriver</p>"},{"location":"reference/modules/appium_fake_driver-1/#defined-in_1","title":"Defined in","text":"<p>packages/fake-driver/lib/types.ts:8</p>"},{"location":"reference/modules/appium_fake_driver-1/#functions_1","title":"Functions","text":""},{"location":"reference/modules/appium_fake_driver-1/#main","title":"main","text":"<p>\u25b8 main(): <code>Promise</code>&lt;<code>AppiumServer</code>&gt;</p>"},{"location":"reference/modules/appium_fake_driver-1/#returns","title":"Returns","text":"<p><code>Promise</code>&lt;<code>AppiumServer</code>&gt;</p>"},{"location":"reference/modules/appium_fake_driver-1/#defined-in_2","title":"Defined in","text":"<p>packages/fake-driver/lib/index.js:7</p>"},{"location":"reference/modules/appium_fake_driver-1/#startserver","title":"startServer","text":"<p>\u25b8 startServer(<code>port</code>, <code>hostname</code>): <code>Promise</code>&lt;<code>AppiumServer</code>&gt;</p>"},{"location":"reference/modules/appium_fake_driver-1/#parameters","title":"Parameters","text":"Name Type <code>port</code> <code>any</code> <code>hostname</code> <code>any</code>"},{"location":"reference/modules/appium_fake_driver-1/#returns_1","title":"Returns","text":"<p><code>Promise</code>&lt;<code>AppiumServer</code>&gt;</p>"},{"location":"reference/modules/appium_fake_driver-1/#defined-in_3","title":"Defined in","text":"<p>packages/fake-driver/lib/server.js:5</p>"},{"location":"reference/modules/appium_images_plugin-1/","title":"Module: @appium/images-plugin","text":""},{"location":"reference/modules/appium_images_plugin-1/#table-of-contents","title":"Table of contents","text":""},{"location":"reference/modules/appium_images_plugin-1/#references","title":"References","text":"<ul> <li>default</li> </ul>"},{"location":"reference/modules/appium_images_plugin-1/#classes","title":"Classes","text":"<ul> <li>ImageElementPlugin</li> </ul>"},{"location":"reference/modules/appium_images_plugin-1/#variables","title":"Variables","text":"<ul> <li>IMAGE_STRATEGY</li> </ul>"},{"location":"reference/modules/appium_images_plugin-1/#functions","title":"Functions","text":"<ul> <li>getImgElFromArgs</li> </ul>"},{"location":"reference/modules/appium_images_plugin-1/#references_1","title":"References","text":""},{"location":"reference/modules/appium_images_plugin-1/#default","title":"default","text":"<p>Renames and re-exports ImageElementPlugin</p>"},{"location":"reference/modules/appium_images_plugin-1/#variables_1","title":"Variables","text":""},{"location":"reference/modules/appium_images_plugin-1/#image_strategy","title":"IMAGE_STRATEGY","text":"<p>\u2022 <code>Const</code> IMAGE_STRATEGY: <code>\"-image\"</code></p>"},{"location":"reference/modules/appium_images_plugin-1/#defined-in","title":"Defined in","text":"<p>packages/images-plugin/lib/plugin.js:10</p>"},{"location":"reference/modules/appium_images_plugin-1/#functions_1","title":"Functions","text":""},{"location":"reference/modules/appium_images_plugin-1/#getimgelfromargs","title":"getImgElFromArgs","text":"<p>\u25b8 getImgElFromArgs(<code>args</code>): <code>undefined</code> | <code>string</code></p>"},{"location":"reference/modules/appium_images_plugin-1/#parameters","title":"Parameters","text":"Name Type <code>args</code> <code>any</code>"},{"location":"reference/modules/appium_images_plugin-1/#returns","title":"Returns","text":"<p><code>undefined</code> | <code>string</code></p>"},{"location":"reference/modules/appium_images_plugin-1/#defined-in_1","title":"Defined in","text":"<p>packages/images-plugin/lib/plugin.js:12</p>"},{"location":"reference/modules/appium_relaxed_caps_plugin-1/","title":"Module: @appium/relaxed-caps-plugin","text":""},{"location":"reference/modules/appium_relaxed_caps_plugin-1/#table-of-contents","title":"Table of contents","text":""},{"location":"reference/modules/appium_relaxed_caps_plugin-1/#classes","title":"Classes","text":"<ul> <li>RelaxedCapsPlugin</li> </ul>"},{"location":"reference/modules/appium_support.console/","title":"Namespace: console","text":"<p>@appium/support.console</p>"},{"location":"reference/modules/appium_support.console/#table-of-contents","title":"Table of contents","text":""},{"location":"reference/modules/appium_support.console/#classes","title":"Classes","text":"<ul> <li>CliConsole</li> </ul>"},{"location":"reference/modules/appium_support.console/#interfaces","title":"Interfaces","text":"<ul> <li>ConsoleOpts</li> </ul>"},{"location":"reference/modules/appium_support.console/#variables","title":"Variables","text":"<ul> <li>console</li> <li>symbols</li> </ul>"},{"location":"reference/modules/appium_support.console/#variables_1","title":"Variables","text":""},{"location":"reference/modules/appium_support.console/#console","title":"console","text":"<p>\u2022 <code>Const</code> console: <code>CliConsole</code></p> <p>Options for <code>CliConsole</code>.</p> <p><code>Property</code></p> <p>If truthy, supress all output except JSON (use <code>json</code>), which writes to <code>STDOUT</code>.</p> <p><code>Property</code></p> <p>If falsy, do not use fancy symbols.</p> <p><code>Property</code></p> <p>If falsy, do not use color output. If truthy, forces color output. By default, checks terminal/TTY for support via pkg <code>supports-color</code>. Ignored if <code>useSymbols</code> is <code>false</code>.</p> <p><code>See</code></p> <p>https://npm.im/supports-color</p>"},{"location":"reference/modules/appium_support.console/#defined-in","title":"Defined in","text":"<p>packages/support/lib/console.js:172</p>"},{"location":"reference/modules/appium_support.console/#symbols","title":"symbols","text":"<p>\u2022 <code>Const</code> symbols: <code>Object</code></p> <p>Colored symbols for various log levels.</p> <p>Includes fallbacks for Windows CMD which only supports a limited character set.</p> <p><code>Example</code></p> <pre><code>import logSymbols = require('log-symbols');\n\nconsole.log(logSymbols.success, 'Finished successfully!');\n// Terminals with Unicode support:     \u2714 Finished successfully!\n// Terminals without Unicode support:  \u221a Finished successfully!\n</code></pre>"},{"location":"reference/modules/appium_support.console/#type-declaration","title":"Type declaration","text":"Name Type <code>error</code> <code>string</code> <code>info</code> <code>string</code> <code>success</code> <code>string</code> <code>warning</code> <code>string</code>"},{"location":"reference/modules/appium_support.console/#defined-in_1","title":"Defined in","text":"<p>node_modules/log-symbols/index.d.ts:15</p>"},{"location":"reference/modules/appium_support.env/","title":"Namespace: env","text":"<p>@appium/support.env</p>"},{"location":"reference/modules/appium_support.env/#table-of-contents","title":"Table of contents","text":""},{"location":"reference/modules/appium_support.env/#type-aliases","title":"Type Aliases","text":"<ul> <li>NormalizedPackageJson</li> </ul>"},{"location":"reference/modules/appium_support.env/#variables","title":"Variables","text":"<ul> <li>DEFAULT_APPIUM_HOME</li> <li>MANIFEST_BASENAME</li> <li>MANIFEST_RELATIVE_PATH</li> </ul>"},{"location":"reference/modules/appium_support.env/#functions","title":"Functions","text":"<ul> <li>findAppiumDependencyPackage</li> <li>hasAppiumDependency</li> <li>readPackageInDir</li> <li>resolveAppiumHome</li> <li>resolveManifestPath</li> </ul>"},{"location":"reference/modules/appium_support.env/#type-aliases_1","title":"Type Aliases","text":""},{"location":"reference/modules/appium_support.env/#normalizedpackagejson","title":"NormalizedPackageJson","text":"<p>\u01ac NormalizedPackageJson: <code>PackageJson</code> &amp; <code>normalize.Package</code></p>"},{"location":"reference/modules/appium_support.env/#defined-in","title":"Defined in","text":"<p>node_modules/read-pkg/index.d.ts:25</p>"},{"location":"reference/modules/appium_support.env/#variables_1","title":"Variables","text":""},{"location":"reference/modules/appium_support.env/#default_appium_home","title":"DEFAULT_APPIUM_HOME","text":"<p>\u2022 <code>Const</code> DEFAULT_APPIUM_HOME: <code>string</code></p> <p>Path to the default <code>APPIUM_HOME</code> dir (<code>~/.appium</code>).</p>"},{"location":"reference/modules/appium_support.env/#defined-in_1","title":"Defined in","text":"<p>packages/support/lib/env.js:13</p>"},{"location":"reference/modules/appium_support.env/#manifest_basename","title":"MANIFEST_BASENAME","text":"<p>\u2022 <code>Const</code> MANIFEST_BASENAME: <code>string</code> = <code>'extensions.yaml'</code></p> <p>Basename of extension manifest file.</p>"},{"location":"reference/modules/appium_support.env/#defined-in_2","title":"Defined in","text":"<p>packages/support/lib/env.js:19</p>"},{"location":"reference/modules/appium_support.env/#manifest_relative_path","title":"MANIFEST_RELATIVE_PATH","text":"<p>\u2022 <code>Const</code> MANIFEST_RELATIVE_PATH: <code>string</code></p> <p>Relative path to extension manifest file from <code>APPIUM_HOME</code>.</p>"},{"location":"reference/modules/appium_support.env/#defined-in_3","title":"Defined in","text":"<p>packages/support/lib/env.js:25</p>"},{"location":"reference/modules/appium_support.env/#functions_1","title":"Functions","text":""},{"location":"reference/modules/appium_support.env/#findappiumdependencypackage","title":"findAppiumDependencyPackage","text":"<p>\u25b8 findAppiumDependencyPackage(<code>cwd?</code>): <code>Promise</code>&lt;<code>undefined</code> | <code>string</code>&gt;</p> <p>Given <code>cwd</code>, use <code>npm</code> to find the closest package or workspace root, and return the path if the root depends upon <code>appium</code>.</p> <p>Looks at <code>dependencies</code> and <code>devDependencies</code> for <code>appium</code>.</p>"},{"location":"reference/modules/appium_support.env/#parameters","title":"Parameters","text":"Name Type <code>cwd?</code> <code>string</code>"},{"location":"reference/modules/appium_support.env/#returns","title":"Returns","text":"<p><code>Promise</code>&lt;<code>undefined</code> | <code>string</code>&gt;</p>"},{"location":"reference/modules/appium_support.env/#defined-in_4","title":"Defined in","text":"<p>packages/support/lib/env.js:54</p>"},{"location":"reference/modules/appium_support.env/#hasappiumdependency","title":"hasAppiumDependency","text":"<p>\u25b8 hasAppiumDependency(<code>cwd</code>): <code>Promise</code>&lt;<code>boolean</code>&gt;</p> <p>Resolves <code>true</code> if an <code>appium</code> dependency can be found somewhere in the given <code>cwd</code>.</p>"},{"location":"reference/modules/appium_support.env/#parameters_1","title":"Parameters","text":"Name Type <code>cwd</code> <code>string</code>"},{"location":"reference/modules/appium_support.env/#returns_1","title":"Returns","text":"<p><code>Promise</code>&lt;<code>boolean</code>&gt;</p>"},{"location":"reference/modules/appium_support.env/#defined-in_5","title":"Defined in","text":"<p>packages/support/lib/env.js:40</p>"},{"location":"reference/modules/appium_support.env/#readpackageindir","title":"readPackageInDir","text":"<p>\u25b8 readPackageInDir(<code>cwd</code>): <code>Promise</code>&lt;<code>undefined</code> | <code>NormalizedPackageJson</code>&gt;</p> <p>Read a <code>package.json</code> in dir <code>cwd</code>.  If none found, return <code>undefined</code>.</p>"},{"location":"reference/modules/appium_support.env/#parameters_2","title":"Parameters","text":"Name Type <code>cwd</code> <code>string</code>"},{"location":"reference/modules/appium_support.env/#returns_2","title":"Returns","text":"<p><code>Promise</code>&lt;<code>undefined</code> | <code>NormalizedPackageJson</code>&gt;</p>"},{"location":"reference/modules/appium_support.env/#defined-in_6","title":"Defined in","text":"<p>packages/support/lib/env.js:110</p>"},{"location":"reference/modules/appium_support.env/#resolveappiumhome","title":"resolveAppiumHome","text":"<p>\u25b8 resolveAppiumHome(<code>cwd?</code>): <code>Promise</code>&lt;<code>string</code>&gt;</p> <p>Determines location of Appium's \"home\" dir</p> <ul> <li>If <code>APPIUM_HOME</code> is set in the environment, use that</li> <li>If we find a <code>package.json</code> in or above <code>cwd</code> and it has an <code>appium</code> dependency, use that.</li> </ul> <p>All returned paths will be absolute.</p>"},{"location":"reference/modules/appium_support.env/#parameters_3","title":"Parameters","text":"Name Type <code>cwd?</code> <code>string</code>"},{"location":"reference/modules/appium_support.env/#returns_3","title":"Returns","text":"<p><code>Promise</code>&lt;<code>string</code>&gt;</p>"},{"location":"reference/modules/appium_support.env/#defined-in_7","title":"Defined in","text":"<p>packages/support/lib/env.js:128</p>"},{"location":"reference/modules/appium_support.env/#resolvemanifestpath","title":"resolveManifestPath","text":"<p>\u25b8 resolveManifestPath(<code>appiumHome?</code>): <code>Promise</code>&lt;<code>string</code>&gt;</p> <p>Figure out manifest path based on <code>appiumHome</code>.</p> <p>The assumption is that, if <code>appiumHome</code> has been provided, it was resolved via <code>resolveAppiumHome()</code>!  If unsure, don't pass a parameter and let <code>resolveAppiumHome()</code> handle it.</p>"},{"location":"reference/modules/appium_support.env/#parameters_4","title":"Parameters","text":"Name Type <code>appiumHome?</code> <code>string</code>"},{"location":"reference/modules/appium_support.env/#returns_4","title":"Returns","text":"<p><code>Promise</code>&lt;<code>string</code>&gt;</p>"},{"location":"reference/modules/appium_support.env/#defined-in_8","title":"Defined in","text":"<p>packages/support/lib/env.js:158</p>"},{"location":"reference/modules/appium_support.imageUtil/","title":"Namespace: imageUtil","text":"<p>@appium/support.imageUtil</p>"},{"location":"reference/modules/appium_support.imageUtil/#table-of-contents","title":"Table of contents","text":""},{"location":"reference/modules/appium_support.imageUtil/#interfaces","title":"Interfaces","text":"<ul> <li>Region</li> </ul>"},{"location":"reference/modules/appium_support.imageUtil/#type-aliases","title":"Type Aliases","text":"<ul> <li>AppiumJimp</li> </ul>"},{"location":"reference/modules/appium_support.imageUtil/#variables","title":"Variables","text":"<ul> <li>MIME_BMP</li> <li>MIME_JPEG</li> <li>MIME_PNG</li> </ul>"},{"location":"reference/modules/appium_support.imageUtil/#functions","title":"Functions","text":"<ul> <li>base64ToImage</li> <li>cropBase64Image</li> <li>cropImage</li> <li>getJimpImage</li> <li>imageToBase64</li> </ul>"},{"location":"reference/modules/appium_support.imageUtil/#type-aliases_1","title":"Type Aliases","text":""},{"location":"reference/modules/appium_support.imageUtil/#appiumjimp","title":"AppiumJimp","text":"<p>\u01ac AppiumJimp&lt;&gt;: <code>Omit</code>&lt;<code>Jimp</code>, <code>\"getBuffer\"</code>&gt; &amp; { <code>getBuffer</code>: <code>Jimp</code>[<code>\"getBufferAsync\"</code>]  }</p>"},{"location":"reference/modules/appium_support.imageUtil/#defined-in","title":"Defined in","text":"<p>packages/support/lib/image-util.js:165</p>"},{"location":"reference/modules/appium_support.imageUtil/#variables_1","title":"Variables","text":""},{"location":"reference/modules/appium_support.imageUtil/#mime_bmp","title":"MIME_BMP","text":"<p>\u2022 MIME_BMP: <code>\"image/bmp\"</code></p>"},{"location":"reference/modules/appium_support.imageUtil/#defined-in_1","title":"Defined in","text":"<p>packages/support/lib/image-util.js:9</p>"},{"location":"reference/modules/appium_support.imageUtil/#mime_jpeg","title":"MIME_JPEG","text":"<p>\u2022 MIME_JPEG: <code>\"image/jpeg\"</code></p>"},{"location":"reference/modules/appium_support.imageUtil/#defined-in_2","title":"Defined in","text":"<p>packages/support/lib/image-util.js:9</p>"},{"location":"reference/modules/appium_support.imageUtil/#mime_png","title":"MIME_PNG","text":"<p>\u2022 MIME_PNG: <code>\"image/png\"</code></p>"},{"location":"reference/modules/appium_support.imageUtil/#defined-in_3","title":"Defined in","text":"<p>packages/support/lib/image-util.js:9</p>"},{"location":"reference/modules/appium_support.imageUtil/#functions_1","title":"Functions","text":""},{"location":"reference/modules/appium_support.imageUtil/#base64toimage","title":"base64ToImage","text":"<p>\u25b8 base64ToImage(<code>base64Image</code>): <code>Promise</code>&lt;<code>PNG</code>&gt;</p> <p>Create a pngjs image from given base64 image</p>"},{"location":"reference/modules/appium_support.imageUtil/#parameters","title":"Parameters","text":"Name Type Description <code>base64Image</code> <code>string</code> The string with base64 encoded image"},{"location":"reference/modules/appium_support.imageUtil/#returns","title":"Returns","text":"<p><code>Promise</code>&lt;<code>PNG</code>&gt;</p> <p>The image object</p>"},{"location":"reference/modules/appium_support.imageUtil/#defined-in_4","title":"Defined in","text":"<p>packages/support/lib/image-util.js:70</p>"},{"location":"reference/modules/appium_support.imageUtil/#cropbase64image","title":"cropBase64Image","text":"<p>\u25b8 cropBase64Image(<code>base64Image</code>, <code>rect</code>): <code>Promise</code>&lt;<code>string</code>&gt;</p> <p>Crop the image by given rectangle (use base64 string as input and output)</p>"},{"location":"reference/modules/appium_support.imageUtil/#parameters_1","title":"Parameters","text":"Name Type Description <code>base64Image</code> <code>string</code> The string with base64 encoded image <code>rect</code> <code>Region</code> The selected region of image"},{"location":"reference/modules/appium_support.imageUtil/#returns_1","title":"Returns","text":"<p><code>Promise</code>&lt;<code>string</code>&gt;</p> <p>base64 encoded string of cropped image</p>"},{"location":"reference/modules/appium_support.imageUtil/#defined-in_5","title":"Defined in","text":"<p>packages/support/lib/image-util.js:58</p>"},{"location":"reference/modules/appium_support.imageUtil/#cropimage","title":"cropImage","text":"<p>\u25b8 cropImage(<code>image</code>, <code>rect</code>): <code>PNG</code></p> <p>Crop the image by given rectangle</p>"},{"location":"reference/modules/appium_support.imageUtil/#parameters_2","title":"Parameters","text":"Name Type Description <code>image</code> <code>PNG</code> The image to mutate by cropping <code>rect</code> <code>Region</code> The selected region of image"},{"location":"reference/modules/appium_support.imageUtil/#returns_2","title":"Returns","text":"<p><code>PNG</code></p>"},{"location":"reference/modules/appium_support.imageUtil/#defined-in_6","title":"Defined in","text":"<p>packages/support/lib/image-util.js:112</p>"},{"location":"reference/modules/appium_support.imageUtil/#getjimpimage","title":"getJimpImage","text":"<p>\u25b8 getJimpImage(<code>data</code>): <code>Promise</code>&lt;<code>AppiumJimp</code>&gt;</p> <p>Utility function to get a Jimp image object from buffer or base64 data. Jimp is a great library however it does IO in the constructor so it's not convenient for our async/await model.</p>"},{"location":"reference/modules/appium_support.imageUtil/#parameters_3","title":"Parameters","text":"Name Type Description <code>data</code> <code>string</code> | <code>Buffer</code> binary image buffer or base64-encoded image string"},{"location":"reference/modules/appium_support.imageUtil/#returns_3","title":"Returns","text":"<p><code>Promise</code>&lt;<code>AppiumJimp</code>&gt;</p> <ul> <li>the jimp image object</li> </ul>"},{"location":"reference/modules/appium_support.imageUtil/#defined-in_7","title":"Defined in","text":"<p>packages/support/lib/image-util.js:20</p>"},{"location":"reference/modules/appium_support.imageUtil/#imagetobase64","title":"imageToBase64","text":"<p>\u25b8 imageToBase64(<code>image</code>): <code>Promise</code>&lt;<code>string</code>&gt;</p> <p>Create a base64 string for given image object</p>"},{"location":"reference/modules/appium_support.imageUtil/#parameters_4","title":"Parameters","text":"Name Type Description <code>image</code> <code>PNG</code> The image object"},{"location":"reference/modules/appium_support.imageUtil/#returns_4","title":"Returns","text":"<p><code>Promise</code>&lt;<code>string</code>&gt;</p> <p>The string with base64 encoded image</p>"},{"location":"reference/modules/appium_support.imageUtil/#defined-in_8","title":"Defined in","text":"<p>packages/support/lib/image-util.js:90</p>"},{"location":"reference/modules/appium_support.logger/","title":"Namespace: logger","text":"<p>@appium/support.logger</p>"},{"location":"reference/modules/appium_support.logger/#table-of-contents","title":"Table of contents","text":""},{"location":"reference/modules/appium_support.logger/#references","title":"References","text":"<ul> <li>default</li> </ul>"},{"location":"reference/modules/appium_support.logger/#interfaces","title":"Interfaces","text":"<ul> <li>AppiumLogger</li> <li>LoadResult</li> </ul>"},{"location":"reference/modules/appium_support.logger/#type-aliases","title":"Type Aliases","text":"<ul> <li>AppiumLoggerLevel</li> <li>AppiumLoggerPrefix</li> </ul>"},{"location":"reference/modules/appium_support.logger/#variables","title":"Variables","text":"<ul> <li>LEVELS</li> <li>log</li> </ul>"},{"location":"reference/modules/appium_support.logger/#functions","title":"Functions","text":"<ul> <li>getLogger</li> <li>loadSecureValuesPreprocessingRules</li> <li>patchLogger</li> </ul>"},{"location":"reference/modules/appium_support.logger/#references_1","title":"References","text":""},{"location":"reference/modules/appium_support.logger/#default","title":"default","text":"<p>Renames and re-exports log</p>"},{"location":"reference/modules/appium_support.logger/#type-aliases_1","title":"Type Aliases","text":""},{"location":"reference/modules/appium_support.logger/#appiumloggerlevel","title":"AppiumLoggerLevel","text":"<p>\u01ac AppiumLoggerLevel: <code>\"silly\"</code> | <code>\"verbose\"</code> | <code>\"debug\"</code> | <code>\"info\"</code> | <code>\"http\"</code> | <code>\"warn\"</code> | <code>\"error\"</code></p> <p>Possible \"log levels\" for <code>AppiumLogger</code>.</p> <p>Extracted from <code>npmlog</code>.</p>"},{"location":"reference/modules/appium_support.logger/#defined-in","title":"Defined in","text":"<p>packages/types/build/lib/index.d.ts:35</p>"},{"location":"reference/modules/appium_support.logger/#appiumloggerprefix","title":"AppiumLoggerPrefix","text":"<p>\u01ac AppiumLoggerPrefix: <code>string</code> | () =&gt; <code>string</code></p> <p>A log prefix for <code>AppiumLogger</code></p> <p>If a function, the function will return the prefix.  Log messages will be prefixed with this value.</p>"},{"location":"reference/modules/appium_support.logger/#defined-in_1","title":"Defined in","text":"<p>packages/types/build/lib/index.d.ts:29</p>"},{"location":"reference/modules/appium_support.logger/#variables_1","title":"Variables","text":""},{"location":"reference/modules/appium_support.logger/#levels","title":"LEVELS","text":"<p>\u2022 <code>Const</code> LEVELS: <code>AppiumLoggerLevel</code>[]</p>"},{"location":"reference/modules/appium_support.logger/#defined-in_2","title":"Defined in","text":"<p>packages/support/lib/logging.js:10</p>"},{"location":"reference/modules/appium_support.logger/#log","title":"log","text":"<p>\u2022 <code>Const</code> log: <code>AppiumLogger</code></p>"},{"location":"reference/modules/appium_support.logger/#defined-in_3","title":"Defined in","text":"<p>packages/support/lib/logging.js:155</p>"},{"location":"reference/modules/appium_support.logger/#functions_1","title":"Functions","text":""},{"location":"reference/modules/appium_support.logger/#getlogger","title":"getLogger","text":"<p>\u25b8 getLogger(<code>prefix?</code>): <code>AppiumLogger</code></p>"},{"location":"reference/modules/appium_support.logger/#parameters","title":"Parameters","text":"Name Type Default value <code>prefix</code> <code>null</code> | <code>AppiumLoggerPrefix</code> <code>null</code>"},{"location":"reference/modules/appium_support.logger/#returns","title":"Returns","text":"<p><code>AppiumLogger</code></p>"},{"location":"reference/modules/appium_support.logger/#defined-in_4","title":"Defined in","text":"<p>packages/support/lib/logging.js:72</p>"},{"location":"reference/modules/appium_support.logger/#loadsecurevaluespreprocessingrules","title":"loadSecureValuesPreprocessingRules","text":"<p>\u25b8 loadSecureValuesPreprocessingRules(<code>rulesJsonPath</code>): <code>Promise</code>&lt;<code>LoadResult</code>&gt;</p> <p>Loads the JSON file containing secure values replacement rules. This might be necessary to hide sensitive values that may possibly appear in Appium logs. Each call to this method replaces the previously loaded rules if any existed.</p> <p><code>Throws</code></p> <p>If the given file cannot be loaded</p>"},{"location":"reference/modules/appium_support.logger/#parameters_1","title":"Parameters","text":"Name Type Description <code>rulesJsonPath</code> <code>string</code> | <code>string</code>[] | <code>LogFiltersConfig</code> The full path to the JSON file containing the replacement rules. Each rule could either be a string to be replaced or an object with predefined properties."},{"location":"reference/modules/appium_support.logger/#returns_1","title":"Returns","text":"<p><code>Promise</code>&lt;<code>LoadResult</code>&gt;</p>"},{"location":"reference/modules/appium_support.logger/#defined-in_5","title":"Defined in","text":"<p>packages/support/lib/logging.js:146</p>"},{"location":"reference/modules/appium_support.logger/#patchlogger","title":"patchLogger","text":"<p>\u25b8 patchLogger(<code>logger</code>): <code>void</code></p>"},{"location":"reference/modules/appium_support.logger/#parameters_2","title":"Parameters","text":"Name Type <code>logger</code> <code>Logger</code>"},{"location":"reference/modules/appium_support.logger/#returns_2","title":"Returns","text":"<p><code>void</code></p>"},{"location":"reference/modules/appium_support.logger/#defined-in_6","title":"Defined in","text":"<p>packages/support/lib/logging.js:25</p>"},{"location":"reference/modules/appium_support/","title":"Module: @appium/support","text":""},{"location":"reference/modules/appium_support/#table-of-contents","title":"Table of contents","text":""},{"location":"reference/modules/appium_support/#namespaces","title":"Namespaces","text":"<ul> <li>console</li> <li>env</li> <li>imageUtil</li> <li>logger</li> <li>mjpeg</li> <li>net</li> <li>node</li> <li>plist</li> <li>process</li> <li>system</li> <li>tempDir</li> <li>timing</li> <li>util</li> <li>zip</li> </ul>"},{"location":"reference/modules/appium_support/#variables","title":"Variables","text":"<ul> <li>default</li> <li>fs</li> <li>npm</li> </ul>"},{"location":"reference/modules/appium_support/#functions","title":"Functions","text":"<ul> <li>cancellableDelay</li> <li>mkdirp</li> </ul>"},{"location":"reference/modules/appium_support/#variables_1","title":"Variables","text":""},{"location":"reference/modules/appium_support/#default","title":"default","text":"<p>\u2022 default: <code>Object</code></p>"},{"location":"reference/modules/appium_support/#type-declaration","title":"Type declaration","text":"Name Type <code>cancellableDelay</code> (<code>ms</code>: <code>any</code>) =&gt; <code>Bluebird</code>&lt;<code>any</code>&gt; <code>console</code> <code>console</code> <code>env</code> <code>env</code> <code>fs</code> { <code>F_OK</code>: <code>number</code> = constants.F_OK; <code>R_OK</code>: <code>number</code> = constants.R_OK; <code>W_OK</code>: <code>number</code> = constants.W_OK; <code>X_OK</code>: <code>number</code> = constants.X_OK; <code>access</code>: (<code>path</code>: <code>PathLike</code>, <code>mode?</code>: <code>number</code>) =&gt; <code>Promise</code>&lt;<code>void</code>&gt; = fsPromises.access; <code>appendFile</code>: (<code>path</code>: <code>PathLike</code> | <code>FileHandle</code>, <code>data</code>: <code>string</code> | <code>Uint8Array</code>, <code>options?</code>: <code>null</code> | <code>BufferEncoding</code> | <code>ObjectEncodingOptions</code> &amp; <code>FlagAndOpenMode</code>) =&gt; <code>Promise</code>&lt;<code>void</code>&gt; = fsPromises.appendFile; <code>chmod</code>: (<code>path</code>: <code>PathLike</code>, <code>mode</code>: <code>Mode</code>) =&gt; <code>Promise</code>&lt;<code>void</code>&gt; = fsPromises.chmod; <code>close</code>: (<code>arg1</code>: <code>number</code>) =&gt; <code>Bluebird</code>&lt;<code>any</code>&gt; ; <code>constants</code>: typeof <code>constants</code> ; <code>createReadStream</code>: (<code>path</code>: <code>PathLike</code>, <code>options?</code>: <code>BufferEncoding</code> | <code>ReadStreamOptions</code>) =&gt; <code>ReadStream</code> ; <code>createWriteStream</code>: (<code>path</code>: <code>PathLike</code>, <code>options?</code>: <code>BufferEncoding</code> | <code>StreamOptions</code>) =&gt; <code>WriteStream</code> ; <code>glob</code>: (<code>pattern</code>: <code>string</code>, <code>opts?</code>: <code>IOptions</code>) =&gt; <code>Bluebird</code>&lt;<code>string</code>[]&gt; ; <code>lstat</code>: (<code>path</code>: <code>PathLike</code>, <code>opts?</code>: <code>StatOptions</code> &amp; { <code>bigint?</code>: <code>false</code>  }) =&gt; <code>Promise</code>&lt;<code>Stats</code>&gt;(<code>path</code>: <code>PathLike</code>, <code>opts</code>: <code>StatOptions</code> &amp; { <code>bigint</code>: <code>true</code>  }) =&gt; <code>Promise</code>&lt;<code>BigIntStats</code>&gt;(<code>path</code>: <code>PathLike</code>, <code>opts?</code>: <code>StatOptions</code>) =&gt; <code>Promise</code>&lt;<code>Stats</code> | <code>BigIntStats</code>&gt; = fsPromises.lstat; <code>mv</code>: (<code>from</code>: <code>string</code>, <code>to</code>: <code>string</code>, <code>opts?</code>: <code>Options</code>) =&gt; <code>Bluebird</code>&lt;<code>void</code>&gt; ; <code>open</code>: (<code>path</code>: <code>PathLike</code>, <code>flags</code>: <code>OpenMode</code>, <code>mode?</code>: <code>Mode</code>) =&gt; <code>Promise</code>&lt;<code>number</code>&gt; ; <code>openFile</code>: (<code>path</code>: <code>PathLike</code>, <code>flags?</code>: <code>string</code> | <code>number</code>, <code>mode?</code>: <code>Mode</code>) =&gt; <code>Promise</code>&lt;<code>FileHandle</code>&gt; = fsPromises.open; <code>read</code>: <code>ReadFn</code>&lt;<code>ArrayBufferView</code>&gt; ; <code>readFile</code>: (<code>path</code>: <code>PathLike</code> | <code>FileHandle</code>, <code>options?</code>: <code>null</code> | { <code>encoding?</code>: <code>null</code> ; <code>flag?</code>: <code>OpenMode</code>  } &amp; <code>Abortable</code>) =&gt; <code>Promise</code>&lt;<code>Buffer</code>&gt;(<code>path</code>: <code>PathLike</code> | <code>FileHandle</code>, <code>options</code>: <code>BufferEncoding</code> | { <code>encoding</code>: <code>BufferEncoding</code> ; <code>flag?</code>: <code>OpenMode</code>  } &amp; <code>Abortable</code>) =&gt; <code>Promise</code>&lt;<code>string</code>&gt;(<code>path</code>: <code>PathLike</code> | <code>FileHandle</code>, <code>options?</code>: <code>null</code> | <code>BufferEncoding</code> | <code>ObjectEncodingOptions</code> &amp; <code>Abortable</code> &amp; { <code>flag?</code>: <code>OpenMode</code>  }) =&gt; <code>Promise</code>&lt;<code>string</code> | <code>Buffer</code>&gt; = fsPromises.readFile; <code>readdir</code>: (<code>path</code>: <code>PathLike</code>, <code>options?</code>: <code>null</code> | <code>BufferEncoding</code> | <code>ObjectEncodingOptions</code> &amp; { <code>withFileTypes?</code>: <code>false</code>  }) =&gt; <code>Promise</code>&lt;<code>string</code>[]&gt;(<code>path</code>: <code>PathLike</code>, <code>options</code>: { <code>encoding</code>: <code>\"buffer\"</code> ; <code>withFileTypes?</code>: <code>false</code>  } | <code>\"buffer\"</code>) =&gt; <code>Promise</code>&lt;<code>Buffer</code>[]&gt;(<code>path</code>: <code>PathLike</code>, <code>options?</code>: <code>null</code> | <code>BufferEncoding</code> | <code>ObjectEncodingOptions</code> &amp; { <code>withFileTypes?</code>: <code>false</code>  }) =&gt; <code>Promise</code>&lt;<code>string</code>[] | <code>Buffer</code>[]&gt;(<code>path</code>: <code>PathLike</code>, <code>options</code>: <code>ObjectEncodingOptions</code> &amp; { <code>withFileTypes</code>: <code>true</code>  }) =&gt; <code>Promise</code>&lt;<code>Dirent</code>[]&gt; = fsPromises.readdir; <code>readlink</code>: (<code>path</code>: <code>PathLike</code>, <code>options?</code>: <code>null</code> | <code>BufferEncoding</code> | <code>ObjectEncodingOptions</code>) =&gt; <code>Promise</code>&lt;<code>string</code>&gt;(<code>path</code>: <code>PathLike</code>, <code>options</code>: <code>BufferEncodingOption</code>) =&gt; <code>Promise</code>&lt;<code>Buffer</code>&gt;(<code>path</code>: <code>PathLike</code>, <code>options?</code>: <code>null</code> | <code>string</code> | <code>ObjectEncodingOptions</code>) =&gt; <code>Promise</code>&lt;<code>string</code> | <code>Buffer</code>&gt; = fsPromises.readlink; <code>realpath</code>: (<code>path</code>: <code>PathLike</code>, <code>options?</code>: <code>null</code> | <code>BufferEncoding</code> | <code>ObjectEncodingOptions</code>) =&gt; <code>Promise</code>&lt;<code>string</code>&gt;(<code>path</code>: <code>PathLike</code>, <code>options</code>: <code>BufferEncodingOption</code>) =&gt; <code>Promise</code>&lt;<code>Buffer</code>&gt;(<code>path</code>: <code>PathLike</code>, <code>options?</code>: <code>null</code> | <code>BufferEncoding</code> | <code>ObjectEncodingOptions</code>) =&gt; <code>Promise</code>&lt;<code>string</code> | <code>Buffer</code>&gt; = fsPromises.realpath; <code>rename</code>: (<code>oldPath</code>: <code>PathLike</code>, <code>newPath</code>: <code>PathLike</code>) =&gt; <code>Promise</code>&lt;<code>void</code>&gt; = fsPromises.rename; <code>rimraf</code>: (<code>dirpath</code>: <code>string</code>, <code>opts?</code>: <code>Options</code>) =&gt; <code>Promise</code>&lt;<code>void</code>&gt; ; <code>rimrafSync</code>: (<code>path</code>: <code>string</code>, <code>options?</code>: <code>Options</code>) =&gt; <code>void</code> = rimrafIdx.sync; <code>sanitizeName</code>: (<code>input</code>: <code>string</code>, <code>options?</code>: { <code>replacement?</code>: <code>string</code> | (<code>substring</code>: <code>string</code>) =&gt; <code>string</code>  }) =&gt; <code>string</code> = sanitize; <code>stat</code>: (<code>path</code>: <code>PathLike</code>, <code>opts?</code>: <code>StatOptions</code> &amp; { <code>bigint?</code>: <code>false</code>  }) =&gt; <code>Promise</code>&lt;<code>Stats</code>&gt;(<code>path</code>: <code>PathLike</code>, <code>opts</code>: <code>StatOptions</code> &amp; { <code>bigint</code>: <code>true</code>  }) =&gt; <code>Promise</code>&lt;<code>BigIntStats</code>&gt;(<code>path</code>: <code>PathLike</code>, <code>opts?</code>: <code>StatOptions</code>) =&gt; <code>Promise</code>&lt;<code>Stats</code> | <code>BigIntStats</code>&gt; = fsPromises.stat; <code>symlink</code>: (<code>target</code>: <code>PathLike</code>, <code>path</code>: <code>PathLike</code>, <code>type?</code>: <code>null</code> | <code>string</code>) =&gt; <code>Promise</code>&lt;<code>void</code>&gt; = fsPromises.symlink; <code>unlink</code>: (<code>path</code>: <code>PathLike</code>) =&gt; <code>Promise</code>&lt;<code>void</code>&gt; = fsPromises.unlink; <code>which</code>: typeof <code>which</code> ; <code>write</code>: (<code>arg1</code>: <code>number</code>, <code>arg2</code>: <code>string</code>) =&gt; <code>Bluebird</code>&lt;<code>number</code>&gt; ; <code>writeFile</code>: (<code>file</code>: <code>PathLike</code> | <code>FileHandle</code>, <code>data</code>: <code>string</code> | <code>Stream</code> | <code>ArrayBufferView</code> | <code>Iterable</code>&lt;<code>string</code> | <code>ArrayBufferView</code>&gt; | <code>AsyncIterable</code>&lt;<code>string</code> | <code>ArrayBufferView</code>&gt;, <code>options?</code>: <code>null</code> | <code>BufferEncoding</code> | <code>ObjectEncodingOptions</code> &amp; { <code>flag?</code>: <code>OpenMode</code> ; <code>mode?</code>: <code>Mode</code>  } &amp; <code>Abortable</code>) =&gt; <code>Promise</code>&lt;<code>void</code>&gt; = fsPromises.writeFile; <code>copyFile</code>: (<code>source</code>: <code>string</code>, <code>destination</code>: <code>string</code>, <code>opts?</code>: <code>Options</code>) =&gt; <code>Promise</code>&lt;<code>void</code>&gt; ; <code>exists</code>: (<code>path</code>: <code>PathLike</code>) =&gt; <code>Promise</code>&lt;<code>boolean</code>&gt; ; <code>findRoot</code>: (<code>dir</code>: <code>string</code>) =&gt; <code>string</code> ; <code>hasAccess</code>: (<code>path</code>: <code>PathLike</code>) =&gt; <code>Promise</code>&lt;<code>boolean</code>&gt; ; <code>hash</code>: (<code>filePath</code>: <code>PathLike</code>, <code>algorithm?</code>: <code>string</code>) =&gt; <code>Promise</code>&lt;<code>string</code>&gt; ; <code>isExecutable</code>: (<code>path</code>: <code>PathLike</code>) =&gt; <code>Promise</code>&lt;<code>boolean</code>&gt; ; <code>md5</code>: (<code>filePath</code>: <code>PathLike</code>) =&gt; <code>Promise</code>&lt;<code>string</code>&gt; ; <code>mkdir</code>: (<code>filepath</code>: <code>string</code> | <code>Buffer</code> | <code>URL</code>, <code>opts?</code>: <code>MakeDirectoryOptions</code>) =&gt; <code>Promise</code>&lt;<code>undefined</code> | <code>string</code>&gt; ; <code>mkdirp</code>: (<code>dir</code>: <code>PathLike</code>) =&gt; <code>Promise</code>&lt;<code>undefined</code> | <code>string</code>&gt; ; <code>readPackageJsonFrom</code>: (<code>dir</code>: <code>string</code>, <code>opts?</code>: <code>Options</code>) =&gt; <code>any</code> ; <code>walk</code>: (<code>dir</code>: <code>string</code>, <code>opts?</code>: <code>Options</code>) =&gt; <code>Walker</code> ; <code>walkDir</code>: (<code>dir</code>: <code>string</code>, <code>recursive</code>: <code>boolean</code>, <code>callback</code>: <code>WalkDirCallback</code>) =&gt; <code>Promise</code>&lt;<code>null</code> | <code>string</code>&gt;  } <code>fs.F_OK</code> <code>number</code> <code>fs.R_OK</code> <code>number</code> <code>fs.W_OK</code> <code>number</code> <code>fs.X_OK</code> <code>number</code> <code>fs.access</code> (<code>path</code>: <code>PathLike</code>, <code>mode?</code>: <code>number</code>) =&gt; <code>Promise</code>&lt;<code>void</code>&gt; <code>fs.appendFile</code> (<code>path</code>: <code>PathLike</code> | <code>FileHandle</code>, <code>data</code>: <code>string</code> | <code>Uint8Array</code>, <code>options?</code>: <code>null</code> | <code>BufferEncoding</code> | <code>ObjectEncodingOptions</code> &amp; <code>FlagAndOpenMode</code>) =&gt; <code>Promise</code>&lt;<code>void</code>&gt; <code>fs.chmod</code> (<code>path</code>: <code>PathLike</code>, <code>mode</code>: <code>Mode</code>) =&gt; <code>Promise</code>&lt;<code>void</code>&gt; <code>fs.close</code> (<code>arg1</code>: <code>number</code>) =&gt; <code>Bluebird</code>&lt;<code>any</code>&gt; <code>fs.constants</code> typeof <code>constants</code> <code>fs.createReadStream</code> (<code>path</code>: <code>PathLike</code>, <code>options?</code>: <code>BufferEncoding</code> | <code>ReadStreamOptions</code>) =&gt; <code>ReadStream</code> <code>fs.createWriteStream</code> (<code>path</code>: <code>PathLike</code>, <code>options?</code>: <code>BufferEncoding</code> | <code>StreamOptions</code>) =&gt; <code>WriteStream</code> <code>fs.glob</code> (<code>pattern</code>: <code>string</code>, <code>opts?</code>: <code>IOptions</code>) =&gt; <code>Bluebird</code>&lt;<code>string</code>[]&gt; <code>fs.lstat</code> (<code>path</code>: <code>PathLike</code>, <code>opts?</code>: <code>StatOptions</code> &amp; { <code>bigint?</code>: <code>false</code>  }) =&gt; <code>Promise</code>&lt;<code>Stats</code>&gt;(<code>path</code>: <code>PathLike</code>, <code>opts</code>: <code>StatOptions</code> &amp; { <code>bigint</code>: <code>true</code>  }) =&gt; <code>Promise</code>&lt;<code>BigIntStats</code>&gt;(<code>path</code>: <code>PathLike</code>, <code>opts?</code>: <code>StatOptions</code>) =&gt; <code>Promise</code>&lt;<code>Stats</code> | <code>BigIntStats</code>&gt; <code>fs.mv</code> (<code>from</code>: <code>string</code>, <code>to</code>: <code>string</code>, <code>opts?</code>: <code>Options</code>) =&gt; <code>Bluebird</code>&lt;<code>void</code>&gt; <code>fs.open</code> (<code>path</code>: <code>PathLike</code>, <code>flags</code>: <code>OpenMode</code>, <code>mode?</code>: <code>Mode</code>) =&gt; <code>Promise</code>&lt;<code>number</code>&gt; <code>fs.openFile</code> (<code>path</code>: <code>PathLike</code>, <code>flags?</code>: <code>string</code> | <code>number</code>, <code>mode?</code>: <code>Mode</code>) =&gt; <code>Promise</code>&lt;<code>FileHandle</code>&gt; <code>fs.read</code> <code>ReadFn</code>&lt;<code>ArrayBufferView</code>&gt; <code>fs.readFile</code> (<code>path</code>: <code>PathLike</code> | <code>FileHandle</code>, <code>options?</code>: <code>null</code> | { <code>encoding?</code>: <code>null</code> ; <code>flag?</code>: <code>OpenMode</code>  } &amp; <code>Abortable</code>) =&gt; <code>Promise</code>&lt;<code>Buffer</code>&gt;(<code>path</code>: <code>PathLike</code> | <code>FileHandle</code>, <code>options</code>: <code>BufferEncoding</code> | { <code>encoding</code>: <code>BufferEncoding</code> ; <code>flag?</code>: <code>OpenMode</code>  } &amp; <code>Abortable</code>) =&gt; <code>Promise</code>&lt;<code>string</code>&gt;(<code>path</code>: <code>PathLike</code> | <code>FileHandle</code>, <code>options?</code>: <code>null</code> | <code>BufferEncoding</code> | <code>ObjectEncodingOptions</code> &amp; <code>Abortable</code> &amp; { <code>flag?</code>: <code>OpenMode</code>  }) =&gt; <code>Promise</code>&lt;<code>string</code> | <code>Buffer</code>&gt; <code>fs.readdir</code> (<code>path</code>: <code>PathLike</code>, <code>options?</code>: <code>null</code> | <code>BufferEncoding</code> | <code>ObjectEncodingOptions</code> &amp; { <code>withFileTypes?</code>: <code>false</code>  }) =&gt; <code>Promise</code>&lt;<code>string</code>[]&gt;(<code>path</code>: <code>PathLike</code>, <code>options</code>: { <code>encoding</code>: <code>\"buffer\"</code> ; <code>withFileTypes?</code>: <code>false</code>  } | <code>\"buffer\"</code>) =&gt; <code>Promise</code>&lt;<code>Buffer</code>[]&gt;(<code>path</code>: <code>PathLike</code>, <code>options?</code>: <code>null</code> | <code>BufferEncoding</code> | <code>ObjectEncodingOptions</code> &amp; { <code>withFileTypes?</code>: <code>false</code>  }) =&gt; <code>Promise</code>&lt;<code>string</code>[] | <code>Buffer</code>[]&gt;(<code>path</code>: <code>PathLike</code>, <code>options</code>: <code>ObjectEncodingOptions</code> &amp; { <code>withFileTypes</code>: <code>true</code>  }) =&gt; <code>Promise</code>&lt;<code>Dirent</code>[]&gt; <code>fs.readlink</code> (<code>path</code>: <code>PathLike</code>, <code>options?</code>: <code>null</code> | <code>BufferEncoding</code> | <code>ObjectEncodingOptions</code>) =&gt; <code>Promise</code>&lt;<code>string</code>&gt;(<code>path</code>: <code>PathLike</code>, <code>options</code>: <code>BufferEncodingOption</code>) =&gt; <code>Promise</code>&lt;<code>Buffer</code>&gt;(<code>path</code>: <code>PathLike</code>, <code>options?</code>: <code>null</code> | <code>string</code> | <code>ObjectEncodingOptions</code>) =&gt; <code>Promise</code>&lt;<code>string</code> | <code>Buffer</code>&gt; <code>fs.realpath</code> (<code>path</code>: <code>PathLike</code>, <code>options?</code>: <code>null</code> | <code>BufferEncoding</code> | <code>ObjectEncodingOptions</code>) =&gt; <code>Promise</code>&lt;<code>string</code>&gt;(<code>path</code>: <code>PathLike</code>, <code>options</code>: <code>BufferEncodingOption</code>) =&gt; <code>Promise</code>&lt;<code>Buffer</code>&gt;(<code>path</code>: <code>PathLike</code>, <code>options?</code>: <code>null</code> | <code>BufferEncoding</code> | <code>ObjectEncodingOptions</code>) =&gt; <code>Promise</code>&lt;<code>string</code> | <code>Buffer</code>&gt; <code>fs.rename</code> (<code>oldPath</code>: <code>PathLike</code>, <code>newPath</code>: <code>PathLike</code>) =&gt; <code>Promise</code>&lt;<code>void</code>&gt; <code>fs.rimraf</code> (<code>dirpath</code>: <code>string</code>, <code>opts?</code>: <code>Options</code>) =&gt; <code>Promise</code>&lt;<code>void</code>&gt; <code>fs.rimrafSync</code> (<code>path</code>: <code>string</code>, <code>options?</code>: <code>Options</code>) =&gt; <code>void</code> <code>fs.sanitizeName</code> (<code>input</code>: <code>string</code>, <code>options?</code>: { <code>replacement?</code>: <code>string</code> | (<code>substring</code>: <code>string</code>) =&gt; <code>string</code>  }) =&gt; <code>string</code> <code>fs.stat</code> (<code>path</code>: <code>PathLike</code>, <code>opts?</code>: <code>StatOptions</code> &amp; { <code>bigint?</code>: <code>false</code>  }) =&gt; <code>Promise</code>&lt;<code>Stats</code>&gt;(<code>path</code>: <code>PathLike</code>, <code>opts</code>: <code>StatOptions</code> &amp; { <code>bigint</code>: <code>true</code>  }) =&gt; <code>Promise</code>&lt;<code>BigIntStats</code>&gt;(<code>path</code>: <code>PathLike</code>, <code>opts?</code>: <code>StatOptions</code>) =&gt; <code>Promise</code>&lt;<code>Stats</code> | <code>BigIntStats</code>&gt; <code>fs.symlink</code> (<code>target</code>: <code>PathLike</code>, <code>path</code>: <code>PathLike</code>, <code>type?</code>: <code>null</code> | <code>string</code>) =&gt; <code>Promise</code>&lt;<code>void</code>&gt; <code>fs.unlink</code> (<code>path</code>: <code>PathLike</code>) =&gt; <code>Promise</code>&lt;<code>void</code>&gt; <code>fs.which</code> typeof <code>which</code> <code>fs.write</code> (<code>arg1</code>: <code>number</code>, <code>arg2</code>: <code>string</code>) =&gt; <code>Bluebird</code>&lt;<code>number</code>&gt; <code>fs.writeFile</code> (<code>file</code>: <code>PathLike</code> | <code>FileHandle</code>, <code>data</code>: <code>string</code> | <code>Stream</code> | <code>ArrayBufferView</code> | <code>Iterable</code>&lt;<code>string</code> | <code>ArrayBufferView</code>&gt; | <code>AsyncIterable</code>&lt;<code>string</code> | <code>ArrayBufferView</code>&gt;, <code>options?</code>: <code>null</code> | <code>BufferEncoding</code> | <code>ObjectEncodingOptions</code> &amp; { <code>flag?</code>: <code>OpenMode</code> ; <code>mode?</code>: <code>Mode</code>  } &amp; <code>Abortable</code>) =&gt; <code>Promise</code>&lt;<code>void</code>&gt; <code>fs.copyFile</code> [object Object] <code>fs.exists</code> [object Object] <code>fs.findRoot</code> [object Object] <code>fs.hasAccess</code> [object Object] <code>fs.hash</code> [object Object] <code>fs.isExecutable</code> [object Object] <code>fs.md5</code> [object Object] <code>fs.mkdir</code> [object Object] <code>fs.mkdirp</code> [object Object] <code>fs.readPackageJsonFrom</code> [object Object] <code>fs.walk</code> [object Object] <code>fs.walkDir</code> [object Object] <code>imageUtil</code> <code>imageUtil</code> <code>logger</code> <code>logger</code> <code>mjpeg</code> <code>mjpeg</code> <code>mkdirp</code> (<code>dir</code>: <code>PathLike</code>) =&gt; <code>Promise</code>&lt;<code>undefined</code> | <code>string</code>&gt; <code>net</code> <code>net</code> <code>node</code> <code>node</code> <code>plist</code> <code>plist</code> <code>process</code> <code>process</code> <code>system</code> <code>system</code> <code>tempDir</code> <code>tempDir</code> <code>timing</code> <code>timing</code> <code>util</code> <code>util</code> <code>zip</code> <code>zip</code>"},{"location":"reference/modules/appium_support/#defined-in","title":"Defined in","text":"<p>packages/support/lib/index.js:41</p>"},{"location":"reference/modules/appium_support/#fs","title":"fs","text":"<p>\u2022 <code>Const</code> fs: <code>Object</code></p>"},{"location":"reference/modules/appium_support/#type-declaration_1","title":"Type declaration","text":"Name Type Description <code>F_OK</code> <code>number</code> Use <code>constants.F_OK</code> instead. <code>Deprecated</code> <code>R_OK</code> <code>number</code> Use <code>constants.R_OK</code> instead. <code>Deprecated</code> <code>W_OK</code> <code>number</code> Use <code>constants.W_OK</code> instead. <code>Deprecated</code> <code>X_OK</code> <code>number</code> Use <code>constants.X_OK</code> instead. <code>Deprecated</code> <code>access</code> (<code>path</code>: <code>PathLike</code>, <code>mode?</code>: <code>number</code>) =&gt; <code>Promise</code>&lt;<code>void</code>&gt; Tests a user's permissions for the file or directory specified by <code>path</code>. The <code>mode</code> argument is an optional integer that specifies the accessibility checks to be performed. <code>mode</code> should be either the value <code>fs.constants.F_OK</code>or a mask consisting of the bitwise OR of any of <code>fs.constants.R_OK</code>,<code>fs.constants.W_OK</code>, and <code>fs.constants.X_OK</code> (e.g.<code>fs.constants.W_OK \\| fs.constants.R_OK</code>). Check <code>File access constants</code> for possible values of <code>mode</code>. If the accessibility check is successful, the promise is resolved with no value. If any of the accessibility checks fail, the promise is rejected with an Error object. The following example checks if the file<code>/etc/passwd</code> can be read and written by the current process. <code>js import { access } from 'fs/promises'; import { constants } from 'fs'; try { await access('/etc/passwd', constants.R_OK \\| constants.W_OK); console.log('can access'); } catch { console.error('cannot access'); }</code> Using <code>fsPromises.access()</code> to check for the accessibility of a file before calling <code>fsPromises.open()</code> is not recommended. Doing so introduces a race condition, since other processes may change the file's state between the two calls. Instead, user code should open/read/write the file directly and handle the error raised if the file is not accessible. <code>Since</code> v10.0.0 <code>appendFile</code> (<code>path</code>: <code>PathLike</code> | <code>FileHandle</code>, <code>data</code>: <code>string</code> | <code>Uint8Array</code>, <code>options?</code>: <code>null</code> | <code>BufferEncoding</code> | <code>ObjectEncodingOptions</code> &amp; <code>FlagAndOpenMode</code>) =&gt; <code>Promise</code>&lt;<code>void</code>&gt; Asynchronously append data to a file, creating the file if it does not yet exist. <code>data</code> can be a string or a <code>Buffer</code>. If <code>options</code> is a string, then it specifies the <code>encoding</code>. The <code>mode</code> option only affects the newly created file. See <code>fs.open()</code> for more details. The <code>path</code> may be specified as a <code>FileHandle</code> that has been opened for appending (using <code>fsPromises.open()</code>). <code>Since</code> v10.0.0 <code>chmod</code> (<code>path</code>: <code>PathLike</code>, <code>mode</code>: <code>Mode</code>) =&gt; <code>Promise</code>&lt;<code>void</code>&gt; Changes the permissions of a file. <code>Since</code> v10.0.0 <code>close</code> (<code>arg1</code>: <code>number</code>) =&gt; <code>Bluebird</code>&lt;<code>any</code>&gt; - <code>constants</code> typeof <code>constants</code> - <code>createReadStream</code> (<code>path</code>: <code>PathLike</code>, <code>options?</code>: <code>BufferEncoding</code> | <code>ReadStreamOptions</code>) =&gt; <code>ReadStream</code> Unlike the 16 kb default <code>highWaterMark</code> for a <code>stream.Readable</code>, the stream returned by this method has a default <code>highWaterMark</code> of 64 kb. <code>options</code> can include <code>start</code> and <code>end</code> values to read a range of bytes from the file instead of the entire file. Both <code>start</code> and <code>end</code> are inclusive and start counting at 0, allowed values are in the [0, <code>Number.MAX_SAFE_INTEGER</code>] range. If <code>fd</code> is specified and <code>start</code> is omitted or <code>undefined</code>, <code>fs.createReadStream()</code> reads sequentially from the current file position. The <code>encoding</code> can be any one of those accepted by <code>Buffer</code>. If <code>fd</code> is specified, <code>ReadStream</code> will ignore the <code>path</code> argument and will use the specified file descriptor. This means that no <code>'open'</code> event will be emitted. <code>fd</code> should be blocking; non-blocking <code>fd</code>s should be passed to <code>net.Socket</code>. If <code>fd</code> points to a character device that only supports blocking reads (such as keyboard or sound card), read operations do not finish until data is available. This can prevent the process from exiting and the stream from closing naturally. By default, the stream will emit a <code>'close'</code> event after it has been destroyed. Set the <code>emitClose</code> option to <code>false</code> to change this behavior. By providing the <code>fs</code> option, it is possible to override the corresponding <code>fs</code>implementations for <code>open</code>, <code>read</code>, and <code>close</code>. When providing the <code>fs</code> option, an override for <code>read</code> is required. If no <code>fd</code> is provided, an override for<code>open</code> is also required. If <code>autoClose</code> is <code>true</code>, an override for <code>close</code> is also required. <code>js import { createReadStream } from 'fs'; // Create a stream from some character device. const stream = createReadStream('/dev/input/event0'); setTimeout(() =&gt; { stream.close(); // This may not close the stream. // Artificially marking end-of-stream, as if the underlying resource had // indicated end-of-file by itself, allows the stream to close. // This does not cancel pending read operations, and if there is such an // operation, the process may still not be able to exit successfully // until it finishes. stream.push(null); stream.read(0); }, 100);</code> If <code>autoClose</code> is false, then the file descriptor won't be closed, even if there's an error. It is the application's responsibility to close it and make sure there's no file descriptor leak. If <code>autoClose</code> is set to true (default behavior), on <code>'error'</code> or <code>'end'</code> the file descriptor will be closed automatically. <code>mode</code> sets the file mode (permission and sticky bits), but only if the file was created. An example to read the last 10 bytes of a file which is 100 bytes long: <code>js import { createReadStream } from 'fs'; createReadStream('sample.txt', { start: 90, end: 99 });</code> If <code>options</code> is a string, then it specifies the encoding. <code>Since</code> v0.1.31 <code>createWriteStream</code> (<code>path</code>: <code>PathLike</code>, <code>options?</code>: <code>BufferEncoding</code> | <code>StreamOptions</code>) =&gt; <code>WriteStream</code> <code>options</code> may also include a <code>start</code> option to allow writing data at some position past the beginning of the file, allowed values are in the [0, <code>Number.MAX_SAFE_INTEGER</code>] range. Modifying a file rather than replacing it may require the <code>flags</code> option to be set to <code>r+</code> rather than the default <code>w</code>. The <code>encoding</code> can be any one of those accepted by <code>Buffer</code>. If <code>autoClose</code> is set to true (default behavior) on <code>'error'</code> or <code>'finish'</code>the file descriptor will be closed automatically. If <code>autoClose</code> is false, then the file descriptor won't be closed, even if there's an error. It is the application's responsibility to close it and make sure there's no file descriptor leak. By default, the stream will emit a <code>'close'</code> event after it has been destroyed. Set the <code>emitClose</code> option to <code>false</code> to change this behavior. By providing the <code>fs</code> option it is possible to override the corresponding <code>fs</code>implementations for <code>open</code>, <code>write</code>, <code>writev</code> and <code>close</code>. Overriding <code>write()</code>without <code>writev()</code> can reduce performance as some optimizations (<code>_writev()</code>) will be disabled. When providing the <code>fs</code> option, overrides for at least one of<code>write</code> and <code>writev</code> are required. If no <code>fd</code> option is supplied, an override for <code>open</code> is also required. If <code>autoClose</code> is <code>true</code>, an override for <code>close</code>is also required. Like <code>fs.ReadStream</code>, if <code>fd</code> is specified, <code>fs.WriteStream</code> will ignore the<code>path</code> argument and will use the specified file descriptor. This means that no<code>'open'</code> event will be emitted. <code>fd</code> should be blocking; non-blocking <code>fd</code>s should be passed to <code>net.Socket</code>. If <code>options</code> is a string, then it specifies the encoding. <code>Since</code> v0.1.31 <code>glob</code> (<code>pattern</code>: <code>string</code>, <code>opts?</code>: <code>IOptions</code>) =&gt; <code>Bluebird</code>&lt;<code>string</code>[]&gt; Given a glob pattern, resolve with list of files matching that pattern <code>See</code> https://github.com/isaacs/node-glob <code>lstat</code> (<code>path</code>: <code>PathLike</code>, <code>opts?</code>: <code>StatOptions</code> &amp; { <code>bigint?</code>: <code>false</code>  }) =&gt; <code>Promise</code>&lt;<code>Stats</code>&gt;(<code>path</code>: <code>PathLike</code>, <code>opts</code>: <code>StatOptions</code> &amp; { <code>bigint</code>: <code>true</code>  }) =&gt; <code>Promise</code>&lt;<code>BigIntStats</code>&gt;(<code>path</code>: <code>PathLike</code>, <code>opts?</code>: <code>StatOptions</code>) =&gt; <code>Promise</code>&lt;<code>Stats</code> | <code>BigIntStats</code>&gt; Equivalent to <code>fsPromises.stat()</code> unless <code>path</code> refers to a symbolic link, in which case the link itself is stat-ed, not the file that it refers to. Refer to the POSIX <code>lstat(2)</code> document for more detail. <code>Since</code> v10.0.0 <code>mv</code> (<code>from</code>: <code>string</code>, <code>to</code>: <code>string</code>, <code>opts?</code>: <code>Options</code>) =&gt; <code>Bluebird</code>&lt;<code>void</code>&gt; Move a file <code>open</code> (<code>path</code>: <code>PathLike</code>, <code>flags</code>: <code>OpenMode</code>, <code>mode?</code>: <code>Mode</code>) =&gt; <code>Promise</code>&lt;<code>number</code>&gt; Warning: this is a promisified <code>fs.open</code>. It resolves w/a file descriptor instead of a fsPromises.FileHandle FileHandle object, as fsPromises.open does. Use fs.openFile if you want a <code>FileHandle</code>. <code>openFile</code> (<code>path</code>: <code>PathLike</code>, <code>flags?</code>: <code>string</code> | <code>number</code>, <code>mode?</code>: <code>Mode</code>) =&gt; <code>Promise</code>&lt;<code>FileHandle</code>&gt; Opens a <code>FileHandle</code>. Refer to the POSIX <code>open(2)</code> documentation for more detail. Some characters (<code>&lt; &gt; : \" / \\ \\| ? *</code>) are reserved under Windows as documented by Naming Files, Paths, and Namespaces. Under NTFS, if the filename contains a colon, Node.js will open a file system stream, as described by this MSDN page. <code>Since</code> v10.0.0 <code>read</code> <code>ReadFn</code>&lt;<code>ArrayBufferView</code>&gt; - <code>readFile</code> (<code>path</code>: <code>PathLike</code> | <code>FileHandle</code>, <code>options?</code>: <code>null</code> | { <code>encoding?</code>: <code>null</code> ; <code>flag?</code>: <code>OpenMode</code>  } &amp; <code>Abortable</code>) =&gt; <code>Promise</code>&lt;<code>Buffer</code>&gt;(<code>path</code>: <code>PathLike</code> | <code>FileHandle</code>, <code>options</code>: <code>BufferEncoding</code> | { <code>encoding</code>: <code>BufferEncoding</code> ; <code>flag?</code>: <code>OpenMode</code>  } &amp; <code>Abortable</code>) =&gt; <code>Promise</code>&lt;<code>string</code>&gt;(<code>path</code>: <code>PathLike</code> | <code>FileHandle</code>, <code>options?</code>: <code>null</code> | <code>BufferEncoding</code> | <code>ObjectEncodingOptions</code> &amp; <code>Abortable</code> &amp; { <code>flag?</code>: <code>OpenMode</code>  }) =&gt; <code>Promise</code>&lt;<code>string</code> | <code>Buffer</code>&gt; Asynchronously reads the entire contents of a file. If no encoding is specified (using <code>options.encoding</code>), the data is returned as a <code>Buffer</code> object. Otherwise, the data will be a string. If <code>options</code> is a string, then it specifies the encoding. When the <code>path</code> is a directory, the behavior of <code>fsPromises.readFile()</code> is platform-specific. On macOS, Linux, and Windows, the promise will be rejected with an error. On FreeBSD, a representation of the directory's contents will be returned. It is possible to abort an ongoing <code>readFile</code> using an <code>AbortSignal</code>. If a request is aborted the promise returned is rejected with an <code>AbortError</code>: <code>js import { readFile } from 'fs/promises'; try { const controller = new AbortController(); const { signal } = controller; const promise = readFile(fileName, { signal }); // Abort the request before the promise settles. controller.abort(); await promise; } catch (err) { // When a request is aborted - err is an AbortError console.error(err); }</code> Aborting an ongoing request does not abort individual operating system requests but rather the internal buffering <code>fs.readFile</code> performs. Any specified <code>FileHandle</code> has to support reading. <code>Since</code> v10.0.0 <code>readdir</code> (<code>path</code>: <code>PathLike</code>, <code>options?</code>: <code>null</code> | <code>BufferEncoding</code> | <code>ObjectEncodingOptions</code> &amp; { <code>withFileTypes?</code>: <code>false</code>  }) =&gt; <code>Promise</code>&lt;<code>string</code>[]&gt;(<code>path</code>: <code>PathLike</code>, <code>options</code>: { <code>encoding</code>: <code>\"buffer\"</code> ; <code>withFileTypes?</code>: <code>false</code>  } | <code>\"buffer\"</code>) =&gt; <code>Promise</code>&lt;<code>Buffer</code>[]&gt;(<code>path</code>: <code>PathLike</code>, <code>options?</code>: <code>null</code> | <code>BufferEncoding</code> | <code>ObjectEncodingOptions</code> &amp; { <code>withFileTypes?</code>: <code>false</code>  }) =&gt; <code>Promise</code>&lt;<code>string</code>[] | <code>Buffer</code>[]&gt;(<code>path</code>: <code>PathLike</code>, <code>options</code>: <code>ObjectEncodingOptions</code> &amp; { <code>withFileTypes</code>: <code>true</code>  }) =&gt; <code>Promise</code>&lt;<code>Dirent</code>[]&gt; Reads the contents of a directory. The optional <code>options</code> argument can be a string specifying an encoding, or an object with an <code>encoding</code> property specifying the character encoding to use for the filenames. If the <code>encoding</code> is set to <code>'buffer'</code>, the filenames returned will be passed as <code>Buffer</code> objects. If <code>options.withFileTypes</code> is set to <code>true</code>, the resolved array will contain <code>fs.Dirent</code> objects. <code>js import { readdir } from 'fs/promises'; try { const files = await readdir(path); for (const file of files) console.log(file); } catch (err) { console.error(err); }</code> <code>Since</code> v10.0.0 <code>readlink</code> (<code>path</code>: <code>PathLike</code>, <code>options?</code>: <code>null</code> | <code>BufferEncoding</code> | <code>ObjectEncodingOptions</code>) =&gt; <code>Promise</code>&lt;<code>string</code>&gt;(<code>path</code>: <code>PathLike</code>, <code>options</code>: <code>BufferEncodingOption</code>) =&gt; <code>Promise</code>&lt;<code>Buffer</code>&gt;(<code>path</code>: <code>PathLike</code>, <code>options?</code>: <code>null</code> | <code>string</code> | <code>ObjectEncodingOptions</code>) =&gt; <code>Promise</code>&lt;<code>string</code> | <code>Buffer</code>&gt; Reads the contents of the symbolic link referred to by <code>path</code>. See the POSIX <code>readlink(2)</code> documentation for more detail. The promise is resolved with the<code>linkString</code> upon success. The optional <code>options</code> argument can be a string specifying an encoding, or an object with an <code>encoding</code> property specifying the character encoding to use for the link path returned. If the <code>encoding</code> is set to <code>'buffer'</code>, the link path returned will be passed as a <code>Buffer</code> object. <code>Since</code> v10.0.0 <code>realpath</code> (<code>path</code>: <code>PathLike</code>, <code>options?</code>: <code>null</code> | <code>BufferEncoding</code> | <code>ObjectEncodingOptions</code>) =&gt; <code>Promise</code>&lt;<code>string</code>&gt;(<code>path</code>: <code>PathLike</code>, <code>options</code>: <code>BufferEncodingOption</code>) =&gt; <code>Promise</code>&lt;<code>Buffer</code>&gt;(<code>path</code>: <code>PathLike</code>, <code>options?</code>: <code>null</code> | <code>BufferEncoding</code> | <code>ObjectEncodingOptions</code>) =&gt; <code>Promise</code>&lt;<code>string</code> | <code>Buffer</code>&gt; Determines the actual location of <code>path</code> using the same semantics as the<code>fs.realpath.native()</code> function. Only paths that can be converted to UTF8 strings are supported. The optional <code>options</code> argument can be a string specifying an encoding, or an object with an <code>encoding</code> property specifying the character encoding to use for the path. If the <code>encoding</code> is set to <code>'buffer'</code>, the path returned will be passed as a <code>Buffer</code> object. On Linux, when Node.js is linked against musl libc, the procfs file system must be mounted on <code>/proc</code> in order for this function to work. Glibc does not have this restriction. <code>Since</code> v10.0.0 <code>rename</code> (<code>oldPath</code>: <code>PathLike</code>, <code>newPath</code>: <code>PathLike</code>) =&gt; <code>Promise</code>&lt;<code>void</code>&gt; Renames <code>oldPath</code> to <code>newPath</code>. <code>Since</code> v10.0.0 <code>rimraf</code> (<code>dirpath</code>: <code>string</code>, <code>opts?</code>: <code>Options</code>) =&gt; <code>Promise</code>&lt;<code>void</code>&gt; Remove a directory and all its contents, recursively <code>Todo</code> Replace with <code>rm()</code> from <code>fs.promises</code> when Node.js v12 support is dropped. <code>rimrafSync</code> (<code>path</code>: <code>string</code>, <code>options?</code>: <code>Options</code>) =&gt; <code>void</code> Alias of rimrafIdx.sync <code>Todo</code> Replace with <code>rmSync()</code> from <code>fs</code> when Node.js v12 support is dropped. <code>sanitizeName</code> (<code>input</code>: <code>string</code>, <code>options?</code>: { <code>replacement?</code>: <code>string</code> | (<code>substring</code>: <code>string</code>) =&gt; <code>string</code>  }) =&gt; <code>string</code> Sanitize a filename <code>See</code> https://github.com/parshap/node-sanitize-filename <code>stat</code> (<code>path</code>: <code>PathLike</code>, <code>opts?</code>: <code>StatOptions</code> &amp; { <code>bigint?</code>: <code>false</code>  }) =&gt; <code>Promise</code>&lt;<code>Stats</code>&gt;(<code>path</code>: <code>PathLike</code>, <code>opts</code>: <code>StatOptions</code> &amp; { <code>bigint</code>: <code>true</code>  }) =&gt; <code>Promise</code>&lt;<code>BigIntStats</code>&gt;(<code>path</code>: <code>PathLike</code>, <code>opts?</code>: <code>StatOptions</code>) =&gt; <code>Promise</code>&lt;<code>Stats</code> | <code>BigIntStats</code>&gt; <code>Since</code> v10.0.0 <code>symlink</code> (<code>target</code>: <code>PathLike</code>, <code>path</code>: <code>PathLike</code>, <code>type?</code>: <code>null</code> | <code>string</code>) =&gt; <code>Promise</code>&lt;<code>void</code>&gt; Creates a symbolic link. The <code>type</code> argument is only used on Windows platforms and can be one of <code>'dir'</code>,<code>'file'</code>, or <code>'junction'</code>. Windows junction points require the destination path to be absolute. When using <code>'junction'</code>, the <code>target</code> argument will automatically be normalized to absolute path. <code>Since</code> v10.0.0 <code>unlink</code> (<code>path</code>: <code>PathLike</code>) =&gt; <code>Promise</code>&lt;<code>void</code>&gt; If <code>path</code> refers to a symbolic link, then the link is removed without affecting the file or directory to which that link refers. If the <code>path</code> refers to a file path that is not a symbolic link, the file is deleted. See the POSIX <code>unlink(2)</code> documentation for more detail. <code>Since</code> v10.0.0 <code>which</code> typeof <code>which</code> - <code>write</code> (<code>arg1</code>: <code>number</code>, <code>arg2</code>: <code>string</code>) =&gt; <code>Bluebird</code>&lt;<code>number</code>&gt; - <code>writeFile</code> (<code>file</code>: <code>PathLike</code> | <code>FileHandle</code>, <code>data</code>: <code>string</code> | <code>Stream</code> | <code>ArrayBufferView</code> | <code>Iterable</code>&lt;<code>string</code> | <code>ArrayBufferView</code>&gt; | <code>AsyncIterable</code>&lt;<code>string</code> | <code>ArrayBufferView</code>&gt;, <code>options?</code>: <code>null</code> | <code>BufferEncoding</code> | <code>ObjectEncodingOptions</code> &amp; { <code>flag?</code>: <code>OpenMode</code> ; <code>mode?</code>: <code>Mode</code>  } &amp; <code>Abortable</code>) =&gt; <code>Promise</code>&lt;<code>void</code>&gt; Asynchronously writes data to a file, replacing the file if it already exists.<code>data</code> can be a string, a buffer, an AsyncIterable or Iterable object. The <code>encoding</code> option is ignored if <code>data</code> is a buffer. If <code>options</code> is a string, then it specifies the encoding. The <code>mode</code> option only affects the newly created file. See <code>fs.open()</code> for more details. Any specified <code>FileHandle</code> has to support writing. It is unsafe to use <code>fsPromises.writeFile()</code> multiple times on the same file without waiting for the promise to be settled. Similarly to <code>fsPromises.readFile</code> - <code>fsPromises.writeFile</code> is a convenience method that performs multiple <code>write</code> calls internally to write the buffer passed to it. For performance sensitive code consider using <code>fs.createWriteStream()</code> or <code>filehandle.createWriteStream()</code>. It is possible to use an <code>AbortSignal</code> to cancel an <code>fsPromises.writeFile()</code>. Cancelation is \"best effort\", and some amount of data is likely still to be written. <code>js import { writeFile } from 'fs/promises'; import { Buffer } from 'buffer'; try { const controller = new AbortController(); const { signal } = controller; const data = new Uint8Array(Buffer.from('Hello Node.js')); const promise = writeFile('message.txt', data, { signal }); // Abort the request before the promise settles. controller.abort(); await promise; } catch (err) { // When a request is aborted - err is an AbortError console.error(err); }</code> Aborting an ongoing request does not abort individual operating system requests but rather the internal buffering <code>fs.writeFile</code> performs. <code>Since</code> v10.0.0 <code>copyFile</code> (<code>source</code>: <code>string</code>, <code>destination</code>: <code>string</code>, <code>opts?</code>: <code>Options</code>) =&gt; <code>Promise</code>&lt;<code>void</code>&gt; Copies files and entire directories <code>See</code> https://npm.im/ncp <code>exists</code> (<code>path</code>: <code>PathLike</code>) =&gt; <code>Promise</code>&lt;<code>boolean</code>&gt; Alias for fs.hasAccess <code>findRoot</code> (<code>dir</code>: <code>string</code>) =&gt; <code>string</code> Finds the project root directory from <code>dir</code>. <code>Throws</code> If <code>dir</code> is not a nonempty string or relative path <code>Throws</code> If there were problems finding the project root <code>hasAccess</code> (<code>path</code>: <code>PathLike</code>) =&gt; <code>Promise</code>&lt;<code>boolean</code>&gt; Resolves <code>true</code> if <code>path</code> is readable, which differs from Node.js' default behavior of \"can we see it?\" On Windows, ACLs are not supported, so this becomes a simple check for existence. This function will never reject. <code>hash</code> (<code>filePath</code>: <code>PathLike</code>, <code>algorithm?</code>: <code>string</code>) =&gt; <code>Promise</code>&lt;<code>string</code>&gt; Create a hex digest of some file at <code>filePath</code> <code>isExecutable</code> (<code>path</code>: <code>PathLike</code>) =&gt; <code>Promise</code>&lt;<code>boolean</code>&gt; Resolves <code>true</code> if <code>path</code> is executable; <code>false</code> otherwise. On Windows, this function delegates to fs.hasAccess. This function will never reject. <code>md5</code> (<code>filePath</code>: <code>PathLike</code>) =&gt; <code>Promise</code>&lt;<code>string</code>&gt; Create an MD5 hash of a file. <code>mkdir</code> (<code>filepath</code>: <code>string</code> | <code>Buffer</code> | <code>URL</code>, <code>opts?</code>: <code>MakeDirectoryOptions</code>) =&gt; <code>Promise</code>&lt;<code>undefined</code> | <code>string</code>&gt; Like Node.js' <code>fsPromises.mkdir()</code>, but will not reject if the directory already exists. <code>See</code> https://nodejs.org/api/fs.html#fspromisesmkdirpath-options <code>mkdirp</code> (<code>dir</code>: <code>PathLike</code>) =&gt; <code>Promise</code>&lt;<code>undefined</code> | <code>string</code>&gt; Recursively create a directory. <code>readPackageJsonFrom</code> (<code>dir</code>: <code>string</code>, <code>opts?</code>: <code>Options</code>) =&gt; <code>any</code> Reads the closest <code>package.json</code> file from absolute path <code>dir</code>. <code>Throws</code> If there were problems finding or reading a <code>package.json</code> file <code>walk</code> (<code>dir</code>: <code>string</code>, <code>opts?</code>: <code>Options</code>) =&gt; <code>Walker</code> Returns an <code>Walker</code> instance, which is a readable stream (and thusly an async iterator). <code>See</code> https://www.npmjs.com/package/klaw <code>walkDir</code> (<code>dir</code>: <code>string</code>, <code>recursive</code>: <code>boolean</code>, <code>callback</code>: <code>WalkDirCallback</code>) =&gt; <code>Promise</code>&lt;<code>null</code> | <code>string</code>&gt; Walks a directory given according to the parameters given. The callback will be invoked with a path joined with the dir parameter <code>Throws</code> If the <code>dir</code> parameter contains a path to an invalid folder"},{"location":"reference/modules/appium_support/#defined-in_1","title":"Defined in","text":"<p>packages/support/lib/fs.js:37</p>"},{"location":"reference/modules/appium_support/#npm","title":"npm","text":"<p>\u2022 <code>Const</code> npm: <code>NPM</code></p>"},{"location":"reference/modules/appium_support/#defined-in_2","title":"Defined in","text":"<p>packages/support/lib/npm.js:267</p>"},{"location":"reference/modules/appium_support/#functions_1","title":"Functions","text":""},{"location":"reference/modules/appium_support/#cancellabledelay","title":"cancellableDelay","text":"<p>\u25b8 cancellableDelay(<code>ms</code>): <code>Bluebird</code>&lt;<code>any</code>&gt;</p>"},{"location":"reference/modules/appium_support/#parameters","title":"Parameters","text":"Name Type <code>ms</code> <code>any</code>"},{"location":"reference/modules/appium_support/#returns","title":"Returns","text":"<p><code>Bluebird</code>&lt;<code>any</code>&gt;</p>"},{"location":"reference/modules/appium_support/#defined-in_3","title":"Defined in","text":"<p>packages/support/lib/util.js:101</p>"},{"location":"reference/modules/appium_support/#mkdirp","title":"mkdirp","text":"<p>\u25b8 mkdirp(<code>dir</code>): <code>Promise</code>&lt;<code>undefined</code> | <code>string</code>&gt;</p> <p>Recursively create a directory.</p>"},{"location":"reference/modules/appium_support/#parameters_1","title":"Parameters","text":"Name Type <code>dir</code> <code>PathLike</code>"},{"location":"reference/modules/appium_support/#returns_1","title":"Returns","text":"<p><code>Promise</code>&lt;<code>undefined</code> | <code>string</code>&gt;</p>"},{"location":"reference/modules/appium_support/#defined-in_4","title":"Defined in","text":"<p>packages/support/lib/fs.js:202</p>"},{"location":"reference/modules/appium_support.mjpeg/","title":"Namespace: mjpeg","text":"<p>@appium/support.mjpeg</p>"},{"location":"reference/modules/appium_support.mjpeg/#table-of-contents","title":"Table of contents","text":""},{"location":"reference/modules/appium_support.mjpeg/#classes","title":"Classes","text":"<ul> <li>MJpegStream</li> </ul>"},{"location":"reference/modules/appium_support.net/","title":"Namespace: net","text":"<p>@appium/support.net</p>"},{"location":"reference/modules/appium_support.net/#table-of-contents","title":"Table of contents","text":""},{"location":"reference/modules/appium_support.net/#interfaces","title":"Interfaces","text":"<ul> <li>AuthCredentials</li> <li>DownloadOptions</li> <li>HttpUploadOptions</li> <li>NetOptions</li> <li>NotHttpUploadOptions</li> </ul>"},{"location":"reference/modules/appium_support.net/#functions","title":"Functions","text":"<ul> <li>downloadFile</li> <li>uploadFile</li> </ul>"},{"location":"reference/modules/appium_support.net/#functions_1","title":"Functions","text":""},{"location":"reference/modules/appium_support.net/#downloadfile","title":"downloadFile","text":"<p>\u25b8 downloadFile(<code>remoteUrl</code>, <code>dstPath</code>, <code>downloadOptions?</code>): <code>Promise</code>&lt;<code>void</code>&gt;</p> <p>Downloads the given file via HTTP(S)</p> <p><code>Throws</code></p> <p>If download operation fails</p>"},{"location":"reference/modules/appium_support.net/#parameters","title":"Parameters","text":"Name Type Description <code>remoteUrl</code> <code>string</code> The remote url <code>dstPath</code> <code>string</code> The local path to download the file to <code>downloadOptions?</code> <code>DownloadOptions</code> &amp; <code>NetOptions</code>"},{"location":"reference/modules/appium_support.net/#returns","title":"Returns","text":"<p><code>Promise</code>&lt;<code>void</code>&gt;</p>"},{"location":"reference/modules/appium_support.net/#defined-in","title":"Defined in","text":"<p>packages/support/lib/net.js:227</p>"},{"location":"reference/modules/appium_support.net/#uploadfile","title":"uploadFile","text":"<p>\u25b8 uploadFile(<code>localPath</code>, <code>remoteUri</code>, <code>uploadOptions?</code>): <code>Promise</code>&lt;<code>void</code>&gt;</p> <p>Uploads the given file to a remote location. HTTP(S) and FTP protocols are supported.</p>"},{"location":"reference/modules/appium_support.net/#parameters_1","title":"Parameters","text":"Name Type Description <code>localPath</code> <code>string</code> The path to a file on the local storage. <code>remoteUri</code> <code>string</code> The remote URI to upload the file to. <code>uploadOptions?</code> <code>Object</code>"},{"location":"reference/modules/appium_support.net/#returns_1","title":"Returns","text":"<p><code>Promise</code>&lt;<code>void</code>&gt;</p>"},{"location":"reference/modules/appium_support.net/#defined-in_1","title":"Defined in","text":"<p>packages/support/lib/net.js:178</p>"},{"location":"reference/modules/appium_support.node/","title":"Namespace: node","text":"<p>@appium/support.node</p>"},{"location":"reference/modules/appium_support.node/#table-of-contents","title":"Table of contents","text":""},{"location":"reference/modules/appium_support.node/#functions","title":"Functions","text":"<ul> <li>deepFreeze</li> <li>getModuleRootSync</li> <li>getObjectId</li> <li>getObjectSize</li> <li>requirePackage</li> </ul>"},{"location":"reference/modules/appium_support.node/#functions_1","title":"Functions","text":""},{"location":"reference/modules/appium_support.node/#deepfreeze","title":"deepFreeze","text":"<p>\u25b8 deepFreeze(<code>object</code>): <code>any</code></p> <p>Perform deep freeze of the given object (e. g. all nested objects also become immutable). If the passed object is of a plain type then no change is done and the same object is returned. ! This function changes the given object, so it becomes immutable.</p>"},{"location":"reference/modules/appium_support.node/#parameters","title":"Parameters","text":"Name Type Description <code>object</code> <code>any</code> Any valid ECMA object"},{"location":"reference/modules/appium_support.node/#returns","title":"Returns","text":"<p><code>any</code></p> <p>The same object that was passed to the function after it was made immutable.</p>"},{"location":"reference/modules/appium_support.node/#defined-in","title":"Defined in","text":"<p>packages/support/lib/node.js:188</p>"},{"location":"reference/modules/appium_support.node/#getmodulerootsync","title":"getModuleRootSync","text":"<p>\u25b8 getModuleRootSync(<code>moduleName</code>, <code>filePath</code>): <code>null</code> | <code>string</code></p> <p>Tries to synchronously detect the absolute path to the folder where the given <code>moduleName</code> is located.</p>"},{"location":"reference/modules/appium_support.node/#parameters_1","title":"Parameters","text":"Name Type Description <code>moduleName</code> <code>string</code> The name of the module as it is written in package.json <code>filePath</code> <code>string</code> Full path to any of files that <code>moduleName</code> contains. Use <code>__filename</code> to find the root of the module where this helper is called."},{"location":"reference/modules/appium_support.node/#returns_1","title":"Returns","text":"<p><code>null</code> | <code>string</code></p> <p>Full path to the module root</p>"},{"location":"reference/modules/appium_support.node/#defined-in_1","title":"Defined in","text":"<p>packages/support/lib/node.js:213</p>"},{"location":"reference/modules/appium_support.node/#getobjectid","title":"getObjectId","text":"<p>\u25b8 getObjectId(<code>object</code>): <code>string</code></p> <p>Calculates a unique object identifier</p>"},{"location":"reference/modules/appium_support.node/#parameters_2","title":"Parameters","text":"Name Type Description <code>object</code> <code>any</code> Any valid ECMA object"},{"location":"reference/modules/appium_support.node/#returns_2","title":"Returns","text":"<p><code>string</code></p> <p>A uuidV4 string that uniquely identifies given object</p>"},{"location":"reference/modules/appium_support.node/#defined-in_2","title":"Defined in","text":"<p>packages/support/lib/node.js:168</p>"},{"location":"reference/modules/appium_support.node/#getobjectsize","title":"getObjectSize","text":"<p>\u25b8 getObjectSize(<code>obj</code>): <code>number</code></p> <p>Calculate the in-depth size in memory of the provided object. The original implementation is borrowed from https://github.com/miktam/sizeof.</p>"},{"location":"reference/modules/appium_support.node/#parameters_3","title":"Parameters","text":"Name Type Description <code>obj</code> <code>any</code> An object whose size should be calculated"},{"location":"reference/modules/appium_support.node/#returns_3","title":"Returns","text":"<p><code>number</code></p> <p>Object size in bytes.</p>"},{"location":"reference/modules/appium_support.node/#defined-in_3","title":"Defined in","text":"<p>packages/support/lib/node.js:156</p>"},{"location":"reference/modules/appium_support.node/#requirepackage","title":"requirePackage","text":"<p>\u25b8 requirePackage(<code>packageName</code>): <code>Promise</code>&lt;<code>unknown</code>&gt;</p> <p>Utility function to extend node functionality, allowing us to require modules that are installed globally. If the package cannot be required, this will attempt to link the package and then re-require it</p> <p><code>Throws</code></p> <p>If the package is not found locally or globally</p>"},{"location":"reference/modules/appium_support.node/#parameters_4","title":"Parameters","text":"Name Type Description <code>packageName</code> <code>string</code> the name of the package to be required"},{"location":"reference/modules/appium_support.node/#returns_4","title":"Returns","text":"<p><code>Promise</code>&lt;<code>unknown</code>&gt;</p> <ul> <li>the package object</li> </ul>"},{"location":"reference/modules/appium_support.node/#defined-in_4","title":"Defined in","text":"<p>packages/support/lib/node.js:47</p>"},{"location":"reference/modules/appium_support.plist/","title":"Namespace: plist","text":"<p>@appium/support.plist</p>"},{"location":"reference/modules/appium_support.plist/#table-of-contents","title":"Table of contents","text":""},{"location":"reference/modules/appium_support.plist/#functions","title":"Functions","text":"<ul> <li>createBinaryPlist</li> <li>createPlist</li> <li>parseBinaryPlist</li> <li>parsePlist</li> <li>parsePlistFile</li> <li>updatePlistFile</li> </ul>"},{"location":"reference/modules/appium_support.plist/#functions_1","title":"Functions","text":""},{"location":"reference/modules/appium_support.plist/#createbinaryplist","title":"createBinaryPlist","text":"<p>\u25b8 createBinaryPlist(<code>data</code>): <code>Buffer</code></p> <p>Creates a binary plist Buffer from an object</p>"},{"location":"reference/modules/appium_support.plist/#parameters","title":"Parameters","text":"Name Type Description <code>data</code> <code>any</code> The object to be turned into a binary plist"},{"location":"reference/modules/appium_support.plist/#returns","title":"Returns","text":"<p><code>Buffer</code></p> <p>plist in the form of a binary buffer</p>"},{"location":"reference/modules/appium_support.plist/#defined-in","title":"Defined in","text":"<p>packages/support/lib/plist.js:102</p>"},{"location":"reference/modules/appium_support.plist/#createplist","title":"createPlist","text":"<p>\u25b8 createPlist(<code>object</code>, <code>binary?</code>): <code>string</code> | <code>Buffer</code></p> <p>Creates a plist from an object</p>"},{"location":"reference/modules/appium_support.plist/#parameters_1","title":"Parameters","text":"Name Type Default value Description <code>object</code> <code>any</code> <code>undefined</code> The JS object to be turned into a plist <code>binary</code> <code>boolean</code> <code>false</code> Set it to true for a binary plist"},{"location":"reference/modules/appium_support.plist/#returns_1","title":"Returns","text":"<p><code>string</code> | <code>Buffer</code></p> <p>returns a buffer or a string in respect to the binary parameter</p>"},{"location":"reference/modules/appium_support.plist/#defined-in_1","title":"Defined in","text":"<p>packages/support/lib/plist.js:147</p>"},{"location":"reference/modules/appium_support.plist/#parsebinaryplist","title":"parseBinaryPlist","text":"<p>\u25b8 parseBinaryPlist(<code>data</code>): [<code>any</code>]</p> <p>Parses a Buffer into an Object</p>"},{"location":"reference/modules/appium_support.plist/#parameters_2","title":"Parameters","text":"Name Type Description <code>data</code> <code>Buffer</code> The beffer of a binary plist"},{"location":"reference/modules/appium_support.plist/#returns_2","title":"Returns","text":"<p>[<code>any</code>]</p>"},{"location":"reference/modules/appium_support.plist/#defined-in_2","title":"Defined in","text":"<p>packages/support/lib/plist.js:110</p>"},{"location":"reference/modules/appium_support.plist/#parseplist","title":"parsePlist","text":"<p>\u25b8 parsePlist(<code>data</code>): <code>any</code></p> <p>Parses an buffer or a string to a JS object a plist from an object</p> <p><code>Throws</code></p> <p>Will throw an error if the plist type is unknown</p>"},{"location":"reference/modules/appium_support.plist/#parameters_3","title":"Parameters","text":"Name Type Description <code>data</code> <code>string</code> | <code>Buffer</code> The plist in the form of string or Buffer"},{"location":"reference/modules/appium_support.plist/#returns_3","title":"Returns","text":"<p><code>any</code></p> <p>parsed plist JS Object</p>"},{"location":"reference/modules/appium_support.plist/#defined-in_3","title":"Defined in","text":"<p>packages/support/lib/plist.js:161</p>"},{"location":"reference/modules/appium_support.plist/#parseplistfile","title":"parsePlistFile","text":"<p>\u25b8 parsePlistFile(<code>plist</code>, <code>mustExist?</code>, <code>quiet?</code>): <code>Promise</code>&lt;<code>any</code>&gt;</p> <p>Parses a file in xml or binary format of plist</p>"},{"location":"reference/modules/appium_support.plist/#parameters_4","title":"Parameters","text":"Name Type Default value Description <code>plist</code> <code>string</code> <code>undefined</code> The plist file path <code>mustExist</code> <code>boolean</code> <code>true</code> If set to false, this method will return an empty object when the file doesn't exist <code>quiet</code> <code>boolean</code> <code>true</code> If set to false, the plist path will be logged in debug level"},{"location":"reference/modules/appium_support.plist/#returns_4","title":"Returns","text":"<p><code>Promise</code>&lt;<code>any</code>&gt;</p> <p>parsed plist JS Object</p>"},{"location":"reference/modules/appium_support.plist/#defined-in_4","title":"Defined in","text":"<p>packages/support/lib/plist.js:30</p>"},{"location":"reference/modules/appium_support.plist/#updateplistfile","title":"updatePlistFile","text":"<p>\u25b8 updatePlistFile(<code>plist</code>, <code>updatedFields</code>, <code>binary?</code>, <code>mustExist?</code>, <code>quiet?</code>): <code>Promise</code>&lt;<code>void</code>&gt;</p> <p>Updates a plist file with the given fields</p>"},{"location":"reference/modules/appium_support.plist/#parameters_5","title":"Parameters","text":"Name Type Default value Description <code>plist</code> <code>string</code> <code>undefined</code> The plist file path <code>updatedFields</code> <code>any</code> <code>undefined</code> The updated fields-value pairs <code>binary</code> <code>boolean</code> <code>true</code> If set to false, the file will be created as a xml plist <code>mustExist</code> <code>boolean</code> <code>true</code> If set to false, this method will update an empty plist <code>quiet</code> <code>boolean</code> <code>true</code> If set to false, the plist path will be logged in debug level"},{"location":"reference/modules/appium_support.plist/#returns_5","title":"Returns","text":"<p><code>Promise</code>&lt;<code>void</code>&gt;</p>"},{"location":"reference/modules/appium_support.plist/#defined-in_5","title":"Defined in","text":"<p>packages/support/lib/plist.js:73</p>"},{"location":"reference/modules/appium_support.process/","title":"Namespace: process","text":"<p>@appium/support.process</p>"},{"location":"reference/modules/appium_support.process/#table-of-contents","title":"Table of contents","text":""},{"location":"reference/modules/appium_support.process/#functions","title":"Functions","text":"<ul> <li>getProcessIds</li> <li>killProcess</li> </ul>"},{"location":"reference/modules/appium_support.process/#functions_1","title":"Functions","text":""},{"location":"reference/modules/appium_support.process/#getprocessids","title":"getProcessIds","text":"<p>\u25b8 getProcessIds(<code>appName</code>): <code>Promise</code>&lt;<code>any</code>[]&gt;</p>"},{"location":"reference/modules/appium_support.process/#parameters","title":"Parameters","text":"Name Type <code>appName</code> <code>any</code>"},{"location":"reference/modules/appium_support.process/#returns","title":"Returns","text":"<p><code>Promise</code>&lt;<code>any</code>[]&gt;</p>"},{"location":"reference/modules/appium_support.process/#defined-in","title":"Defined in","text":"<p>packages/support/lib/process.js:11</p>"},{"location":"reference/modules/appium_support.process/#killprocess","title":"killProcess","text":"<p>\u25b8 killProcess(<code>appName</code>, <code>force?</code>): <code>Promise</code>&lt;<code>void</code>&gt;</p>"},{"location":"reference/modules/appium_support.process/#parameters_1","title":"Parameters","text":"Name Type Default value <code>appName</code> <code>any</code> <code>undefined</code> <code>force</code> <code>boolean</code> <code>false</code>"},{"location":"reference/modules/appium_support.process/#returns_1","title":"Returns","text":"<p><code>Promise</code>&lt;<code>void</code>&gt;</p>"},{"location":"reference/modules/appium_support.process/#defined-in_1","title":"Defined in","text":"<p>packages/support/lib/process.js:28</p>"},{"location":"reference/modules/appium_support.system/","title":"Namespace: system","text":"<p>@appium/support.system</p>"},{"location":"reference/modules/appium_support.system/#table-of-contents","title":"Table of contents","text":""},{"location":"reference/modules/appium_support.system/#functions","title":"Functions","text":"<ul> <li>arch</li> <li>isLinux</li> <li>isMac</li> <li>isOSWin64</li> <li>isWindows</li> <li>macOsxVersion</li> </ul>"},{"location":"reference/modules/appium_support.system/#functions_1","title":"Functions","text":""},{"location":"reference/modules/appium_support.system/#arch","title":"arch","text":"<p>\u25b8 arch(): <code>Promise</code>&lt;<code>undefined</code> | <code>\"32\"</code> | <code>\"64\"</code>&gt;</p>"},{"location":"reference/modules/appium_support.system/#returns","title":"Returns","text":"<p><code>Promise</code>&lt;<code>undefined</code> | <code>\"32\"</code> | <code>\"64\"</code>&gt;</p>"},{"location":"reference/modules/appium_support.system/#defined-in","title":"Defined in","text":"<p>packages/support/lib/system.js:23</p>"},{"location":"reference/modules/appium_support.system/#islinux","title":"isLinux","text":"<p>\u25b8 isLinux(): <code>boolean</code></p>"},{"location":"reference/modules/appium_support.system/#returns_1","title":"Returns","text":"<p><code>boolean</code></p>"},{"location":"reference/modules/appium_support.system/#defined-in_1","title":"Defined in","text":"<p>packages/support/lib/system.js:15</p>"},{"location":"reference/modules/appium_support.system/#ismac","title":"isMac","text":"<p>\u25b8 isMac(): <code>boolean</code></p>"},{"location":"reference/modules/appium_support.system/#returns_2","title":"Returns","text":"<p><code>boolean</code></p>"},{"location":"reference/modules/appium_support.system/#defined-in_2","title":"Defined in","text":"<p>packages/support/lib/system.js:11</p>"},{"location":"reference/modules/appium_support.system/#isoswin64","title":"isOSWin64","text":"<p>\u25b8 isOSWin64(): <code>boolean</code></p>"},{"location":"reference/modules/appium_support.system/#returns_3","title":"Returns","text":"<p><code>boolean</code></p>"},{"location":"reference/modules/appium_support.system/#defined-in_3","title":"Defined in","text":"<p>packages/support/lib/system.js:19</p>"},{"location":"reference/modules/appium_support.system/#iswindows","title":"isWindows","text":"<p>\u25b8 isWindows(): <code>boolean</code></p>"},{"location":"reference/modules/appium_support.system/#returns_4","title":"Returns","text":"<p><code>boolean</code></p>"},{"location":"reference/modules/appium_support.system/#defined-in_4","title":"Defined in","text":"<p>packages/support/lib/system.js:7</p>"},{"location":"reference/modules/appium_support.system/#macosxversion","title":"macOsxVersion","text":"<p>\u25b8 macOsxVersion(): <code>Promise</code>&lt;<code>string</code>&gt;</p>"},{"location":"reference/modules/appium_support.system/#returns_5","title":"Returns","text":"<p><code>Promise</code>&lt;<code>string</code>&gt;</p>"},{"location":"reference/modules/appium_support.system/#defined-in_5","title":"Defined in","text":"<p>packages/support/lib/system.js:33</p>"},{"location":"reference/modules/appium_support.tempDir/","title":"Namespace: tempDir","text":"<p>@appium/support.tempDir</p>"},{"location":"reference/modules/appium_support.tempDir/#table-of-contents","title":"Table of contents","text":""},{"location":"reference/modules/appium_support.tempDir/#interfaces","title":"Interfaces","text":"<ul> <li>Affixes</li> <li>OpenedAffixes</li> </ul>"},{"location":"reference/modules/appium_support.tempDir/#functions","title":"Functions","text":"<ul> <li>open</li> <li>openDir</li> <li>path</li> <li>staticDir</li> </ul>"},{"location":"reference/modules/appium_support.tempDir/#functions_1","title":"Functions","text":""},{"location":"reference/modules/appium_support.tempDir/#open","title":"open","text":"<p>\u25b8 open(<code>affixes</code>): <code>Promise</code>&lt;<code>OpenedAffixes</code>&gt;</p> <p>Generate a temporary directory in os.tempdir() or process.env.APPIUM_TMP_DIR with arbitrary prefix/suffix for the directory name and return it as open.</p>"},{"location":"reference/modules/appium_support.tempDir/#parameters","title":"Parameters","text":"Name Type <code>affixes</code> <code>Affixes</code>"},{"location":"reference/modules/appium_support.tempDir/#returns","title":"Returns","text":"<p><code>Promise</code>&lt;<code>OpenedAffixes</code>&gt;</p>"},{"location":"reference/modules/appium_support.tempDir/#defined-in","title":"Defined in","text":"<p>packages/support/lib/tempdir.js:73</p>"},{"location":"reference/modules/appium_support.tempDir/#opendir","title":"openDir","text":"<p>\u25b8 openDir(): <code>Promise</code>&lt;<code>string</code>&gt;</p> <p>Returns a new path to a temporary directory</p>"},{"location":"reference/modules/appium_support.tempDir/#returns_1","title":"Returns","text":"<p><code>Promise</code>&lt;<code>string</code>&gt;</p> <p>A new tempDir() if tempRootDirectory is not provided</p>"},{"location":"reference/modules/appium_support.tempDir/#defined-in_1","title":"Defined in","text":"<p>packages/support/lib/tempdir.js:18</p>"},{"location":"reference/modules/appium_support.tempDir/#path","title":"path","text":"<p>\u25b8 path(<code>rawAffixes</code>, <code>defaultPrefix?</code>): <code>Promise</code>&lt;<code>string</code>&gt;</p> <p>Generate a temporary directory in os.tempdir() or process.env.APPIUM_TMP_DIR with arbitrary prefix/suffix for the directory name.</p>"},{"location":"reference/modules/appium_support.tempDir/#parameters_1","title":"Parameters","text":"Name Type <code>rawAffixes</code> <code>string</code> | <code>Affixes</code> <code>defaultPrefix?</code> <code>string</code>"},{"location":"reference/modules/appium_support.tempDir/#returns_2","title":"Returns","text":"<p><code>Promise</code>&lt;<code>string</code>&gt;</p> <p>A path to the temporary directory with rawAffixes and defaultPrefix</p>"},{"location":"reference/modules/appium_support.tempDir/#defined-in_2","title":"Defined in","text":"<p>packages/support/lib/tempdir.js:53</p>"},{"location":"reference/modules/appium_support.tempDir/#staticdir","title":"staticDir","text":"<p>\u25b8 staticDir(): <code>Promise</code>&lt;<code>string</code>&gt;</p> <p>Returns a path to a temporary directory whcih is defined as static in the same process</p>"},{"location":"reference/modules/appium_support.tempDir/#returns_3","title":"Returns","text":"<p><code>Promise</code>&lt;<code>string</code>&gt;</p> <p>A temp directory path whcih is defined as static in the same process</p>"},{"location":"reference/modules/appium_support.tempDir/#defined-in_3","title":"Defined in","text":"<p>packages/support/lib/tempdir.js:127</p>"},{"location":"reference/modules/appium_support.timing/","title":"Namespace: timing","text":"<p>@appium/support.timing</p>"},{"location":"reference/modules/appium_support.timing/#table-of-contents","title":"Table of contents","text":""},{"location":"reference/modules/appium_support.timing/#references","title":"References","text":"<ul> <li>default</li> </ul>"},{"location":"reference/modules/appium_support.timing/#classes","title":"Classes","text":"<ul> <li>Duration</li> <li>Timer</li> </ul>"},{"location":"reference/modules/appium_support.timing/#references_1","title":"References","text":""},{"location":"reference/modules/appium_support.timing/#default","title":"default","text":"<p>Renames and re-exports Timer</p>"},{"location":"reference/modules/appium_support.util/","title":"Namespace: util","text":"<p>@appium/support.util</p>"},{"location":"reference/modules/appium_support.util/#table-of-contents","title":"Table of contents","text":""},{"location":"reference/modules/appium_support.util/#references","title":"References","text":"<ul> <li>cancellableDelay</li> </ul>"},{"location":"reference/modules/appium_support.util/#interfaces","title":"Interfaces","text":"<ul> <li>EncodingOptions</li> <li>LockFileOptions</li> <li>PluralizeOptions</li> </ul>"},{"location":"reference/modules/appium_support.util/#type-aliases","title":"Type Aliases","text":"<ul> <li>NonEmptyString</li> </ul>"},{"location":"reference/modules/appium_support.util/#variables","title":"Variables","text":"<ul> <li>GiB</li> <li>KiB</li> <li>MiB</li> <li>W3C_WEB_ELEMENT_IDENTIFIER</li> </ul>"},{"location":"reference/modules/appium_support.util/#functions","title":"Functions","text":"<ul> <li>coerceVersion</li> <li>compareVersions</li> <li>escapeSpace</li> <li>escapeSpecialChars</li> <li>filterObject</li> <li>getLockFileGuard</li> <li>hasContent</li> <li>hasValue</li> <li>isSameDestination</li> <li>isSubPath</li> <li>jsonStringify</li> <li>localIp</li> <li>multiResolve</li> <li>pluralize</li> <li>quote</li> <li>safeJsonParse</li> <li>shellParse</li> <li>toInMemoryBase64</li> <li>toReadableSizeString</li> <li>unleakString</li> <li>unwrapElement</li> <li>uuidV1</li> <li>uuidV3</li> <li>uuidV4</li> <li>uuidV5</li> <li>wrapElement</li> </ul>"},{"location":"reference/modules/appium_support.util/#references_1","title":"References","text":""},{"location":"reference/modules/appium_support.util/#cancellabledelay","title":"cancellableDelay","text":"<p>Renames and re-exports __type</p>"},{"location":"reference/modules/appium_support.util/#type-aliases_1","title":"Type Aliases","text":""},{"location":"reference/modules/appium_support.util/#nonemptystring","title":"NonEmptyString","text":"<p>\u01ac NonEmptyString&lt;<code>T</code>&gt;: <code>T</code> extends <code>\"\"</code> ? <code>never</code> : <code>T</code></p>"},{"location":"reference/modules/appium_support.util/#type-parameters","title":"Type parameters","text":"Name <code>T</code>"},{"location":"reference/modules/appium_support.util/#defined-in","title":"Defined in","text":"<p>packages/support/lib/util.js:571</p>"},{"location":"reference/modules/appium_support.util/#variables_1","title":"Variables","text":""},{"location":"reference/modules/appium_support.util/#gib","title":"GiB","text":"<p>\u2022 <code>Const</code> GiB: <code>number</code></p>"},{"location":"reference/modules/appium_support.util/#defined-in_1","title":"Defined in","text":"<p>packages/support/lib/util.js:27</p>"},{"location":"reference/modules/appium_support.util/#kib","title":"KiB","text":"<p>\u2022 <code>Const</code> KiB: <code>1024</code></p>"},{"location":"reference/modules/appium_support.util/#defined-in_2","title":"Defined in","text":"<p>packages/support/lib/util.js:25</p>"},{"location":"reference/modules/appium_support.util/#mib","title":"MiB","text":"<p>\u2022 <code>Const</code> MiB: <code>number</code></p>"},{"location":"reference/modules/appium_support.util/#defined-in_3","title":"Defined in","text":"<p>packages/support/lib/util.js:26</p>"},{"location":"reference/modules/appium_support.util/#w3c_web_element_identifier","title":"W3C_WEB_ELEMENT_IDENTIFIER","text":"<p>\u2022 <code>Const</code> W3C_WEB_ELEMENT_IDENTIFIER: <code>\"element-6066-11e4-a52e-4f735466cecf\"</code></p>"},{"location":"reference/modules/appium_support.util/#defined-in_4","title":"Defined in","text":"<p>packages/support/lib/util.js:24</p>"},{"location":"reference/modules/appium_support.util/#functions_1","title":"Functions","text":""},{"location":"reference/modules/appium_support.util/#coerceversion","title":"coerceVersion","text":"<p>\u25b8 coerceVersion&lt;<code>Strict</code>&gt;(<code>ver</code>, <code>strict?</code>): <code>Strict</code> extends <code>true</code> ? <code>string</code> : <code>null</code> | <code>string</code></p> <p>Coerces the given number/string to a valid version string</p> <p><code>Throws</code></p> <p>if strict mode is enabled and <code>ver</code> cannot be coerced</p>"},{"location":"reference/modules/appium_support.util/#type-parameters_1","title":"Type parameters","text":"Name Type <code>Strict</code> extends <code>boolean</code> = <code>true</code>"},{"location":"reference/modules/appium_support.util/#parameters","title":"Parameters","text":"Name Type Description <code>ver</code> <code>string</code> Version string to coerce <code>strict?</code> <code>Strict</code> If <code>true</code> then an exception will be thrown if <code>ver</code> cannot be coerced"},{"location":"reference/modules/appium_support.util/#returns","title":"Returns","text":"<p><code>Strict</code> extends <code>true</code> ? <code>string</code> : <code>null</code> | <code>string</code></p> <p>Coerced version number or null if the string cannot be coerced and strict mode is disabled</p>"},{"location":"reference/modules/appium_support.util/#defined-in_5","title":"Defined in","text":"<p>packages/support/lib/util.js:308</p>"},{"location":"reference/modules/appium_support.util/#compareversions","title":"compareVersions","text":"<p>\u25b8 compareVersions(<code>ver1</code>, <code>operator</code>, <code>ver2</code>): <code>boolean</code></p> <p>Compares two version strings</p> <p><code>Throws</code></p> <p>if an unsupported operator is supplied or any of the supplied version strings cannot be coerced</p>"},{"location":"reference/modules/appium_support.util/#parameters_1","title":"Parameters","text":"Name Type Description <code>ver1</code> <code>string</code> The first version number to compare. Should be a valid version number supported by semver parser. <code>operator</code> <code>string</code> One of supported version number operators: ==, !=, &gt;, &lt;, &lt;=, &gt;=, = <code>ver2</code> <code>string</code> The second version number to compare. Should be a valid version number supported by semver parser."},{"location":"reference/modules/appium_support.util/#returns_1","title":"Returns","text":"<p><code>boolean</code></p> <p>true or false depending on the actual comparison result</p>"},{"location":"reference/modules/appium_support.util/#defined-in_6","title":"Defined in","text":"<p>packages/support/lib/util.js:331</p>"},{"location":"reference/modules/appium_support.util/#escapespace","title":"escapeSpace","text":"<p>\u25b8 escapeSpace(<code>str</code>): <code>any</code></p>"},{"location":"reference/modules/appium_support.util/#parameters_2","title":"Parameters","text":"Name Type <code>str</code> <code>any</code>"},{"location":"reference/modules/appium_support.util/#returns_2","title":"Returns","text":"<p><code>any</code></p>"},{"location":"reference/modules/appium_support.util/#defined-in_7","title":"Defined in","text":"<p>packages/support/lib/util.js:55</p>"},{"location":"reference/modules/appium_support.util/#escapespecialchars","title":"escapeSpecialChars","text":"<p>\u25b8 escapeSpecialChars(<code>str</code>, <code>quoteEscape</code>): <code>any</code></p>"},{"location":"reference/modules/appium_support.util/#parameters_3","title":"Parameters","text":"Name Type <code>str</code> <code>any</code> <code>quoteEscape</code> <code>any</code>"},{"location":"reference/modules/appium_support.util/#returns_3","title":"Returns","text":"<p><code>any</code></p>"},{"location":"reference/modules/appium_support.util/#defined-in_8","title":"Defined in","text":"<p>packages/support/lib/util.js:59</p>"},{"location":"reference/modules/appium_support.util/#filterobject","title":"filterObject","text":"<p>\u25b8 filterObject(<code>obj</code>, <code>predicate</code>): <code>any</code></p>"},{"location":"reference/modules/appium_support.util/#parameters_4","title":"Parameters","text":"Name Type <code>obj</code> <code>any</code> <code>predicate</code> <code>any</code>"},{"location":"reference/modules/appium_support.util/#returns_4","title":"Returns","text":"<p><code>any</code></p>"},{"location":"reference/modules/appium_support.util/#defined-in_9","title":"Defined in","text":"<p>packages/support/lib/util.js:204</p>"},{"location":"reference/modules/appium_support.util/#getlockfileguard","title":"getLockFileGuard","text":"<p>\u25b8 getLockFileGuard&lt;<code>T</code>&gt;(<code>lockFile</code>, <code>opts?</code>): (<code>behavior</code>: (...<code>args</code>: <code>any</code>[]) =&gt; <code>T</code>) =&gt; <code>Promise</code>&lt;<code>T</code>&gt;</p> <p>Create an async function which, when called, will not proceed until a certain file is no longer present on the system. This allows for preventing concurrent behavior across processes using a known lockfile path.</p>"},{"location":"reference/modules/appium_support.util/#type-parameters_2","title":"Type parameters","text":"Name <code>T</code>"},{"location":"reference/modules/appium_support.util/#parameters_5","title":"Parameters","text":"Name Type Description <code>lockFile</code> <code>string</code> The full path to the file used for the lock <code>opts</code> <code>LockFileOptions</code>"},{"location":"reference/modules/appium_support.util/#returns_5","title":"Returns","text":"<p><code>fn</code></p> <p>async function that takes another async function defining the locked behavior</p> <p>\u25b8 (<code>behavior</code>): <code>Promise</code>&lt;<code>T</code>&gt;</p>"},{"location":"reference/modules/appium_support.util/#parameters_6","title":"Parameters","text":"Name Type <code>behavior</code> (...<code>args</code>: <code>any</code>[]) =&gt; <code>T</code>"},{"location":"reference/modules/appium_support.util/#returns_6","title":"Returns","text":"<p><code>Promise</code>&lt;<code>T</code>&gt;</p> Name Type <code>check</code> () =&gt; <code>Promise</code>&lt;<code>boolean</code>&gt;"},{"location":"reference/modules/appium_support.util/#defined-in_10","title":"Defined in","text":"<p>packages/support/lib/util.js:480</p>"},{"location":"reference/modules/appium_support.util/#hascontent","title":"hasContent","text":"<p>\u25b8 hasContent&lt;<code>T</code>&gt;(<code>val</code>): val is NonEmptyString&lt;T&gt;</p>"},{"location":"reference/modules/appium_support.util/#type-parameters_3","title":"Type parameters","text":"Name Type <code>T</code> extends <code>string</code>"},{"location":"reference/modules/appium_support.util/#parameters_7","title":"Parameters","text":"Name Type <code>val</code> <code>T</code>"},{"location":"reference/modules/appium_support.util/#returns_7","title":"Returns","text":"<p>val is NonEmptyString&lt;T&gt;</p>"},{"location":"reference/modules/appium_support.util/#defined-in_11","title":"Defined in","text":"<p>packages/support/lib/util.js:34</p>"},{"location":"reference/modules/appium_support.util/#hasvalue","title":"hasValue","text":"<p>\u25b8 hasValue&lt;<code>T</code>&gt;(<code>val</code>): val is NonNullable&lt;T&gt;</p> <p>return true if the the value is not <code>undefined</code>, <code>null</code>, or <code>NaN</code>.</p> <p>XXX: <code>NaN</code> is not expressible in TypeScript.</p>"},{"location":"reference/modules/appium_support.util/#type-parameters_4","title":"Type parameters","text":"Name <code>T</code>"},{"location":"reference/modules/appium_support.util/#parameters_8","title":"Parameters","text":"Name Type <code>val</code> <code>T</code>"},{"location":"reference/modules/appium_support.util/#returns_8","title":"Returns","text":"<p>val is NonNullable&lt;T&gt;</p>"},{"location":"reference/modules/appium_support.util/#defined-in_12","title":"Defined in","text":"<p>packages/support/lib/util.js:46</p>"},{"location":"reference/modules/appium_support.util/#issamedestination","title":"isSameDestination","text":"<p>\u25b8 isSameDestination(<code>path1</code>, <code>path2</code>, <code>...pathN</code>): <code>Promise</code>&lt;<code>boolean</code>&gt;</p> <p>Checks whether the given paths are pointing to the same file system destination.</p>"},{"location":"reference/modules/appium_support.util/#parameters_9","title":"Parameters","text":"Name Type Description <code>path1</code> <code>string</code> Absolute or relative path to a file/folder <code>path2</code> <code>string</code> Absolute or relative path to a file/folder <code>...pathN</code> <code>string</code>[] Zero or more absolute or relative paths to files/folders"},{"location":"reference/modules/appium_support.util/#returns_9","title":"Returns","text":"<p><code>Promise</code>&lt;<code>boolean</code>&gt;</p> <p>true if all paths are pointing to the same file system item</p>"},{"location":"reference/modules/appium_support.util/#defined-in_13","title":"Defined in","text":"<p>packages/support/lib/util.js:277</p>"},{"location":"reference/modules/appium_support.util/#issubpath","title":"isSubPath","text":"<p>\u25b8 isSubPath(<code>originalPath</code>, <code>root</code>, <code>forcePosix?</code>): <code>boolean</code></p> <p>Checks whether the given path is a subpath of the particular root folder. Both paths can include .. and . specifiers</p> <p><code>Throws</code></p> <p>if any of the given paths is not absolute</p>"},{"location":"reference/modules/appium_support.util/#parameters_10","title":"Parameters","text":"Name Type Default value Description <code>originalPath</code> <code>string</code> <code>undefined</code> The absolute file/folder path <code>root</code> <code>string</code> <code>undefined</code> The absolute root folder path <code>forcePosix</code> <code>null</code> | <code>boolean</code> <code>null</code> Set it to true if paths must be interpreted in POSIX format"},{"location":"reference/modules/appium_support.util/#returns_10","title":"Returns","text":"<p><code>boolean</code></p> <p>true if the given original path is the subpath of the root folder</p>"},{"location":"reference/modules/appium_support.util/#defined-in_14","title":"Defined in","text":"<p>packages/support/lib/util.js:256</p>"},{"location":"reference/modules/appium_support.util/#jsonstringify","title":"jsonStringify","text":"<p>\u25b8 jsonStringify(<code>obj</code>, <code>replacer</code>, <code>space?</code>): <code>string</code></p>"},{"location":"reference/modules/appium_support.util/#parameters_11","title":"Parameters","text":"Name Type Default value <code>obj</code> <code>any</code> <code>undefined</code> <code>replacer</code> <code>any</code> <code>undefined</code> <code>space</code> <code>number</code> <code>2</code>"},{"location":"reference/modules/appium_support.util/#returns_11","title":"Returns","text":"<p><code>string</code></p>"},{"location":"reference/modules/appium_support.util/#defined-in_15","title":"Defined in","text":"<p>packages/support/lib/util.js:151</p>"},{"location":"reference/modules/appium_support.util/#localip","title":"localIp","text":"<p>\u25b8 localIp(): <code>any</code></p>"},{"location":"reference/modules/appium_support.util/#returns_12","title":"Returns","text":"<p><code>any</code></p>"},{"location":"reference/modules/appium_support.util/#defined-in_16","title":"Defined in","text":"<p>packages/support/lib/util.js:83</p>"},{"location":"reference/modules/appium_support.util/#multiresolve","title":"multiResolve","text":"<p>\u25b8 multiResolve(<code>roots</code>, <code>...args</code>): <code>any</code></p>"},{"location":"reference/modules/appium_support.util/#parameters_12","title":"Parameters","text":"Name Type <code>roots</code> <code>any</code> <code>...args</code> <code>any</code>[]"},{"location":"reference/modules/appium_support.util/#returns_13","title":"Returns","text":"<p><code>any</code></p>"},{"location":"reference/modules/appium_support.util/#defined-in_17","title":"Defined in","text":"<p>packages/support/lib/util.js:123</p>"},{"location":"reference/modules/appium_support.util/#pluralize","title":"pluralize","text":"<p>\u25b8 pluralize(<code>word</code>, <code>count</code>, <code>options?</code>): <code>string</code></p> <p>Get the form of a word appropriate to the count</p>"},{"location":"reference/modules/appium_support.util/#parameters_13","title":"Parameters","text":"Name Type Description <code>word</code> <code>string</code> The word to pluralize <code>count</code> <code>number</code> How many of the word exist <code>options</code> <code>boolean</code> | <code>PluralizeOptions</code> options for word pluralization, or a boolean indicating the options.inclusive property"},{"location":"reference/modules/appium_support.util/#returns_14","title":"Returns","text":"<p><code>string</code></p> <p>The word pluralized according to the number</p>"},{"location":"reference/modules/appium_support.util/#defined-in_18","title":"Defined in","text":"<p>packages/support/lib/util.js:381</p>"},{"location":"reference/modules/appium_support.util/#quote","title":"quote","text":"<p>\u25b8 quote(<code>args</code>): <code>string</code></p> <p>Add appropriate quotes to command arguments. See https://github.com/substack/node-shell-quote for more details</p>"},{"location":"reference/modules/appium_support.util/#parameters_14","title":"Parameters","text":"Name Type Description <code>args</code> <code>string</code> | <code>string</code>[] The arguments that will be parsed"},{"location":"reference/modules/appium_support.util/#returns_15","title":"Returns","text":"<p><code>string</code></p> <ul> <li>The arguments, quoted</li> </ul>"},{"location":"reference/modules/appium_support.util/#defined-in_19","title":"Defined in","text":"<p>packages/support/lib/util.js:351</p>"},{"location":"reference/modules/appium_support.util/#safejsonparse","title":"safeJsonParse","text":"<p>\u25b8 safeJsonParse(<code>obj</code>): <code>any</code></p>"},{"location":"reference/modules/appium_support.util/#parameters_15","title":"Parameters","text":"Name Type <code>obj</code> <code>any</code>"},{"location":"reference/modules/appium_support.util/#returns_16","title":"Returns","text":"<p><code>any</code></p>"},{"location":"reference/modules/appium_support.util/#defined-in_20","title":"Defined in","text":"<p>packages/support/lib/util.js:130</p>"},{"location":"reference/modules/appium_support.util/#shellparse","title":"shellParse","text":"<p>\u25b8 shellParse(<code>cmd</code>, <code>env?</code>, <code>opts?</code>): <code>ParseEntry</code>[]</p> <p>Return an array of arguments from the quoted string <code>cmd</code>.</p> <p>Interpolate embedded bash-style <code>$VARNAME</code> and <code>${VARNAME}</code> variables with the <code>env</code> object which like bash will replace undefined variables with <code>\"\"</code>.</p>"},{"location":"reference/modules/appium_support.util/#parameters_16","title":"Parameters","text":"Name Type <code>cmd</code> <code>string</code> <code>env?</code> <code>Object</code> <code>opts?</code> <code>ParseOptions</code>"},{"location":"reference/modules/appium_support.util/#returns_17","title":"Returns","text":"<p><code>ParseEntry</code>[]</p>"},{"location":"reference/modules/appium_support.util/#defined-in_21","title":"Defined in","text":"<p>node_modules/@types/shell-quote/index.d.ts:34</p> <p>\u25b8 shellParse&lt;<code>T</code>&gt;(<code>cmd</code>, <code>env</code>, <code>opts?</code>): (<code>ParseEntry</code> | <code>T</code>)[]</p> <p>Return an array of arguments from the quoted string <code>cmd</code>.</p> <p>Interpolate embedded bash-style <code>$VARNAME</code> and <code>${VARNAME}</code> variables with the <code>env</code> object which like bash will replace undefined variables with <code>\"\"</code>.</p>"},{"location":"reference/modules/appium_support.util/#type-parameters_5","title":"Type parameters","text":"Name Type <code>T</code> extends <code>string</code> | <code>object</code>"},{"location":"reference/modules/appium_support.util/#parameters_17","title":"Parameters","text":"Name Type Description <code>cmd</code> <code>string</code> - <code>env</code> (<code>key</code>: <code>string</code>) =&gt; <code>undefined</code> | <code>T</code> A function to perform lookups. When env(key) returns a string, its result will be output just like env[key] would. When env(key) returns an object, it will be inserted into the result array like the operator objects. <code>opts?</code> <code>ParseOptions</code> -"},{"location":"reference/modules/appium_support.util/#returns_18","title":"Returns","text":"<p>(<code>ParseEntry</code> | <code>T</code>)[]</p>"},{"location":"reference/modules/appium_support.util/#defined-in_22","title":"Defined in","text":"<p>node_modules/@types/shell-quote/index.d.ts:51</p>"},{"location":"reference/modules/appium_support.util/#toinmemorybase64","title":"toInMemoryBase64","text":"<p>\u25b8 toInMemoryBase64(<code>srcPath</code>, <code>opts?</code>): <code>Promise</code>&lt;<code>Buffer</code>&gt;</p> <p>Converts contents of a local file to an in-memory base-64 encoded buffer. The operation is memory-usage friendly and should be used while encoding large files to base64</p> <p><code>Throws</code></p> <p>if there was an error while reading the source file or the source file is too</p>"},{"location":"reference/modules/appium_support.util/#parameters_18","title":"Parameters","text":"Name Type Description <code>srcPath</code> <code>string</code> The full path to the file being encoded <code>opts</code> <code>EncodingOptions</code>"},{"location":"reference/modules/appium_support.util/#returns_19","title":"Returns","text":"<p><code>Promise</code>&lt;<code>Buffer</code>&gt;</p> <p>base64-encoded content of the source file as memory buffer</p>"},{"location":"reference/modules/appium_support.util/#defined-in_23","title":"Defined in","text":"<p>packages/support/lib/util.js:413</p>"},{"location":"reference/modules/appium_support.util/#toreadablesizestring","title":"toReadableSizeString","text":"<p>\u25b8 toReadableSizeString(<code>bytes</code>): <code>string</code></p> <p>Converts number of bytes to a readable size string.</p> <p><code>Throws</code></p> <p>If bytes count cannot be converted to an integer or                 if it is less than zero.</p>"},{"location":"reference/modules/appium_support.util/#parameters_19","title":"Parameters","text":"Name Type Description <code>bytes</code> <code>string</code> | <code>number</code> The actual number of bytes."},{"location":"reference/modules/appium_support.util/#returns_20","title":"Returns","text":"<p><code>string</code></p> <p>The actual string representation, for example                   '1.00 KB' for '1024 B'</p>"},{"location":"reference/modules/appium_support.util/#defined-in_24","title":"Defined in","text":"<p>packages/support/lib/util.js:231</p>"},{"location":"reference/modules/appium_support.util/#unleakstring","title":"unleakString","text":"<p>\u25b8 unleakString(<code>s</code>): <code>string</code></p> <p>This function is necessary to workaround unexpected memory leaks caused by NodeJS string interning behavior described in https://bugs.chromium.org/p/v8/issues/detail?id=2869</p>"},{"location":"reference/modules/appium_support.util/#parameters_20","title":"Parameters","text":"Name Type Description <code>s</code> <code>any</code> The string to unleak"},{"location":"reference/modules/appium_support.util/#returns_21","title":"Returns","text":"<p><code>string</code></p> <p>Either the unleaked string or the original object converted to string</p>"},{"location":"reference/modules/appium_support.util/#defined-in_25","title":"Defined in","text":"<p>packages/support/lib/util.js:363</p>"},{"location":"reference/modules/appium_support.util/#unwrapelement","title":"unwrapElement","text":"<p>\u25b8 unwrapElement(<code>el</code>): <code>any</code></p>"},{"location":"reference/modules/appium_support.util/#parameters_21","title":"Parameters","text":"Name Type <code>el</code> <code>any</code>"},{"location":"reference/modules/appium_support.util/#returns_22","title":"Returns","text":"<p><code>any</code></p>"},{"location":"reference/modules/appium_support.util/#defined-in_26","title":"Defined in","text":"<p>packages/support/lib/util.js:180</p>"},{"location":"reference/modules/appium_support.util/#uuidv1","title":"uuidV1","text":"<p>\u25b8 uuidV1&lt;<code>T</code>&gt;(<code>options</code>, <code>buffer</code>, <code>offset?</code>): <code>T</code></p>"},{"location":"reference/modules/appium_support.util/#type-parameters_6","title":"Type parameters","text":"Name Type <code>T</code> extends <code>ArrayLike</code>&lt;<code>number</code>, <code>T</code>&gt;"},{"location":"reference/modules/appium_support.util/#parameters_22","title":"Parameters","text":"Name Type <code>options</code> <code>undefined</code> | <code>null</code> | <code>V1Options</code> <code>buffer</code> <code>T</code> <code>offset?</code> <code>number</code>"},{"location":"reference/modules/appium_support.util/#returns_23","title":"Returns","text":"<p><code>T</code></p>"},{"location":"reference/modules/appium_support.util/#defined-in_27","title":"Defined in","text":"<p>node_modules/@types/uuid/index.d.ts:37</p> <p>\u25b8 uuidV1(<code>options?</code>): <code>string</code></p>"},{"location":"reference/modules/appium_support.util/#parameters_23","title":"Parameters","text":"Name Type <code>options?</code> <code>V1Options</code>"},{"location":"reference/modules/appium_support.util/#returns_24","title":"Returns","text":"<p><code>string</code></p>"},{"location":"reference/modules/appium_support.util/#defined-in_28","title":"Defined in","text":"<p>node_modules/@types/uuid/index.d.ts:36</p>"},{"location":"reference/modules/appium_support.util/#uuidv3","title":"uuidV3","text":"<p>\u25b8 uuidV3&lt;<code>T</code>&gt;(<code>name</code>, <code>namespace</code>, <code>buffer</code>, <code>offset?</code>): <code>T</code></p>"},{"location":"reference/modules/appium_support.util/#type-parameters_7","title":"Type parameters","text":"Name Type <code>T</code> extends <code>ArrayLike</code>&lt;<code>number</code>, <code>T</code>&gt;"},{"location":"reference/modules/appium_support.util/#parameters_24","title":"Parameters","text":"Name Type <code>name</code> <code>string</code> | <code>InputBuffer</code> <code>namespace</code> <code>string</code> | <code>InputBuffer</code> <code>buffer</code> <code>T</code> <code>offset?</code> <code>number</code>"},{"location":"reference/modules/appium_support.util/#returns_25","title":"Returns","text":"<p><code>T</code></p>"},{"location":"reference/modules/appium_support.util/#defined-in_29","title":"Defined in","text":"<p>node_modules/@types/uuid/index.d.ts:45</p> <p>\u25b8 uuidV3(<code>name</code>, <code>namespace</code>): <code>string</code></p>"},{"location":"reference/modules/appium_support.util/#parameters_25","title":"Parameters","text":"Name Type <code>name</code> <code>string</code> | <code>InputBuffer</code> <code>namespace</code> <code>string</code> | <code>InputBuffer</code>"},{"location":"reference/modules/appium_support.util/#returns_26","title":"Returns","text":"<p><code>string</code></p>"},{"location":"reference/modules/appium_support.util/#defined-in_30","title":"Defined in","text":"<p>node_modules/@types/uuid/index.d.ts:44</p>"},{"location":"reference/modules/appium_support.util/#uuidv4","title":"uuidV4","text":"<p>\u25b8 uuidV4&lt;<code>T</code>&gt;(<code>options</code>, <code>buffer</code>, <code>offset?</code>): <code>T</code></p>"},{"location":"reference/modules/appium_support.util/#type-parameters_8","title":"Type parameters","text":"Name Type <code>T</code> extends <code>ArrayLike</code>&lt;<code>number</code>, <code>T</code>&gt;"},{"location":"reference/modules/appium_support.util/#parameters_26","title":"Parameters","text":"Name Type <code>options</code> <code>undefined</code> | <code>null</code> | <code>V4Options</code> <code>buffer</code> <code>T</code> <code>offset?</code> <code>number</code>"},{"location":"reference/modules/appium_support.util/#returns_27","title":"Returns","text":"<p><code>T</code></p>"},{"location":"reference/modules/appium_support.util/#defined-in_31","title":"Defined in","text":"<p>node_modules/@types/uuid/index.d.ts:41</p> <p>\u25b8 uuidV4(<code>options?</code>): <code>string</code></p>"},{"location":"reference/modules/appium_support.util/#parameters_27","title":"Parameters","text":"Name Type <code>options?</code> <code>V4Options</code>"},{"location":"reference/modules/appium_support.util/#returns_28","title":"Returns","text":"<p><code>string</code></p>"},{"location":"reference/modules/appium_support.util/#defined-in_32","title":"Defined in","text":"<p>node_modules/@types/uuid/index.d.ts:40</p>"},{"location":"reference/modules/appium_support.util/#uuidv5","title":"uuidV5","text":"<p>\u25b8 uuidV5&lt;<code>T</code>&gt;(<code>name</code>, <code>namespace</code>, <code>buffer</code>, <code>offset?</code>): <code>T</code></p>"},{"location":"reference/modules/appium_support.util/#type-parameters_9","title":"Type parameters","text":"Name Type <code>T</code> extends <code>ArrayLike</code>&lt;<code>number</code>, <code>T</code>&gt;"},{"location":"reference/modules/appium_support.util/#parameters_28","title":"Parameters","text":"Name Type <code>name</code> <code>string</code> | <code>InputBuffer</code> <code>namespace</code> <code>string</code> | <code>InputBuffer</code> <code>buffer</code> <code>T</code> <code>offset?</code> <code>number</code>"},{"location":"reference/modules/appium_support.util/#returns_29","title":"Returns","text":"<p><code>T</code></p>"},{"location":"reference/modules/appium_support.util/#defined-in_33","title":"Defined in","text":"<p>node_modules/@types/uuid/index.d.ts:55</p> <p>\u25b8 uuidV5(<code>name</code>, <code>namespace</code>): <code>string</code></p>"},{"location":"reference/modules/appium_support.util/#parameters_29","title":"Parameters","text":"Name Type <code>name</code> <code>string</code> | <code>InputBuffer</code> <code>namespace</code> <code>string</code> | <code>InputBuffer</code>"},{"location":"reference/modules/appium_support.util/#returns_30","title":"Returns","text":"<p><code>string</code></p>"},{"location":"reference/modules/appium_support.util/#defined-in_34","title":"Defined in","text":"<p>node_modules/@types/uuid/index.d.ts:54</p>"},{"location":"reference/modules/appium_support.util/#wrapelement","title":"wrapElement","text":"<p>\u25b8 wrapElement(<code>elementId</code>): <code>Object</code></p>"},{"location":"reference/modules/appium_support.util/#parameters_30","title":"Parameters","text":"Name Type <code>elementId</code> <code>any</code>"},{"location":"reference/modules/appium_support.util/#returns_31","title":"Returns","text":"<p><code>Object</code></p> Name Type <code>ELEMENT</code> <code>any</code> <code>element-6066-11e4-a52e-4f735466cecf</code> <code>any</code>"},{"location":"reference/modules/appium_support.util/#defined-in_35","title":"Defined in","text":"<p>packages/support/lib/util.js:189</p>"},{"location":"reference/modules/appium_support.zip/","title":"Namespace: zip","text":"<p>@appium/support.zip</p>"},{"location":"reference/modules/appium_support.zip/#table-of-contents","title":"Table of contents","text":""},{"location":"reference/modules/appium_support.zip/#interfaces","title":"Interfaces","text":"<ul> <li>ExtractAllOptions</li> <li>ZipCompressionOptions</li> <li>ZipEntry</li> <li>ZipOptions</li> <li>ZipSourceOptions</li> </ul>"},{"location":"reference/modules/appium_support.zip/#functions","title":"Functions","text":"<ul> <li>_extractEntryTo</li> <li>assertValidZip</li> <li>extractAllTo</li> <li>readEntries</li> <li>toArchive</li> <li>toInMemoryZip</li> </ul>"},{"location":"reference/modules/appium_support.zip/#functions_1","title":"Functions","text":""},{"location":"reference/modules/appium_support.zip/#_extractentryto","title":"_extractEntryTo","text":"<p>\u25b8 _extractEntryTo(<code>zipFile</code>, <code>entry</code>, <code>destDir</code>): <code>Promise</code>&lt;<code>undefined</code> | [<code>any</code>, <code>any</code>]&gt;</p> <p>Extract a single zip entry to a directory</p>"},{"location":"reference/modules/appium_support.zip/#parameters","title":"Parameters","text":"Name Type Description <code>zipFile</code> <code>ZipFile</code> The source ZIP stream <code>entry</code> <code>Entry</code> The entry instance <code>destDir</code> <code>string</code> The full path to the destination folder"},{"location":"reference/modules/appium_support.zip/#returns","title":"Returns","text":"<p><code>Promise</code>&lt;<code>undefined</code> | [<code>any</code>, <code>any</code>]&gt;</p>"},{"location":"reference/modules/appium_support.zip/#defined-in","title":"Defined in","text":"<p>packages/support/lib/zip.js:261</p>"},{"location":"reference/modules/appium_support.zip/#assertvalidzip","title":"assertValidZip","text":"<p>\u25b8 assertValidZip(<code>filePath</code>): <code>Promise</code>&lt;<code>boolean</code>&gt;</p> <p>Verifies whether the given file is a valid ZIP archive</p> <p><code>Throws</code></p> <p>If the file does not exist or is not a valid ZIP archive</p>"},{"location":"reference/modules/appium_support.zip/#parameters_1","title":"Parameters","text":"Name Type Description <code>filePath</code> <code>string</code> Full path to the file"},{"location":"reference/modules/appium_support.zip/#returns_1","title":"Returns","text":"<p><code>Promise</code>&lt;<code>boolean</code>&gt;</p>"},{"location":"reference/modules/appium_support.zip/#defined-in_1","title":"Defined in","text":"<p>packages/support/lib/zip.js:454</p>"},{"location":"reference/modules/appium_support.zip/#extractallto","title":"extractAllTo","text":"<p>\u25b8 extractAllTo(<code>zipFilePath</code>, <code>destDir</code>, <code>opts?</code>): <code>Promise</code>&lt;<code>void</code>&gt;</p> <p>Extract zipfile to a directory</p>"},{"location":"reference/modules/appium_support.zip/#parameters_2","title":"Parameters","text":"Name Type Description <code>zipFilePath</code> <code>string</code> The full path to the source ZIP file <code>destDir</code> <code>string</code> The full path to the destination folder <code>opts?</code> <code>ExtractAllOptions</code>"},{"location":"reference/modules/appium_support.zip/#returns_2","title":"Returns","text":"<p><code>Promise</code>&lt;<code>void</code>&gt;</p>"},{"location":"reference/modules/appium_support.zip/#defined-in_2","title":"Defined in","text":"<p>packages/support/lib/zip.js:195</p>"},{"location":"reference/modules/appium_support.zip/#readentries","title":"readEntries","text":"<p>\u25b8 readEntries(<code>zipFilePath</code>, <code>onEntry</code>): <code>Promise</code>&lt;<code>any</code>&gt;</p> <p>Get entries for a zip folder</p>"},{"location":"reference/modules/appium_support.zip/#parameters_3","title":"Parameters","text":"Name Type Description <code>zipFilePath</code> <code>string</code> The full path to the source ZIP file <code>onEntry</code> <code>Function</code> Callback when entry is read. The callback is expected to accept one argument of ZipEntry type. The iteration through the source zip file will bi terminated as soon as the result of this function equals to <code>false</code>."},{"location":"reference/modules/appium_support.zip/#returns_3","title":"Returns","text":"<p><code>Promise</code>&lt;<code>any</code>&gt;</p>"},{"location":"reference/modules/appium_support.zip/#defined-in_3","title":"Defined in","text":"<p>packages/support/lib/zip.js:312</p>"},{"location":"reference/modules/appium_support.zip/#toarchive","title":"toArchive","text":"<p>\u25b8 toArchive(<code>dstPath</code>, <code>src?</code>, <code>opts?</code>): <code>Promise</code>&lt;<code>any</code>&gt;</p> <p>Creates an archive based on the given glob pattern</p> <p><code>Throws</code></p> <p>If there was an error while creating the archive</p>"},{"location":"reference/modules/appium_support.zip/#parameters_4","title":"Parameters","text":"Name Type Description <code>dstPath</code> <code>string</code> The resulting archive path <code>src</code> <code>ZipSourceOptions</code> Source options <code>opts</code> <code>ZipCompressionOptions</code> Compression options"},{"location":"reference/modules/appium_support.zip/#returns_4","title":"Returns","text":"<p><code>Promise</code>&lt;<code>any</code>&gt;</p>"},{"location":"reference/modules/appium_support.zip/#defined-in_4","title":"Defined in","text":"<p>packages/support/lib/zip.js:502</p>"},{"location":"reference/modules/appium_support.zip/#toinmemoryzip","title":"toInMemoryZip","text":"<p>\u25b8 toInMemoryZip(<code>srcPath</code>, <code>opts?</code>): <code>Promise</code>&lt;<code>Buffer</code>&gt;</p> <p>Converts contents of local directory to an in-memory .zip buffer</p> <p><code>Throws</code></p> <p>if there was an error while reading the source or the source is too big</p>"},{"location":"reference/modules/appium_support.zip/#parameters_5","title":"Parameters","text":"Name Type Description <code>srcPath</code> <code>string</code> The full path to the folder or file being zipped <code>opts</code> <code>ZipOptions</code> Zipping options"},{"location":"reference/modules/appium_support.zip/#returns_5","title":"Returns","text":"<p><code>Promise</code>&lt;<code>Buffer</code>&gt;</p> <p>Zipped (and encoded if <code>encodeToBase64</code> is truthy) content of the source path as memory buffer</p>"},{"location":"reference/modules/appium_support.zip/#defined-in_5","title":"Defined in","text":"<p>packages/support/lib/zip.js:363</p>"},{"location":"reference/modules/appium_typedoc_plugin_appium/","title":"Module: @appium/typedoc-plugin-appium","text":"<p>Contains the entry point for  <code>@appium/typedoc-plugin-appium</code></p>"},{"location":"reference/modules/appium_typedoc_plugin_appium/#table-of-contents","title":"Table of contents","text":""},{"location":"reference/modules/appium_typedoc_plugin_appium/#enumerations","title":"Enumerations","text":"<ul> <li>AppiumThemeTemplate</li> </ul>"},{"location":"reference/modules/appium_typedoc_plugin_appium/#classes","title":"Classes","text":"<ul> <li>AppiumPluginLogger</li> <li>AppiumPluginOptionsReader</li> <li>AppiumTheme</li> </ul>"},{"location":"reference/modules/appium_typedoc_plugin_appium/#interfaces","title":"Interfaces","text":"<ul> <li>ConvertResult</li> <li>PostProcessResult</li> </ul>"},{"location":"reference/modules/appium_typedoc_plugin_appium/#type-aliases","title":"Type Aliases","text":"<ul> <li>AppiumPluginOptions</li> <li>AppiumPluginParentLogger</li> <li>TemplateMapping</li> <li>TemplateRenderer</li> </ul>"},{"location":"reference/modules/appium_typedoc_plugin_appium/#variables","title":"Variables","text":"<ul> <li>THEME_NAME</li> <li>declarations</li> </ul>"},{"location":"reference/modules/appium_typedoc_plugin_appium/#functions","title":"Functions","text":"<ul> <li>configureOptions</li> <li>configureTheme</li> <li>convert</li> <li>load</li> <li>postProcess</li> <li>setup</li> </ul>"},{"location":"reference/modules/appium_typedoc_plugin_appium/#type-aliases_1","title":"Type Aliases","text":""},{"location":"reference/modules/appium_typedoc_plugin_appium/#appiumpluginoptions","title":"AppiumPluginOptions","text":"<p>\u01ac AppiumPluginOptions: { [O in keyof OptionDeclarations]: OptionDeclarations[O][\"type\"] extends ParameterType.Boolean ? boolean : OptionDeclarations[O][\"type\"] extends ParameterType.String ? string : unknown }</p>"},{"location":"reference/modules/appium_typedoc_plugin_appium/#defined-in","title":"Defined in","text":"<p>packages/typedoc-plugin-appium/lib/options/index.ts:28</p>"},{"location":"reference/modules/appium_typedoc_plugin_appium/#appiumpluginparentlogger","title":"AppiumPluginParentLogger","text":"<p>\u01ac AppiumPluginParentLogger: (<code>level</code>: <code>LogLevel</code>, <code>message</code>: <code>string</code>, ...<code>args</code>: <code>any</code>[]) =&gt; <code>void</code></p>"},{"location":"reference/modules/appium_typedoc_plugin_appium/#type-declaration","title":"Type declaration","text":"<p>\u25b8 (<code>level</code>, <code>message</code>, <code>...args</code>): <code>void</code></p> <p>Used internally by createChildLogger to pass log messages to the parent.</p>"},{"location":"reference/modules/appium_typedoc_plugin_appium/#parameters","title":"Parameters","text":"Name Type <code>level</code> <code>LogLevel</code> <code>message</code> <code>string</code> <code>...args</code> <code>any</code>[]"},{"location":"reference/modules/appium_typedoc_plugin_appium/#returns","title":"Returns","text":"<p><code>void</code></p>"},{"location":"reference/modules/appium_typedoc_plugin_appium/#defined-in_1","title":"Defined in","text":"<p>packages/typedoc-plugin-appium/lib/logger.ts:173</p>"},{"location":"reference/modules/appium_typedoc_plugin_appium/#templatemapping","title":"TemplateMapping","text":"<p>\u01ac TemplateMapping: <code>Object</code></p> <p>A mapping of <code>ReflectionKind</code> to a template and other metadata.</p> <p>Defined by <code>MarkdownTheme</code>.</p>"},{"location":"reference/modules/appium_typedoc_plugin_appium/#type-declaration_1","title":"Type declaration","text":"Name Type <code>directory</code> <code>string</code> <code>isLeaf</code> <code>boolean</code> <code>kind</code> <code>ReflectionKind</code>[] <code>template</code> (<code>pageEvent</code>: <code>PageEvent</code>&lt;<code>ContainerReflection</code>&gt;) =&gt; <code>string</code>"},{"location":"reference/modules/appium_typedoc_plugin_appium/#defined-in_2","title":"Defined in","text":"<p>packages/typedoc-plugin-appium/lib/theme/index.ts:110</p>"},{"location":"reference/modules/appium_typedoc_plugin_appium/#templaterenderer","title":"TemplateRenderer","text":"<p>\u01ac TemplateRenderer: (<code>pageEvent</code>: <code>PageEvent</code>&lt;<code>ContainerReflection</code>&gt;) =&gt; <code>string</code></p>"},{"location":"reference/modules/appium_typedoc_plugin_appium/#type-declaration_2","title":"Type declaration","text":"<p>\u25b8 (<code>pageEvent</code>): <code>string</code></p> <p>A function which accepts PageEvent as its model and returns the final markdown.</p>"},{"location":"reference/modules/appium_typedoc_plugin_appium/#parameters_1","title":"Parameters","text":"Name Type <code>pageEvent</code> <code>PageEvent</code>&lt;<code>ContainerReflection</code>&gt;"},{"location":"reference/modules/appium_typedoc_plugin_appium/#returns_1","title":"Returns","text":"<p><code>string</code></p>"},{"location":"reference/modules/appium_typedoc_plugin_appium/#defined-in_3","title":"Defined in","text":"<p>packages/typedoc-plugin-appium/lib/theme/index.ts:103</p>"},{"location":"reference/modules/appium_typedoc_plugin_appium/#variables_1","title":"Variables","text":""},{"location":"reference/modules/appium_typedoc_plugin_appium/#theme_name","title":"THEME_NAME","text":"<p>\u2022 <code>Const</code> THEME_NAME: <code>\"appium\"</code></p> <p>Name of the theme; used at definition time</p>"},{"location":"reference/modules/appium_typedoc_plugin_appium/#defined-in_4","title":"Defined in","text":"<p>packages/typedoc-plugin-appium/lib/theme/index.ts:12</p>"},{"location":"reference/modules/appium_typedoc_plugin_appium/#declarations","title":"declarations","text":"<p>\u2022 <code>Const</code> declarations: <code>Object</code></p> <p>List of options for the plugin</p>"},{"location":"reference/modules/appium_typedoc_plugin_appium/#type-declaration_3","title":"Type declaration","text":"Name Type <code>commandsDir</code> { <code>defaultValue</code>: <code>\"commands\"</code> = 'commands'; <code>help</code>: <code>\"(appium) Name of \\\"commands\\\" directory under the TypeDoc output directory. Not a full path\"</code> ; <code>name</code>: <code>\"commandsDir\"</code> = 'commandsDir'; <code>type</code>: <code>String</code> = ParameterType.String } <code>commandsDir.defaultValue</code> <code>\"commands\"</code> <code>commandsDir.help</code> <code>\"(appium) Name of \\\"commands\\\" directory under the TypeDoc output directory. Not a full path\"</code> <code>commandsDir.name</code> <code>\"commandsDir\"</code> <code>commandsDir.type</code> <code>String</code> <code>forceBreadcrumbs</code> { <code>defaultValue</code>: <code>false</code> = false; <code>help</code>: <code>\"(appium) Force breadcrumbs to be shown; overrides \\\"hideBreadcrumbs\\\"\"</code> ; <code>name</code>: <code>\"forceBreadcrumbs\"</code> = 'forceBreadcrumbs'; <code>type</code>: <code>Boolean</code> = ParameterType.Boolean } <code>forceBreadcrumbs.defaultValue</code> <code>false</code> <code>forceBreadcrumbs.help</code> <code>\"(appium) Force breadcrumbs to be shown; overrides \\\"hideBreadcrumbs\\\"\"</code> <code>forceBreadcrumbs.name</code> <code>\"forceBreadcrumbs\"</code> <code>forceBreadcrumbs.type</code> <code>Boolean</code> <code>outputBuiltinCommands</code> { <code>defaultValue</code>: <code>false</code> = false; <code>help</code>: <code>\"(appium) Output builtin commands\"</code> ; <code>name</code>: <code>\"outputBuiltinCommands\"</code> = 'outputBuiltinCommands'; <code>type</code>: <code>Boolean</code> = ParameterType.Boolean } <code>outputBuiltinCommands.defaultValue</code> <code>false</code> <code>outputBuiltinCommands.help</code> <code>\"(appium) Output builtin commands\"</code> <code>outputBuiltinCommands.name</code> <code>\"outputBuiltinCommands\"</code> <code>outputBuiltinCommands.type</code> <code>Boolean</code> <code>outputModules</code> { <code>defaultValue</code>: <code>true</code> = true; <code>help</code>: <code>\"(appium) Output modules APIs in addition to commands. This is needed for complete typing information\"</code> ; <code>name</code>: <code>\"outputModules\"</code> = 'outputModules'; <code>type</code>: <code>Boolean</code> = ParameterType.Boolean } <code>outputModules.defaultValue</code> <code>true</code> <code>outputModules.help</code> <code>\"(appium) Output modules APIs in addition to commands. This is needed for complete typing information\"</code> <code>outputModules.name</code> <code>\"outputModules\"</code> <code>outputModules.type</code> <code>Boolean</code>"},{"location":"reference/modules/appium_typedoc_plugin_appium/#defined-in_5","title":"Defined in","text":"<p>packages/typedoc-plugin-appium/lib/options/declarations.ts:8</p>"},{"location":"reference/modules/appium_typedoc_plugin_appium/#functions_1","title":"Functions","text":""},{"location":"reference/modules/appium_typedoc_plugin_appium/#configureoptions","title":"configureOptions","text":"<p>\u25b8 configureOptions(<code>app</code>): <code>Application</code></p> <p>Configures how this plugin handles TypeDoc options.</p>"},{"location":"reference/modules/appium_typedoc_plugin_appium/#parameters_2","title":"Parameters","text":"Name Type Description <code>app</code> <code>Application</code> TypeDoc Application"},{"location":"reference/modules/appium_typedoc_plugin_appium/#returns_2","title":"Returns","text":"<p><code>Application</code></p>"},{"location":"reference/modules/appium_typedoc_plugin_appium/#defined-in_6","title":"Defined in","text":"<p>packages/typedoc-plugin-appium/lib/options/index.ts:13</p>"},{"location":"reference/modules/appium_typedoc_plugin_appium/#configuretheme","title":"configureTheme","text":"<p>\u25b8 configureTheme(<code>app</code>): <code>Application</code></p> <p>Registers <code>AppiumTheme</code> with TypeDoc.</p>"},{"location":"reference/modules/appium_typedoc_plugin_appium/#parameters_3","title":"Parameters","text":"Name Type Description <code>app</code> <code>Application</code> TypeDoc application"},{"location":"reference/modules/appium_typedoc_plugin_appium/#returns_3","title":"Returns","text":"<p><code>Application</code></p>"},{"location":"reference/modules/appium_typedoc_plugin_appium/#defined-in_7","title":"Defined in","text":"<p>packages/typedoc-plugin-appium/lib/theme/index.ts:123</p>"},{"location":"reference/modules/appium_typedoc_plugin_appium/#convert","title":"convert","text":"<p>\u25b8 convert(<code>app</code>): <code>Promise</code>&lt;<code>ConvertResult</code>&gt;</p> <p>Finds commands and creates new reflections for them, adding them to the project.</p> <p>Resolves after Converter.EVENT_RESOLVE_BEGIN emits and when it's finished.</p>"},{"location":"reference/modules/appium_typedoc_plugin_appium/#parameters_4","title":"Parameters","text":"Name Type Description <code>app</code> <code>Application</code> Typedoc Application"},{"location":"reference/modules/appium_typedoc_plugin_appium/#returns_4","title":"Returns","text":"<p><code>Promise</code>&lt;<code>ConvertResult</code>&gt;</p> <p>A <code>ConvertResult</code> receipt from the conversion</p>"},{"location":"reference/modules/appium_typedoc_plugin_appium/#defined-in_8","title":"Defined in","text":"<p>packages/typedoc-plugin-appium/lib/index.ts:44</p>"},{"location":"reference/modules/appium_typedoc_plugin_appium/#load","title":"load","text":"<p>\u25b8 load(<code>app</code>): <code>Promise</code>&lt;[<code>PromiseSettledResult</code>&lt;<code>ConvertResult</code>&gt;, <code>PromiseSettledResult</code>&lt;<code>PostProcessResult</code>&gt;]&gt;</p> <p>Loads the Appium TypeDoc plugin.</p>"},{"location":"reference/modules/appium_typedoc_plugin_appium/#parameters_5","title":"Parameters","text":"Name Type Description <code>app</code> <code>Application</code> TypeDoc Application"},{"location":"reference/modules/appium_typedoc_plugin_appium/#returns_5","title":"Returns","text":"<p><code>Promise</code>&lt;[<code>PromiseSettledResult</code>&lt;<code>ConvertResult</code>&gt;, <code>PromiseSettledResult</code>&lt;<code>PostProcessResult</code>&gt;]&gt;</p> <p>Unused by TypeDoc, but can be consumed programmatically.</p>"},{"location":"reference/modules/appium_typedoc_plugin_appium/#defined-in_9","title":"Defined in","text":"<p>packages/typedoc-plugin-appium/lib/index.ts:20</p>"},{"location":"reference/modules/appium_typedoc_plugin_appium/#postprocess","title":"postProcess","text":"<p>\u25b8 postProcess(<code>app</code>): <code>Promise</code>&lt;<code>PostProcessResult</code>&gt;</p> <p>Optionally omits the default TypeDoc reflections from the project based on the <code>outputModules</code> option.</p> <p>Resolves after Converter.EVENT_RESOLVE_END emits and when it's finished.</p>"},{"location":"reference/modules/appium_typedoc_plugin_appium/#parameters_6","title":"Parameters","text":"Name Type Description <code>app</code> <code>Application</code> Typedoc application"},{"location":"reference/modules/appium_typedoc_plugin_appium/#returns_6","title":"Returns","text":"<p><code>Promise</code>&lt;<code>PostProcessResult</code>&gt;</p> <p>Typedoc <code>Context</code> at the time of the Converter.EVENT_RESOLVE_END event</p>"},{"location":"reference/modules/appium_typedoc_plugin_appium/#defined-in_10","title":"Defined in","text":"<p>packages/typedoc-plugin-appium/lib/index.ts:100</p>"},{"location":"reference/modules/appium_typedoc_plugin_appium/#setup","title":"setup","text":"<p>\u25b8 setup(<code>app</code>): <code>Application</code></p> <p>Registers theme and options, then monkeys with the options</p>"},{"location":"reference/modules/appium_typedoc_plugin_appium/#parameters_7","title":"Parameters","text":"Name Type <code>app</code> <code>Application</code>"},{"location":"reference/modules/appium_typedoc_plugin_appium/#returns_7","title":"Returns","text":"<p><code>Application</code></p>"},{"location":"reference/modules/appium_typedoc_plugin_appium/#defined-in_11","title":"Defined in","text":"<p>packages/typedoc-plugin-appium/lib/index.ts:35</p>"},{"location":"reference/modules/appium_types/","title":"Module: @appium/types","text":""},{"location":"reference/modules/appium_types/#table-of-contents","title":"Table of contents","text":""},{"location":"reference/modules/appium_types/#actions","title":"Actions","text":"<ul> <li>Key</li> <li>ActionSequence</li> <li>KeyAction</li> <li>KeyActionSequence</li> <li>KeyDownAction</li> <li>KeyUpAction</li> <li>NullAction</li> <li>NullActionSequence</li> <li>PauseAction</li> <li>PointerAction</li> <li>PointerActionSequence</li> <li>PointerDownAction</li> <li>PointerMoveAction</li> <li>PointerParameters</li> <li>PointerUpAction</li> </ul>"},{"location":"reference/modules/appium_types/#interfaces","title":"Interfaces","text":"<ul> <li>AppiumConfiguration</li> <li>AppiumLogger</li> <li>AppiumServerExtension</li> <li>AppiumServerSocket</li> <li>Constraint</li> <li>Cookie</li> <li>Core</li> <li>Credential</li> <li>DefaultCapabilitiesConfig</li> <li>DeviceSettings</li> <li>Driver</li> <li>DriverConfig</li> <li>DriverHelpers</li> <li>DriverStatic</li> <li>Element</li> <li>EventHistory</li> <li>EventHistoryCommand</li> <li>ExecuteMethodDef</li> <li>ExternalDriver</li> <li>ExtraDriverOpts</li> <li>IEventCommands</li> <li>IExecuteCommands</li> <li>IFindCommands</li> <li>ILogCommands</li> <li>ISessionCommands</li> <li>ISettingsCommands</li> <li>ITimeoutCommands</li> <li>Location</li> <li>LogDef</li> <li>LogFilterRegex</li> <li>LogFilterText</li> <li>MethodDef</li> <li>MultiSessionData</li> <li>NewWindow</li> <li>NodeconfigConfig</li> <li>PayloadParams</li> <li>Plugin</li> <li>PluginConfig</li> <li>PluginStatic</li> <li>Rect</li> <li>Rotation</li> <li>ServerConfig</li> <li>SessionHandler</li> <li>StandardCapabilities</li> <li>StartScreenRecordOptions</li> <li>StopScreenRecordOptions</li> </ul>"},{"location":"reference/modules/appium_types/#type-aliases","title":"Type Aliases","text":"<ul> <li>AddressConfig</li> <li>AllowCorsConfig</li> <li>AllowInsecureConfig</li> <li>AnyCase</li> <li>AppiumConfig</li> <li>AppiumLoggerLevel</li> <li>AppiumLoggerPrefix</li> <li>AppiumServer</li> <li>BaseCapabilities</li> <li>BaseDriverCapConstraints</li> <li>BaseNSCapabilities</li> <li>BasePathConfig</li> <li>CallbackAddressConfig</li> <li>CallbackPortConfig</li> <li>Capabilities</li> <li>CapsToNSCaps</li> <li>Class</li> <li>ConstraintToCap</li> <li>Constraints</li> <li>ConstraintsToCaps</li> <li>DebugLogSpacingConfig</li> <li>DenyInsecureConfig</li> <li>DriverCaps</li> <li>DriverClass</li> <li>DriverCommand</li> <li>DriverCommands</li> <li>DriverData</li> <li>DriverOpts</li> <li>DriverType</li> <li>ExecuteMethodMap</li> <li>ExtensionType</li> <li>HTTPMethod</li> <li>KeepAliveTimeoutConfig</li> <li>LocalTimezoneConfig</li> <li>LogConfig</li> <li>LogDefRecord</li> <li>LogFilter</li> <li>LogFiltersConfig</li> <li>LogLevelConfig</li> <li>LogNoColorsConfig</li> <li>LogTimestampConfig</li> <li>LongStacktraceConfig</li> <li>MethodMap</li> <li>NSCapabilities</li> <li>NSDriverCaps</li> <li>NamespacedString</li> <li>NewWindowType</li> <li>NextPluginCallback</li> <li>NoPermsCheckConfig</li> <li>NormalizedAppiumConfig</li> <li>NormalizedServerConfig</li> <li>PluginClass</li> <li>PluginCommand</li> <li>PluginType</li> <li>PortConfig</li> <li>Position</li> <li>RelaxedSecurityConfig</li> <li>RouteMatcher</li> <li>ServerArgs</li> <li>SessionOverrideConfig</li> <li>SettingsUpdateListener</li> <li>SingularSessionData</li> <li>Size</li> <li>StrictCapsConfig</li> <li>StringRecord</li> <li>TmpConfig</li> <li>TraceDirConfig</li> <li>UpdateServerCallback</li> <li>UseDriversConfig</li> <li>UsePluginsConfig</li> <li>W3CCapabilities</li> <li>W3CDriverCaps</li> <li>W3C_APPIUM_PREFIX</li> <li>WebhookConfig</li> </ul>"},{"location":"reference/modules/appium_types/#variables","title":"Variables","text":"<ul> <li>BASE_DESIRED_CAP_CONSTRAINTS</li> </ul>"},{"location":"reference/modules/appium_types/#actions_1","title":"Actions","text":"<p>\u2022 Key: <code>Object</code></p>"},{"location":"reference/modules/appium_types/#defined-in","title":"Defined in","text":"<p>packages/types/lib/action.ts:127</p>"},{"location":"reference/modules/appium_types/#actionsequence","title":"ActionSequence","text":"<p>\u01ac ActionSequence: <code>NullActionSequence</code> | <code>KeyActionSequence</code> | <code>PointerActionSequence</code></p>"},{"location":"reference/modules/appium_types/#defined-in_1","title":"Defined in","text":"<p>packages/types/lib/action.ts:119</p>"},{"location":"reference/modules/appium_types/#keyaction","title":"KeyAction","text":"<p>\u01ac KeyAction: <code>PauseAction</code> | <code>KeyDownAction</code> | <code>KeyUpAction</code></p>"},{"location":"reference/modules/appium_types/#defined-in_2","title":"Defined in","text":"<p>packages/types/lib/action.ts:70</p>"},{"location":"reference/modules/appium_types/#keyactionsequence","title":"KeyActionSequence","text":"<p>\u01ac KeyActionSequence: <code>Object</code></p>"},{"location":"reference/modules/appium_types/#type-declaration","title":"Type declaration","text":"Name Type <code>actions</code> <code>KeyAction</code>[] <code>id</code> <code>string</code> <code>type</code> <code>\"key\"</code>"},{"location":"reference/modules/appium_types/#defined-in_3","title":"Defined in","text":"<p>packages/types/lib/action.ts:93</p>"},{"location":"reference/modules/appium_types/#keydownaction","title":"KeyDownAction","text":"<p>\u01ac KeyDownAction: <code>Object</code></p>"},{"location":"reference/modules/appium_types/#type-declaration_1","title":"Type declaration","text":"Name Type <code>type</code> <code>\"keyDown\"</code> <code>value</code> <code>Key</code> | <code>string</code>"},{"location":"reference/modules/appium_types/#defined-in_4","title":"Defined in","text":"<p>packages/types/lib/action.ts:22</p>"},{"location":"reference/modules/appium_types/#keyupaction","title":"KeyUpAction","text":"<p>\u01ac KeyUpAction: <code>Object</code></p>"},{"location":"reference/modules/appium_types/#type-declaration_2","title":"Type declaration","text":"Name Type <code>type</code> <code>\"keyUp\"</code> <code>value</code> <code>Key</code> | <code>string</code>"},{"location":"reference/modules/appium_types/#defined-in_5","title":"Defined in","text":"<p>packages/types/lib/action.ts:30</p>"},{"location":"reference/modules/appium_types/#nullaction","title":"NullAction","text":"<p>\u01ac NullAction: <code>PauseAction</code></p>"},{"location":"reference/modules/appium_types/#defined-in_6","title":"Defined in","text":"<p>packages/types/lib/action.ts:65</p>"},{"location":"reference/modules/appium_types/#nullactionsequence","title":"NullActionSequence","text":"<p>\u01ac NullActionSequence: <code>Object</code></p>"},{"location":"reference/modules/appium_types/#type-declaration_3","title":"Type declaration","text":"Name Type <code>actions</code> <code>NullAction</code>[] <code>id</code> <code>string</code> <code>type</code> <code>\"none\"</code>"},{"location":"reference/modules/appium_types/#defined-in_7","title":"Defined in","text":"<p>packages/types/lib/action.ts:84</p>"},{"location":"reference/modules/appium_types/#pauseaction","title":"PauseAction","text":"<p>\u01ac PauseAction: <code>Object</code></p>"},{"location":"reference/modules/appium_types/#type-declaration_4","title":"Type declaration","text":"Name Type <code>duration</code> <code>number</code> <code>type</code> <code>\"pause\"</code>"},{"location":"reference/modules/appium_types/#defined-in_8","title":"Defined in","text":"<p>packages/types/lib/action.ts:14</p>"},{"location":"reference/modules/appium_types/#pointeraction","title":"PointerAction","text":"<p>\u01ac PointerAction: <code>PauseAction</code> | <code>PointerMoveAction</code> | <code>PointerUpAction</code> | <code>PointerDownAction</code></p>"},{"location":"reference/modules/appium_types/#defined-in_9","title":"Defined in","text":"<p>packages/types/lib/action.ts:75</p>"},{"location":"reference/modules/appium_types/#pointeractionsequence","title":"PointerActionSequence","text":"<p>\u01ac PointerActionSequence: <code>Object</code></p>"},{"location":"reference/modules/appium_types/#type-declaration_5","title":"Type declaration","text":"Name Type <code>actions</code> <code>PointerAction</code>[] <code>id</code> <code>string</code> <code>parameters?</code> <code>PointerParameters</code> <code>type</code> <code>\"pointer\"</code>"},{"location":"reference/modules/appium_types/#defined-in_10","title":"Defined in","text":"<p>packages/types/lib/action.ts:109</p>"},{"location":"reference/modules/appium_types/#pointerdownaction","title":"PointerDownAction","text":"<p>\u01ac PointerDownAction: <code>Object</code></p>"},{"location":"reference/modules/appium_types/#type-declaration_6","title":"Type declaration","text":"Name Type <code>button</code> <code>number</code> <code>type</code> <code>\"pointerDown\"</code>"},{"location":"reference/modules/appium_types/#defined-in_11","title":"Defined in","text":"<p>packages/types/lib/action.ts:57</p>"},{"location":"reference/modules/appium_types/#pointermoveaction","title":"PointerMoveAction","text":"<p>\u01ac PointerMoveAction: <code>Object</code></p>"},{"location":"reference/modules/appium_types/#type-declaration_7","title":"Type declaration","text":"Name Type <code>duration?</code> <code>number</code> <code>origin?</code> <code>\"viewport\"</code> | <code>\"pointer\"</code> | <code>Element</code> <code>type</code> <code>\"pointerMove\"</code> <code>x</code> <code>number</code> <code>y</code> <code>number</code>"},{"location":"reference/modules/appium_types/#defined-in_12","title":"Defined in","text":"<p>packages/types/lib/action.ts:38</p>"},{"location":"reference/modules/appium_types/#pointerparameters","title":"PointerParameters","text":"<p>\u01ac PointerParameters: <code>Object</code></p>"},{"location":"reference/modules/appium_types/#type-declaration_8","title":"Type declaration","text":"Name Type <code>pointerType</code> <code>\"mouse\"</code> | <code>\"pen\"</code> | <code>\"touch\"</code>"},{"location":"reference/modules/appium_types/#defined-in_13","title":"Defined in","text":"<p>packages/types/lib/action.ts:102</p>"},{"location":"reference/modules/appium_types/#pointerupaction","title":"PointerUpAction","text":"<p>\u01ac PointerUpAction: <code>Object</code></p>"},{"location":"reference/modules/appium_types/#type-declaration_9","title":"Type declaration","text":"Name Type <code>button</code> <code>number</code> <code>type</code> <code>\"pointerUp\"</code>"},{"location":"reference/modules/appium_types/#defined-in_14","title":"Defined in","text":"<p>packages/types/lib/action.ts:49</p>"},{"location":"reference/modules/appium_types/#type-aliases_1","title":"Type Aliases","text":""},{"location":"reference/modules/appium_types/#addressconfig","title":"AddressConfig","text":"<p>\u01ac AddressConfig: <code>string</code></p> <p>IP address to listen on</p>"},{"location":"reference/modules/appium_types/#defined-in_15","title":"Defined in","text":"<p>packages/types/lib/appium-config.ts:11</p>"},{"location":"reference/modules/appium_types/#allowcorsconfig","title":"AllowCorsConfig","text":"<p>\u01ac AllowCorsConfig: <code>boolean</code></p> <p>Whether the Appium server should allow web browser connections from any host</p>"},{"location":"reference/modules/appium_types/#defined-in_16","title":"Defined in","text":"<p>packages/types/lib/appium-config.ts:15</p>"},{"location":"reference/modules/appium_types/#allowinsecureconfig","title":"AllowInsecureConfig","text":"<p>\u01ac AllowInsecureConfig: <code>string</code>[]</p> <p>Set which insecure features are allowed to run in this server's sessions. Features are defined on a driver level; see documentation for more details. Note that features defined via \"deny-insecure\" will be disabled, even if also listed here. If string, a path to a text file containing policy or a comma-delimited list.</p>"},{"location":"reference/modules/appium_types/#defined-in_17","title":"Defined in","text":"<p>packages/types/lib/appium-config.ts:19</p>"},{"location":"reference/modules/appium_types/#anycase","title":"AnyCase","text":"<p>\u01ac AnyCase&lt;<code>T</code>&gt;: <code>string</code> extends <code>T</code> ? <code>string</code> : <code>T</code> extends `${infer F1}${infer F2}${infer R}` ? `${Uppercase&lt;F1&gt; | Lowercase&lt;F1&gt;}${Uppercase&lt;F2&gt; | Lowercase&lt;F2&gt;}${AnyCase&lt;R&gt;}` : <code>T</code> extends `${infer F}${infer R}` ? `${Uppercase&lt;F&gt; | Lowercase&lt;F&gt;}${AnyCase&lt;R&gt;}` : <code>\"\"</code></p> <p>Given <code>string</code> <code>T</code>, this is a case-insensitive version of <code>T</code>.</p>"},{"location":"reference/modules/appium_types/#type-parameters","title":"Type parameters","text":"Name Type <code>T</code> extends <code>string</code>"},{"location":"reference/modules/appium_types/#defined-in_18","title":"Defined in","text":"<p>packages/types/lib/capabilities.ts:66</p>"},{"location":"reference/modules/appium_types/#appiumconfig","title":"AppiumConfig","text":"<p>\u01ac AppiumConfig: <code>Partial</code>&lt;<code>AppiumConfiguration</code>&gt;</p> <p>The Appium configuration as it would be in a user-provided configuration file.</p>"},{"location":"reference/modules/appium_types/#defined-in_19","title":"Defined in","text":"<p>packages/types/lib/config.ts:7</p>"},{"location":"reference/modules/appium_types/#appiumloggerlevel","title":"AppiumLoggerLevel","text":"<p>\u01ac AppiumLoggerLevel: <code>\"silly\"</code> | <code>\"verbose\"</code> | <code>\"debug\"</code> | <code>\"info\"</code> | <code>\"http\"</code> | <code>\"warn\"</code> | <code>\"error\"</code></p> <p>Possible \"log levels\" for <code>AppiumLogger</code>.</p> <p>Extracted from <code>npmlog</code>.</p>"},{"location":"reference/modules/appium_types/#defined-in_20","title":"Defined in","text":"<p>packages/types/lib/index.ts:37</p>"},{"location":"reference/modules/appium_types/#appiumloggerprefix","title":"AppiumLoggerPrefix","text":"<p>\u01ac AppiumLoggerPrefix: <code>string</code> | () =&gt; <code>string</code></p> <p>A log prefix for <code>AppiumLogger</code></p> <p>If a function, the function will return the prefix.  Log messages will be prefixed with this value.</p>"},{"location":"reference/modules/appium_types/#defined-in_21","title":"Defined in","text":"<p>packages/types/lib/index.ts:30</p>"},{"location":"reference/modules/appium_types/#appiumserver","title":"AppiumServer","text":"<p>\u01ac AppiumServer: <code>Omit</code>&lt;<code>Server</code>, <code>\"close\"</code>&gt; &amp; <code>AppiumServerExtension</code></p> <p>Appium's slightly-modified Server http.Server.</p>"},{"location":"reference/modules/appium_types/#defined-in_22","title":"Defined in","text":"<p>packages/types/lib/index.ts:68</p>"},{"location":"reference/modules/appium_types/#basecapabilities","title":"BaseCapabilities","text":"<p>\u01ac BaseCapabilities: <code>ConstraintsToCaps</code>&lt;<code>BaseDriverCapConstraints</code>&gt;</p> <p>Base capabilities as derived from <code>BaseDriverCapConstraints</code>.</p>"},{"location":"reference/modules/appium_types/#defined-in_23","title":"Defined in","text":"<p>packages/types/lib/capabilities.ts:12</p>"},{"location":"reference/modules/appium_types/#basedrivercapconstraints","title":"BaseDriverCapConstraints","text":"<p>\u01ac BaseDriverCapConstraints&lt;&gt;: typeof <code>BASE_DESIRED_CAP_CONSTRAINTS</code></p>"},{"location":"reference/modules/appium_types/#defined-in_24","title":"Defined in","text":"<p>packages/types/lib/constraints.js:57</p>"},{"location":"reference/modules/appium_types/#basenscapabilities","title":"BaseNSCapabilities","text":"<p>\u01ac BaseNSCapabilities: <code>CapsToNSCaps</code>&lt;<code>ConstraintsToCaps</code>&lt;<code>BaseDriverCapConstraints</code>&gt;&gt;</p> <p>Like <code>BaseCapabilities</code>, except all Appium-specific keys are namespaced.</p>"},{"location":"reference/modules/appium_types/#defined-in_25","title":"Defined in","text":"<p>packages/types/lib/capabilities.ts:17</p>"},{"location":"reference/modules/appium_types/#basepathconfig","title":"BasePathConfig","text":"<p>\u01ac BasePathConfig: <code>string</code></p> <p>Base path to use as the prefix for all webdriver routes running on the server</p>"},{"location":"reference/modules/appium_types/#defined-in_26","title":"Defined in","text":"<p>packages/types/lib/appium-config.ts:23</p>"},{"location":"reference/modules/appium_types/#callbackaddressconfig","title":"CallbackAddressConfig","text":"<p>\u01ac CallbackAddressConfig: <code>string</code></p> <p>Callback IP address (default: same as \"address\")</p>"},{"location":"reference/modules/appium_types/#defined-in_27","title":"Defined in","text":"<p>packages/types/lib/appium-config.ts:27</p>"},{"location":"reference/modules/appium_types/#callbackportconfig","title":"CallbackPortConfig","text":"<p>\u01ac CallbackPortConfig: <code>number</code></p> <p>Callback port (default: same as \"port\")</p>"},{"location":"reference/modules/appium_types/#defined-in_28","title":"Defined in","text":"<p>packages/types/lib/appium-config.ts:31</p>"},{"location":"reference/modules/appium_types/#capabilities","title":"Capabilities","text":"<p>\u01ac Capabilities&lt;<code>C</code>, <code>Extra</code>&gt;: <code>Partial</code>&lt;<code>ConstraintsToCaps</code>&lt;<code>C</code>&gt; &amp; <code>Extra</code>&gt;</p> <p>Given some constraints, return the entire set of supported capabilities it supports (including whatever is in its desired caps).</p> <p>Does not contain <code>BaseCapabilities</code>; see <code>DriverCaps</code>.</p>"},{"location":"reference/modules/appium_types/#type-parameters_1","title":"Type parameters","text":"Name Type <code>C</code> extends <code>Constraints</code> = <code>BaseDriverCapConstraints</code> <code>Extra</code> extends <code>StringRecord</code> | <code>void</code> = <code>void</code>"},{"location":"reference/modules/appium_types/#defined-in_29","title":"Defined in","text":"<p>packages/types/lib/capabilities.ts:102</p>"},{"location":"reference/modules/appium_types/#capstonscaps","title":"CapsToNSCaps","text":"<p>\u01ac CapsToNSCaps&lt;<code>T</code>, <code>NS</code>&gt;: { [K in keyof T as K extends keyof StandardCapabilities ? K : NamespacedString&lt;K &amp; string, NS&gt;]: T[K] }</p> <p>Given <code>StringRecord</code> <code>T</code> and namespace string <code>NS</code>, a type with the key names prefixed by <code>${NS}:</code> except for standard capabilities.  <code>NS</code> defaults to <code>appium</code>.</p> <p>If <code>T</code> is already namespaced, well, it'll get double-namespaced.</p>"},{"location":"reference/modules/appium_types/#type-parameters_2","title":"Type parameters","text":"Name Type <code>T</code> extends <code>StringRecord</code> <code>NS</code> extends <code>string</code> = <code>W3C_APPIUM_PREFIX</code>"},{"location":"reference/modules/appium_types/#defined-in_30","title":"Defined in","text":"<p>packages/types/lib/capabilities.ts:79</p>"},{"location":"reference/modules/appium_types/#class","title":"Class","text":"<p>\u01ac Class&lt;<code>Proto</code>, <code>StaticMembers</code>, <code>Args</code>&gt;: <code>_Class</code>&lt;<code>Proto</code>, <code>Args</code>&gt; &amp; <code>StaticMembers</code></p> <p>Wraps _Class <code>type-fest</code>'s <code>Class</code> to include static members.</p>"},{"location":"reference/modules/appium_types/#type-parameters_3","title":"Type parameters","text":"Name Type <code>Proto</code> <code>Proto</code> <code>StaticMembers</code> extends <code>object</code> = {} <code>Args</code> extends <code>unknown</code>[] = <code>any</code>[]"},{"location":"reference/modules/appium_types/#defined-in_31","title":"Defined in","text":"<p>packages/types/lib/index.ts:154</p>"},{"location":"reference/modules/appium_types/#constrainttocap","title":"ConstraintToCap","text":"<p>\u01ac ConstraintToCap&lt;<code>C</code>&gt;: <code>C</code>[<code>\"presence\"</code>] extends <code>true</code> | { <code>allowEmpty</code>: <code>boolean</code>  } ? <code>ConstraintToCapKind</code>&lt;<code>C</code>&gt; : <code>ConstraintToCapKind</code>&lt;<code>C</code>&gt; | <code>undefined</code></p> <p>Given <code>Constraint</code> <code>C</code>, determine if it is required or optional.</p> <p>In practice, all capabilities are considered optional per types, but various errors might be thrown if some are not present.</p>"},{"location":"reference/modules/appium_types/#type-parameters_4","title":"Type parameters","text":"Name Type <code>C</code> extends <code>Constraint</code>"},{"location":"reference/modules/appium_types/#defined-in_32","title":"Defined in","text":"<p>packages/types/lib/capabilities.ts:57</p>"},{"location":"reference/modules/appium_types/#constraints","title":"Constraints","text":"<p>\u01ac Constraints: <code>Readonly</code>&lt;<code>Record</code>&lt;<code>string</code>, <code>Constraint</code>&gt;&gt;</p>"},{"location":"reference/modules/appium_types/#defined-in_33","title":"Defined in","text":"<p>packages/types/lib/driver.ts:467</p>"},{"location":"reference/modules/appium_types/#constraintstocaps","title":"ConstraintsToCaps","text":"<p>\u01ac ConstraintsToCaps&lt;<code>C</code>&gt;: { -readonly [K in keyof C]: ConstraintToCap&lt;C[K]&gt; }</p> <p>Converts <code>Constraint</code> <code>C</code> to a <code>Capabilities</code> object.</p>"},{"location":"reference/modules/appium_types/#type-parameters_5","title":"Type parameters","text":"Name Type <code>C</code> extends <code>Constraints</code>"},{"location":"reference/modules/appium_types/#defined-in_34","title":"Defined in","text":"<p>packages/types/lib/capabilities.ts:93</p>"},{"location":"reference/modules/appium_types/#debuglogspacingconfig","title":"DebugLogSpacingConfig","text":"<p>\u01ac DebugLogSpacingConfig: <code>boolean</code></p> <p>Add exaggerated spacing in logs to help with visual inspection</p>"},{"location":"reference/modules/appium_types/#defined-in_35","title":"Defined in","text":"<p>packages/types/lib/appium-config.ts:35</p>"},{"location":"reference/modules/appium_types/#denyinsecureconfig","title":"DenyInsecureConfig","text":"<p>\u01ac DenyInsecureConfig: <code>string</code>[]</p> <p>Set which insecure features are not allowed to run in this server's sessions. Features are defined on a driver level; see documentation for more details. Features listed here will not be enabled even if also listed in \"allow-insecure\", and even if \"relaxed-security\" is enabled. If string, a path to a text file containing policy or a comma-delimited list.</p>"},{"location":"reference/modules/appium_types/#defined-in_36","title":"Defined in","text":"<p>packages/types/lib/appium-config.ts:39</p>"},{"location":"reference/modules/appium_types/#drivercaps","title":"DriverCaps","text":"<p>\u01ac DriverCaps&lt;<code>C</code>, <code>Extra</code>&gt;: <code>Capabilities</code>&lt;<code>BaseDriverCapConstraints</code> &amp; <code>C</code>, <code>Extra</code>&gt;</p> <p>Capabilities for drivers extending <code>BaseDriver</code>.</p> <p>Includes <code>BaseCapabilities</code>.</p> <p><code>Example</code></p> <pre><code>class MyDriver extends BaseDriver {\nasync createSession (w3ccaps: W3CDriverCaps&lt;MyDriverConstraints&gt;, ...args: any[]) {\nconst [\nsessionId: string,\ncaps: DriverCaps&lt;MyDriverConstraints&gt;\n] = await super.createSession(w3ccaps, ...args);\n// ...\n}\n}\n</code></pre>"},{"location":"reference/modules/appium_types/#type-parameters_6","title":"Type parameters","text":"Name Type <code>C</code> extends <code>Constraints</code> <code>Extra</code> extends <code>StringRecord</code> | <code>void</code> = <code>void</code>"},{"location":"reference/modules/appium_types/#defined-in_37","title":"Defined in","text":"<p>packages/types/lib/capabilities.ts:150</p>"},{"location":"reference/modules/appium_types/#driverclass","title":"DriverClass","text":"<p>\u01ac DriverClass&lt;<code>D</code>&gt;: <code>Class</code>&lt;<code>D</code>, <code>DriverStatic</code>&lt;<code>D</code>&gt;, [] | [<code>Partial</code>&lt;<code>ServerArgs</code>&gt;] | [<code>Partial</code>&lt;<code>ServerArgs</code>&gt;, <code>boolean</code>]&gt;</p> <p>Represents a driver class, which is used internally by Appium.</p> <p>This is likely unusable by external consumers, but YMMV!</p>"},{"location":"reference/modules/appium_types/#type-parameters_7","title":"Type parameters","text":"Name Type <code>D</code> extends <code>Driver</code> = <code>ExternalDriver</code>"},{"location":"reference/modules/appium_types/#defined-in_38","title":"Defined in","text":"<p>packages/types/lib/driver.ts:2220</p>"},{"location":"reference/modules/appium_types/#drivercommand","title":"DriverCommand","text":"<p>\u01ac DriverCommand&lt;<code>TArgs</code>, <code>TRetval</code>&gt;: (...<code>args</code>: <code>TArgs</code>[]) =&gt; <code>Promise</code>&lt;<code>TRetval</code>&gt;</p>"},{"location":"reference/modules/appium_types/#type-parameters_8","title":"Type parameters","text":"Name Type <code>TArgs</code> <code>any</code> <code>TRetval</code> <code>unknown</code>"},{"location":"reference/modules/appium_types/#type-declaration_10","title":"Type declaration","text":"<p>\u25b8 (<code>...args</code>): <code>Promise</code>&lt;<code>TRetval</code>&gt;</p> <p>An instance method of a driver class, whose name may be referenced by <code>command</code>, and serves as an Appium command.</p> <p>Note that this signature differs from a <code>PluginCommand</code>.</p>"},{"location":"reference/modules/appium_types/#parameters","title":"Parameters","text":"Name Type <code>...args</code> <code>TArgs</code>[]"},{"location":"reference/modules/appium_types/#returns","title":"Returns","text":"<p><code>Promise</code>&lt;<code>TRetval</code>&gt;</p>"},{"location":"reference/modules/appium_types/#defined-in_39","title":"Defined in","text":"<p>packages/types/lib/index.ts:124</p>"},{"location":"reference/modules/appium_types/#drivercommands","title":"DriverCommands","text":"<p>\u01ac DriverCommands&lt;<code>TArgs</code>, <code>TReturn</code>&gt;: <code>Record</code>&lt;<code>string</code>, <code>DriverCommand</code>&lt;<code>TArgs</code>, <code>TReturn</code>&gt;&gt;</p>"},{"location":"reference/modules/appium_types/#type-parameters_9","title":"Type parameters","text":"Name Type <code>TArgs</code> <code>any</code> <code>TReturn</code> <code>unknown</code>"},{"location":"reference/modules/appium_types/#defined-in_40","title":"Defined in","text":"<p>packages/types/lib/driver.ts:2241</p>"},{"location":"reference/modules/appium_types/#driverdata","title":"DriverData","text":"<p>\u01ac DriverData: <code>Record</code>&lt;<code>string</code>, <code>unknown</code>&gt;</p> <p>Custom session data for a driver.</p>"},{"location":"reference/modules/appium_types/#defined-in_41","title":"Defined in","text":"<p>packages/types/lib/driver.ts:441</p>"},{"location":"reference/modules/appium_types/#driveropts","title":"DriverOpts","text":"<p>\u01ac DriverOpts&lt;<code>C</code>&gt;: <code>ServerArgs</code> &amp; <code>ExtraDriverOpts</code> &amp; <code>Partial</code>&lt;<code>ConstraintsToCaps</code>&lt;<code>C</code>&gt;&gt;</p> <p>Options as passed into a driver constructor, which is just a union of <code>ServerArgs</code> and <code>Capabilities</code>.</p> <p>The combination happens within Appium prior to calling the constructor.</p>"},{"location":"reference/modules/appium_types/#type-parameters_10","title":"Type parameters","text":"Name Type <code>C</code> extends <code>Constraints</code> = <code>BaseDriverCapConstraints</code>"},{"location":"reference/modules/appium_types/#defined-in_42","title":"Defined in","text":"<p>packages/types/lib/driver.ts:2235</p>"},{"location":"reference/modules/appium_types/#drivertype","title":"DriverType","text":"<p>\u01ac DriverType: <code>\"driver\"</code></p> <p>The string referring to a \"driver\"-type extension</p>"},{"location":"reference/modules/appium_types/#defined-in_43","title":"Defined in","text":"<p>packages/types/lib/index.ts:163</p>"},{"location":"reference/modules/appium_types/#executemethodmap","title":"ExecuteMethodMap","text":"<p>\u01ac ExecuteMethodMap&lt;<code>Ext</code>&gt;: <code>Readonly</code>&lt;<code>Record</code>&lt;<code>string</code>, <code>Readonly</code>&lt;<code>ExecuteMethodDef</code>&lt;<code>Ext</code>&gt;&gt;&gt;&gt;</p>"},{"location":"reference/modules/appium_types/#type-parameters_11","title":"Type parameters","text":"Name Type <code>Ext</code> extends <code>Driver</code> | <code>Plugin</code>"},{"location":"reference/modules/appium_types/#defined-in_44","title":"Defined in","text":"<p>packages/types/lib/index.ts:115</p>"},{"location":"reference/modules/appium_types/#extensiontype","title":"ExtensionType","text":"<p>\u01ac ExtensionType: <code>DriverType</code> | <code>PluginType</code></p> <p>The strings referring to all extension types.</p>"},{"location":"reference/modules/appium_types/#defined-in_45","title":"Defined in","text":"<p>packages/types/lib/index.ts:174</p>"},{"location":"reference/modules/appium_types/#httpmethod","title":"HTTPMethod","text":"<p>\u01ac HTTPMethod: <code>\"get\"</code> | <code>\"GET\"</code> | <code>\"delete\"</code> | <code>\"DELETE\"</code> | <code>\"head\"</code> | <code>\"HEAD\"</code> | <code>\"options\"</code> | <code>\"OPTIONS\"</code> | <code>\"post\"</code> | <code>\"POST\"</code> | <code>\"put\"</code> | <code>\"PUT\"</code> | <code>\"patch\"</code> | <code>\"PATCH\"</code> | <code>\"purge\"</code> | <code>\"PURGE\"</code> | <code>\"link\"</code> | <code>\"LINK\"</code> | <code>\"unlink\"</code> | <code>\"UNLINK\"</code></p> <p>Possible HTTP methods, as stolen from <code>axios</code>.</p> <p><code>See</code></p> <p>https://npm.im/axios</p>"},{"location":"reference/modules/appium_types/#defined-in_46","title":"Defined in","text":"<p>packages/types/lib/index.ts:200</p>"},{"location":"reference/modules/appium_types/#keepalivetimeoutconfig","title":"KeepAliveTimeoutConfig","text":"<p>\u01ac KeepAliveTimeoutConfig: <code>number</code></p> <p>Number of seconds the Appium server should apply as both the keep-alive timeout and the connection timeout for all requests. A value of 0 disables the timeout.</p>"},{"location":"reference/modules/appium_types/#defined-in_47","title":"Defined in","text":"<p>packages/types/lib/appium-config.ts:43</p>"},{"location":"reference/modules/appium_types/#localtimezoneconfig","title":"LocalTimezoneConfig","text":"<p>\u01ac LocalTimezoneConfig: <code>boolean</code></p> <p>Use local timezone for timestamps</p>"},{"location":"reference/modules/appium_types/#defined-in_48","title":"Defined in","text":"<p>packages/types/lib/appium-config.ts:47</p>"},{"location":"reference/modules/appium_types/#logconfig","title":"LogConfig","text":"<p>\u01ac LogConfig: <code>string</code></p> <p>Also send log output to this file</p>"},{"location":"reference/modules/appium_types/#defined-in_49","title":"Defined in","text":"<p>packages/types/lib/appium-config.ts:51</p>"},{"location":"reference/modules/appium_types/#logdefrecord","title":"LogDefRecord","text":"<p>\u01ac LogDefRecord&lt;<code>C</code>&gt;: <code>Record</code>&lt;<code>string</code>, <code>LogDef</code>&lt;<code>C</code>&gt;&gt;</p> <p>A record of <code>LogDef</code> objects, keyed by the log type name. Used in <code>supportedLogTypes</code></p>"},{"location":"reference/modules/appium_types/#type-parameters_12","title":"Type parameters","text":"Name Type <code>C</code> extends <code>Constraints</code>"},{"location":"reference/modules/appium_types/#defined-in_50","title":"Defined in","text":"<p>packages/types/lib/driver.ts:360</p>"},{"location":"reference/modules/appium_types/#logfilter","title":"LogFilter","text":"<p>\u01ac LogFilter: { <code>[k: string]</code>: <code>unknown</code>; <code>flags?</code>: <code>string</code> ; <code>replacer?</code>: <code>string</code>  } &amp; <code>LogFilterText</code> | <code>LogFilterRegex</code></p> <p>Log filtering rule</p>"},{"location":"reference/modules/appium_types/#defined-in_51","title":"Defined in","text":"<p>packages/types/lib/appium-config.ts:55</p>"},{"location":"reference/modules/appium_types/#logfiltersconfig","title":"LogFiltersConfig","text":"<p>\u01ac LogFiltersConfig: <code>LogFilter</code>[]</p> <p>One or more log filtering rules</p>"},{"location":"reference/modules/appium_types/#defined-in_52","title":"Defined in","text":"<p>packages/types/lib/appium-config.ts:69</p>"},{"location":"reference/modules/appium_types/#loglevelconfig","title":"LogLevelConfig","text":"<p>\u01ac LogLevelConfig: <code>\"info\"</code> | <code>\"info:debug\"</code> | <code>\"info:info\"</code> | <code>\"info:warn\"</code> | <code>\"info:error\"</code> | <code>\"warn\"</code> | <code>\"warn:debug\"</code> | <code>\"warn:info\"</code> | <code>\"warn:warn\"</code> | <code>\"warn:error\"</code> | <code>\"error\"</code> | <code>\"error:debug\"</code> | <code>\"error:info\"</code> | <code>\"error:warn\"</code> | <code>\"error:error\"</code> | <code>\"debug\"</code> | <code>\"debug:debug\"</code> | <code>\"debug:info\"</code> | <code>\"debug:warn\"</code> | <code>\"debug:error\"</code></p> <p>Log level (console[:file])</p>"},{"location":"reference/modules/appium_types/#defined-in_53","title":"Defined in","text":"<p>packages/types/lib/appium-config.ts:73</p>"},{"location":"reference/modules/appium_types/#lognocolorsconfig","title":"LogNoColorsConfig","text":"<p>\u01ac LogNoColorsConfig: <code>boolean</code></p> <p>Do not use color in console output</p>"},{"location":"reference/modules/appium_types/#defined-in_54","title":"Defined in","text":"<p>packages/types/lib/appium-config.ts:97</p>"},{"location":"reference/modules/appium_types/#logtimestampconfig","title":"LogTimestampConfig","text":"<p>\u01ac LogTimestampConfig: <code>boolean</code></p> <p>Show timestamps in console output</p>"},{"location":"reference/modules/appium_types/#defined-in_55","title":"Defined in","text":"<p>packages/types/lib/appium-config.ts:101</p>"},{"location":"reference/modules/appium_types/#longstacktraceconfig","title":"LongStacktraceConfig","text":"<p>\u01ac LongStacktraceConfig: <code>boolean</code></p> <p>Add long stack traces to log entries. Recommended for debugging only.</p>"},{"location":"reference/modules/appium_types/#defined-in_56","title":"Defined in","text":"<p>packages/types/lib/appium-config.ts:105</p>"},{"location":"reference/modules/appium_types/#methodmap","title":"MethodMap","text":"<p>\u01ac MethodMap&lt;<code>Ext</code>&gt;: <code>Readonly</code>&lt;<code>Record</code>&lt;<code>string</code>, { <code>DELETE?</code>: <code>MethodDef</code>&lt;<code>Ext</code>&gt; ; <code>GET?</code>: <code>MethodDef</code>&lt;<code>Ext</code>&gt; ; <code>POST?</code>: <code>MethodDef</code>&lt;<code>Ext</code>&gt;  }&gt;&gt;</p> <p>A mapping of URL paths to HTTP methods to <code>MethodDef</code>s.</p>"},{"location":"reference/modules/appium_types/#type-parameters_13","title":"Type parameters","text":"Name Type <code>Ext</code> extends <code>Plugin</code> | <code>Driver</code>"},{"location":"reference/modules/appium_types/#defined-in_57","title":"Defined in","text":"<p>packages/types/lib/index.ts:140</p>"},{"location":"reference/modules/appium_types/#nscapabilities","title":"NSCapabilities","text":"<p>\u01ac NSCapabilities&lt;<code>C</code>, <code>Extra</code>, <code>NS</code>&gt;: <code>Partial</code>&lt;<code>CapsToNSCaps</code>&lt;<code>ConstraintsToCaps</code>&lt;<code>C</code>&gt; &amp; <code>Extra</code>, <code>NS</code>&gt;&gt;</p> <p>Namespaced caps (where appropriate).</p> <p>Does not contain <code>BaseCapabilities</code>; see <code>NSDriverCaps</code>.</p>"},{"location":"reference/modules/appium_types/#type-parameters_14","title":"Type parameters","text":"Name Type <code>C</code> extends <code>Constraints</code> = <code>BaseDriverCapConstraints</code> <code>Extra</code> extends <code>StringRecord</code> | <code>void</code> = <code>void</code> <code>NS</code> extends <code>string</code> = <code>W3C_APPIUM_PREFIX</code>"},{"location":"reference/modules/appium_types/#defined-in_58","title":"Defined in","text":"<p>packages/types/lib/capabilities.ts:125</p>"},{"location":"reference/modules/appium_types/#nsdrivercaps","title":"NSDriverCaps","text":"<p>\u01ac NSDriverCaps&lt;<code>C</code>, <code>Extra</code>&gt;: <code>NSCapabilities</code>&lt;<code>BaseDriverCapConstraints</code> &amp; <code>C</code>, <code>Extra</code>&gt;</p> <p>Namespaced capabilities for drivers extending <code>BaseDriver</code>.</p> <p>Includes <code>BaseCapabilities</code>.</p>"},{"location":"reference/modules/appium_types/#type-parameters_15","title":"Type parameters","text":"Name Type <code>C</code> extends <code>Constraints</code> <code>Extra</code> extends <code>StringRecord</code> | <code>void</code> = <code>void</code>"},{"location":"reference/modules/appium_types/#defined-in_59","title":"Defined in","text":"<p>packages/types/lib/capabilities.ts:179</p>"},{"location":"reference/modules/appium_types/#namespacedstring","title":"NamespacedString","text":"<p>\u01ac NamespacedString&lt;<code>S</code>, <code>NS</code>&gt;: `${NS}:${S}`</p>"},{"location":"reference/modules/appium_types/#type-parameters_16","title":"Type parameters","text":"Name Type <code>S</code> extends <code>string</code> <code>NS</code> extends <code>string</code> = <code>W3C_APPIUM_PREFIX</code>"},{"location":"reference/modules/appium_types/#defined-in_60","title":"Defined in","text":"<p>packages/types/lib/capabilities.ts:85</p>"},{"location":"reference/modules/appium_types/#newwindowtype","title":"NewWindowType","text":"<p>\u01ac NewWindowType: <code>\"tab\"</code> | <code>\"window\"</code></p>"},{"location":"reference/modules/appium_types/#defined-in_61","title":"Defined in","text":"<p>packages/types/lib/driver.ts:497</p>"},{"location":"reference/modules/appium_types/#nextplugincallback","title":"NextPluginCallback","text":"<p>\u01ac NextPluginCallback: () =&gt; <code>Promise</code>&lt;<code>void</code>&gt;</p>"},{"location":"reference/modules/appium_types/#type-declaration_11","title":"Type declaration","text":"<p>\u25b8 (): <code>Promise</code>&lt;<code>void</code>&gt;</p> <p>A reference to an async function which encapsulates what would normally happen if this plugin were not handling a command. Used by PluginInterface.handle.</p> <p>Given <code>next()</code> is a <code>NextPluginCallback</code>: if this is the only plugin handling the command, <code>await next()</code> would therefore trigger the normal handling logic in the driver which is in use. If another plugin is registered, it would run that plugin's <code>handle</code> method and return the result for use here. Note that if this plugin does not call <code>await next()</code>, then the normal command logic will not be run, and this plugin is responsible for managing new command timeouts and command logging, for example: <code>driver.stopNewCommandTimeout()</code> -- before running plugin logic <code>driver.startNewCommandTimeout()</code> -- after running plugin logic <code>driver._eventHistory.commands.push({cmd: cmdName, startTime, endTime})</code> -- after running plugin logic</p>"},{"location":"reference/modules/appium_types/#returns_1","title":"Returns","text":"<p><code>Promise</code>&lt;<code>void</code>&gt;</p>"},{"location":"reference/modules/appium_types/#defined-in_62","title":"Defined in","text":"<p>packages/types/lib/plugin.ts:72</p>"},{"location":"reference/modules/appium_types/#nopermscheckconfig","title":"NoPermsCheckConfig","text":"<p>\u01ac NoPermsCheckConfig: <code>boolean</code></p> <p>Do not check that needed files are readable and/or writable</p>"},{"location":"reference/modules/appium_types/#defined-in_63","title":"Defined in","text":"<p>packages/types/lib/appium-config.ts:109</p>"},{"location":"reference/modules/appium_types/#normalizedappiumconfig","title":"NormalizedAppiumConfig","text":"<p>\u01ac NormalizedAppiumConfig: <code>Object</code></p> <p>\"Normalized\" config, which is camel-cased (instead of kebab-case, like the schema). It is not flattened.</p>"},{"location":"reference/modules/appium_types/#type-declaration_12","title":"Type declaration","text":"Name Type <code>server</code> <code>NormalizedServerConfig</code>"},{"location":"reference/modules/appium_types/#defined-in_64","title":"Defined in","text":"<p>packages/types/lib/config.ts:32</p>"},{"location":"reference/modules/appium_types/#normalizedserverconfig","title":"NormalizedServerConfig","text":"<p>\u01ac NormalizedServerConfig: { [Prop in keyof ServerConfigMapping as AppiumServerJsonSchema[Prop] extends WithDest ? AppiumServerJsonSchema[Prop][\"appiumCliDest\"] : KebabToCamel&lt;Prop&gt;]: ServerConfig[Prop] }</p> <p>Camel-cased server config. Not flattened.</p>"},{"location":"reference/modules/appium_types/#defined-in_65","title":"Defined in","text":"<p>packages/types/lib/config.ts:23</p>"},{"location":"reference/modules/appium_types/#pluginclass","title":"PluginClass","text":"<p>\u01ac PluginClass&lt;<code>P</code>&gt;: <code>Class</code>&lt;<code>P</code>, <code>PluginStatic</code>&lt;<code>P</code>&gt;, [pluginName: string, cliArgs: Record&lt;string, unknown&gt;]&gt;</p> <p>Mainly for internal use.</p> <p>The third parameter is the possible constructor signatures for the plugin class.</p>"},{"location":"reference/modules/appium_types/#type-parameters_17","title":"Type parameters","text":"Name Type <code>P</code> extends <code>Plugin</code> = <code>Plugin</code>"},{"location":"reference/modules/appium_types/#defined-in_66","title":"Defined in","text":"<p>packages/types/lib/plugin.ts:90</p>"},{"location":"reference/modules/appium_types/#plugincommand","title":"PluginCommand","text":"<p>\u01ac PluginCommand&lt;<code>D</code>, <code>TArgs</code>, <code>TReturn</code>&gt;: (<code>next</code>: <code>NextPluginCallback</code>, <code>driver</code>: <code>D</code>, ...<code>args</code>: <code>TArgs</code>) =&gt; <code>Promise</code>&lt;<code>TReturn</code>&gt;</p>"},{"location":"reference/modules/appium_types/#type-parameters_18","title":"Type parameters","text":"Name Type <code>D</code> extends <code>ExternalDriver</code> = <code>ExternalDriver</code> <code>TArgs</code> extends readonly <code>any</code>[] = <code>any</code>[] <code>TReturn</code> <code>any</code>"},{"location":"reference/modules/appium_types/#type-declaration_13","title":"Type declaration","text":"<p>\u25b8 (<code>next</code>, <code>driver</code>, <code>...args</code>): <code>Promise</code>&lt;<code>TReturn</code>&gt;</p> <p>Implementation of a command within a plugin</p> <p>At minimum, <code>D</code> must be <code>ExternalDriver</code>, but a plugin can be more narrow about which drivers it supports.</p>"},{"location":"reference/modules/appium_types/#parameters_1","title":"Parameters","text":"Name Type <code>next</code> <code>NextPluginCallback</code> <code>driver</code> <code>D</code> <code>...args</code> <code>TArgs</code>"},{"location":"reference/modules/appium_types/#returns_2","title":"Returns","text":"<p><code>Promise</code>&lt;<code>TReturn</code>&gt;</p>"},{"location":"reference/modules/appium_types/#defined-in_67","title":"Defined in","text":"<p>packages/types/lib/plugin.ts:79</p>"},{"location":"reference/modules/appium_types/#plugintype","title":"PluginType","text":"<p>\u01ac PluginType: <code>\"plugin\"</code></p> <p>The string referring to a \"plugin\"-type extension</p>"},{"location":"reference/modules/appium_types/#defined-in_68","title":"Defined in","text":"<p>packages/types/lib/index.ts:169</p>"},{"location":"reference/modules/appium_types/#portconfig","title":"PortConfig","text":"<p>\u01ac PortConfig: <code>number</code></p> <p>Port to listen on</p>"},{"location":"reference/modules/appium_types/#defined-in_69","title":"Defined in","text":"<p>packages/types/lib/appium-config.ts:113</p>"},{"location":"reference/modules/appium_types/#position","title":"Position","text":"<p>\u01ac Position: <code>Pick</code>&lt;<code>Rect</code>, <code>\"x\"</code> | <code>\"y\"</code>&gt;</p>"},{"location":"reference/modules/appium_types/#defined-in_70","title":"Defined in","text":"<p>packages/types/lib/driver.ts:547</p>"},{"location":"reference/modules/appium_types/#relaxedsecurityconfig","title":"RelaxedSecurityConfig","text":"<p>\u01ac RelaxedSecurityConfig: <code>boolean</code></p> <p>Disable additional security checks, so it is possible to use some advanced features, provided by drivers supporting this option. Only enable it if all the clients are in the trusted network and it's not the case if a client could potentially break out of the session sandbox. Specific features can be overridden by using \"deny-insecure\"</p>"},{"location":"reference/modules/appium_types/#defined-in_71","title":"Defined in","text":"<p>packages/types/lib/appium-config.ts:117</p>"},{"location":"reference/modules/appium_types/#routematcher","title":"RouteMatcher","text":"<p>\u01ac RouteMatcher: [<code>HTTPMethod</code>, <code>RegExp</code>]</p> <p>Tuple of an HTTP method with a regex matching a request path</p>"},{"location":"reference/modules/appium_types/#defined-in_72","title":"Defined in","text":"<p>packages/types/lib/driver.ts:2249</p>"},{"location":"reference/modules/appium_types/#serverargs","title":"ServerArgs","text":"<p>\u01ac ServerArgs: { [Prop in keyof ServerConfigMapping as SetKeyForProp&lt;Prop&gt;]: KeyOrDefaultForProp&lt;Prop&gt; }</p> <p>The final shape of the parsed CLI arguments.</p> <p>These will be camel-cased unless overridden by <code>appiumCliDest</code> field in schema(s).</p>"},{"location":"reference/modules/appium_types/#defined-in_73","title":"Defined in","text":"<p>packages/types/lib/config.ts:61</p>"},{"location":"reference/modules/appium_types/#sessionoverrideconfig","title":"SessionOverrideConfig","text":"<p>\u01ac SessionOverrideConfig: <code>boolean</code></p> <p>Enables session override (clobbering)</p>"},{"location":"reference/modules/appium_types/#defined-in_74","title":"Defined in","text":"<p>packages/types/lib/appium-config.ts:121</p>"},{"location":"reference/modules/appium_types/#settingsupdatelistener","title":"SettingsUpdateListener","text":"<p>\u01ac SettingsUpdateListener&lt;<code>T</code>&gt;: (<code>prop</code>: keyof <code>T</code>, <code>newValue</code>: <code>unknown</code>, <code>curValue</code>: <code>unknown</code>) =&gt; <code>Promise</code>&lt;<code>void</code>&gt;</p>"},{"location":"reference/modules/appium_types/#type-parameters_19","title":"Type parameters","text":"Name Type <code>T</code> extends <code>Record</code>&lt;<code>string</code>, <code>unknown</code>&gt; = <code>Record</code>&lt;<code>string</code>, <code>unknown</code>&gt;"},{"location":"reference/modules/appium_types/#type-declaration_14","title":"Type declaration","text":"<p>\u25b8 (<code>prop</code>, <code>newValue</code>, <code>curValue</code>): <code>Promise</code>&lt;<code>void</code>&gt;</p>"},{"location":"reference/modules/appium_types/#parameters_2","title":"Parameters","text":"Name Type <code>prop</code> keyof <code>T</code> <code>newValue</code> <code>unknown</code> <code>curValue</code> <code>unknown</code>"},{"location":"reference/modules/appium_types/#returns_3","title":"Returns","text":"<p><code>Promise</code>&lt;<code>void</code>&gt;</p>"},{"location":"reference/modules/appium_types/#defined-in_75","title":"Defined in","text":"<p>packages/types/lib/driver.ts:477</p>"},{"location":"reference/modules/appium_types/#singularsessiondata","title":"SingularSessionData","text":"<p>\u01ac SingularSessionData&lt;<code>C</code>, <code>Extra</code>&gt;: <code>Capabilities</code>&lt;<code>C</code>, <code>Extra</code>&gt; &amp; { <code>error?</code>: <code>string</code> ; <code>events?</code>: <code>EventHistory</code>  }</p>"},{"location":"reference/modules/appium_types/#type-parameters_20","title":"Type parameters","text":"Name Type <code>C</code> extends <code>Constraints</code> = <code>BaseDriverCapConstraints</code> <code>Extra</code> extends <code>StringRecord</code> | <code>void</code> = <code>void</code>"},{"location":"reference/modules/appium_types/#defined-in_76","title":"Defined in","text":"<p>packages/types/lib/driver.ts:197</p>"},{"location":"reference/modules/appium_types/#size","title":"Size","text":"<p>\u01ac Size: <code>Pick</code>&lt;<code>Rect</code>, <code>\"width\"</code> | <code>\"height\"</code>&gt;</p>"},{"location":"reference/modules/appium_types/#defined-in_77","title":"Defined in","text":"<p>packages/types/lib/driver.ts:545</p>"},{"location":"reference/modules/appium_types/#strictcapsconfig","title":"StrictCapsConfig","text":"<p>\u01ac StrictCapsConfig: <code>boolean</code></p> <p>Cause sessions to fail if desired caps are sent in that Appium does not recognize as valid for the selected device</p>"},{"location":"reference/modules/appium_types/#defined-in_78","title":"Defined in","text":"<p>packages/types/lib/appium-config.ts:125</p>"},{"location":"reference/modules/appium_types/#stringrecord","title":"StringRecord","text":"<p>\u01ac StringRecord: <code>Record</code>&lt;<code>string</code>, <code>any</code>&gt;</p> <p>Utility type for a object with string-only props</p>"},{"location":"reference/modules/appium_types/#defined-in_79","title":"Defined in","text":"<p>packages/types/lib/index.ts:23</p>"},{"location":"reference/modules/appium_types/#tmpconfig","title":"TmpConfig","text":"<p>\u01ac TmpConfig: <code>string</code></p> <p>Absolute path to directory Appium can use to manage temp files. Defaults to C:\\Windows\\Temp on Windows and /tmp otherwise.</p>"},{"location":"reference/modules/appium_types/#defined-in_80","title":"Defined in","text":"<p>packages/types/lib/appium-config.ts:129</p>"},{"location":"reference/modules/appium_types/#tracedirconfig","title":"TraceDirConfig","text":"<p>\u01ac TraceDirConfig: <code>string</code></p> <p>Absolute path to directory Appium can use to save iOS instrument traces; defaults to /appium-instruments"},{"location":"reference/modules/appium_types/#defined-in_81","title":"Defined in","text":"<p>packages/types/lib/appium-config.ts:133</p>"},{"location":"reference/modules/appium_types/#updateservercallback","title":"UpdateServerCallback","text":"<p>\u01ac UpdateServerCallback: (<code>expressApp</code>: <code>Express</code>, <code>httpServer</code>: <code>AppiumServer</code>, <code>cliArgs</code>: <code>Partial</code>&lt;<code>ServerArgs</code>&gt;) =&gt; <code>Promise</code>&lt;<code>void</code>&gt;</p>"},{"location":"reference/modules/appium_types/#type-declaration_15","title":"Type declaration","text":"<p>\u25b8 (<code>expressApp</code>, <code>httpServer</code>, <code>cliArgs</code>): <code>Promise</code>&lt;<code>void</code>&gt;</p> <p>Optionally updates an Appium express app and http server, by calling methods that may mutate those objects. For example, you could call:</p> <p><code>expressApp.get('/foo', handler)</code></p> <p>In order to add a new route to Appium with this plugin. Or, you could add new listeners to the httpServer object.</p>"},{"location":"reference/modules/appium_types/#parameters_3","title":"Parameters","text":"Name Type Description <code>expressApp</code> <code>Express</code> the Express 'app' object used by Appium for route handling <code>httpServer</code> <code>AppiumServer</code> the node HTTP server that hosts the app <code>cliArgs</code> <code>Partial</code>&lt;<code>ServerArgs</code>&gt; Arguments from config files, CLI, etc."},{"location":"reference/modules/appium_types/#returns_4","title":"Returns","text":"<p><code>Promise</code>&lt;<code>void</code>&gt;</p>"},{"location":"reference/modules/appium_types/#defined-in_82","title":"Defined in","text":"<p>packages/types/lib/index.ts:189</p>"},{"location":"reference/modules/appium_types/#usedriversconfig","title":"UseDriversConfig","text":"<p>\u01ac UseDriversConfig: <code>string</code>[]</p> <p>A list of drivers to activate. By default, all installed drivers will be activated.</p>"},{"location":"reference/modules/appium_types/#defined-in_83","title":"Defined in","text":"<p>packages/types/lib/appium-config.ts:137</p>"},{"location":"reference/modules/appium_types/#usepluginsconfig","title":"UsePluginsConfig","text":"<p>\u01ac UsePluginsConfig: <code>string</code>[]</p> <p>A list of plugins to activate. To activate all plugins, the value should be an array with a single item \"all\".</p>"},{"location":"reference/modules/appium_types/#defined-in_84","title":"Defined in","text":"<p>packages/types/lib/appium-config.ts:141</p>"},{"location":"reference/modules/appium_types/#w3ccapabilities","title":"W3CCapabilities","text":"<p>\u01ac W3CCapabilities&lt;<code>C</code>, <code>Extra</code>&gt;: <code>Object</code></p> <p>Like <code>Capabilities</code>, except W3C-style.</p> <p>Does not contain <code>BaseCapabilities</code>; see <code>W3CDriverCaps</code>.</p>"},{"location":"reference/modules/appium_types/#type-parameters_21","title":"Type parameters","text":"Name Type <code>C</code> extends <code>Constraints</code> = <code>BaseDriverCapConstraints</code> <code>Extra</code> extends <code>StringRecord</code> | <code>void</code> = <code>void</code>"},{"location":"reference/modules/appium_types/#type-declaration_16","title":"Type declaration","text":"Name Type <code>alwaysMatch</code> <code>NSCapabilities</code>&lt;<code>C</code>, <code>Extra</code>&gt; <code>firstMatch</code> <code>NSCapabilities</code>&lt;<code>C</code>, <code>Extra</code>&gt;[]"},{"location":"reference/modules/appium_types/#defined-in_85","title":"Defined in","text":"<p>packages/types/lib/capabilities.ts:112</p>"},{"location":"reference/modules/appium_types/#w3cdrivercaps","title":"W3CDriverCaps","text":"<p>\u01ac W3CDriverCaps&lt;<code>C</code>, <code>Extra</code>&gt;: <code>W3CCapabilities</code>&lt;<code>BaseDriverCapConstraints</code> &amp; <code>C</code>, <code>Extra</code>&gt;</p> <p>W3C-style capabilities for drivers extending <code>BaseDriver</code>.</p> <p>Includes <code>BaseCapabilities</code>.</p> <p><code>Example</code></p> <pre><code>class MyDriver extends BaseDriver {\nasync createSession (w3ccaps: W3CDriverCaps&lt;MyDriverConstraints&gt;, ...args: any[]) {\n// ...\n}\n}\n</code></pre>"},{"location":"reference/modules/appium_types/#type-parameters_22","title":"Type parameters","text":"Name Type <code>C</code> extends <code>Constraints</code> <code>Extra</code> extends <code>StringRecord</code> | <code>void</code> = <code>void</code>"},{"location":"reference/modules/appium_types/#defined-in_86","title":"Defined in","text":"<p>packages/types/lib/capabilities.ts:169</p>"},{"location":"reference/modules/appium_types/#w3c_appium_prefix","title":"W3C_APPIUM_PREFIX","text":"<p>\u01ac W3C_APPIUM_PREFIX: <code>\"appium\"</code></p>"},{"location":"reference/modules/appium_types/#defined-in_87","title":"Defined in","text":"<p>packages/types/lib/capabilities.ts:7</p>"},{"location":"reference/modules/appium_types/#webhookconfig","title":"WebhookConfig","text":"<p>\u01ac WebhookConfig: <code>string</code></p> <p>Also send log output to this http listener</p>"},{"location":"reference/modules/appium_types/#defined-in_88","title":"Defined in","text":"<p>packages/types/lib/appium-config.ts:145</p>"},{"location":"reference/modules/appium_types/#variables_1","title":"Variables","text":""},{"location":"reference/modules/appium_types/#base_desired_cap_constraints","title":"BASE_DESIRED_CAP_CONSTRAINTS","text":"<p>\u2022 <code>Const</code> BASE_DESIRED_CAP_CONSTRAINTS: <code>Object</code></p>"},{"location":"reference/modules/appium_types/#type-declaration_17","title":"Type declaration","text":"Name Type <code>app</code> { <code>isString</code>: <code>true</code> = true } <code>app.isString</code> <code>true</code> <code>autoLaunch</code> { <code>isBoolean</code>: <code>true</code> = true } <code>autoLaunch.isBoolean</code> <code>true</code> <code>autoWebview</code> { <code>isBoolean</code>: <code>true</code> = true } <code>autoWebview.isBoolean</code> <code>true</code> <code>automationName</code> { <code>isString</code>: <code>true</code> = true } <code>automationName.isString</code> <code>true</code> <code>deviceName</code> { <code>isString</code>: <code>true</code> = true } <code>deviceName.isString</code> <code>true</code> <code>eventTimings</code> { <code>isBoolean</code>: <code>true</code> = true } <code>eventTimings.isBoolean</code> <code>true</code> <code>fullReset</code> { <code>isBoolean</code>: <code>true</code> = true } <code>fullReset.isBoolean</code> <code>true</code> <code>language</code> { <code>isString</code>: <code>true</code> = true } <code>language.isString</code> <code>true</code> <code>locale</code> { <code>isString</code>: <code>true</code> = true } <code>locale.isString</code> <code>true</code> <code>newCommandTimeout</code> { <code>isNumber</code>: <code>true</code> = true } <code>newCommandTimeout.isNumber</code> <code>true</code> <code>noReset</code> { <code>isBoolean</code>: <code>true</code> = true } <code>noReset.isBoolean</code> <code>true</code> <code>orientation</code> { <code>inclusion</code>: readonly [<code>\"LANDSCAPE\"</code>, <code>\"PORTRAIT\"</code>]  } <code>orientation.inclusion</code> readonly [<code>\"LANDSCAPE\"</code>, <code>\"PORTRAIT\"</code>] <code>platformName</code> { <code>isString</code>: <code>true</code> = true; <code>presence</code>: <code>true</code> = true } <code>platformName.isString</code> <code>true</code> <code>platformName.presence</code> <code>true</code> <code>platformVersion</code> { <code>isString</code>: <code>true</code> = true } <code>platformVersion.isString</code> <code>true</code> <code>printPageSourceOnFindFailure</code> { <code>isBoolean</code>: <code>true</code> = true } <code>printPageSourceOnFindFailure.isBoolean</code> <code>true</code> <code>udid</code> { <code>isString</code>: <code>true</code> = true } <code>udid.isString</code> <code>true</code> <code>webSocketUrl</code> { <code>isString</code>: <code>true</code> = true } <code>webSocketUrl.isString</code> <code>true</code>"},{"location":"reference/modules/appium_types/#defined-in_89","title":"Defined in","text":"<p>packages/types/lib/constraints.js:1</p>"},{"location":"reference/modules/appium_universal_xml_plugin-1/","title":"Module: @appium/universal-xml-plugin","text":""},{"location":"reference/modules/appium_universal_xml_plugin-1/#table-of-contents","title":"Table of contents","text":""},{"location":"reference/modules/appium_universal_xml_plugin-1/#references","title":"References","text":"<ul> <li>default</li> </ul>"},{"location":"reference/modules/appium_universal_xml_plugin-1/#classes","title":"Classes","text":"<ul> <li>UniversalXMLPlugin</li> </ul>"},{"location":"reference/modules/appium_universal_xml_plugin-1/#functions","title":"Functions","text":"<ul> <li>main</li> </ul>"},{"location":"reference/modules/appium_universal_xml_plugin-1/#references_1","title":"References","text":""},{"location":"reference/modules/appium_universal_xml_plugin-1/#default","title":"default","text":"<p>Renames and re-exports UniversalXMLPlugin</p>"},{"location":"reference/modules/appium_universal_xml_plugin-1/#functions_1","title":"Functions","text":""},{"location":"reference/modules/appium_universal_xml_plugin-1/#main","title":"main","text":"<p>\u25b8 main(): <code>void</code></p>"},{"location":"reference/modules/appium_universal_xml_plugin-1/#returns","title":"Returns","text":"<p><code>void</code></p>"},{"location":"reference/modules/appium_universal_xml_plugin-1/#defined-in","title":"Defined in","text":"<p>packages/universal-xml-plugin/lib/index.js:5</p>"}]}